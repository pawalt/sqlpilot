[
  {
    "statements": [
      "SELECT * FROM customer_orders WHERE order_id = 1;",
      "SELECT order_id, customer_id, order_date FROM customer_orders WHERE total_amount > 1000;",
      "SELECT customer_id, total_amount FROM customer_orders WHERE order_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_id, COUNT(*) AS order_count FROM customer_orders GROUP BY customer_id;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM customer_orders GROUP BY customer_id;",
      "SELECT * FROM customer_orders ORDER BY order_date DESC;",
      "SELECT * FROM customer_orders WHERE items_ordered->>'product' = 'Shirt';",
      "SELECT customer_id, jsonb_array_length(items_ordered) AS item_count FROM customer_orders;",
      "SELECT AVG(total_amount) AS avg_amount FROM customer_orders;",
      "SELECT DISTINCT customer_id FROM customer_orders;",
      "SELECT * FROM customer_orders WHERE total_amount BETWEEN 500 AND 1000;",
      "SELECT customer_id, order_date, total_amount FROM customer_orders WHERE customer_id IN (1, 2, 3);",
      "SELECT customer_id, MAX(total_amount) AS max_amount FROM customer_orders GROUP BY customer_id;",
      "SELECT customer_id, order_date, total_amount FROM customer_orders WHERE items_ordered @> '[{\"product\": \"Shirt\"}]';",
      "SELECT customer_id, COUNT(*) AS order_count FROM customer_orders HAVING COUNT(*) > 3;",
      "SELECT customer_id, AVG(total_amount) AS avg_amount FROM customer_orders GROUP BY customer_id HAVING AVG(total_amount) > 500;",
      "SELECT customer_id, DAY(order_date) AS order_day FROM customer_orders;",
      "SELECT customer_id, order_date, jsonb_array_elements_text(items_ordered->'products') AS product FROM customer_orders;",
      "SELECT customer_id, order_date, total_amount FROM customer_orders WHERE total_amount > (SELECT AVG(total_amount) FROM customer_orders);",
      "SELECT * FROM customer_orders WHERE EXTRACT(YEAR FROM order_date) = 2022;",
      "SELECT * FROM customer_orders WHERE order_date >= '2022-01-01' AND total_amount > 1000",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM customer_orders GROUP BY customer_id HAVING total_spent > 5000",
      "SELECT order_id, customer_id, total_amount, jsonb_array_length(items_ordered) AS num_items FROM customer_orders ORDER BY total_amount DESC",
      "SELECT customer_id, COUNT(*) AS total_orders FROM customer_orders GROUP BY customer_id ORDER BY total_orders DESC",
      "SELECT DISTINCT customer_id FROM customer_orders",
      "SELECT * FROM customer_orders WHERE customer_id IN (SELECT customer_id FROM customers WHERE last_purchase_date > '2021-01-01')",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM customer_orders WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY customer_id HAVING total_spent > 1000",
      "SELECT order_id, order_date, total_amount, jsonb_array_elements_text(items_ordered) AS item FROM customer_orders WHERE order_id = 1234",
      "SELECT customer_id, AVG(total_amount) AS average_spent FROM customer_orders GROUP BY customer_id HAVING average_spent > 500",
      "SELECT * FROM customer_orders WHERE jsonb_array_length(items_ordered) > 5",
      "SELECT customer_id, MAX(total_amount) AS max_spent FROM customer_orders WHERE customer_id = 1001",
      "SELECT order_id, customer_id, order_date, sum(total_amount) OVER (PARTITION BY customer_id ORDER BY order_date), total_amount FROM customer_orders",
      "SELECT order_id, order_date, total_amount, items_ordered->'product_name' AS product_name FROM customer_orders",
      "SELECT customer_id, COUNT(*) FILTER (WHERE total_amount > 500) AS high_value_orders FROM customer_orders GROUP BY customer_id HAVING high_value_orders > 2",
      "SELECT customer_id, order_id, total_amount, jsonb_strip_nulls(items_ordered) AS cleaned_items FROM customer_orders WHERE order_date >= '2021-01-01'",
      "SELECT order_id, customer_id, total_amount, jsonb_object_keys(items_ordered) AS item_keys FROM customer_orders",
      "SELECT customer_id, jsonb_pretty(items_ordered) AS formatted_items FROM customer_orders WHERE customer_id = 1002",
      "SELECT * FROM customer_orders WHERE exists(SELECT * FROM customers WHERE customer_orders.customer_id = customers.customer_id AND customers.credit_limit < 1000)",
      "SELECT customer_id, jsonb_typeof(items_ordered) AS order_type FROM customer_orders"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers WHERE age > 30;",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date FROM orders WHERE total_amount > 100;",
      "SELECT customer_id, name, email FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT * FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM customers WHERE name LIKE 'John%';",
      "SELECT * FROM orders WHERE products->>'product' = 'product_name';",
      "SELECT customer_id, COUNT(order_id) AS num_orders FROM orders GROUP BY customer_id;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM orders GROUP BY customer_id HAVING total_spent > 500;",
      "SELECT AVG(age) AS avg_age FROM customers;",
      "SELECT customer_id, MAX(total_amount) AS max_order_amount FROM orders GROUP BY customer_id;",
      "SELECT * FROM customers ORDER BY age DESC;",
      "SELECT customer_id, MIN(total_amount) AS min_order_amount FROM orders GROUP BY customer_id;",
      "SELECT COUNT(*) AS total_customers FROM customers;",
      "SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id;",
      "SELECT customer_id, JSONB_ARRAY_LENGTH(products) AS num_products FROM orders;",
      "SELECT DISTINCT age FROM customers;",
      "SELECT customer_id, AVG(total_amount) AS avg_order_amount FROM orders GROUP BY customer_id;",
      "SELECT * FROM customers WHERE age > 30;",
      "SELECT name, email, age FROM customers WHERE age BETWEEN 25 AND 40;",
      "SELECT * FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.age > 30;",
      "SELECT DISTINCT name FROM customers;",
      "SELECT name FROM customers WHERE address LIKE '%Street%';",
      "SELECT * FROM orders WHERE total_amount > 1000;",
      "SELECT order_id, customer_id, order_date FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT SUM(total_amount) AS total_sales FROM orders;",
      "SELECT customer_id, AVG(total_amount) AS avg_order_amount FROM orders GROUP BY customer_id;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id;",
      "SELECT customer_id, MAX(total_amount) AS max_order_amount FROM orders GROUP BY customer_id;",
      "SELECT customer_id, MIN(total_amount) AS min_order_amount FROM orders GROUP BY customer_id;",
      "SELECT customer_id, jsonb_array_elements_text(products) AS product_name FROM orders WHERE customer_id = '1234';",
      "SELECT customer_id, jsonb_array_elements(products) AS product_details FROM orders WHERE customer_id = '5678';",
      "SELECT * FROM customers WHERE customer_id IN (SELECT DISTINCT customer_id FROM orders);",
      "SELECT * FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM orders);",
      "SELECT * FROM orders WHERE customer_id IN (SELECT customer_id FROM customers WHERE age > 40);",
      "SELECT COUNT(*) AS total_customers FROM customers;",
      "SELECT AVG(age) AS avg_customer_age FROM customers;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT order_id, total_amount FROM orders;",
      "SELECT product_id, product_name, price FROM products;",
      "SELECT customer_id, customer_name, customer_email, customer_phone FROM customers;",
      "SELECT order_id, order_date FROM orders;",
      "SELECT product_name, category FROM products;",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT order_id, total_amount FROM orders WHERE total_amount > 100;",
      "SELECT product_id, product_name, price FROM products WHERE price < 50.00;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_name LIKE '%John%';",
      "SELECT order_id, total_amount FROM orders WHERE order_date >= '2021-01-01';",
      "SELECT product_id, product_name, category FROM products WHERE category = 'Electronics';",
      "SELECT * FROM customers ORDER BY customer_name ASC;",
      "SELECT order_id, total_amount FROM orders ORDER BY total_amount DESC;",
      "SELECT product_id, product_name, price FROM products ORDER BY price ASC;",
      "SELECT * FROM customers LIMIT 5;",
      "SELECT order_id, total_amount FROM orders LIMIT 10;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.total_amount > 1000;",
      "SELECT customer_name, product_name, price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id WHERE products.category = 'Electronics';",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01';",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_name = 'Alice';",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_id = 2;",
      "SELECT customer_name, product_name, total_amount FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN products ON orders.product_id = products.product_id;",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.total_amount < 500;",
      "SELECT customer_name, product_name, category, price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE products.price > 50;",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.customer_name LIKE '%Smith%';",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE orders.order_date = '2022-06-15';",
      "SELECT customer_name, category, price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_id = 3;",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE products.price < 100;",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date BETWEEN '2022-03-01' AND '2022-06-30';",
      "SELECT customer_name, product_name, category, price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE products.category = 'Clothing';",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_name = 'Bob';",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_id = 4;",
      "SELECT customer_name, product_name, category, price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE orders.total_amount < 2000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_age FROM customers WHERE customer_age > 30;",
      "SELECT * FROM orders WHERE order_date > '2021-01-01';",
      "SELECT order_id, total_amount FROM orders WHERE total_amount > 1000;",
      "SELECT product_name, product_price FROM products WHERE category = 'Electronics';",
      "SELECT * FROM order_items WHERE quantity > 10;",
      "SELECT customer_name, order_date FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT o.order_id, p.product_name, oi.quantity FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id;",
      "SELECT c.customer_name, SUM(oi.quantity) as total_quantity FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_name;",
      "SELECT * FROM customers WHERE customer_age > 25 AND customer_age < 35;",
      "SELECT product_name, product_price FROM products WHERE product_price > 50 AND category = 'Clothing';",
      "SELECT customer_name, order_date, total_amount FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id WHERE total_amount > 500;",
      "SELECT c.customer_name, p.product_name, oi.quantity FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id;",
      "SELECT c.customer_name, SUM(oi.quantity * p.product_price) as total_spent FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name;",
      "SELECT customer_name, order_date FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT product_name, category FROM products WHERE category IN ('Electronics', 'Clothing');",
      "SELECT c.customer_name, p.product_name, oi.quantity FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id WHERE oi.quantity > 5;",
      "SELECT customer_name, customer_age FROM customers WHERE customer_age < (SELECT AVG(customer_age) FROM customers);",
      "SELECT customer_name, order_date, total_amount FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id WHERE EXISTS (SELECT * FROM order_items oi WHERE o.order_id = oi.order_id AND oi.quantity > 5);",
      "SELECT customer_id, customer_name, customer_email, customer_age FROM customers WHERE customer_age > 18;",
      "SELECT * FROM orders WHERE order_date > '2022-01-01';",
      "SELECT order_id, customer_id, order_date, total_amount FROM orders WHERE total_amount > 100;",
      "SELECT customer_name, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id;",
      "SELECT customer_name, COUNT(order_id) AS order_count FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT product_name, AVG(product_price) AS avg_price FROM products GROUP BY product_name;",
      "SELECT product_name, SUM(quantity) AS total_quantity FROM products JOIN order_items ON products.product_id = order_items.product_id GROUP BY product_name;",
      "SELECT customer_name, SUM(total_amount) AS total_spend FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, product_name, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT customer_name, MAX(customer_age) AS max_age FROM customers GROUP BY customer_name;",
      "SELECT category, AVG(product_price) AS avg_price FROM products GROUP BY category;",
      "SELECT customer_name, AVG(total_amount) AS avg_spend FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, MAX(total_amount) AS max_spend FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, MIN(total_amount) AS min_spend FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, SUM(quantity) AS total_quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_name;",
      "SELECT product_name, category, COUNT(*) AS total_count FROM products GROUP BY product_name, category;",
      "SELECT customer_name, SUM(total_amount) AS total_spend, MAX(total_amount) AS max_spend, AVG(total_amount) AS avg_spend FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, product_name, product_price, quantity, (product_price * quantity) AS total_cost FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id;",
      "SELECT customer_name, product_name, SUM(quantity) AS total_quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_name, product_name;",
      "SELECT customer_name, total_amount, CASE WHEN total_amount >= 100 THEN 'High' ELSE 'Low' END AS spend_category FROM customers JOIN orders ON customers.customer_id = orders.customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_orders;",
      "SELECT order_id, total_amount FROM customer_orders;",
      "SELECT order_id, customer_id, order_date FROM customer_orders WHERE total_amount > 100;",
      "SELECT preference_name, preference_category FROM customer_preferences;",
      "SELECT feedback_id, customer_id, feedback_date FROM customer_feedback;",
      "SELECT * FROM marketing_strategies WHERE activation_date >= '2022-01-01';",
      "SELECT strategy_name, target_audience FROM marketing_strategies WHERE strategy_id = 3;",
      "SELECT segment_name, segment_description FROM customer_segments;",
      "SELECT * FROM customer_orders JOIN customer_feedback ON customer_orders.customer_id = customer_feedback.customer_id;",
      "SELECT * FROM customer_preferences JOIN customer_segments ON customer_preferences.customer_id = customer_segments.segment_id;",
      "SELECT order_id, total_amount, activation_date FROM customer_orders JOIN marketing_strategies ON customer_orders.customer_id = marketing_strategies.strategy_id;",
      "SELECT customer_id, feedback_text, feedback_date FROM customer_feedback WHERE YEAR(feedback_date) = 2022;",
      "SELECT preference_name, preference_category FROM customer_preferences WHERE customer_id = 5;",
      "SELECT * FROM marketing_strategies WHERE target_audience LIKE '%social%';",
      "SELECT segment_name, segment_criteria FROM customer_segments WHERE JSON_LENGTH(segment_criteria) > 2;",
      "SELECT order_id, total_amount FROM customer_orders WHERE customer_id IN (SELECT customer_id FROM customer_preferences WHERE preference_category = 'technology');",
      "SELECT segment_name, segment_description FROM customer_segments WHERE segment_name LIKE 'A%';",
      "SELECT strategy_name, activation_date FROM marketing_strategies WHERE YEAR(activation_date) = 2022;",
      "SELECT * FROM customer_orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT strategy_name, target_audience FROM marketing_strategies WHERE strategy_name = 'Digital Campaign';",
      "SELECT * FROM customer_orders WHERE total_amount > 1000;",
      "SELECT customer_id, preference_name FROM customer_preferences WHERE customer_id = 123;",
      "SELECT feedback_text FROM customer_feedback WHERE customer_id = 456 AND feedback_date >= '2021-01-01';",
      "SELECT strategy_name, target_audience FROM marketing_strategies WHERE activation_date > '2022-01-01';",
      "SELECT segment_name, segment_criteria FROM customer_segments WHERE segment_id IN (1, 2, 3);",
      "SELECT order_id, order_date, total_amount FROM customer_orders WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT customer_id, preference_name FROM customer_preferences WHERE preference_category = 'Food';",
      "SELECT COUNT(*) AS total_orders FROM customer_orders;",
      "SELECT AVG(total_amount) AS avg_amount FROM customer_orders WHERE customer_id = 789;",
      "SELECT strategy_name, target_audience FROM marketing_strategies WHERE strategy_id = 1;",
      "SELECT segment_name, segment_description FROM customer_segments ORDER BY segment_name ASC;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM customer_orders GROUP BY customer_id;",
      "SELECT preference_id, COUNT(customer_id) AS total_customers FROM customer_preferences GROUP BY preference_id;",
      "SELECT feedback_date, COUNT(feedback_id) AS total_feedback FROM customer_feedback GROUP BY feedback_date;",
      "SELECT strategy_id, strategy_name, activation_date FROM marketing_strategies WHERE target_audience LIKE '%Youth%';",
      "SELECT segment_id, segment_name, JSON_EXTRACT(segment_criteria, '$.age') AS age_criteria FROM customer_segments WHERE segment_criteria->'$.age' > 18;",
      "SELECT customer_id, MAX(total_amount) AS max_amount FROM customer_orders GROUP BY customer_id;",
      "SELECT preference_name, COUNT(customer_id) AS total_customers FROM customer_preferences GROUP BY preference_name ORDER BY total_customers DESC;",
      "SELECT MAX(feedback_date) AS latest_feedback_date FROM customer_feedback;",
      "SELECT AVG(total_amount) AS avg_amount, MAX(total_amount) AS max_amount, MIN(total_amount) AS min_amount FROM customer_orders WHERE order_date >= '2021-01-01' AND order_date <= '2021-12-31';"
    ]
  }
]