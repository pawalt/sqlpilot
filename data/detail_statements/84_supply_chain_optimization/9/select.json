[
  {
    "statements": [
      "SELECT * FROM supplier_performance_metrics;",
      "SELECT supplier_name, delivery_performance FROM supplier_performance_metrics;",
      "SELECT supplier_name, quality_performance FROM supplier_performance_metrics WHERE quality_performance > 0.8;",
      "SELECT supplier_name, reliability_score FROM supplier_performance_metrics WHERE reliability_score < 0.5;",
      "SELECT supplier_name, delivery_performance, quality_performance FROM supplier_performance_metrics WHERE delivery_performance > 0.7 AND quality_performance > 0.8;",
      "SELECT * FROM supplier_performance_metrics WHERE reliability_score < 0.6;",
      "SELECT supplier_name, delivery_performance, quality_performance, reliability_score FROM supplier_performance_metrics WHERE supplier_id = 5;",
      "SELECT supplier_name, delivery_performance, quality_performance FROM supplier_performance_metrics WHERE supplier_name LIKE 'A%';",
      "SELECT supplier_name, reliability_score FROM supplier_performance_metrics WHERE delivery_performance BETWEEN 0.6 AND 0.8;",
      "SELECT supplier_name, quality_performance, reliability_score FROM supplier_performance_metrics WHERE quality_performance < 0.6 OR reliability_score > 0.8;",
      "SELECT supplier_id, supplier_name, delivery_performance, reliability_score FROM supplier_performance_metrics WHERE delivery_performance < 0.5 OR reliability_score < 0.5;",
      "SELECT COUNT(*) FROM supplier_performance_metrics;",
      "SELECT AVG(delivery_performance) AS avg_delivery_performance FROM supplier_performance_metrics;",
      "SELECT SUM(reliability_score) AS total_reliability_score FROM supplier_performance_metrics;",
      "SELECT MAX(quality_performance) AS max_quality_performance FROM supplier_performance_metrics;",
      "SELECT MIN(delivery_performance) AS min_delivery_performance FROM supplier_performance_metrics;",
      "SELECT DISTINCT supplier_name FROM supplier_performance_metrics;",
      "SELECT supplier_name, delivery_performance, reliability_score FROM supplier_performance_metrics ORDER BY delivery_performance DESC;",
      "SELECT supplier_name, quality_performance, reliability_score FROM supplier_performance_metrics ORDER BY quality_performance ASC;",
      "SELECT supplier_name, reliability_score, delivery_performance FROM supplier_performance_metrics ORDER BY reliability_score DESC, delivery_performance ASC;",
      "SELECT * FROM supplier_performance_metrics GROUP BY supplier_name;",
      "SELECT * FROM supplier_performance_metrics WHERE quality_performance > 4.5;",
      "SELECT supplier_name, reliability_score FROM supplier_performance_metrics WHERE delivery_performance < 3.0;",
      "SELECT * FROM supplier_performance_metrics WHERE supplier_id = 100;",
      "SELECT supplier_name, quality_performance FROM supplier_performance_metrics WHERE reliability_score > 7.0;",
      "SELECT AVG(delivery_performance), MAX(quality_performance), MIN(reliability_score) FROM supplier_performance_metrics;",
      "SELECT supplier_name, reliability_score FROM supplier_performance_metrics WHERE quality_performance BETWEEN 4.0 AND 5.0;",
      "SELECT * FROM supplier_performance_metrics WHERE delivery_performance > 2.0 AND quality_performance < 4.0;",
      "SELECT COUNT(*) FROM supplier_performance_metrics WHERE reliability_score < 6.0;",
      "SELECT supplier_id, supplier_name FROM supplier_performance_metrics WHERE delivery_performance > 4.0 AND quality_performance > 4.0;",
      "SELECT * FROM supplier_performance_metrics WHERE supplier_id IN (101, 102, 103);",
      "SELECT supplier_name, reliability_score FROM supplier_performance_metrics WHERE quality_performance > 5.0 ORDER BY reliability_score DESC;",
      "SELECT * FROM supplier_performance_metrics WHERE delivery_performance >= 3.0 OR reliability_score < 6.0;",
      "SELECT supplier_id, delivery_performance, quality_performance FROM supplier_performance_metrics WHERE supplier_name LIKE 'S%';",
      "SELECT AVG(delivery_performance), SUM(quality_performance), COUNT(supplier_id) FROM supplier_performance_metrics;",
      "SELECT supplier_name, delivery_performance, reliability_score FROM supplier_performance_metrics WHERE quality_performance < 4.5;",
      "SELECT * FROM supplier_performance_metrics WHERE reliability_score = (SELECT MAX(reliability_score) FROM supplier_performance_metrics);",
      "SELECT supplier_id, supplier_name, quality_performance FROM supplier_performance_metrics WHERE delivery_performance < 2.0;",
      "SELECT supplier_id, supplier_name, delivery_performance FROM supplier_performance_metrics WHERE reliability_score > 6.0;",
      "SELECT supplier_name, reliability_score FROM supplier_performance_metrics WHERE delivery_performance BETWEEN 3.0 AND 4.0;",
      "SELECT * FROM supplier_performance_metrics WHERE supplier_name NOT LIKE 'A%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM supplier_performance_metrics;",
      "SELECT supplier_id, vendor_name FROM supplier_performance_metrics;",
      "SELECT delivery_performance_score, product_quality_score FROM supplier_performance_metrics;",
      "SELECT * FROM negotiation_terms;",
      "SELECT vendor_name, contract_duration FROM negotiation_terms;",
      "SELECT payment_terms FROM negotiation_terms WHERE vendor_name = 'ABC Corp';",
      "SELECT * FROM supplier_performance_metrics WHERE supplier_id = 100;",
      "SELECT vendor_name FROM supplier_performance_metrics WHERE delivery_performance_score > 0.8;",
      "SELECT * FROM supplier_performance_metrics WHERE product_quality_score < 0.5;",
      "SELECT SUM(delivery_performance_score) FROM supplier_performance_metrics;",
      "SELECT AVG(product_quality_score) FROM supplier_performance_metrics;",
      "SELECT MAX(delivery_performance_score) FROM supplier_performance_metrics;",
      "SELECT COUNT(*) FROM supplier_performance_metrics;",
      "SELECT vendor_name, payment_terms FROM negotiation_terms WHERE contract_duration >= 12;",
      "SELECT * FROM supplier_performance_metrics ORDER BY product_quality_score DESC;",
      "SELECT vendor_name, MAX(delivery_performance_score) AS max_score FROM supplier_performance_metrics GROUP BY vendor_name;",
      "SELECT COUNT(DISTINCT vendor_name) FROM negotiation_terms;",
      "SELECT * FROM supplier_performance_metrics WHERE delivery_performance_score < 0.6 AND product_quality_score > 0.7;",
      "SELECT supplier_id, vendor_name, delivery_performance_score, product_quality_score FROM supplier_performance_metrics WHERE vendor_name LIKE 'A%';",
      "SELECT vendor_name, AVG(delivery_performance_score) AS avg_score FROM supplier_performance_metrics GROUP BY vendor_name;",
      "SELECT * FROM supplier_performance_metrics WHERE delivery_performance_score > 0.8;",
      "SELECT supplier_id, vendor_name FROM supplier_performance_metrics WHERE product_quality_score < 0.6;",
      "SELECT vendor_name, delivery_performance_score FROM supplier_performance_metrics WHERE product_quality_score = 1.0;",
      "SELECT * FROM negotiation_terms WHERE contract_duration >= 12;",
      "SELECT vendor_name, payment_terms FROM negotiation_terms WHERE payment_terms = 'Net 30';",
      "SELECT COUNT(supplier_id) AS total_suppliers FROM supplier_performance_metrics;",
      "SELECT AVG(delivery_performance_score) AS avg_delivery_score FROM supplier_performance_metrics;",
      "SELECT MAX(product_quality_score) AS max_quality_score FROM supplier_performance_metrics;",
      "SELECT vendor_name, SUM(product_quality_score) AS total_quality_score FROM supplier_performance_metrics GROUP BY vendor_name;",
      "SELECT spm.vendor_name, nt.payment_terms FROM supplier_performance_metrics spm INNER JOIN negotiation_terms nt ON spm.vendor_name = nt.vendor_name;",
      "SELECT spm.vendor_name, nt.contract_duration FROM supplier_performance_metrics spm LEFT JOIN negotiation_terms nt ON spm.vendor_name = nt.vendor_name;",
      "SELECT spm.vendor_name, nt.contract_duration FROM supplier_performance_metrics spm RIGHT JOIN negotiation_terms nt ON spm.vendor_name = nt.vendor_name;",
      "SELECT spm.vendor_name, nt.payment_terms FROM supplier_performance_metrics spm JOIN negotiation_terms nt ON spm.vendor_name = nt.vendor_name WHERE spm.delivery_performance_score > 0.7;",
      "SELECT spm.vendor_name, nt.payment_terms FROM supplier_performance_metrics spm JOIN negotiation_terms nt ON spm.vendor_name = nt.vendor_name WHERE spm.product_quality_score < 0.5;",
      "SELECT spm.vendor_name, SUM(spm.product_quality_score) AS total_quality_score FROM supplier_performance_metrics spm JOIN negotiation_terms nt ON spm.vendor_name = nt.vendor_name GROUP BY spm.vendor_name;",
      "SELECT COUNT(*) AS total_records FROM (SELECT * FROM supplier_performance_metrics UNION ALL SELECT * FROM negotiation_terms) AS combined_tables;",
      "SELECT DISTINCT vendor_name FROM supplier_performance_metrics;",
      "SELECT vendor_name, AVG(delivery_performance_score) AS avg_delivery_score FROM supplier_performance_metrics GROUP BY vendor_name HAVING avg_delivery_score > 0.9;",
      "SELECT vendor_name, MAX(contract_duration) AS max_contract_duration FROM negotiation_terms GROUP BY vendor_name;",
      "SELECT vendor_name, AVG(product_quality_score) AS avg_quality_score FROM supplier_performance_metrics GROUP BY vendor_name HAVING avg_quality_score < 0.7;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM suppliers;",
      "SELECT supplier_name, performance_rating FROM suppliers;",
      "SELECT supplier_name, delivery_performance FROM suppliers WHERE performance_rating > 3;",
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products;",
      "SELECT product_name, quantity_in_stock FROM products WHERE price < 50.00;",
      "SELECT * FROM orders;",
      "SELECT order_date, order_quantity FROM orders WHERE order_status = 'Pending';",
      "SELECT supplier_name, product_name, price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id;",
      "SELECT supplier_name, product_name, order_date FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id;",
      "SELECT supplier_name, SUM(price * order_quantity) AS total_cost FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id GROUP BY supplier_name;",
      "SELECT supplier_name, COUNT(product_id) AS total_products FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, MAX(price) AS highest_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, AVG(price) AS average_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, MIN(quantity_in_stock) AS lowest_stock FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, product_name, order_date FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id LEFT JOIN orders ON products.product_id = orders.product_id;",
      "SELECT supplier_name, product_name, order_date FROM suppliers RIGHT JOIN products ON suppliers.supplier_id = products.supplier_id RIGHT JOIN orders ON products.product_id = orders.product_id;",
      "SELECT supplier_name, product_name, order_date FROM suppliers FULL JOIN products ON suppliers.supplier_id = products.supplier_id FULL JOIN orders ON products.product_id = orders.product_id;",
      "SELECT supplier_name, product_name, order_date FROM suppliers CROSS JOIN products;",
      "SELECT DISTINCT order_status FROM orders;",
      "SELECT supplier_name, product_name, order_date FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id WHERE order_status = 'Delivered';",
      "SELECT * FROM suppliers WHERE performance_rating > 5;",
      "SELECT supplier_name, delivery_performance FROM suppliers WHERE delivery_performance > 0.8;",
      "SELECT DISTINCT supplier_name FROM suppliers WHERE performance_rating >= 7;",
      "SELECT supplier_name, product_name, price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id;",
      "SELECT product_name, price, quantity_in_stock FROM products WHERE price < 100;",
      "SELECT order_id, order_date, order_quantity, order_status FROM orders WHERE order_status = 'Pending';",
      "SELECT supplier_name, SUM(price * order_quantity) AS total_cost FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id GROUP BY supplier_name;",
      "SELECT supplier_id, AVG(delivery_performance) AS avg_performance FROM suppliers GROUP BY supplier_id;",
      "SELECT supplier_name, product_name, price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id WHERE price BETWEEN 50 AND 100;",
      "SELECT supplier_name, performance_rating FROM suppliers ORDER BY performance_rating DESC;",
      "SELECT product_name, supplier_name, price FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id ORDER BY price ASC;",
      "SELECT supplier_name, COUNT(product_id) AS total_products FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name HAVING total_products > 3;",
      "SELECT supplier_name, AVG(price) AS avg_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name HAVING avg_price > 75;",
      "SELECT supplier_name, MAX(delivery_performance) AS max_performance FROM suppliers GROUP BY supplier_name;",
      "SELECT supplier_name, product_name, price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id WHERE product_name LIKE '%Chair%';",
      "SELECT supplier_name, performance_rating FROM suppliers UNION SELECT product_name, price FROM products;",
      "SELECT supplier_name, product_name, order_quantity FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id;",
      "SELECT supplier_name, product_name, order_date, order_quantity FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT supplier_name, performance_rating FROM suppliers WHERE performance_rating < (SELECT AVG(performance_rating) FROM suppliers);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Supplier;",
      "SELECT supplier_name, supplier_location FROM Supplier;",
      "SELECT * FROM PurchaseHistory;",
      "SELECT purchase_id, purchase_date, purchase_amount FROM PurchaseHistory;",
      "SELECT * FROM SupplierContacts;",
      "SELECT contact_name, contact_email, contact_phone FROM SupplierContacts;",
      "SELECT * FROM PerformanceMetrics;",
      "SELECT metric_name, metric_value FROM PerformanceMetrics;",
      "SELECT s.supplier_name, p.purchase_date, p.purchase_amount FROM Supplier s JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id;",
      "SELECT s.supplier_name, c.contact_name, c.contact_email FROM Supplier s JOIN SupplierContacts c ON s.supplier_id = c.supplier_id;",
      "SELECT s.supplier_name, p.metric_name, p.metric_value FROM Supplier s JOIN PerformanceMetrics p ON s.supplier_id = p.supplier_id;",
      "SELECT s.supplier_name, p.metric_name, p.metric_value FROM Supplier s JOIN PerformanceMetrics p ON s.supplier_id = p.supplier_id WHERE p.metric_value > 100;",
      "SELECT s.supplier_name, s.supplier_location, SUM(p.purchase_amount) AS total_purchase FROM Supplier s JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id GROUP BY s.supplier_id;",
      "SELECT s.supplier_name, AVG(p.metric_value) AS average_metric_value FROM Supplier s JOIN PerformanceMetrics p ON s.supplier_id = p.supplier_id GROUP BY s.supplier_id;",
      "SELECT s.supplier_name, COUNT(c.contact_id) AS contact_count FROM Supplier s JOIN SupplierContacts c ON s.supplier_id = c.supplier_id GROUP BY s.supplier_id;",
      "SELECT s.supplier_name, p.purchase_amount, p.purchase_date FROM PurchaseHistory p JOIN Supplier s ON p.supplier_id = s.supplier_id ORDER BY p.purchase_amount DESC;",
      "SELECT s.supplier_name, p.metric_name, p.metric_value FROM PerformanceMetrics p JOIN Supplier s ON p.supplier_id = s.supplier_id WHERE p.metric_value < 50;",
      "SELECT s.supplier_name, AVG(p.purchase_amount) AS average_purchase_amount FROM PurchaseHistory p JOIN Supplier s ON p.supplier_id = s.supplier_id GROUP BY s.supplier_id HAVING AVG(p.purchase_amount) > 500;",
      "SELECT s.supplier_name, MAX(p.purchase_amount) AS max_purchase_amount FROM PurchaseHistory p JOIN Supplier s ON p.supplier_id = s.supplier_id GROUP BY s.supplier_id;",
      "SELECT * FROM Supplier;",
      "SELECT supplier_name, supplier_location FROM Supplier;",
      "SELECT * FROM PurchaseHistory WHERE purchase_amount > 1000;",
      "SELECT supplier_name, purchase_date, purchase_amount FROM Supplier INNER JOIN PurchaseHistory ON Supplier.supplier_id = PurchaseHistory.supplier_id;",
      "SELECT s.supplier_name, pc.contact_email FROM Supplier s INNER JOIN SupplierContacts pc ON s.supplier_id = pc.supplier_id;",
      "SELECT p.purchase_date, m.metric_name, m.metric_value FROM PurchaseHistory p INNER JOIN PerformanceMetrics m ON p.supplier_id = m.supplier_id;",
      "SELECT s.supplier_name, SUM(p.purchase_amount) AS total_purchase_amount FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id GROUP BY s.supplier_name;",
      "SELECT s.supplier_name, pc.contact_phone FROM Supplier s LEFT JOIN SupplierContacts pc ON s.supplier_id = pc.supplier_id;",
      "SELECT s.supplier_name, p.purchase_amount FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id ORDER BY p.purchase_amount DESC;",
      "SELECT DISTINCT s.supplier_name FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id WHERE p.purchase_amount > 5000;",
      "SELECT supplier_name, MIN(purchase_date) AS first_purchase_date FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, COUNT(*) AS total_purchases FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id GROUP BY supplier_name;",
      "SELECT s.supplier_name, AVG(m.metric_value) AS avg_metric_value FROM Supplier s INNER JOIN PerformanceMetrics m ON s.supplier_id = m.supplier_id GROUP BY s.supplier_name;",
      "SELECT s.supplier_name, pc.contact_email FROM Supplier s INNER JOIN SupplierContacts pc ON s.supplier_id = pc.supplier_id WHERE pc.contact_phone LIKE '%123%';",
      "SELECT s.supplier_name, p.purchase_amount, SUM(m.metric_value) AS total_metric_value FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id INNER JOIN PerformanceMetrics m ON s.supplier_id = m.supplier_id GROUP BY s.supplier_name, p.purchase_amount;",
      "SELECT s.supplier_name, pc.contact_name, pc.contact_email FROM Supplier s INNER JOIN SupplierContacts pc ON s.supplier_id = pc.supplier_id WHERE pc.contact_email LIKE '%example.com';",
      "SELECT supplier_name, MAX(purchase_amount) AS max_purchase_amount FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id GROUP BY supplier_name;",
      "SELECT s.supplier_name, COUNT(DISTINCT p.purchase_date) AS unique_purchase_dates FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id GROUP BY s.supplier_name;",
      "SELECT s.supplier_name, pc.contact_email FROM Supplier s INNER JOIN SupplierContacts pc ON s.supplier_id = pc.supplier_id ORDER BY supplier_name ASC;",
      "SELECT s.supplier_name, AVG(p.purchase_amount) AS avg_purchase_amount, AVG(m.metric_value) AS avg_metric_value FROM Supplier s INNER JOIN PurchaseHistory p ON s.supplier_id = p.supplier_id INNER JOIN PerformanceMetrics m ON s.supplier_id = m.supplier_id GROUP BY s.supplier_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM suppliers;",
      "SELECT supplier_name, supplier_location FROM suppliers;",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, product_category FROM products;",
      "SELECT * FROM deliveries;",
      "SELECT delivery_id, delivery_date, quantity FROM deliveries;",
      "SELECT * FROM performance_metrics;",
      "SELECT metric_id, supplier_id, delivery_id, reliability_score, fulfillment_score, negotiation_score FROM performance_metrics;",
      "SELECT * FROM contracts;",
      "SELECT contract_id, supplier_id, product_id, delivery_id, contract_date, total_amount FROM contracts;",
      "SELECT supplier_name, product_name, delivery_date, reliability_score FROM suppliers s INNER JOIN products p ON s.supplier_id = p.supplier_id INNER JOIN deliveries d ON p.product_id = d.product_id INNER JOIN performance_metrics pm ON s.supplier_id = pm.supplier_id AND d.delivery_id = pm.delivery_id ORDER BY reliability_score DESC;",
      "SELECT supplier_name, product_name, delivery_date, reliability_score FROM suppliers s INNER JOIN products p ON s.supplier_id = p.supplier_id INNER JOIN deliveries d ON p.product_id = d.product_id INNER JOIN performance_metrics pm ON s.supplier_id = pm.supplier_id AND d.delivery_id = pm.delivery_id WHERE reliability_score > 4.5;",
      "SELECT supplier_name, SUM(total_amount) AS total_contract_amount FROM suppliers s INNER JOIN contracts c ON s.supplier_id = c.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, COUNT(*) AS delivery_count FROM suppliers s INNER JOIN products p ON s.supplier_id = p.supplier_id INNER JOIN deliveries d ON p.product_id = d.product_id GROUP BY supplier_name;",
      "SELECT supplier_name, AVG(reliability_score) AS avg_reliability_score FROM suppliers s INNER JOIN performance_metrics pm ON s.supplier_id = pm.supplier_id GROUP BY supplier_name;",
      "SELECT product_name, MAX(quantity) AS max_quantity FROM products p INNER JOIN deliveries d ON p.product_id = d.product_id GROUP BY product_name;",
      "SELECT product_category, MIN(total_amount) AS min_contract_amount FROM products p INNER JOIN contracts c ON p.product_id = c.product_id GROUP BY product_category;",
      "SELECT supplier_name, delivery_date, reliability_score FROM suppliers s INNER JOIN products p ON s.supplier_id = p.supplier_id INNER JOIN deliveries d ON p.product_id = d.product_id INNER JOIN performance_metrics pm ON s.supplier_id = pm.supplier_id AND d.delivery_id = pm.delivery_id WHERE delivery_date >= '2022-01-01';",
      "SELECT supplier_name, product_name, total_amount, contract_date FROM suppliers s INNER JOIN products p ON s.supplier_id = p.supplier_id INNER JOIN contracts c ON s.supplier_id = c.supplier_id AND p.product_id = c.product_id WHERE contract_date >= '2022-01-01';",
      "SELECT supplier_name, SUM(quantity) AS total_quantity FROM suppliers s INNER JOIN products p ON s.supplier_id = p.supplier_id INNER JOIN deliveries d ON p.product_id = d.product_id GROUP BY supplier_name HAVING total_quantity >= 100;",
      "SELECT supplier_name, product_name, reliability_score FROM suppliers s INNER JOIN products p ON s.supplier_id = p.supplier_id INNER JOIN performance_metrics pm ON s.supplier_id = pm.supplier_id ORDER BY reliability_score DESC LIMIT 10;",
      "SELECT * FROM suppliers WHERE supplier_location = 'New York';",
      "SELECT product_name, product_category FROM products WHERE supplier_id IN (SELECT supplier_id FROM suppliers WHERE supplier_location = 'California');",
      "SELECT delivery_id, delivery_date, quantity FROM deliveries WHERE delivery_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT supplier_name, reliability_score, fulfillment_score FROM suppliers s JOIN performance_metrics pm ON s.supplier_id = pm.supplier_id;",
      "SELECT product_name, product_category, reliability_score FROM products p JOIN performance_metrics pm ON p.product_id = pm.delivery_id;",
      "SELECT supplier_name, delivery_date, total_amount FROM suppliers s JOIN contracts c ON s.supplier_id = c.supplier_id;",
      "SELECT supplier_name, product_name, quantity FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id JOIN deliveries d ON p.product_id = d.product_id WHERE quantity > 100;",
      "SELECT supplier_name, delivery_date,..."
    ]
  }
]