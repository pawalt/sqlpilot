[
  {
    "statements": [
      "SELECT * FROM product_inventory;",
      "SELECT product_id, product_name FROM product_inventory;",
      "SELECT product_id, current_stock FROM product_inventory WHERE current_stock > 0;",
      "SELECT * FROM product_inventory WHERE warehouse_id = 'ff834958-2a01-4c5e-967f-c48abcc51422';",
      "SELECT product_name, max_capacity FROM product_inventory WHERE max_capacity < current_stock;",
      "SELECT product_id, current_stock FROM product_inventory WHERE warehouse_id = 'ff834958-2a01-4c5e-967f-c48abcc51422' AND current_stock < max_capacity;",
      "SELECT * FROM product_inventory ORDER BY current_stock DESC;",
      "SELECT product_name, current_stock FROM product_inventory WHERE product_name LIKE 'A%';",
      "SELECT product_id, current_stock FROM product_inventory WHERE product_name IN ('Product A', 'Product B', 'Product C');",
      "SELECT product_id, current_stock FROM product_inventory WHERE current_stock BETWEEN 10 AND 50;",
      "SELECT product_id, max_capacity FROM product_inventory WHERE product_name = 'Product X';",
      "SELECT * FROM product_inventory WHERE warehouse_id IS NULL;",
      "SELECT * FROM product_inventory WHERE current_stock = 0;",
      "SELECT product_id, current_stock FROM product_inventory WHERE current_stock <= 5;",
      "SELECT product_id, current_stock FROM product_inventory WHERE current_stock > max_capacity;",
      "SELECT product_name, max_capacity FROM product_inventory WHERE current_stock = max_capacity;",
      "SELECT product_id, max_capacity FROM product_inventory WHERE current_stock < max_capacity;",
      "SELECT product_name, current_stock FROM product_inventory WHERE warehouse_id IS NOT NULL;",
      "SELECT product_id, max_capacity FROM product_inventory WHERE warehouse_id != 'ff834958-2a01-4c5e-967f-c48abcc51422';",
      "SELECT product_id, max_capacity FROM product_inventory WHERE warehouse_id = 'ff834958-2a01-4c5e-967f-c48abcc51422';",
      "SELECT * FROM product_inventory WHERE current_stock > 0;",
      "SELECT product_id, product_name FROM product_inventory WHERE current_stock < max_capacity;",
      "SELECT product_id, warehouse_id, current_stock FROM product_inventory WHERE product_name LIKE 'A%';",
      "SELECT * FROM product_inventory WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174000' AND current_stock > 10;",
      "SELECT COUNT(product_id) AS total_products FROM product_inventory;",
      "SELECT MAX(max_capacity) AS max_stock_capacity FROM product_inventory;",
      "SELECT MIN(current_stock) AS min_current_stock FROM product_inventory WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174001';",
      "SELECT AVG(current_stock) AS avg_stock FROM product_inventory WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174002';",
      "SELECT SUM(current_stock) AS total_stock FROM product_inventory WHERE product_name = 'Product X';",
      "SELECT product_id, current_stock FROM product_inventory WHERE warehouse_id IN ('123e4567-e89b-12d3-a456-426614174003', '123e4567-e89b-12d3-a456-426614174004');",
      "SELECT product_id, product_name, current_stock FROM product_inventory WHERE product_name = 'Product Y' AND current_stock < 20;",
      "SELECT * FROM product_inventory WHERE current_stock >= 0 AND max_capacity <= 100;",
      "SELECT product_id, max_capacity FROM product_inventory WHERE current_stock = 0 AND warehouse_id = '123e4567-e89b-12d3-a456-426614174005';",
      "SELECT product_id, product_name, current_stock FROM product_inventory WHERE product_name LIKE '%Z' AND warehouse_id = '123e4567-e89b-12d3-a456-426614174006';",
      "SELECT product_id, warehouse_id, current_stock, max_capacity FROM product_inventory ORDER BY current_stock DESC;",
      "SELECT product_id, warehouse_id, current_stock, max_capacity FROM product_inventory ORDER BY max_capacity ASC;",
      "SELECT product_id, warehouse_id, current_stock, max_capacity FROM product_inventory ORDER BY warehouse_id, current_stock;",
      "SELECT DISTINCT warehouse_id FROM product_inventory;",
      "SELECT product_id, current_stock, max_capacity FROM product_inventory WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174007' LIMIT 5;",
      "SELECT * FROM product_inventory WHERE product_name = 'Product A' OR product_name = 'Product B';",
      "SELECT COUNT(DISTINCT warehouse_id) AS total_warehouses FROM product_inventory;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM warehouses;",
      "SELECT id, location FROM warehouses;",
      "SELECT location, capacity FROM warehouses;",
      "SELECT * FROM products;",
      "SELECT id, name FROM products;",
      "SELECT category, price FROM products;",
      "SELECT id, location, capacity FROM warehouses;",
      "SELECT name, category, price FROM products;",
      "SELECT id, location, capacity, name, category, price FROM warehouses, products;",
      "SELECT id, name, category, price FROM products WHERE price > 50;",
      "SELECT name, price FROM products WHERE category = 'Electronics';",
      "SELECT location, capacity FROM warehouses WHERE capacity >= 100;",
      "SELECT id, name FROM products ORDER BY name ASC;",
      "SELECT * FROM warehouses LIMIT 5;",
      "SELECT id, name, category FROM products WHERE category LIKE '%food%';",
      "SELECT id, location, capacity FROM warehouses WHERE location LIKE '%New%';",
      "SELECT MAX(price) FROM products;",
      "SELECT MIN(capacity) FROM warehouses;",
      "SELECT AVG(price) FROM products;",
      "SELECT SUM(capacity) FROM warehouses;",
      "SELECT * FROM warehouses WHERE capacity > 100;",
      "SELECT location, COUNT(id) as total_products FROM warehouses JOIN products ON warehouses.id = products.id GROUP BY location;",
      "SELECT AVG(price) as average_price FROM products WHERE category = 'Electronics';",
      "SELECT name, price FROM products WHERE price BETWEEN 50 AND 100 ORDER BY name ASC;",
      "SELECT w.location, COUNT(p.id) as total_products FROM warehouses w LEFT JOIN products p ON w.id = p.id GROUP BY w.location HAVING COUNT(p.id) < 5;",
      "SELECT p.name, p.price, w.location FROM products p INNER JOIN warehouses w ON p.id = w.id WHERE p.price > 100;",
      "SELECT SUM(price) as total_price FROM products GROUP BY category ORDER BY total_price DESC LIMIT 3;",
      "SELECT p.name, p.price FROM products p WHERE category = 'Clothing' AND EXISTS (SELECT id FROM warehouses WHERE id = p.id AND location = 'New York');",
      "SELECT p.name, p.price FROM products p WHERE NOT EXISTS (SELECT * FROM warehouses WHERE id = p.id);",
      "SELECT SUM(capacity) as total_capacity FROM warehouses WHERE location LIKE '%North%';",
      "SELECT name, category, price, capacity FROM products p JOIN warehouses w ON p.id = w.id;",
      "SELECT p.name, p.price, w.location FROM products p CROSS JOIN warehouses w WHERE p.price > 50 AND w.capacity > 200;",
      "SELECT location, MAX(price) as max_price FROM warehouses w JOIN products p ON w.id = p.id GROUP BY location HAVING MAX(price) > 200;",
      "SELECT p.name as product_name, w.location as warehouse_location FROM products p JOIN warehouses w ON p.id = w.id WHERE p.category = 'Electronics';",
      "SELECT location, AVG(capacity) as avg_capacity FROM warehouses GROUP BY location HAVING AVG(capacity) < 150;",
      "SELECT p.name, p.price FROM products p WHERE p.price = (SELECT MAX(price) FROM products);",
      "SELECT w.location, COUNT(p.id) as total_products FROM warehouses w RIGHT JOIN products p ON w.id = p.id GROUP BY w.location;",
      "SELECT * FROM products WHERE category = 'Electronics' UNION SELECT * FROM products WHERE category = 'Clothing';",
      "SELECT location, SUM(price) as total_price FROM warehouses w LEFT JOIN products p ON w.id = p.id GROUP BY location HAVING total_price > 500;",
      "SELECT name, price FROM products WHERE price = (SELECT AVG(price) FROM products);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT product_name, quantity FROM products;",
      "SELECT product_name, warehouse_id FROM products WHERE quantity > 0;",
      "SELECT * FROM warehouses;",
      "SELECT warehouse_name, location FROM warehouses;",
      "SELECT * FROM restocking_history;",
      "SELECT product_id, warehouse_id, restock_date FROM restocking_history;",
      "SELECT product_id, warehouse_id, restock_quantity FROM restocking_history WHERE restock_date > '2022-01-01';",
      "SELECT products.product_name, warehouses.warehouse_name FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id;",
      "SELECT products.product_name, restocking_history.restock_date FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id;",
      "SELECT warehouses.warehouse_name, restocking_history.restock_quantity FROM warehouses JOIN restocking_history ON warehouses.warehouse_id = restocking_history.warehouse_id;",
      "SELECT * FROM products ORDER BY quantity DESC;",
      "SELECT product_name, SUM(restock_quantity) AS total_restock FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id GROUP BY product_name;",
      "SELECT warehouse_id, AVG(quantity) AS avg_quantity FROM products GROUP BY warehouse_id;",
      "SELECT product_name, restock_date, restock_quantity FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id WHERE restock_quantity > 100;",
      "SELECT warehouse_id, COUNT(*) AS total_restocks FROM restocking_history GROUP BY warehouse_id;",
      "SELECT product_name, location FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id;",
      "SELECT product_name, restock_date FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id WHERE restock_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT warehouse_name, AVG(restock_quantity) AS avg_restock FROM warehouses JOIN restocking_history ON warehouses.warehouse_id = restocking_history.warehouse_id GROUP BY warehouse_name;",
      "SELECT product_name, warehouse_name, restock_date, restock_quantity FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id JOIN restocking_history ON products.product_id = restocking_history.product_id AND warehouses.warehouse_id = restocking_history.warehouse_id WHERE restock_quantity > 50;",
      "SELECT product_name, quantity FROM products WHERE warehouse_id = 1;",
      "SELECT product_name, quantity FROM products WHERE quantity > 100;",
      "SELECT product_name, quantity FROM products WHERE warehouse_id = 1 AND quantity > 100;",
      "SELECT product_name, warehouse_name FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id;",
      "SELECT product_name, warehouse_name FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id WHERE quantity > 50;",
      "SELECT product_name, restock_date FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id;",
      "SELECT warehouse_name, restock_date FROM warehouses JOIN restocking_history ON warehouses.warehouse_id = restocking_history.warehouse_id;",
      "SELECT product_name, quantity, restock_quantity FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id;",
      "SELECT warehouse_name, location, restock_date FROM warehouses JOIN restocking_history ON warehouses.warehouse_id = restocking_history.warehouse_id;",
      "SELECT product_id, SUM(restock_quantity) AS total_restock FROM restocking_history GROUP BY product_id;",
      "SELECT product_name, AVG(quantity) AS avg_quantity FROM products GROUP BY product_name;",
      "SELECT warehouse_id, MAX(quantity) AS max_quantity FROM products GROUP BY warehouse_id;",
      "SELECT warehouse_name, location, COUNT(*) AS restock_count FROM warehouses JOIN restocking_history ON warehouses.warehouse_id = restocking_history.warehouse_id GROUP BY warehouse_name;",
      "SELECT product_name, restock_date FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id WHERE restock_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT warehouse_name, location, restock_quantity FROM warehouses JOIN restocking_history ON warehouses.warehouse_id = restocking_history.warehouse_id WHERE restock_quantity > 10;",
      "SELECT product_name, warehouse_name, restock_date FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id JOIN restocking_history ON products.product_id = restocking_history.product_id;",
      "SELECT warehouse_name, location, SUM(restock_quantity) AS total_restock FROM warehouses JOIN restocking_history ON warehouses.warehouse_id = restocking_history.warehouse_id GROUP BY warehouse_name;",
      "SELECT product_name, MAX(quantity) AS max_quantity, MIN(quantity) AS min_quantity FROM products GROUP BY product_name;",
      "SELECT warehouse_id, COUNT(*) AS restock_count FROM restocking_history GROUP BY warehouse_id HAVING COUNT(*) > 5;",
      "SELECT product_id, AVG(restock_quantity) AS avg_restock_quantity FROM restocking_history GROUP BY product_id HAVING AVG(restock_quantity) > 50;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products;",
      "SELECT product_name, description FROM products WHERE price > 50;",
      "SELECT * FROM warehouses;",
      "SELECT warehouse_name, location FROM warehouses;",
      "SELECT * FROM inventory;",
      "SELECT product_id, warehouse_id, quantity FROM inventory WHERE quantity < 10;",
      "SELECT * FROM restocking_orders;",
      "SELECT order_id, product_id, warehouse_id, quantity FROM restocking_orders WHERE status = 'pending';",
      "SELECT product_name, price, quantity FROM products p JOIN inventory i ON p.product_id = i.product_id;",
      "SELECT product_name, warehouse_name, quantity FROM products p JOIN inventory i ON p.product_id = i.product_id JOIN warehouses w ON i.warehouse_id = w.warehouse_id;",
      "SELECT p.product_name, w.warehouse_name, r.quantity FROM products p JOIN inventory i ON p.product_id = i.product_id JOIN warehouses w ON i.warehouse_id = w.warehouse_id JOIN restocking_orders r ON r.product_id = p.product_id AND r.warehouse_id = w.warehouse_id;",
      "SELECT p.product_name, r.order_date, r.status FROM products p JOIN restocking_orders r ON r.product_id = p.product_id;",
      "SELECT p.product_name, r.order_date, r.status FROM products p JOIN restocking_orders r ON r.product_id = p.product_id WHERE r.status = 'completed';",
      "SELECT p.product_name, w.location, i.quantity FROM products p JOIN inventory i ON p.product_id = i.product_id JOIN warehouses w ON i.warehouse_id = w.warehouse_id WHERE i.quantity < 5;",
      "SELECT SUM(quantity) FROM inventory;",
      "SELECT COUNT(*) FROM products;",
      "SELECT COUNT(*) FROM restocking_orders WHERE status = 'pending';",
      "SELECT AVG(price) FROM products;",
      "SELECT MAX(price) FROM products;",
      "SELECT MIN(price) FROM products;",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, price FROM products WHERE price > 100;",
      "SELECT products.product_name, inventory.quantity, warehouses.location FROM products INNER JOIN inventory ON products.product_id = inventory.product_id INNER JOIN warehouses ON inventory.warehouse_id = warehouses.warehouse_id;",
      "SELECT warehouses.warehouse_name, SUM(inventory.quantity) AS total_quantity FROM warehouses LEFT JOIN inventory ON warehouses.warehouse_id = inventory.warehouse_id GROUP BY warehouses.warehouse_name;",
      "SELECT product_name, COUNT(*) AS total_restocks FROM products INNER JOIN restocking_orders ON products.product_id = restocking_orders.product_id WHERE restocking_orders.status = 'pending' GROUP BY product_name;",
      "SELECT product_id, warehouse_id, MAX(quantity) AS max_quantity FROM inventory GROUP BY product_id, warehouse_id;",
      "SELECT product_name, warehouse_name, quantity FROM products INNER JOIN inventory ON products.product_id = inventory.product_id INNER JOIN warehouses ON inventory.warehouse_id = warehouses.warehouse_id WHERE quantity < 10;",
      "SELECT warehouse_id, location FROM warehouses WHERE warehouse_id IN (SELECT warehouse_id FROM inventory GROUP BY warehouse_id HAVING SUM(quantity) < 100);",
      "SELECT * FROM products WHERE product_name LIKE '%shirt%' OR product_name LIKE '%hat%' OR product_name LIKE '%shoes%';",
      "SELECT warehouse_name, COUNT(*) AS total_products FROM warehouses LEFT JOIN inventory ON warehouses.warehouse_id = inventory.warehouse_id GROUP BY warehouse_name HAVING total_products < 5;",
      "SELECT product_name, description, price FROM products WHERE product_id IN (SELECT product_id FROM inventory WHERE quantity > 0);",
      "SELECT product_id, order_date, status FROM restocking_orders ORDER BY order_date DESC LIMIT 10;",
      "SELECT warehouse_name, AVG(quantity) AS avg_quantity FROM warehouses INNER JOIN inventory ON warehouses.warehouse_id = inventory.warehouse_id GROUP BY warehouse_name HAVING avg_quantity > 50;",
      "SELECT product_name, SUM(quantity) AS total_quantity FROM products INNER JOIN inventory ON products.product_id = inventory.product_id GROUP BY product_name HAVING total_quantity > 1000;",
      "SELECT product_name, SUM(quantity) AS total_quantity FROM products INNER JOIN inventory ON products.product_id = inventory.product_id INNER JOIN restocking_orders ON products.product_id = restocking_orders.product_id GROUP BY product_name HAVING total_quantity < 100;",
      "SELECT warehouse_id, COUNT(DISTINCT product_id) AS unique_products FROM inventory GROUP BY warehouse_id HAVING unique_products > 5;",
      "SELECT product_id, SUM(quantity) AS total_quantity FROM inventory GROUP BY product_id HAVING total_quantity <= 50;",
      "SELECT product_name, COUNT(*) AS total_orders FROM products INNER JOIN restocking_orders ON products.product_id = restocking_orders.product_id GROUP BY product_name HAVING total_orders >= 3;",
      "SELECT warehouse_id, location, COUNT(*) AS total_restock_orders FROM warehouses INNER JOIN restocking_orders ON warehouses.warehouse_id = restocking_orders.warehouse_id GROUP BY warehouse_id HAVING total_restock_orders > 0;",
      "SELECT warehouse_id, SUM(quantity) AS total_quantity FROM inventory GROUP BY warehouse_id HAVING total_quantity < 1000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT product_id, product_name, quantity FROM products;",
      "SELECT warehouse_name, location FROM warehouses;",
      "SELECT * FROM restocking_history;",
      "SELECT product_id, warehouse_id, restock_date FROM restocking_history;",
      "SELECT inventory_id, product_id, quantity_available FROM inventory_levels;",
      "SELECT * FROM suppliers;",
      "SELECT supplier_id, supplier_name FROM suppliers;",
      "SELECT product_id, warehouse_id, quantity_available FROM inventory_levels WHERE quantity_available > 0;",
      "SELECT supplier_name, contact_person FROM suppliers WHERE contact_person IS NOT NULL;",
      "SELECT warehouse_id, quantity FROM products WHERE quantity < 10;",
      "SELECT product_id, warehouse_id FROM inventory_levels WHERE quantity_available < 50;",
      "SELECT * FROM products WHERE warehouse_id = 1;",
      "SELECT supplier_name, contact_number FROM suppliers WHERE supplier_id = 3;",
      "SELECT product_name, quantity FROM products WHERE warehouse_id = 2;",
      "SELECT * FROM products ORDER BY quantity DESC;",
      "SELECT product_id, warehouse_id FROM inventory_levels WHERE quantity_available > 100;",
      "SELECT product_name, warehouse_name, location FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id;",
      "SELECT supplier_id, supplier_name, contact_person, contact_number FROM suppliers;",
      "SELECT restock_id, product_id, warehouse_id, quantity_restocked FROM restocking_history WHERE quantity_restocked > 50;",
      "SELECT * FROM products;",
      "SELECT product_name, quantity FROM products WHERE warehouse_id = 2;",
      "SELECT product_name, quantity, warehouse_name FROM products JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id;",
      "SELECT product_name, quantity, restock_date FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id;",
      "SELECT product_name, warehouse_name, restock_date FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id;",
      "SELECT product_name, warehouse_name, restock_date FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id WHERE quantity_available > 50;",
      "SELECT supplier_name, contact_person FROM suppliers WHERE contact_number = '123-456-7890';",
      "SELECT product_name, quantity_available FROM products JOIN inventory_levels ON products.product_id = inventory_levels.product_id WHERE warehouse_id = 3;",
      "SELECT product_name, warehouse_name, quantity_restocked FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id WHERE restock_date > '2022-01-01';",
      "SELECT product_name, quantity, SUM(quantity_restocked) AS total_restocked FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id GROUP BY products.product_name;",
      "SELECT warehouse_name, SUM(quantity_available) AS total_available FROM inventory_levels JOIN warehouses ON inventory_levels.warehouse_id = warehouses.warehouse_id GROUP BY warehouses.warehouse_name;",
      "SELECT supplier_name, COUNT(*) AS total_products FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY suppliers.supplier_name;",
      "SELECT product_name, warehouse_name, quantity_available FROM products JOIN inventory_levels ON products.product_id = inventory_levels.product_id WHERE quantity_available < 10;",
      "SELECT product_name, warehouse_name, restock_date, quantity_restocked FROM products JOIN restocking_history ON products.product_id = restocking_history.product_id JOIN warehouses ON products.warehouse_id = warehouses.warehouse_id WHERE restock_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT supplier_name, contact_person, COUNT(*) AS total_products FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY suppliers.supplier_name, suppliers.contact_person;",
      "SELECT warehouse_name, SUM(quantity_available) AS total_available FROM inventory_levels JOIN warehouses ON inventory_levels.warehouse_id = warehouses.warehouse_id WHERE location = 'New York';",
      "SELECT product_name, warehouse_name, quantity_available FROM products JOIN inventory_levels ON products.product_id = inventory_levels.product_id ORDER BY quantity_available DESC;",
      "SELECT supplier_name, AVG(contact_number) AS avg_contact_number_length FROM suppliers WHERE contact_number IS NOT NULL;",
      "SELECT product_name, warehouse_name, quantity_available FROM products JOIN inventory_levels ON products.product_id = inventory_levels.product_id WHERE warehouse_id IN (1, 2, 3);",
      "SELECT supplier_name, contact_person, MAX(contact_number) AS max_contact_number FROM suppliers WHERE contact_person IS NOT NULL;",
      "SELECT product_name, warehouse_name, quantity_available FROM products JOIN inventory_levels ON products.product_id = inventory_levels.product_id GROUP BY products.product_name HAVING SUM(quantity_available) > 100;"
    ]
  }
]