[
  {
    "statements": [
      "SELECT * FROM CustomerPurchases;",
      "SELECT customer_id, purchase_amount FROM CustomerPurchases;",
      "SELECT DISTINCT purchase_category FROM CustomerPurchases;",
      "SELECT * FROM CustomerPurchases WHERE customer_id = 100;",
      "SELECT * FROM CustomerPurchases WHERE purchase_date = '2022-01-15';",
      "SELECT * FROM CustomerPurchases WHERE purchase_amount > 100.00;",
      "SELECT * FROM CustomerPurchases WHERE purchase_category = 'Electronics';",
      "SELECT AVG(purchase_amount) AS avg_amount FROM CustomerPurchases;",
      "SELECT MAX(purchase_amount) AS max_amount FROM CustomerPurchases;",
      "SELECT COUNT(*) AS total_purchases FROM CustomerPurchases;",
      "SELECT customer_id, COUNT(*) AS total_purchases FROM CustomerPurchases GROUP BY customer_id;",
      "SELECT purchase_category, SUM(purchase_amount) AS total_spent FROM CustomerPurchases GROUP BY purchase_category;",
      "SELECT * FROM CustomerPurchases ORDER BY purchase_date DESC;",
      "SELECT * FROM CustomerPurchases ORDER BY purchase_amount DESC;",
      "SELECT * FROM CustomerPurchases WHERE customer_id = 200 AND purchase_category = 'Clothing';",
      "SELECT * FROM CustomerPurchases WHERE purchase_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM CustomerPurchases WHERE purchase_category IN ('Electronics', 'Books');",
      "SELECT * FROM CustomerPurchases LIMIT 10 OFFSET 5;",
      "SELECT * FROM CustomerPurchases WHERE purchase_category LIKE '%food%';",
      "SELECT * FROM CustomerPurchases WHERE purchase_amount = (SELECT MAX(purchase_amount) FROM CustomerPurchases);",
      "SELECT * FROM CustomerPurchases WHERE purchase_amount > 1000",
      "SELECT customer_id, purchase_category FROM CustomerPurchases WHERE purchase_date BETWEEN '2021-01-01' AND '2021-06-30'",
      "SELECT DISTINCT purchase_category FROM CustomerPurchases ORDER BY purchase_amount DESC",
      "SELECT customer_id, SUM(purchase_amount) AS total_amount FROM CustomerPurchases GROUP BY customer_id HAVING total_amount > 5000",
      "SELECT customer_id, COUNT(*) AS purchase_count FROM CustomerPurchases GROUP BY customer_id HAVING purchase_count >= 3",
      "SELECT * FROM CustomerPurchases WHERE customer_id IN (SELECT customer_id FROM OtherTable)",
      "SELECT customer_id, AVG(purchase_amount) AS avg_amount FROM CustomerPurchases WHERE purchase_category = 'Electronics' GROUP BY customer_id HAVING avg_amount > 200",
      "SELECT customer_id, purchase_category, purchase_date FROM CustomerPurchases WHERE purchase_amount BETWEEN 100 AND 500",
      "SELECT customer_id, MAX(purchase_amount) AS max_amount FROM CustomerPurchases GROUP BY customer_id ORDER BY max_amount DESC",
      "SELECT customer_id, purchase_amount FROM CustomerPurchases WHERE purchase_amount > (SELECT AVG(purchase_amount) FROM CustomerPurchases)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers WHERE total_purchases > 10;",
      "SELECT first_name, last_name, email FROM customers WHERE first_name = 'John';",
      "SELECT customer_id, email FROM customers WHERE total_purchases < 5;",
      "SELECT SUM(total_purchases) FROM customers;",
      "SELECT * FROM customers ORDER BY last_name DESC;",
      "SELECT first_name, last_name FROM customers WHERE total_purchases BETWEEN 5 AND 10;",
      "SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%';",
      "SELECT customer_id, total_amount FROM purchases;",
      "SELECT * FROM purchases WHERE total_amount > 100;",
      "SELECT customer_id, MAX(total_amount) FROM purchases GROUP BY customer_id;",
      "SELECT first_name, last_name, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT first_name, total_amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE total_amount > 50;",
      "SELECT first_name, last_name, total_amount FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT first_name, last_name, total_amount FROM customers RIGHT JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT first_name, last_name, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT first_name, last_name, total_amount FROM customers JOIN purchases USING(customer_id);",
      "SELECT first_name, last_name, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id ORDER BY total_amount DESC;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT customer_id, first_name, COUNT(*) AS purchase_count FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id;",
      "SELECT first_name, last_name, email FROM customers WHERE total_purchases > 100",
      "SELECT MAX(total_amount), MIN(total_amount), AVG(total_amount) FROM purchases",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM purchases WHERE total_amount > 1000)",
      "SELECT COUNT(*) FROM purchases WHERE total_amount BETWEEN 500 AND 1000",
      "SELECT * FROM purchases WHERE purchase_date BETWEEN '2022-01-01' AND '2022-03-31'",
      "SELECT customer_id, COUNT(*) AS purchase_count FROM purchases GROUP BY customer_id HAVING COUNT(*) > 5",
      "SELECT first_name, last_name, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id",
      "SELECT first_name, last_name, SUM(total_amount) AS total_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_id",
      "SELECT * FROM customers WHERE first_name LIKE 'A%'",
      "SELECT * FROM customers WHERE last_name LIKE '%son'",
      "SELECT first_name, last_name, total_purchases, total_amount FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id",
      "SELECT customer_id, COUNT(*) AS purchase_count, AVG(total_amount) AS avg_spent FROM purchases GROUP BY customer_id ORDER BY avg_spent DESC",
      "SELECT DISTINCT email FROM customers",
      "SELECT * FROM customers WHERE customer_id = (SELECT MAX(customer_id) FROM customers)",
      "SELECT first_name, last_name FROM customers WHERE total_purchases = (SELECT MAX(total_purchases) FROM customers)",
      "SELECT * FROM customers WHERE customer_id = (SELECT customer_id FROM purchases WHERE total_amount = (SELECT MAX(total_amount) FROM purchases))",
      "SELECT first_name, last_name, AVG(total_amount) AS avg_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_id HAVING avg_spent > 500",
      "SELECT first_name, last_name, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE total_amount > (SELECT AVG(total_amount) FROM purchases)",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM purchases GROUP BY customer_id ORDER BY total_spent DESC",
      "SELECT first_name, last_name, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE total_amount = (SELECT MAX(total_amount) FROM purchases)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers WHERE customer_id = 1;",
      "SELECT COUNT(*) FROM purchases WHERE customer_id = 1;",
      "SELECT product_name, price FROM purchases WHERE price > 100;",
      "SELECT * FROM marketing_campaigns WHERE start_date > '2022-01-01';",
      "SELECT DISTINCT target_audience FROM marketing_campaigns;",
      "SELECT MAX(price) FROM purchases;",
      "SELECT MIN(price) FROM purchases WHERE customer_id = 2;",
      "SELECT AVG(price) FROM purchases WHERE product_name = 'Laptop';",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_name LIKE '%Smith%';",
      "SELECT campaign_name, start_date, end_date FROM marketing_campaigns WHERE end_date < '2022-06-30';",
      "SELECT COUNT(*) FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT AVG(price) FROM purchases WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, email FROM customers ORDER BY customer_name ASC;",
      "SELECT campaign_name FROM marketing_campaigns WHERE target_audience = 'New Customers';",
      "SELECT campaign_name, start_date, end_date FROM marketing_campaigns ORDER BY start_date DESC;",
      "SELECT customer_id, customer_name, email FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT SUM(price) FROM purchases WHERE purchase_date >= '2022-03-01' AND purchase_date < '2022-06-01';",
      "SELECT campaign_name, target_audience FROM marketing_campaigns WHERE start_date >= '2022-07-01';",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, email FROM customers WHERE phone_number LIKE '%555%';",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customers.customer_id = 1;",
      "SELECT customer_name, product_name, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE price > 100;",
      "SELECT DISTINCT customer_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.price > 50;",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date > '2022-01-01';",
      "SELECT customer_name, product_name, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customers.customer_name LIKE 'A%';",
      "SELECT AVG(price) AS avg_price FROM purchases;",
      "SELECT customer_name, COUNT(*) AS total_purchases FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
      "SELECT customer_name, SUM(price) AS total_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
      "SELECT customer_name, MAX(price) AS max_purchase FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
      "SELECT COUNT(*) AS total_campaigns FROM marketing_campaigns WHERE start_date >= '2022-01-01';",
      "SELECT campaign_name, target_audience, start_date, end_date FROM marketing_campaigns WHERE end_date >= '2022-12-31';",
      "SELECT customer_name, campaign_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN marketing_campaigns ON purchases.product_name = marketing_campaigns.target_audience;",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.price > (SELECT AVG(price) FROM purchases);",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date >= '2022-01-01' AND purchases.purchase_date <= '2022-06-30';",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date BETWEEN '2022-01-01' AND '2022-06-30' AND price > 75;",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date BETWEEN '2022-01-01' AND '2022-06-30' ORDER BY price DESC;",
      "SELECT customer_name, purchase_date, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY customers.customer_id HAVING SUM(price) > 2000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date FROM orders;",
      "SELECT * FROM products;",
      "SELECT product_name, unit_price FROM products;",
      "SELECT * FROM purchases;",
      "SELECT customer_id, product_id, quantity FROM purchases;",
      "SELECT customer_name, customer_email, total_amount FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, product_name, quantity FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id INNER JOIN products ON purchases.product_id = products.product_id;",
      "SELECT customer_id, customer_name, total_amount FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_id, product_id, quantity FROM purchases WHERE purchase_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT customer_name, product_name, quantity FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id INNER JOIN products ON purchases.product_id = products.product_id WHERE quantity > 5;",
      "SELECT customer_email, order_date FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date > '2022-01-01';",
      "SELECT customer_name, product_id, quantity FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE product_id IN (1, 2, 3);",
      "SELECT customer_name, product_name, quantity FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id INNER JOIN products ON purchases.product_id = products.product_id WHERE quantity < 10;",
      "SELECT customer_name, customer_email, total_amount FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount > 100;",
      "SELECT customer_name, product_name, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id INNER JOIN products ON purchases.product_id = products.product_id WHERE purchase_date < '2022-01-01';",
      "SELECT customer_id, product_id, quantity FROM purchases WHERE quantity > 10 AND purchase_date > '2022-01-01';",
      "SELECT customer_name, product_name, total_amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id INNER JOIN products ON purchases.product_id = products.product_id INNER JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount < 200;",
      "SELECT customer_name, product_name, quantity FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id INNER JOIN products ON purchases.product_id = products.product_id WHERE quantity = 10;",
      "SELECT customers.customer_name, orders.order_date, products.product_name, purchases.quantity\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE customers.customer_id = 1;",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE orders.total_amount > 1000;",
      "SELECT customers.customer_name, orders.order_date, products.product_name, purchases.quantity\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE orders.order_date >= '2022-01-01';",
      "SELECT customers.customer_name, orders.order_date, products.product_name, purchases.quantity\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nORDER BY orders.order_date DESC, purchases.quantity ASC;",
      "SELECT customers.customer_name, orders.order_date, products.product_name, purchases.quantity\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nGROUP BY customers.customer_name;",
      "SELECT customers.customer_name, SUM(purchases.quantity) AS total_quantity\nFROM customers\nJOIN purchases ON customers.customer_id = purchases.customer_id\nGROUP BY customers.customer_name\nHAVING total_quantity > 10;",
      "SELECT customers.customer_name, COUNT(orders.order_id) AS num_orders\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nGROUP BY customers.customer_name\nHAVING num_orders >= 5;",
      "SELECT customers.customer_name, AVG(orders.total_amount) AS avg_order_amount\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nGROUP BY customers.customer_name\nORDER BY avg_order_amount DESC;",
      "SELECT customers.customer_name, MAX(orders.total_amount) AS max_order_amount\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nGROUP BY customers.customer_name\nORDER BY max_order_amount DESC;",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id;",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE orders.order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE products.unit_price > 50;",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE customers.customer_id % 2 = 0;",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE customers.customer_name LIKE 'A%';",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE purchases.purchase_date = '2022-05-15';",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE customers.customer_id IN (1, 2, 3);",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nWHERE products.product_name IN ('Product A', 'Product B');",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nLIMIT 10;",
      "SELECT customers.customer_name, orders.order_date, purchases.quantity, products.unit_price, (purchases.quantity * products.unit_price) AS total_cost\nFROM customers\nJOIN orders ON customers.customer_id = orders.customer_id\nJOIN purchases ON customers.customer_id = purchases.customer_id\nJOIN products ON purchases.product_id = products.product_id\nOFFSET 5\nLIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email, phone_number FROM customers;",
      "SELECT customer_name, address FROM customers WHERE address LIKE '%Street%';",
      "SELECT * FROM orders WHERE order_date >= '2022-01-01';",
      "SELECT order_id, total_amount FROM orders WHERE total_amount > 1000;",
      "SELECT product_name, price FROM products WHERE category = 'Electronics';",
      "SELECT * FROM products WHERE price BETWEEN 50 AND 100;",
      "SELECT product_name, category FROM products WHERE category IN ('Clothing', 'Shoes');",
      "SELECT * FROM purchases WHERE quantity >= 10;",
      "SELECT campaign_name, start_date, end_date FROM campaigns WHERE start_date <= '2022-06-30' AND end_date >= '2022-06-30';",
      "SELECT customer_name, email, phone_number, address FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM orders WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT * FROM products JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT product_name, category, quantity FROM products JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT * FROM orders JOIN purchases ON orders.order_id = purchases.order_id;",
      "SELECT customer_name, product_name, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN purchases ON orders.order_id = purchases.order_id JOIN products ON purchases.product_id = products.product_id;",
      "SELECT * FROM customers UNION SELECT * FROM orders;",
      "SELECT * FROM products INTERSECT SELECT * FROM purchases;",
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426655440000';",
      "SELECT * FROM orders WHERE order_date > '2022-01-01';",
      "SELECT customers.customer_name, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT products.product_name, products.price, purchases.quantity FROM products JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT customers.customer_name, orders.total_amount, purchases.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN purchases ON orders.order_id = purchases.order_id;",
      "SELECT customers.customer_name, products.product_name, purchases.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN purchases ON orders.order_id = purchases.order_id JOIN products ON purchases.product_id = products.product_id;",
      "SELECT customers.customer_name, orders.total_amount, products.product_name, purchases.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN purchases ON orders.order_id = purchases.order_id JOIN products ON purchases.product_id = products.product_id;",
      "SELECT campaign_name, start_date, end_date FROM campaigns;",
      "SELECT * FROM campaigns WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customers.customer_name, campaigns.campaign_name FROM customers, campaigns;",
      "SELECT customers.customer_name, campaigns.campaign_name FROM customers CROSS JOIN campaigns;",
      "SELECT customers.customer_name, campaigns.campaign_name FROM customers INNER JOIN campaigns ON customers.customer_id = campaigns.campaign_id;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT category, AVG(price) AS avg_price FROM products GROUP BY category;",
      "SELECT customer_name, count(order_id) AS num_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, sum(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount > 100 GROUP BY customer_name HAVING total_spent > 500;",
      "SELECT customer_name, AVG(price) AS avg_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN purchases ON orders.order_id = purchases.order_id JOIN products ON purchases.product_id = products.product_id GROUP BY customer_name;",
      "SELECT customer_name, MAX(total_amount) AS highest_purchase FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING MAX(total_amount) > 500;",
      "SELECT customer_name, count(DISTINCT order_id) AS num_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING count(DISTINCT order_id) > 2;"
    ]
  }
]