[
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, name FROM customers;",
      "SELECT DISTINCT name FROM customers;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE name = 'John Doe';",
      "SELECT * FROM customers WHERE address LIKE '%Street%';",
      "SELECT * FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT * FROM customers WHERE phone_number LIKE '555%';",
      "SELECT * FROM customers WHERE address ILIKE '%avenue%';",
      "SELECT name, phone_number FROM customers WHERE customer_id > 10;",
      "SELECT * FROM customers WHERE name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT * FROM customers WHERE address NOT LIKE '%P.O. Box%';",
      "SELECT * FROM customers ORDER BY name ASC;",
      "SELECT * FROM customers ORDER BY customer_id DESC;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT AVG(customer_id) FROM customers;",
      "SELECT MAX(customer_id) FROM customers;",
      "SELECT MIN(customer_id) FROM customers;",
      "SELECT SUM(customer_id) FROM customers;",
      "SELECT * FROM customers LIMIT 5 OFFSET 10;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE name LIKE 'John%';",
      "SELECT * FROM customers WHERE address LIKE '%Street%';",
      "SELECT customer_id, name FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT customer_id, name, address FROM customers WHERE phone_number IS NULL;",
      "SELECT * FROM customers WHERE customer_id IN (1, 2, 3);",
      "SELECT * FROM customers WHERE address != '123 Main Street';",
      "SELECT customer_id, name, address FROM customers WHERE phone_number LIKE '+1%';",
      "SELECT * FROM customers ORDER BY name ASC;",
      "SELECT * FROM customers ORDER BY address DESC;",
      "SELECT * FROM customers LIMIT 10;",
      "SELECT * FROM customers OFFSET 5;",
      "SELECT * FROM customers WHERE customer_id > 100 AND address IS NOT NULL;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT AVG(customer_id) FROM customers;",
      "SELECT MAX(customer_id) FROM customers;",
      "SELECT MIN(customer_id) FROM customers;",
      "SELECT customer_id, COUNT(*) FROM customers GROUP BY customer_id;",
      "SELECT name, COUNT(*) FROM customers GROUP BY name HAVING COUNT(*) > 1;",
      "SELECT customer_id, name FROM customers WHERE address LIKE '%Ave%' ORDER BY customer_id DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, address FROM customers;",
      "SELECT customer_id, name, address FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders;",
      "SELECT order_id, customer_id, order_date FROM orders;",
      "SELECT order_id, total_amount FROM orders WHERE order_date = '2022-01-01';",
      "SELECT customers.name, orders.order_date FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT orders.total_amount, customers.contact_number FROM orders INNER JOIN customers ON orders.customer_id = customers.customer_id;",
      "SELECT * FROM customers WHERE name LIKE '%John%';",
      "SELECT * FROM orders WHERE total_amount > 1000;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT SUM(total_amount) AS total_sales FROM orders;",
      "SELECT AVG(total_amount) AS avg_amount FROM orders;",
      "SELECT MAX(total_amount) AS max_amount FROM orders;",
      "SELECT MIN(total_amount) AS min_amount FROM orders;",
      "SELECT customer_id, COUNT(*) AS order_count FROM orders GROUP BY customer_id;",
      "SELECT customer_id, AVG(total_amount) AS avg_amount FROM orders GROUP BY customer_id;",
      "SELECT customer_id, MAX(total_amount) AS max_amount FROM orders GROUP BY customer_id;",
      "SELECT customer_id, MIN(total_amount) AS min_amount FROM orders GROUP BY customer_id;",
      "SELECT customer_id, order_date, SUM(total_amount) AS total_spent FROM orders GROUP BY customer_id, order_date;",
      "SELECT * FROM customers",
      "SELECT customer_id, name, address FROM customers WHERE name LIKE 'A%'",
      "SELECT customer_id, name, address, contact_number FROM customers WHERE address LIKE '%Street%'",
      "SELECT o.order_id, o.order_date, o.total_amount, c.name FROM orders o JOIN customers c ON o.customer_id = c.customer_id",
      "SELECT c.customer_id, c.name, SUM(o.total_amount) AS total_spent FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id",
      "SELECT c.name, c.address, COUNT(o.order_id) AS total_orders FROM customers c LEFT JOIN orders o ON c.customer_id = c.customer_id GROUP BY c.name, c.address HAVING total_orders > 5",
      "SELECT c.name, MAX(o.total_amount) AS largest_order FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name ORDER BY largest_order DESC",
      "SELECT c.name, MIN(o.total_amount) AS smallest_order FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name ORDER BY smallest_order ASC",
      "SELECT c.name, AVG(o.total_amount) AS avg_order_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name ORDER BY avg_order_amount DESC",
      "SELECT c.name, COUNT(o.order_id) AS total_orders, AVG(o.total_amount) AS avg_amount_per_order FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name HAVING total_orders > 3 ORDER BY avg_amount_per_order DESC",
      "SELECT c1.name AS customer_name, c2.name AS contact_name FROM customers c1, customers c2 WHERE c1.address = c2.address AND c1.customer_id != c2.customer_id",
      "SELECT c.name, MAX(o.total_amount) - MIN(o.total_amount) AS order_amount_range FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name ORDER BY order_amount_range DESC",
      "SELECT c.name, DATEDIFF(CURRENT_DATE, MAX(o.order_date)) AS days_since_last_order FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name ORDER BY days_since_last_order ASC",
      "SELECT c.name, AVG(DATEDIFF(o.order_date, CURRENT_DATE)) AS avg_days_to_order FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name ORDER BY avg_days_to_order DESC",
      "SELECT DISTINCT c.name, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id ORDER BY o.order_date DESC",
      "SELECT c.name, COUNT(o.order_id) AS total_orders, SUM(o.total_amount) AS total_spent FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name, c.address"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, name, address FROM customers;",
      "SELECT customer_id, name, address, contact_number FROM customers;",
      "SELECT * FROM orders;",
      "SELECT order_id, customer_id, order_date, total_amount FROM orders;",
      "SELECT * FROM order_items;",
      "SELECT order_item_id, order_id, product_id, quantity, price_per_unit FROM order_items;",
      "SELECT customers.name, orders.order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.name, orders.order_date, order_items.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT customers.name, orders.order_date, order_items.quantity, order_items.price_per_unit FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT customers.name AS customer_name, orders.order_date AS order_date, order_items.quantity AS quantity, order_items.price_per_unit AS unit_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT customers.name AS customer_name, orders.order_date AS order_date, SUM(order_items.quantity) AS total_quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customers.name, orders.order_date;",
      "SELECT customers.name AS customer_name, COUNT(orders.order_id) AS number_of_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name AS customer_name, AVG(orders.total_amount) AS average_order_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name AS customer_name, MAX(orders.total_amount) AS max_order_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name AS customer_name, MIN(orders.total_amount) AS min_order_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name AS customer_name, COUNT(order_items.product_id) AS total_products_ordered FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customers.name;",
      "SELECT customers.name AS customer_name, SUM(order_items.quantity * order_items.price_per_unit) AS total_order_value FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customers.name;",
      "SELECT customers.name AS customer_name, AVG(order_items.price_per_unit) AS average_item_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customers.name;",
      "SELECT customers.name AS customer_name, MAX(order_items.price_per_unit) AS max_item_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customers.name;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT name, address FROM customers WHERE customer_id = 2;",
      "SELECT customer_id, name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_id, name, SUM(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_id;",
      "SELECT customer_id, name, order_id, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount > 100;",
      "SELECT customer_id, name, order_id, order_date, total_amount, price_per_unit FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT o.order_id, c.name AS customer_name, oi.product_id, oi.quantity, oi.price_per_unit FROM orders o JOIN customers c ON o.customer_id = c.customer_id JOIN order_items oi ON o.order_id = oi.order_id;",
      "SELECT * FROM orders ORDER BY total_amount DESC;",
      "SELECT order_id, customer_id, order_date, total_amount FROM orders WHERE customer_id IN (SELECT customer_id FROM customers WHERE address = 'New York');",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM orders WHERE order_date >= '2022-01-01' GROUP BY customer_id HAVING total_spent > 500;",
      "SELECT customer_id, name, address, total_spent FROM customers LEFT JOIN (SELECT customer_id, SUM(total_amount) AS total_spent FROM orders GROUP BY customer_id) AS spent ON customers.customer_id = spent.customer_id;",
      "SELECT * FROM orders WHERE total_amount = (SELECT MAX(total_amount) FROM orders);",
      "SELECT customer_id, name, order_id, order_date FROM customers FULL JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_id, name, order_id, quantity, price_per_unit FROM customers JOIN orders USING (customer_id) JOIN order_items USING (order_id);",
      "SELECT c.customer_id, c.name, o.order_id, oi.quantity, oi.price_per_unit FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id WHERE c.customer_id = 3;",
      "SELECT customer_id, name, SUM(total_amount) AS total_spent FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_id;",
      "SELECT o.order_id, c.name AS customer_name, oi.product_id, oi.quantity, oi.price_per_unit FROM orders o JOIN customers c ON o.customer_id = c.customer_id JOIN order_items oi ON o.order_id = oi.order_id WHERE oi.quantity > 1;",
      "SELECT * FROM customers WHERE name LIKE '%John%';",
      "SELECT customer_id, name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT customer_id, name, SUM(quantity) AS total_items FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_address FROM customers;",
      "SELECT customer_id, customer_name, customer_phone FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date FROM orders WHERE total_amount > 100;",
      "SELECT * FROM products;",
      "SELECT product_name, product_price FROM products;",
      "SELECT * FROM order_items;",
      "SELECT order_id, product_id, quantity FROM order_items;",
      "SELECT customer_name, order_date, product_name, quantity, item_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name;",
      "SELECT product_name, AVG(item_price) AS avg_item_price FROM products p JOIN order_items oi ON p.product_id = oi.product_id GROUP BY product_name;",
      "SELECT customer_name, COUNT(*) AS order_count FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name HAVING COUNT(*) > 1;",
      "SELECT customer_name, MAX(total_amount) AS max_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name;",
      "SELECT customer_name, MIN(total_amount) AS min_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(*) AS order_count FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name HAVING COUNT(*) = 0;",
      "SELECT customer_name, AVG(total_amount) AS avg_spent FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name HAVING AVG(total_amount) < 50;",
      "SELECT customer_name, SUM(item_price) AS total_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id GROUP BY customer_name ORDER BY total_price DESC;",
      "SELECT customer_name, order_date, product_name, quantity, item_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE item_price > 10;",
      "SELECT customer_name, order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE EXTRACT(MONTH FROM order_date) = 7;",
      "SELECT customer_name, customer_address FROM customers;",
      "SELECT * FROM orders WHERE total_amount > 1000;",
      "SELECT product_name, product_price FROM products WHERE product_price < 50.00;",
      "SELECT customer_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT order_id, total_amount FROM orders ORDER BY total_amount DESC;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, order_date, product_name, item_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id;",
      "SELECT customer_name, COUNT(DISTINCT order_id) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(total_amount) AS average_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING AVG(total_amount) > 500;",
      "SELECT customer_name, MAX(total_amount) AS highest_order_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name ORDER BY highest_order_amount DESC;",
      "SELECT customer_name, MIN(total_amount) AS lowest_order_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name ORDER BY lowest_order_amount ASC;",
      "SELECT product_name, SUM(quantity) AS total_sold FROM products JOIN order_items ON products.product_id = order_items.product_id GROUP BY product_name;",
      "SELECT customer_name, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY customer_name;",
      "SELECT customer_name, AVG(item_price) AS average_item_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_name;",
      "SELECT customer_name, MAX(item_price) AS highest_item_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_name ORDER BY highest_item_price DESC;",
      "SELECT customer_name, MIN(item_price) AS lowest_item_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_name ORDER BY lowest_item_price ASC;",
      "SELECT DISTINCT customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE product_price > 100.00;",
      "SELECT customer_name, COUNT(order_id) AS total_orders, SUM(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING COUNT(order_id) >= 5;",
      "SELECT customers.customer_name, orders.order_date, products.product_name, order_items.item_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE order_date BETWEEN '2021-01-01' AND '2021-06-30';",
      "SELECT customer_name, MAX(item_price) - MIN(item_price) AS price_range FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_name;",
      "SELECT customer_name, SUM(quantity*item_price) AS total_revenue FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customer_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, customer_name, address, contact_number FROM customers;",
      "SELECT customer_name, address FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders;",
      "SELECT order_id, customer_id, order_date, total_amount FROM orders;",
      "SELECT order_id, total_amount FROM orders WHERE customer_id = 1;",
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products;",
      "SELECT * FROM order_items;",
      "SELECT order_id, product_id, quantity FROM order_items;",
      "SELECT * FROM addresses;",
      "SELECT customer_id, street_address, city, postal_code FROM addresses;",
      "SELECT customer_name, city FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id;",
      "SELECT customer_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT product_name, quantity FROM products JOIN order_items ON products.product_id = order_items.product_id;",
      "SELECT customer_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT customer_name, city, postal_code FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id WHERE city = 'New York';",
      "SELECT customer_name, address FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT product_name, price FROM products ORDER BY price DESC;",
      "SELECT * FROM customers;",
      "SELECT customer_name, address FROM customers WHERE customer_id = 1;",
      "SELECT c.customer_name, o.order_date, oi.product_id, oi.quantity, p.product_name FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id;",
      "SELECT c.customer_name, a.street_address, a.city, a.postal_code FROM customers c JOIN addresses a ON c.customer_id = a.customer_id;",
      "SELECT c.customer_name, o.order_date, SUM(oi.quantity * p.price) AS total_cost FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name, o.order_date;",
      "SELECT p.product_name, AVG(oi.quantity) AS avg_quantity FROM products p JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_name;",
      "SELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, MAX(p.price) AS max_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, MIN(p.price) AS min_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, COUNT(DISTINCT o.order_id) AS unique_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, o.order_date, p.product_name, oi.quantity, p.price, oi.quantity * p.price AS item_total FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id;",
      "SELECT c.customer_name, o.order_date, SUM(oi.quantity * p.price) AS total_cost FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE o.order_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY c.customer_name, o.order_date;",
      "SELECT c.customer_name, COUNT(oi.quantity) AS total_items FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_name;",
      "SELECT a.city, COUNT(c.customer_id) AS total_customers FROM addresses a JOIN customers c ON a.customer_id = c.customer_id GROUP BY a.city;",
      "SELECT c.customer_name, a.city, SUM(p.price) AS total_spent FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name, a.city;",
      "SELECT c.customer_name, AVG(p.price) AS avg_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, COUNT(oi.quantity) AS total_items FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_name HAVING COUNT(oi.quantity) > 5;",
      "SELECT c.customer_name, COUNT(DISTINCT a.city) AS unique_cities FROM customers c JOIN addresses a ON c.customer_id = a.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, MAX(p.price) - MIN(p.price) AS price_range FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, AVG(oi.quantity * p.price) AS avg_order_cost FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY c.customer_name;"
    ]
  }
]