[
  {
    "statements": [
      "SELECT * FROM sales_data;",
      "SELECT product_name, unit_price FROM sales_data;",
      "SELECT product_id, product_name, quantity_sold FROM sales_data;",
      "SELECT * FROM sales_data WHERE unit_price > 50;",
      "SELECT AVG(unit_price) AS average_price FROM sales_data;",
      "SELECT MAX(quantity_sold) AS max_quantity_sold FROM sales_data;",
      "SELECT SUM(total_sales) AS total_sales_amount FROM sales_data;",
      "SELECT * FROM sales_data ORDER BY unit_price DESC;",
      "SELECT * FROM sales_data WHERE quantity_sold > 100 ORDER BY total_sales DESC;",
      "SELECT COUNT(*) AS total_records FROM sales_data;",
      "SELECT product_id, product_name, unit_price * quantity_sold AS total_revenue FROM sales_data;",
      "SELECT product_name, quantity_sold, total_sales FROM sales_data WHERE product_id = 5;",
      "SELECT product_id, unit_price, total_sales FROM sales_data WHERE product_name LIKE 'A%';",
      "SELECT * FROM sales_data WHERE unit_price BETWEEN 20 AND 50;",
      "SELECT product_id, product_name, quantity_sold FROM sales_data WHERE total_sales > 500;",
      "SELECT * FROM sales_data WHERE quantity_sold = (SELECT MAX(quantity_sold) FROM sales_data);",
      "SELECT AVG(unit_price) AS average_price, SUM(quantity_sold) AS total_quantity_sold FROM sales_data;",
      "SELECT * FROM sales_data WHERE product_name = 'Product A';",
      "SELECT product_name, quantity_sold, total_sales FROM sales_data WHERE unit_price < 30;",
      "SELECT * FROM sales_data WHERE product_id IN (1, 3, 5);",
      "SELECT * FROM sales_data WHERE unit_price > 100",
      "SELECT product_id, product_name, total_sales FROM sales_data WHERE quantity_sold > 10",
      "SELECT product_name, unit_price, total_sales FROM sales_data WHERE quantity_sold BETWEEN 5 AND 20",
      "SELECT product_id, product_name FROM sales_data WHERE total_sales > 1000 AND unit_price < 50",
      "SELECT COUNT(*) FROM sales_data WHERE total_sales < 500",
      "SELECT product_name, unit_price FROM sales_data WHERE product_name LIKE '%Chair%'",
      "SELECT AVG(unit_price) AS avg_price FROM sales_data",
      "SELECT DISTINCT product_name FROM sales_data",
      "SELECT MAX(unit_price) AS max_price, MIN(unit_price) AS min_price FROM sales_data",
      "SELECT SUM(total_sales) AS total_sales_sum FROM sales_data",
      "SELECT product_name, quantity_sold FROM sales_data ORDER BY total_sales DESC",
      "SELECT product_name, unit_price FROM sales_data ORDER BY unit_price ASC",
      "SELECT COUNT(*) AS total_rows FROM sales_data",
      "SELECT product_id, product_name, quantity_sold, total_sales FROM sales_data WHERE total_sales > 5000 ORDER BY product_id DESC",
      "SELECT AVG(quantity_sold) AS avg_quantity, SUM(quantity_sold) AS total_quantity FROM sales_data GROUP BY product_name",
      "SELECT product_name, total_sales FROM sales_data WHERE total_sales > (SELECT AVG(total_sales) FROM sales_data)",
      "SELECT product_name, SUM(total_sales) AS total_sales_per_product FROM sales_data GROUP BY product_name HAVING SUM(total_sales) > 2000",
      "SELECT product_name AS name, total_sales * unit_price AS revenue FROM sales_data",
      "SELECT product_name, quantity_sold, (unit_price * quantity_sold) AS sales_revenue FROM sales_data",
      "SELECT product_name, unit_price, quantity_sold, total_sales, (unit_price * quantity_sold) AS revenue_per_item FROM sales_data",
      "SELECT * FROM sales_data LIMIT 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT product_name, product_price FROM products;",
      "SELECT * FROM sales_data;",
      "SELECT sale_id, product_id, sale_date FROM sales_data;",
      "SELECT products.product_name, sales_data.sale_amount FROM products JOIN sales_data ON products.product_id = sales_data.product_id;",
      "SELECT product_name, sale_amount FROM products INNER JOIN sales_data ON products.product_id = sales_data.product_id;",
      "SELECT * FROM products WHERE product_category = 'Electronics';",
      "SELECT product_name, product_price FROM products WHERE product_price > 100;",
      "SELECT * FROM sales_data WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT product_name, sale_amount FROM products JOIN sales_data ON products.product_id = sales_data.product_id WHERE sale_amount > 500;",
      "SELECT product_name, sale_amount FROM products INNER JOIN sales_data ON products.product_id = sales_data.product_id WHERE product_category = 'Clothing';",
      "SELECT products.product_name, sales_data.sale_amount FROM products LEFT JOIN sales_data ON products.product_id = sales_data.product_id;",
      "SELECT products.product_name, sales_data.sale_amount FROM sales_data RIGHT JOIN products ON products.product_id = sales_data.product_id;",
      "SELECT product_category, SUM(sale_amount) as total_sales FROM products JOIN sales_data ON products.product_id = sales_data.product_id GROUP BY product_category;",
      "SELECT product_id, COUNT(sale_id) as total_sales FROM sales_data GROUP BY product_id HAVING COUNT(sale_id) > 10;",
      "SELECT product_name, AVG(product_price) as avg_price, COUNT(*) as total_products FROM products;",
      "SELECT product_category, MAX(product_price) as max_price, MIN(product_price) as min_price FROM products GROUP BY product_category;",
      "SELECT product_id, product_name, SUM(sale_amount) as total_sales FROM sales_data GROUP BY product_id, product_name;",
      "SELECT product_name, AVG(sale_amount) as avg_sale_amount FROM products JOIN sales_data ON products.product_id = sales_data.product_id GROUP BY product_name;",
      "SELECT product_category, AVG(product_price) as avg_price FROM products GROUP BY product_category HAVING AVG(product_price) > 50;",
      "SELECT product_name, product_category, product_price FROM products WHERE product_price > 100",
      "SELECT product_name, product_category FROM products WHERE product_category = 'Electronics'",
      "SELECT product_name, SUM(sale_amount) AS total_sales FROM products INNER JOIN sales_data ON products.product_id = sales_data.product_id GROUP BY product_name",
      "SELECT product_name, AVG(sale_amount) AS average_sale FROM products INNER JOIN sales_data ON products.product_id = sales_data.product_id GROUP BY product_name HAVING average_sale > 200",
      "SELECT product_name, MAX(product_price) AS highest_price FROM products",
      "SELECT product_category, COUNT(*) AS num_products FROM products GROUP BY product_category HAVING num_products > 5",
      "SELECT product_name, product_price FROM products ORDER BY product_price DESC",
      "SELECT product_name, product_category FROM products WHERE product_category IN ('Clothing', 'Shoes')",
      "SELECT product_name, product_category, sale_date, sale_amount FROM products INNER JOIN sales_data ON products.product_id = sales_data.product_id WHERE sale_amount > 500",
      "SELECT COUNT(*) AS num_sales, SUM(sale_amount) AS total_amount FROM sales_data"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT product_name, category FROM products;",
      "SELECT * FROM sales;",
      "SELECT quantity, sale_date FROM sales;",
      "SELECT * FROM customers;",
      "SELECT customer_name, age FROM customers;",
      "SELECT product_name, price FROM products WHERE category='Electronics';",
      "SELECT product_name, price FROM products WHERE price > 100;",
      "SELECT customer_id, customer_name FROM customers WHERE age > 30;",
      "SELECT product_name, price FROM products WHERE category='Clothing' ORDER BY price DESC;",
      "SELECT customer_name, gender FROM customers WHERE gender='Female';",
      "SELECT customer_name, age FROM customers WHERE age BETWEEN 25 AND 40;",
      "SELECT product_name, price FROM products WHERE category='Electronics' AND price < 500;",
      "SELECT product_name, price FROM products WHERE category='Clothing' AND price BETWEEN 50 AND 100;",
      "SELECT customer_name, age FROM customers ORDER BY age ASC;",
      "SELECT product_name, price FROM products ORDER BY price DESC;",
      "SELECT customer_name, gender FROM customers WHERE age > 40 AND gender='Male';",
      "SELECT product_name, price FROM products WHERE category='Electronics' LIMIT 5;",
      "SELECT customer_name, age, gender FROM customers WHERE gender='Male' ORDER BY age DESC;",
      "SELECT DISTINCT category FROM products;",
      "SELECT * FROM products WHERE category = 'Electronics';",
      "SELECT product_name, price FROM products WHERE price > 100;",
      "SELECT product_id, product_name, category, price FROM products WHERE price BETWEEN 50 AND 100;",
      "SELECT product_name, category, price FROM products WHERE category IN ('Electronics', 'Clothing');",
      "SELECT product_id, product_name, price FROM products WHERE product_name LIKE '%Watch%';",
      "SELECT * FROM sales WHERE sale_date = '2022-01-15';",
      "SELECT product_name, quantity FROM sales JOIN products ON sales.product_id = products.product_id WHERE sale_date > '2022-01-01';",
      "SELECT customer_id, customer_name, age FROM customers WHERE gender = 'Female';",
      "SELECT customer_name, age, gender, product_name, quantity, sale_date FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id;",
      "SELECT SUM(quantity) AS total_quantity FROM sales;",
      "SELECT AVG(price) AS average_price FROM products WHERE category = 'Electronics';",
      "SELECT customer_name, COUNT(sale_id) AS num_sales FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customer_id;",
      "SELECT product_name, COUNT(sale_id) AS num_sales FROM products JOIN sales ON products.product_id = sales.product_id GROUP BY product_id HAVING num_sales > 5;",
      "SELECT category, SUM(price) AS total_price FROM products GROUP BY category ORDER BY total_price DESC;",
      "SELECT customer_id, AVG(age) AS avg_age FROM customers GROUP BY customer_id HAVING avg_age > 30;",
      "SELECT customer_name, product_name, quantity, sale_date FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE age > 25 AND gender = 'Male';",
      "SELECT customer_name, category, COUNT(sale_id) AS num_sales FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id GROUP BY category, customer_id;",
      "SELECT product_name, AVG(quantity) AS avg_quantity FROM sales JOIN products ON sales.product_id = products.product_id GROUP BY product_id HAVING avg_quantity > 3;",
      "SELECT customer_name, SUM(price) AS total_spent FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id GROUP BY customer_id;",
      "SELECT customer_name, product_name, sale_date FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE gender = 'Female' AND age > 30;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products",
      "SELECT product_name, price FROM products",
      "SELECT product_name, category FROM products",
      "SELECT * FROM orders",
      "SELECT order_id, product_id, quantity FROM orders",
      "SELECT * FROM customers",
      "SELECT customer_name, email, phone_number FROM customers",
      "SELECT * FROM pricing_strategies",
      "SELECT strategy_id, product_id, discount FROM pricing_strategies",
      "SELECT product_name, price, category FROM products",
      "SELECT order_id, order_date, customer_id FROM orders",
      "SELECT customer_name, email, phone_number, address FROM customers",
      "SELECT product_name, price, category, sales_count FROM products",
      "SELECT order_id, product_id, quantity, order_date FROM orders",
      "SELECT customer_name, email, phone_number, address FROM customers",
      "SELECT strategy_id, product_id, discount, start_date FROM pricing_strategies",
      "SELECT * FROM products WHERE price > 100",
      "SELECT * FROM orders WHERE quantity > 5",
      "SELECT * FROM customers WHERE phone_number LIKE '%555%'",
      "SELECT * FROM pricing_strategies WHERE discount > 0.1",
      "SELECT * FROM products WHERE price > 100 AND category = 'Electronics';",
      "SELECT product_name, price, category FROM products WHERE price BETWEEN 50 AND 200 AND category = 'Clothing' ORDER BY price DESC;",
      "SELECT customer_name, email FROM customers WHERE phone_number LIKE '%123%';",
      "SELECT product_name, price, sales_count FROM products WHERE category = 'Home' AND sales_count > 100 ORDER BY sales_count DESC;",
      "SELECT customer_name, address FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE quantity > 5);",
      "SELECT product_name, price, category FROM products WHERE product_id NOT IN (SELECT product_id FROM orders);",
      "SELECT product_name, price, category FROM products JOIN orders ON products.product_id = orders.product_id WHERE orders.quantity < 10;",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE order_date >= '2022-01-01');",
      "SELECT product_name, price, category FROM products WHERE price = (SELECT MAX(price) FROM products);",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_name LIKE '%John%' OR email LIKE '%gmail.com%';",
      "SELECT product_name, price, sales_count FROM products WHERE category = 'Electronics' AND sales_count BETWEEN 50 AND 100 ORDER BY price ASC;",
      "SELECT customer_name, email, phone_number FROM customers WHERE address LIKE '%Street%' AND phone_number IS NOT NULL;",
      "SELECT product_id, product_name, price, category FROM products WHERE price < (SELECT AVG(price) FROM products);",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM orders GROUP BY customer_id HAVING COUNT(*) > 2);",
      "SELECT product_name, price, category, discount FROM products JOIN pricing_strategies ON products.product_id = pricing_strategies.product_id WHERE pricing_strategies.discount > 0.1;",
      "SELECT customer_name, phone_number, address FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE product_id = 1);",
      "SELECT product_name, price, category FROM products WHERE product_id IN (SELECT product_id FROM orders WHERE customer_id = 1);",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM orders);",
      "SELECT product_name, price, category FROM products WHERE product_id = (SELECT product_id FROM orders GROUP BY product_id HAVING SUM(quantity) > 50);",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id = (SELECT customer_id FROM orders WHERE product_id = 2 AND quantity > 10);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT product_name, category FROM products;",
      "SELECT product_id, product_name, category, price FROM products WHERE category='Electronics';",
      "SELECT customer_id, customer_name, email FROM customers;",
      "SELECT order_id, customer_id, product_id, quantity, order_date FROM orders;",
      "SELECT order_id, product_id, quantity FROM orders WHERE product_id=1;",
      "SELECT category_id, category_name FROM categories;",
      "SELECT sale_id, order_id, product_id, quantity, sale_amount FROM sales_data;",
      "SELECT product_name, price FROM products WHERE price > 100;",
      "SELECT order_id, quantity, order_date FROM orders WHERE order_date >= '2022-01-01';",
      "SELECT customer_name, email, phone_number FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT product_name, category, price FROM products WHERE category='Clothing' AND price < 50;",
      "SELECT customer_id, customer_name FROM customers WHERE customer_name LIKE '%John%';",
      "SELECT product_id, product_name, category, price FROM products ORDER BY price DESC;",
      "SELECT order_id, customer_id, product_id, quantity, order_date FROM orders ORDER BY order_date;",
      "SELECT customer_id, customer_name, email FROM customers ORDER BY customer_name;",
      "SELECT category_name, COUNT(*) AS total_products FROM products JOIN categories ON products.category=categories.category_name GROUP BY category_name;",
      "SELECT customer_name, SUM(sale_amount) AS total_sales FROM customers JOIN sales_data ON customers.customer_id=sales_data.customer_id GROUP BY customer_name;",
      "SELECT category_name, AVG(price) AS avg_price FROM products JOIN categories ON products.category=categories.category_name GROUP BY category_name;",
      "SELECT order_date, SUM(sale_amount) AS total_sales FROM orders JOIN sales_data ON orders.order_id=sales_data.order_id GROUP BY order_date;",
      "SELECT * FROM products WHERE price > 100",
      "SELECT product_name, category FROM products WHERE category = 'Electronics'",
      "SELECT order_id, product_name, quantity FROM orders INNER JOIN products ON orders.product_id = products.product_id",
      "SELECT customer_name, email FROM customers WHERE phone_number IS NOT NULL",
      "SELECT product_name, category, price FROM products WHERE category = 'Clothing' AND price < 50",
      "SELECT order_id, order_date, customer_name FROM orders INNER JOIN customers ON orders.customer_id = customers.customer_id",
      "SELECT category_name FROM categories WHERE category_id = (SELECT category_id FROM products WHERE product_id = 1)",
      "SELECT SUM(quantity) AS total_quantity_sold FROM sales_data",
      "SELECT AVG(price) AS average_price FROM products",
      "SELECT customer_name, email, product_name, quantity, sale_amount FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN sales_data ON orders.order_id = sales_data.order_id"
    ]
  }
]