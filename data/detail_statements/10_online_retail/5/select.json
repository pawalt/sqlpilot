[
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT employee_id, first_name, last_name FROM employees;",
      "SELECT department, COUNT(*) FROM employees GROUP BY department;",
      "SELECT * FROM employees WHERE department = 'HR';",
      "SELECT * FROM employees WHERE salary > 50000;",
      "SELECT * FROM employees ORDER BY hire_date DESC;",
      "SELECT first_name, last_name, salary FROM employees WHERE department = 'Finance';",
      "SELECT MAX(salary) FROM employees;",
      "SELECT MIN(salary) FROM employees;",
      "SELECT AVG(salary) FROM employees;",
      "SELECT employee_id, first_name, last_name, salary FROM employees WHERE hire_date > '2020-01-01';",
      "SELECT * FROM employees WHERE salary BETWEEN 40000 AND 60000;",
      "SELECT employee_id, first_name, last_name, department FROM employees WHERE department IN ('HR', 'Finance');",
      "SELECT employee_id, first_name, last_name FROM employees WHERE department = 'Sales' AND salary > 60000;",
      "SELECT first_name, last_name FROM employees WHERE hire_date < '2019-01-01';",
      "SELECT employee_id, first_name, last_name FROM employees WHERE salary = (SELECT MAX(salary) FROM employees);",
      "SELECT first_name, last_name FROM employees WHERE department = 'IT' OR department = 'Engineering';",
      "SELECT * FROM employees WHERE department LIKE '%ment';",
      "SELECT COUNT(*) FROM employees WHERE hire_date BETWEEN '2018-01-01' AND '2020-01-01';",
      "SELECT DISTINCT department FROM employees;",
      "SELECT * FROM employees WHERE department = 'Marketing';",
      "SELECT first_name, last_name, salary FROM employees WHERE salary > 50000;",
      "SELECT * FROM employees WHERE hire_date Between '2021-01-01' AND '2021-12-31';",
      "SELECT first_name, last_name, department FROM employees WHERE department = 'HR' AND salary > 60000;",
      "SELECT employee_id, first_name, last_name FROM employees WHERE salary BETWEEN 40000 AND 60000;",
      "SELECT * FROM employees WHERE first_name LIKE 'J%';",
      "SELECT * FROM employees WHERE last_name LIKE 'S%';",
      "SELECT * FROM employees WHERE department IN ('Sales', 'Marketing');",
      "SELECT department, COUNT(*) AS num_employees FROM employees GROUP BY department;",
      "SELECT AVG(salary) AS average_salary FROM employees;",
      "SELECT MIN(salary) AS min_salary, MAX(salary) AS max_salary FROM employees;",
      "SELECT department, SUM(salary) AS total_salary FROM employees GROUP BY department;",
      "SELECT * FROM employees ORDER BY salary DESC;",
      "SELECT * FROM employees ORDER BY hire_date ASC;",
      "SELECT first_name, last_name, salary FROM employees ORDER BY salary DESC LIMIT 5;",
      "SELECT * FROM employees WHERE department = 'IT' ORDER BY salary ASC LIMIT 3;",
      "SELECT * FROM employees WHERE hire_date = '2021-07-15';",
      "SELECT employee_id, first_name, last_name, department FROM employees WHERE salary = (SELECT MAX(salary) FROM employees);",
      "SELECT e1.first_name, e1.last_name, e2.first_name AS manager_first_name, e2.last_name AS manager_last_name FROM employees e1 LEFT JOIN employees e2 ON e1.manager_id = e2.employee_id;",
      "SELECT department, AVG(salary) AS avg_salary FROM employees GROUP BY department HAVING AVG(salary) > 55000;",
      "SELECT * FROM employees e1 WHERE salary > (SELECT AVG(salary) FROM employees e2 WHERE e2.department = e1.department);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT first_name, last_name, position FROM employees;",
      "SELECT employee_id, department, salary FROM employees;",
      "SELECT * FROM performance_history;",
      "SELECT employee_id, evaluation_date, evaluation_score FROM performance_history;",
      "SELECT employees.first_name, employees.last_name, performance_history.evaluation_date FROM employees INNER JOIN performance_history ON employees.employee_id = performance_history.employee_id;",
      "SELECT * FROM employees WHERE department = 'HR';",
      "SELECT first_name, last_name, salary FROM employees WHERE position = 'Manager';",
      "SELECT employee_id, evaluation_score FROM performance_history WHERE evaluation_score > 80;",
      "SELECT * FROM employees WHERE salary > 50000;",
      "SELECT * FROM performance_history WHERE evaluation_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT employee_id, first_name, last_name FROM employees ORDER BY last_name ASC;",
      "SELECT first_name, last_name, salary FROM employees WHERE department = 'IT' ORDER BY salary DESC;",
      "SELECT employee_id, evaluation_date, evaluation_score FROM performance_history WHERE employee_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT DISTINCT department FROM employees;",
      "SELECT AVG(salary) AS avg_salary FROM employees;",
      "SELECT MIN(salary) AS min_salary, MAX(salary) AS max_salary FROM employees;",
      "SELECT COUNT(*) AS total_employees FROM employees;",
      "SELECT department, COUNT(*) AS employee_count FROM employees GROUP BY department;",
      "SELECT employee_id, evaluation_date, MAX(evaluation_score) AS max_score FROM performance_history GROUP BY employee_id;",
      "SELECT first_name, last_name, position, department FROM employees;",
      "SELECT employee_id, first_name, last_name, position, department, salary FROM employees WHERE salary > 50000;",
      "SELECT employee_id, first_name, last_name, department FROM employees WHERE position = 'Manager';",
      "SELECT employee_id, first_name, last_name, salary FROM employees WHERE department = 'HR';",
      "SELECT employee_id, first_name, last_name, position, department FROM employees WHERE department = 'Finance' AND position = 'Accountant';",
      "SELECT employee_id, first_name, last_name, salary FROM employees WHERE department = 'IT' ORDER BY salary DESC;",
      "SELECT employee_id, first_name, last_name, position, department FROM employees JOIN performance_history ON employees.employee_id = performance_history.employee_id WHERE evaluation_score > 80;",
      "SELECT employee_id, first_name, last_name, department, evaluation_date, evaluation_score FROM employees JOIN performance_history ON employees.employee_id = performance_history.employee_id WHERE evaluation_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT employee_id, first_name, last_name, department, MAX(salary) FROM employees GROUP BY department;",
      "SELECT department, AVG(salary) AS average_salary FROM employees GROUP BY department HAVING AVG(salary) > 60000;",
      "SELECT department, COUNT(employee_id) AS total_employees FROM employees GROUP BY department ORDER BY total_employees DESC;",
      "SELECT department, COUNT(employee_id) AS total_employees, AVG(salary) AS average_salary FROM employees GROUP BY department HAVING AVG(salary) > 50000 ORDER BY total_employees DESC;",
      "SELECT department, SUM(salary) AS total_salary FROM employees GROUP BY department HAVING SUM(salary) > 300000;",
      "SELECT department, MIN(salary) AS min_salary, MAX(salary) AS max_salary FROM employees GROUP BY department;",
      "SELECT department, position, COUNT(employee_id) AS total_employees FROM employees WHERE position IS NOT NULL GROUP BY department, position;",
      "SELECT department, position, AVG(salary) AS average_salary FROM employees WHERE position = 'Developer' OR position = 'Tester' GROUP BY department, position HAVING AVG(salary) > 70000;",
      "SELECT department, position, MAX(salary) AS max_salary, COUNT(employee_id) AS total_employees FROM employees WHERE department = 'Sales' GROUP BY department, position;",
      "SELECT department, position, AVG(salary) AS average_salary FROM employees WHERE department IN ('HR', 'Marketing') GROUP BY department, position;",
      "SELECT department, position, SUM(salary) AS total_salary FROM employees WHERE department = 'Finance' GROUP BY department, position;",
      "SELECT department, position, evaluation_date, evaluation_score FROM employees JOIN performance_history ON employees.employee_id = performance_history.employee_id WHERE evaluation_date >= '2023-01-01';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT employee_name, salary FROM employees;",
      "SELECT employee_name, department FROM employees WHERE salary > 50000;",
      "SELECT * FROM employees WHERE department = 'HR';",
      "SELECT employee_id, employee_name, hire_date FROM employees WHERE hire_date > '2020-01-01';",
      "SELECT * FROM employees WHERE employee_id = 1001;",
      "SELECT * FROM performance;",
      "SELECT employee_id, rating FROM performance WHERE rating > 3;",
      "SELECT * FROM performance WHERE employee_id IN (SELECT employee_id FROM employees WHERE department = 'IT');",
      "SELECT * FROM payroll;",
      "SELECT payroll_id, employee_id, paycheck_date FROM payroll WHERE bonus > 1000;",
      "SELECT employee_id, salary, bonus FROM payroll WHERE salary > 70000;",
      "SELECT * FROM payroll WHERE paycheck_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT p.payroll_id, e.employee_name FROM payroll p JOIN employees e ON p.employee_id = e.employee_id;",
      "SELECT AVG(salary) AS avg_salary FROM employees WHERE department = 'Sales';",
      "SELECT COUNT(*) AS total_employees FROM employees;",
      "SELECT e.employee_name, p.bonus, py.paycheck_date FROM employees e JOIN payroll p ON e.employee_id = p.employee_id JOIN payroll py ON p.payroll_id = py.payroll_id;",
      "SELECT e.employee_name, SUM(p.salary) AS total_salary FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.employee_name;",
      "SELECT MAX(salary) AS max_salary, MIN(salary) AS min_salary FROM employees;",
      "SELECT * FROM employees WHERE department = 'Sales'",
      "SELECT employee_name, salary FROM employees WHERE salary > 50000",
      "SELECT employee_name, hire_date FROM employees WHERE hire_date BETWEEN '2021-01-01' AND '2021-12-31'",
      "SELECT employee_name, salary FROM employees ORDER BY salary DESC",
      "SELECT employee_name, department, rating FROM employees JOIN performance ON employees.employee_id = performance.employee_id WHERE performance.rating > 4",
      "SELECT employee_name, salary, bonus FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id WHERE payroll.bonus > 1000",
      "SELECT e.employee_name, p.salary FROM employees e INNER JOIN payroll p ON e.employee_id = p.employee_id AND p.salary > 60000",
      "SELECT employee_name, department, salary FROM employees WHERE department IN ('Sales', 'Marketing')",
      "SELECT employee_name, paycheck_date FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id WHERE employees.salary < payroll.salary",
      "SELECT e.employee_name, p.salary FROM employees e INNER JOIN payroll p ON e.employee_id = p.employee_id AND p.salary = (SELECT MAX(salary) FROM payroll)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees",
      "SELECT employee_name, department FROM employees",
      "SELECT * FROM departments",
      "SELECT department_name, location FROM departments",
      "SELECT * FROM performance_reviews",
      "SELECT employee_id, review_date, performance_rating FROM performance_reviews",
      "SELECT * FROM payrolls",
      "SELECT employee_id, month, year, salary FROM payrolls",
      "SELECT employee_id, employee_name FROM employees WHERE department = 'IT'",
      "SELECT department_name FROM departments WHERE location = 'New York'",
      "SELECT employee_name, salary FROM employees ORDER BY salary DESC",
      "SELECT department, AVG(salary) AS average_salary FROM employees GROUP BY department",
      "SELECT * FROM employees WHERE salary > 50000",
      "SELECT employee_id, employee_name, hire_date FROM employees ORDER BY hire_date",
      "SELECT * FROM employees JOIN departments ON employees.department = departments.department_name",
      "SELECT * FROM employees LEFT JOIN payrolls ON employees.employee_id = payrolls.employee_id",
      "SELECT employee_id, employee_name, salary FROM employees UNION SELECT employee_id, employee_name, salary FROM payrolls",
      "SELECT employee_id, employee_name, salary FROM employees INTERSECT SELECT employee_id, employee_name, salary FROM payrolls",
      "SELECT employee_id, employee_name, salary FROM employees EXCEPT SELECT employee_id, employee_name, salary FROM payrolls",
      "SELECT employee_id, employee_name, salary FROM employees WHERE employee_id IN (SELECT employee_id FROM performance_reviews)",
      "SELECT * FROM employees WHERE department='IT' AND salary > 50000",
      "SELECT employee_name, department FROM employees WHERE salary > (SELECT AVG(salary) FROM employees)",
      "SELECT employee_name, hire_date, performance_rating FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id",
      "SELECT department_name, location FROM departments WHERE department_id IN (SELECT DISTINCT department FROM employees)",
      "SELECT employee_name, month, year, salary FROM employees INNER JOIN payrolls ON employees.employee_id = payrolls.employee_id",
      "SELECT employee_name, department, salary, review_date FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id",
      "SELECT AVG(salary) AS average_salary, MAX(salary) AS max_salary, MIN(salary) AS min_salary FROM employees",
      "SELECT department_name, AVG(salary) AS avg_salary FROM employees INNER JOIN departments ON employees.department = departments.department_name GROUP BY department_name",
      "SELECT employee_name, department, salary, month, year FROM employees INNER JOIN payrolls ON employees.employee_id = payrolls.employee_id WHERE salary > 60000",
      "SELECT department_name, COUNT(employee_id) AS total_employees FROM departments INNER JOIN employees ON departments.department_name = employees.department GROUP BY department_name",
      "SELECT employee_name, month, year, salary FROM employees INNER JOIN payrolls ON employees.employee_id = payrolls.employee_id WHERE department='HR'",
      "SELECT department_name, AVG(performance_rating) AS avg_rating FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id GROUP BY department_name",
      "SELECT department_name, location, COUNT(employee_id) AS total_employees FROM departments LEFT JOIN employees ON departments.department_name = employees.department GROUP BY department_name, location",
      "SELECT employee_name, AVG(performance_rating) AS avg_rating FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id GROUP BY employee_name",
      "SELECT department_name, MAX(salary) AS max_salary FROM employees INNER JOIN departments ON employees.department = departments.department_name GROUP BY department_name",
      "SELECT employee_name, department, salary, feedback FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id",
      "SELECT employee_name, month, year FROM employees INNER JOIN payrolls ON employees.employee_id = payrolls.employee_id WHERE salary < 40000",
      "SELECT department_name, location, MAX(salary) AS max_salary FROM employees INNER JOIN departments ON employees.department = departments.department_name GROUP BY department_name, location",
      "SELECT employee_name, department, hire_date, review_date FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id",
      "SELECT department_name, COUNT(employee_id) AS total_employees FROM departments LEFT JOIN employees ON departments.department_name = employees.department GROUP BY department_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT first_name, last_name, department FROM employees;",
      "SELECT employee_id, first_name, last_name, hire_date FROM employees;",
      "SELECT * FROM departments;",
      "SELECT department_id, department_name, manager_id FROM departments;",
      "SELECT * FROM salaries;",
      "SELECT employee_id, salary FROM salaries;",
      "SELECT * FROM performance_reviews;",
      "SELECT employee_id, reviewer_id, review_date, rating FROM performance_reviews;",
      "SELECT * FROM benefits;",
      "SELECT employee_id, benefit_name, amount FROM benefits;",
      "SELECT first_name, last_name, salary FROM employees;",
      "SELECT employee_id, department, hire_date, salary FROM employees;",
      "SELECT department_id, location FROM departments;",
      "SELECT employee_id, salary, start_date FROM salaries;",
      "SELECT review_id, employee_id, reviewer_id, rating FROM performance_reviews;",
      "SELECT employee_id, benefit_name, amount FROM benefits;",
      "SELECT first_name, last_name, manager_id FROM employees JOIN departments ON employees.department = departments.department_name;",
      "SELECT employee_id, first_name, last_name FROM employees WHERE salary > 50000;",
      "SELECT department_name, location FROM departments WHERE manager_id IS NOT NULL;",
      "SELECT first_name, last_name, department FROM employees WHERE department = 'HR';",
      "SELECT first_name, last_name, salary FROM employees INNER JOIN salaries ON employees.employee_id = salaries.employee_id;",
      "SELECT first_name, last_name, hire_date FROM employees WHERE hire_date >= '2021-01-01';",
      "SELECT department_name, location FROM departments WHERE manager_id = 101;",
      "SELECT first_name, last_name, review_date FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id;",
      "SELECT first_name, last_name, benefit_name FROM employees INNER JOIN benefits ON employees.employee_id = benefits.employee_id WHERE benefit_name = 'Health Insurance';",
      "SELECT first_name, last_name, department_name FROM employees INNER JOIN departments ON employees.department = departments.department_name;",
      "SELECT department_name, AVG(salary) AS avg_salary FROM employees INNER JOIN departments ON employees.department = departments.department_name GROUP BY department_name;",
      "SELECT first_name, last_name, SUM(amount) AS total_benefits FROM employees INNER JOIN benefits ON employees.employee_id = benefits.employee_id GROUP BY first_name, last_name;",
      "SELECT department_name, COUNT(DISTINCT manager_id) AS num_managers FROM departments GROUP BY department_name;",
      "SELECT first_name, last_name, salary FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);",
      "SELECT first_name, last_name, location FROM employees LEFT JOIN departments ON employees.department = departments.department_name;",
      "SELECT department_name, MAX(rating) AS top_rating FROM departments INNER JOIN employees ON departments.department_name = employees.department INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id GROUP BY department_name;",
      "SELECT first_name, last_name, amount FROM employees INNER JOIN benefits ON employees.employee_id = benefits.employee_id WHERE amount = (SELECT MAX(amount) FROM benefits);",
      "SELECT department_name, MIN(salary) AS lowest_salary FROM employees INNER JOIN departments ON employees.department = departments.department_name GROUP BY department_name;",
      "SELECT first_name, last_name, review_date FROM employees INNER JOIN performance_reviews ON employees.employee_id = performance_reviews.employee_id WHERE rating > 3;",
      "SELECT first_name, last_name, hire_date FROM employees WHERE department = 'Sales' AND hire_date BETWEEN '2020-01-01' AND '2021-01-01';",
      "SELECT department_name, COUNT(*) AS num_employees FROM employees INNER JOIN departments ON employees.department = departments.department_name GROUP BY department_name HAVING COUNT(*) > 5;",
      "SELECT first_name, last_name, hire_date FROM employees WHERE hire_date BETWEEN '2019-01-01' AND '2020-01-01' AND department = 'Marketing';",
      "SELECT department_name, AVG(salary) AS avg_salary FROM employees INNER JOIN departments ON employees.department = departments.department_name WHERE department_name = 'Engineering';"
    ]
  }
]