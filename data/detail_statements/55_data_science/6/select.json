[
  {
    "statements": [
      "SELECT * FROM experiment_data;",
      "SELECT experiment_id, user_id FROM experiment_data;",
      "SELECT group_id, experiment_date FROM experiment_data;",
      "SELECT experiment_id, conversion_event FROM experiment_data;",
      "SELECT * FROM experiment_data WHERE experiment_id = 1;",
      "SELECT * FROM experiment_data WHERE user_id = 5;",
      "SELECT experiment_id, experiment_date FROM experiment_data WHERE group_id = 3;",
      "SELECT * FROM experiment_data WHERE conversion_event = TRUE;",
      "SELECT * FROM experiment_data WHERE experiment_date = '2022-01-01';",
      "SELECT experiment_id, user_id FROM experiment_data WHERE group_id = 1;",
      "SELECT * FROM experiment_data WHERE user_id = 8 AND group_id = 2;",
      "SELECT experiment_id, conversion_event FROM experiment_data WHERE experiment_date = '2022-02-15';",
      "SELECT * FROM experiment_data WHERE user_id = 10 OR group_id = 4;",
      "SELECT experiment_id, user_id, experiment_date FROM experiment_data WHERE group_id = 3 AND conversion_event = TRUE;",
      "SELECT * FROM experiment_data WHERE experiment_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT experiment_id FROM experiment_data WHERE user_id = 7 AND group_id = 2 AND conversion_event = FALSE;",
      "SELECT * FROM experiment_data WHERE group_id IN (1, 2, 3);",
      "SELECT user_id, conversion_event FROM experiment_data WHERE experiment_date > '2022-03-01';",
      "SELECT experiment_id, experiment_date FROM experiment_data WHERE user_id IN (5, 6, 7);",
      "SELECT * FROM experiment_data WHERE experiment_id = 10 OR conversion_event = TRUE;",
      "SELECT * FROM experiment_data WHERE group_id = 1 AND experiment_date = '2022-01-01';",
      "SELECT user_id, conversion_event FROM experiment_data WHERE user_id IN (1, 2, 3) AND conversion_event = TRUE;",
      "SELECT experiment_id, user_id, group_id FROM experiment_data WHERE user_id = 1 AND group_id = 2;",
      "SELECT * FROM experiment_data WHERE experiment_date BETWEEN '2022-01-01' AND '2022-02-01' AND conversion_event = TRUE;",
      "SELECT DISTINCT user_id FROM experiment_data WHERE conversion_event = FALSE;",
      "SELECT COUNT(*) FROM experiment_data WHERE group_id = 2;",
      "SELECT AVG(experiment_id) FROM experiment_data WHERE group_id = 1;",
      "SELECT DISTINCT group_id FROM experiment_data WHERE user_id = 3 AND experiment_date = '2022-01-01';",
      "SELECT MAX(user_id) FROM experiment_data WHERE group_id = 3;",
      "SELECT * FROM experiment_data WHERE experiment_date > '2022-01-01' AND experiment_date < '2022-02-01';",
      "SELECT user_id, COUNT(*) FROM experiment_data WHERE group_id = 1 GROUP BY user_id;",
      "SELECT AVG(user_id) FROM experiment_data WHERE group_id = 2 AND conversion_event = TRUE;",
      "SELECT * FROM experiment_data WHERE experiment_date = '2022-01-01' OR experiment_date = '2022-02-01';",
      "SELECT SUM(experiment_id) FROM experiment_data WHERE group_id = 3;",
      "SELECT user_id FROM experiment_data WHERE conversion_event = TRUE ORDER BY user_id DESC;",
      "SELECT MAX(experiment_id) FROM experiment_data WHERE group_id = 1 AND conversion_event = FALSE;",
      "SELECT * FROM experiment_data WHERE user_id > 2 AND group_id < 3;",
      "SELECT AVG(user_id) FROM experiment_data WHERE group_id = 1 AND experiment_date < '2022-01-01';",
      "SELECT COUNT(user_id) FROM experiment_data WHERE group_id = 2 AND conversion_event = FALSE;",
      "SELECT experiment_id FROM experiment_data WHERE group_id > 1 AND conversion_event = TRUE;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM experimental_data;",
      "SELECT id, user_id, experiment_date FROM experimental_data WHERE user_id = 1;",
      "SELECT * FROM experimental_data WHERE experiment_group = 'Control';",
      "SELECT * FROM experimental_data WHERE experiment_date > '2022-01-01';",
      "SELECT id, user_id, experiment_date, conversion_event FROM experimental_data WHERE conversion_event = TRUE;",
      "SELECT * FROM experimental_data ORDER BY experiment_date DESC;",
      "SELECT * FROM experimental_data WHERE user_id = 5 AND experiment_group = 'Test';",
      "SELECT AVG(user_id) AS avg_user_id, COUNT(id) AS total_experiments FROM experimental_data;",
      "SELECT DISTINCT experiment_group FROM experimental_data;",
      "SELECT * FROM experimental_data WHERE user_id BETWEEN 1 AND 10;",
      "SELECT * FROM experimental_data WHERE experiment_group IN ('Control', 'Test');",
      "SELECT AVG(id) AS avg_id, COUNT(*) AS total_records FROM experimental_data;",
      "SELECT * FROM experimental_data WHERE conversion_event = FALSE;",
      "SELECT id, experiment_group, experiment_date, conversion_event FROM experimental_data WHERE experiment_group = 'Control' AND conversion_event = TRUE;",
      "SELECT * FROM experimental_data WHERE experiment_group LIKE 'T%';",
      "SELECT * FROM experimental_data WHERE conversion_event IS NOT NULL;",
      "SELECT MAX(user_id) AS max_user_id, MIN(user_id) AS min_user_id FROM experimental_data;",
      "SELECT COUNT(DISTINCT user_id) AS total_users FROM experimental_data;",
      "SELECT * FROM experimental_data WHERE experiment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM experimental_data WHERE user_id = 3 OR experiment_group = 'Control';",
      "SELECT * FROM experimental_data WHERE user_id = 123;",
      "SELECT user_id, experiment_group FROM experimental_data WHERE experiment_date > '2022-01-01';",
      "SELECT * FROM experimental_data INNER JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id;",
      "SELECT experiment_date, conversion_event FROM experimental_data WHERE user_id = 456 AND experiment_group = 'A';",
      "SELECT AVG(conversion_rate) AS avg_conversion_rate FROM experiment_results WHERE experiment_id = 789;",
      "SELECT * FROM experimental_data WHERE experiment_date BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY experiment_date DESC;",
      "SELECT DISTINCT user_id FROM experimental_data WHERE experiment_group = 'B';",
      "SELECT AVG(conversion_rate) AS avg_conversion_rate, MAX(conversion_rate) AS max_conversion_rate FROM experiment_results;",
      "SELECT COUNT(*) AS total_experiments FROM experiment_results WHERE significance_test_result = 'significant';",
      "SELECT user_id, experiment_date, conversion_event FROM experimental_data INNER JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id WHERE confidence_level > 0.95;",
      "SELECT user_id, COUNT(result_id) AS total_results FROM experimental_data LEFT JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id GROUP BY user_id;",
      "SELECT experiment_date, AVG(conversion_rate) AS avg_conversion_rate FROM experimental_data LEFT JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id WHERE conversion_event = TRUE GROUP BY experiment_date;",
      "SELECT user_id, experiment_group, conversion_rate FROM experimental_data LEFT JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id WHERE conversion_event = TRUE;",
      "SELECT user_id, experiment_date, significance_test_result FROM experimental_data LEFT JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id WHERE significance_test_result = 'not significant';",
      "SELECT user_id, experiment_date, conversion_event FROM experimental_data WHERE experiment_group = 'C' AND conversion_event = TRUE;",
      "SELECT user_id, experiment_group FROM experimental_data UNION SELECT experiment_id, significance_test_result FROM experiment_results;",
      "SELECT experiment_group, COUNT(*) AS total_experiments FROM experimental_data GROUP BY experiment_group;",
      "SELECT user_id, experiment_date, conversion_rate FROM experimental_data INNER JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id WHERE conversion_rate > 0.5;",
      "SELECT experiment_group, AVG(confidence_level) AS avg_confidence_level FROM experimental_data INNER JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id GROUP BY experiment_group;",
      "SELECT user_id, experiment_date, conversion_rate FROM experimental_data INNER JOIN experiment_results ON experimental_data.id = experiment_results.experiment_id WHERE experiment_date BETWEEN '2022-01-01' AND '2022-06-30';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM experiment_data;",
      "SELECT user_id, experiment_group FROM experiment_data;",
      "SELECT experiment_group, timestamp FROM experiment_data WHERE user_id = 1;",
      "SELECT user_id, experiment_group FROM experiment_data WHERE experiment_id = 2;",
      "SELECT DISTINCT experiment_group FROM experiment_data;",
      "SELECT * FROM experiment_results;",
      "SELECT user_id, metric_value FROM experiment_results WHERE result_id = 100;",
      "SELECT AVG(metric_value) FROM experiment_results;",
      "SELECT MAX(metric_value) FROM experiment_results WHERE experiment_id = 5;",
      "SELECT user_id, experiment_id, metric_value FROM experiment_results WHERE user_id = 10;",
      "SELECT * FROM experiment_metadata;",
      "SELECT experiment_id, experiment_name FROM experiment_metadata;",
      "SELECT experiment_name, start_date, end_date FROM experiment_metadata WHERE experiment_id = 3;",
      "SELECT MAX(experiment_id) FROM experiment_metadata;",
      "SELECT MIN(start_date) FROM experiment_metadata;",
      "SELECT COUNT(*) FROM experiment_metadata WHERE end_date > '2022-01-01';",
      "SELECT DISTINCT experiment_name FROM experiment_metadata;",
      "SELECT experiment_name, start_date, end_date FROM experiment_metadata ORDER BY start_date DESC;",
      "SELECT experiment_name, start_date, end_date FROM experiment_metadata ORDER BY end_date ASC;",
      "SELECT experiment_id, experiment_name, end_date FROM experiment_metadata WHERE end_date IS NOT NULL;",
      "SELECT * FROM experiment_data WHERE user_id = 5 AND timestamp > '2022-01-01';",
      "SELECT user_id, experiment_group, experiment_id FROM experiment_data WHERE experiment_group = 'control';",
      "SELECT user_id, experiment_group, experiment_id FROM experiment_data WHERE experiment_group = 'test' AND timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT e.user_id, e.experiment_group, e.experiment_id, r.metric_value FROM experiment_data e JOIN experiment_results r ON e.experiment_id = r.experiment_id WHERE r.metric_value > 0.5;",
      "SELECT e.user_id, m.experiment_name, r.metric_value FROM experiment_data e JOIN experiment_metadata m ON e.experiment_id = m.experiment_id JOIN experiment_results r ON e.experiment_id = r.experiment_id WHERE m.start_date < '2022-03-01' AND m.end_date > '2022-03-31';",
      "SELECT AVG(metric_value) AS avg_metric_value, experiment_group FROM experiment_results GROUP BY experiment_group;",
      "SELECT COUNT(DISTINCT user_id) AS unique_users FROM experiment_data;",
      "SELECT experiment_id, MAX(metric_value) AS max_metric_value FROM experiment_results GROUP BY experiment_id;",
      "SELECT e.experiment_id, AVG(r.metric_value) AS avg_metric_value FROM experiment_data e JOIN experiment_results r ON e.experiment_id = r.experiment_id GROUP BY e.experiment_id;",
      "SELECT experiment_group, COUNT(*) AS count FROM experiment_data GROUP BY experiment_group HAVING COUNT(*) > 10;",
      "SELECT user_id, experiment_group, experiment_id FROM experiment_data WHERE user_id IN (SELECT user_id FROM experiment_results WHERE metric_value > 0.8);",
      "SELECT user_id, experiment_id, timestamp FROM experiment_data WHERE user_id = 10 ORDER BY timestamp DESC;",
      "SELECT * FROM experiment_results WHERE result_id = 5;",
      "SELECT e.experiment_id, COUNT(*) AS count FROM experiment_data e JOIN experiment_results r ON e.experiment_id = r.experiment_id GROUP BY e.experiment_id HAVING COUNT(*) > 5;",
      "SELECT m.experiment_name, AVG(r.metric_value) AS avg_metric_value FROM experiment_metadata m JOIN experiment_results r ON m.experiment_id = r.experiment_id GROUP BY m.experiment_name;",
      "SELECT e.user_id, r.metric_value FROM experiment_data e JOIN experiment_results r ON e.user_id = r.user_id AND e.experiment_id = r.experiment_id;",
      "SELECT user_id, experiment_group, experiment_id, timestamp FROM experiment_data ORDER BY timestamp DESC LIMIT 10;",
      "SELECT experiment_group, SUM(metric_value) AS total_metric_value FROM experiment_data e JOIN experiment_results r ON e.user_id = r.user_id AND e.experiment_id = r.experiment_id GROUP BY experiment_group;",
      "SELECT AVG(metric_value) AS avg_metric_value, experiment_group, COUNT(*) AS count FROM experiment_results GROUP BY experiment_group HAVING COUNT(*) > 5;",
      "SELECT user_id, experiment_group, SUM(metric_value) AS total_metric_value FROM experiment_data e JOIN experiment_results r ON e.user_id = r.user_id AND e.experiment_id = r.experiment_id GROUP BY user_id, experiment_group HAVING SUM(metric_value) > 1;",
      "SELECT e.user_id, r.experiment_id, MAX(r.metric_value) AS max_metric_value FROM experiment_data e JOIN experiment_results r ON e.experiment_id = r.experiment_id GROUP BY e.user_id, r.experiment_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM experimental_groups;",
      "SELECT group_id, group_name FROM experimental_groups;",
      "SELECT * FROM experiments;",
      "SELECT experiment_id, experiment_name FROM experiments;",
      "SELECT user_id, join_date FROM users;",
      "SELECT * FROM user_actions;",
      "SELECT action_id, action_type FROM user_actions;",
      "SELECT group_id, group_name FROM experimental_groups WHERE group_id = 1;",
      "SELECT experiment_name, start_date FROM experiments WHERE group_id = 1;",
      "SELECT user_id, status FROM users WHERE group_id = 2;",
      "SELECT action_type, action_date FROM user_actions WHERE user_id = 3;",
      "SELECT * FROM experimental_groups WHERE group_name LIKE 'A%';",
      "SELECT * FROM experiments WHERE start_date > '2022-01-01';",
      "SELECT user_id, join_date FROM users WHERE status = 'active';",
      "SELECT group_id, group_name FROM experimental_groups ORDER BY group_id DESC;",
      "SELECT experiment_name, end_date FROM experiments ORDER BY experiment_id ASC;",
      "SELECT user_id, status FROM users ORDER BY status;",
      "SELECT action_type, action_date FROM user_actions WHERE action_date > '2022-01-01' ORDER BY action_date DESC;",
      "SELECT * FROM experimental_groups LIMIT 5;",
      "SELECT * FROM experiments LIMIT 10 OFFSET 5;",
      "SELECT * FROM experimental_groups;",
      "SELECT group_id, group_name FROM experimental_groups WHERE group_id = 1;",
      "SELECT * FROM experiments;",
      "SELECT experiment_id, experiment_name, start_date FROM experiments WHERE group_id = 2;",
      "SELECT * FROM users;",
      "SELECT user_id, join_date, status FROM users WHERE group_id = 3;",
      "SELECT * FROM user_actions;",
      "SELECT action_id, user_id, action_type FROM user_actions WHERE user_id = 4;",
      "SELECT e.experiment_name, e.start_date, u.user_id, u.join_date FROM experiments e JOIN users u ON e.group_id = u.group_id;",
      "SELECT u.user_id, u.join_date, ua.action_type, ua.action_date FROM users u JOIN user_actions ua ON u.user_id = ua.user_id;",
      "SELECT e.experiment_id, e.experiment_name, ea.action_type, ea.action_date FROM experiments e JOIN user_actions ua ON e.experiment_id = ua.user_id;",
      "SELECT u.user_id, u.status, ea.action_type, ea.action_date FROM users u JOIN user_actions ea ON u.user_id = ea.user_id;",
      "SELECT eg.group_name, e.experiment_name, u.user_id, ua.action_type, ua.action_date FROM experimental_groups eg JOIN experiments e ON eg.group_id = e.group_id JOIN users u ON e.group_id = u.group_id JOIN user_actions ua ON u.user_id = ua.user_id;",
      "SELECT e.experiment_name, u.user_id, ua.action_type, ua.action_date FROM experiments e JOIN users u ON e.group_id = u.group_id JOIN user_actions ua ON u.user_id = ua.user_id WHERE u.status = 'active';",
      "SELECT eg.group_name, e.experiment_name, u.user_id, ua.action_type, ua.action_date FROM experimental_groups eg JOIN experiments e ON eg.group_id = e.group_id JOIN users u ON e.group_id = u.group_id JOIN user_actions ua ON u.user_id = ua.user_id WHERE eg.group_id = 1;",
      "SELECT eg.group_id, eg.group_name, e.experiment_id, e.experiment_name, u.user_id, ua.action_type FROM experimental_groups eg JOIN experiments e ON eg.group_id = e.group_id JOIN users u ON e.group_id = u.group_id JOIN user_actions ua ON u.user_id = ua.user_id WHERE u.status = 'inactive';",
      "SELECT eg.group_id, eg.group_name, COUNT(u.user_id) AS total_users FROM experimental_groups eg LEFT JOIN users u ON eg.group_id = u.group_id GROUP BY eg.group_id;",
      "SELECT e.experiment_id, e.experiment_name, COUNT(ua.action_id) AS total_actions FROM experiments e LEFT JOIN user_actions ua ON e.experiment_id = ua.user_id GROUP BY e.experiment_id;",
      "SELECT eg.group_id, eg.group_name, MAX(e.end_date) AS latest_end_date FROM experimental_groups eg JOIN experiments e ON eg.group_id = e.group_id GROUP BY eg.group_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM experiment_users;",
      "SELECT user_id, registration_date FROM experiment_users;",
      "SELECT * FROM experimental_data;",
      "SELECT user_id, experiment_date FROM experimental_data;",
      "SELECT * FROM experiment_results;",
      "SELECT experiment_id, result_value FROM experiment_results;",
      "SELECT * FROM experiment_groups;",
      "SELECT group_id, group_name FROM experiment_groups;",
      "SELECT * FROM experiment_logs;",
      "SELECT user_id, log_date, log_description FROM experiment_logs;",
      "SELECT user_id, registration_date, group_id FROM experiment_users;",
      "SELECT experiment_id, user_id, experiment_date, experimental_data FROM experimental_data;",
      "SELECT result_id, experiment_id, user_id, result_value FROM experiment_results;",
      "SELECT group_id, group_name FROM experiment_groups;",
      "SELECT log_id, user_id, log_date, log_description FROM experiment_logs;",
      "SELECT user_id, group_id FROM experiment_users WHERE registration_date = '2022-01-01';",
      "SELECT experiment_id, user_id, experiment_date FROM experimental_data WHERE user_id = 1;",
      "SELECT user_id, log_description FROM experiment_logs WHERE log_date = '2022-01-01';",
      "SELECT result_id, result_value FROM experiment_results WHERE user_id = 1;",
      "SELECT group_id, group_name FROM experiment_groups WHERE group_id = 1;",
      "SELECT user_id, group_id FROM experiment_users WHERE registration_date > '2022-01-01';",
      "SELECT experiment_id, user_id, experiment_date, experimental_data->>'value' AS data_value FROM experimental_data WHERE user_id = 123;",
      "SELECT result_id, experiment_id, user_id, result_value FROM experiment_results WHERE result_value BETWEEN 0.5 AND 1.0;",
      "SELECT * FROM experiment_groups WHERE group_name LIKE '%control%';",
      "SELECT user_id, log_date FROM experiment_logs WHERE user_id IN (SELECT user_id FROM experiment_users WHERE group_id = 1);",
      "SELECT COUNT(*) AS total_users FROM experiment_users;",
      "SELECT AVG(result_value) AS avg_result_value FROM experiment_results;",
      "SELECT user_id, MAX(log_date) AS last_log_date FROM experiment_logs GROUP BY user_id;",
      "SELECT group_id, COUNT(user_id) AS total_users FROM experiment_users GROUP BY group_id;",
      "SELECT user_id, experiment_date, SUM(result_value) AS total_result FROM experimental_data INNER JOIN experiment_results ON experimental_data.experiment_id = experiment_results.experiment_id WHERE user_id = 456 GROUP BY user_id, experiment_date;",
      "SELECT experiment_id, user_id, AVG(result_value) AS avg_result_value FROM experiment_results GROUP BY experiment_id, user_id HAVING AVG(result_value) > 0.75;",
      "SELECT DISTINCT user_id, user_id AS duplicate_user_id FROM experiment_users ORDER BY user_id DESC LIMIT 10;",
      "SELECT e.result_id, e.experiment_id, e.user_id, e.result_value, u.group_id FROM experiment_results e LEFT JOIN experiment_users u ON e.user_id = u.user_id;",
      "SELECT u.user_id, u.group_id, COUNT(r.result_id) AS total_results FROM experiment_users u LEFT JOIN experiment_results r ON u.user_id = r.user_id GROUP BY u.user_id, u.group_id HAVING COUNT(r.result_id) > 5;",
      "SELECT * FROM experiment_users eu INNER JOIN experimental_data ed ON eu.user_id = ed.user_id INNER JOIN experiment_results er ON eu.user_id = er.user_id WHERE eu.group_id = 1 AND er.result_value > 0.8;",
      "SELECT AVG(er.result_value) AS avg_result_value, eg.group_name FROM experiment_results er INNER JOIN experiment_groups eg ON er.user_id = eg.group_id GROUP BY eg.group_name;",
      "SELECT u.user_id, u.group_id, e.experiment_date, r.result_value FROM experiment_users u INNER JOIN experimental_data e ON u.user_id = e.user_id INNER JOIN experiment_results r ON u.user_id = r.user_id WHERE u.group_id = 1 AND e.experiment_date > '2022-03-01' ORDER BY r.result_value DESC;",
      "SELECT u.user_id, u.group_id, (SELECT COUNT(*) FROM experiment_logs el WHERE el.user_id = u.user_id) AS total_logs FROM experiment_users u;",
      "SELECT user_id, CASE WHEN group_id = 1 THEN 'Control Group' ELSE 'Experimental Group' END AS user_group FROM experiment_users;",
      "SELECT group_id, AVG(log_date) AS avg_log_date FROM experiment_logs GROUP BY group_id;",
      "SELECT user_id, JSON_OBJECT('user_id', user_id, 'group_id', group_id) AS user_info FROM experiment_users;"
    ]
  }
]