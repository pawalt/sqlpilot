[
  {
    "statements": [
      "SELECT * FROM user_behavior_data LIMIT 10;",
      "SELECT user_id, behavior_type FROM user_behavior_data WHERE product_id = 123;",
      "SELECT DISTINCT behavior_type FROM user_behavior_data;",
      "SELECT user_id, COUNT(*) FROM user_behavior_data GROUP BY user_id HAVING COUNT(*) > 3;",
      "SELECT AVG(product_id) FROM user_behavior_data WHERE behavior_type = 'click';",
      "SELECT * FROM user_behavior_data WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-01-31';",
      "SELECT MAX(product_id) FROM user_behavior_data;",
      "SELECT behavior_type, COUNT(*) FROM user_behavior_data GROUP BY behavior_type;",
      "SELECT user_id, behavior_type, product_id FROM user_behavior_data ORDER BY timestamp DESC LIMIT 5;",
      "SELECT user_id, behavior_type, product_id FROM user_behavior_data ORDER BY product_id ASC LIMIT 5;",
      "SELECT COUNT(*) FROM user_behavior_data;",
      "SELECT * FROM user_behavior_data WHERE behavior_type = 'purchase' AND product_id = 456;",
      "SELECT DISTINCT user_id FROM user_behavior_data;",
      "SELECT behavior_type, COUNT(*) AS 'count' FROM user_behavior_data GROUP BY behavior_type ORDER BY COUNT(*) DESC;",
      "SELECT user_id, product_id FROM user_behavior_data WHERE behavior_type = 'view' AND product_id IN (789, 890, 901);",
      "SELECT user_id, behavior_type, product_id FROM user_behavior_data WHERE user_id = 12345;",
      "SELECT behavior_type, COUNT(*) FROM user_behavior_data WHERE behavior_type IN ('view', 'click') GROUP BY behavior_type;",
      "SELECT user_id, SUM(product_id) FROM user_behavior_data WHERE behavior_type = 'purchase';",
      "SELECT user_id, MAX(timestamp) AS last_behavior FROM user_behavior_data GROUP BY user_id;",
      "SELECT user_id, behavior_type, product_id FROM user_behavior_data WHERE user_id IN (54321, 65432, 76543) ORDER BY user_id;",
      "SELECT user_id, behavior_type FROM user_behavior_data WHERE product_id = 123 AND timestamp >= '2022-01-01';",
      "SELECT DISTINCT user_id FROM user_behavior_data WHERE behavior_type = 'click' ORDER BY timestamp DESC LIMIT 5;",
      "SELECT behavior_type, COUNT(*) AS total_count FROM user_behavior_data GROUP BY behavior_type HAVING COUNT(*) > 10;",
      "SELECT user_id, MAX(timestamp) AS last_behavior FROM user_behavior_data GROUP BY user_id HAVING last_behavior < '2022-06-30';",
      "SELECT user_id, AVG(product_id) AS avg_product_id FROM user_behavior_data GROUP BY user_id HAVING AVG(product_id) > 100;",
      "SELECT behavior_type, COUNT(*) AS total_count FROM user_behavior_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY behavior_type;",
      "SELECT user_id, COUNT(DISTINCT behavior_type) AS unique_behaviors FROM user_behavior_data GROUP BY user_id HAVING unique_behaviors > 3;",
      "SELECT behavior_type, product_id, COUNT(*) AS total_count FROM user_behavior_data WHERE user_id IN (1, 2, 3) GROUP BY behavior_type, product_id;",
      "SELECT user_id, COUNT(*) AS total_count FROM user_behavior_data WHERE TIMESTAMPDIFF(HOUR, timestamp, NOW()) < 24 GROUP BY user_id HAVING total_count > 5;",
      "SELECT user_id, MIN(product_id) AS min_product_id, MAX(product_id) AS max_product_id FROM user_behavior_data GROUP BY user_id;",
      "SELECT user_id, behavior_type, product_id, timestamp FROM user_behavior_data WHERE user_id = 1 ORDER BY timestamp DESC LIMIT 10;",
      "SELECT user_id, behavior_type, product_id, timestamp FROM user_behavior_data WHERE behavior_type IN ('click', 'purchase') AND product_id BETWEEN 100 AND 200 ORDER BY timestamp DESC;",
      "SELECT TOP 10 user_id, behavior_type FROM user_behavior_data ORDER BY timestamp DESC;",
      "SELECT user_id, behavior_type, COUNT(*) AS total_count FROM user_behavior_data WHERE behavior_type LIKE 'buy%' GROUP BY user_id, behavior_type HAVING total_count > 5;",
      "SELECT user_id, behavior_type, product_id, timestamp FROM user_behavior_data WHERE YEAR(timestamp) = 2022 AND MONTH(timestamp) = 6 ORDER BY timestamp;",
      "SELECT user_id, behavior_type, product_id, timestamp FROM user_behavior_data WHERE user_id IN (SELECT user_id FROM user_behavior_data WHERE behavior_type = 'click') AND product_id NOT IN (SELECT product_id FROM user_behavior_data WHERE behavior_type = 'purchase') ORDER BY timestamp;",
      "SELECT user_id, AVG(TIMESTAMPDIFF(SECOND, timestamp, NOW())) AS avg_time_since_last_behavior FROM user_behavior_data GROUP BY user_id HAVING avg_time_since_last_behavior > 3600;",
      "SELECT user_id, behavior_type, timestamp FROM user_behavior_data WHERE behavior_type = 'purchase' AND MONTH(timestamp) = 5 ORDER BY timestamp DESC;",
      "SELECT user_id, behavior_type, COUNT(*) AS total_count FROM user_behavior_data GROUP BY user_id, behavior_type HAVING total_count > 5 ORDER BY total_count DESC;",
      "SELECT user_id, behavior_type, product_id, HOUR(timestamp) AS hour_of_day FROM user_behavior_data WHERE behavior_type = 'click' AND HOUR(timestamp) BETWEEN 9 AND 17 ORDER BY timestamp;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM UserBehaviorData WHERE user_id = 123;",
      "SELECT behavior_type, timestamp FROM UserBehaviorData WHERE behavior_type = 'click';",
      "SELECT * FROM UserBehaviorData WHERE timestamp > '2022-01-01';",
      "SELECT DISTINCT behavior_type FROM UserBehaviorData;",
      "SELECT user_id, MIN(timestamp) as first_interaction FROM UserBehaviorData GROUP BY user_id;",
      "SELECT user_id, COUNT(*) as behaviors_count FROM UserBehaviorData GROUP BY user_id;",
      "SELECT * FROM ProductRecommendations WHERE user_id = 456;",
      "SELECT product_id, recommendation_score FROM ProductRecommendations ORDER BY recommendation_score DESC;",
      "SELECT AVG(recommendation_score) as avg_score FROM ProductRecommendations;",
      "SELECT * FROM ProductRecommendations WHERE recommendation_date = '2022-10-15';",
      "SELECT user_id, COUNT(*) as recommendations_count FROM ProductRecommendations GROUP BY user_id;",
      "SELECT user_id, MAX(recommendation_score) as max_score FROM ProductRecommendations GROUP BY user_id;",
      "SELECT user_id, AVG(recommendation_score) as avg_score FROM ProductRecommendations GROUP BY user_id;",
      "SELECT user_id, product_id, recommendation_score FROM ProductRecommendations WHERE recommendation_score > 0.8;",
      "SELECT * FROM UserBehaviorData JOIN ProductRecommendations ON UserBehaviorData.user_id = ProductRecommendations.user_id;",
      "SELECT u.user_id, p.product_id, p.recommendation_score FROM UserBehaviorData u JOIN ProductRecommendations p ON u.user_id = p.user_id;",
      "SELECT u.user_id, COUNT(*) as behaviors_count, COUNT(p.product_id) as recommendations_count FROM UserBehaviorData u JOIN ProductRecommendations p ON u.user_id = p.user_id GROUP BY u.user_id;",
      "SELECT u.user_id, COUNT(*) as behaviors_count, AVG(p.recommendation_score) as avg_score FROM UserBehaviorData u JOIN ProductRecommendations p ON u.user_id = p.user_id GROUP BY u.user_id;",
      "SELECT u.user_id, behavior_type, COUNT(*) as behaviors_count, AVG(p.recommendation_score) as avg_score FROM UserBehaviorData u JOIN ProductRecommendations p ON u.user_id = p.user_id GROUP BY u.user_id, behavior_type;",
      "SELECT u.user_id, MIN(u.timestamp) as first_interaction, MAX(p.recommendation_score) as max_score FROM UserBehaviorData u JOIN ProductRecommendations p ON u.user_id = p.user_id GROUP BY u.user_id;",
      "SELECT * FROM UserBehaviorData WHERE user_id = 123;",
      "SELECT user_id, behavior_type FROM UserBehaviorData WHERE user_id IN (SELECT user_id FROM ProductRecommendations WHERE recommendation_score > 0.8);",
      "SELECT user_id, recommendation_score FROM ProductRecommendations WHERE recommendation_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT user_id, MAX(recommendation_score) FROM ProductRecommendations GROUP BY user_id;",
      "SELECT user_id, COUNT(*) AS recommendation_count FROM ProductRecommendations GROUP BY user_id HAVING recommendation_count > 5;",
      "SELECT user_id, AVG(recommendation_score) AS average_score FROM ProductRecommendations GROUP BY user_id;",
      "SELECT user_id, behavior_type, recommendation_score FROM UserBehaviorData JOIN ProductRecommendations ON UserBehaviorData.user_id = ProductRecommendations.user_id;",
      "SELECT user_id, behavior_type, MAX(recommendation_score) AS max_score FROM UserBehaviorData JOIN ProductRecommendations ON UserBehaviorData.user_id = ProductRecommendations.user_id GROUP BY user_id;",
      "SELECT user_id, behavior_type, recommendation_score FROM UserBehaviorData LEFT JOIN ProductRecommendations ON UserBehaviorData.user_id = ProductRecommendations.user_id;",
      "SELECT user_id, behavior_type, recommendation_score FROM UserBehaviorData RIGHT JOIN ProductRecommendations ON UserBehaviorData.user_id = ProductRecommendations.user_id;",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData ON ProductRecommendations.user_id = UserBehaviorData.user_id;",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations INNER JOIN UserBehaviorData ON ProductRecommendations.user_id = UserBehaviorData.user_id;",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData USING (user_id);",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData USING (user_id) WHERE recommendation_score > 0.5;",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData ON ProductRecommendations.user_id = UserBehaviorData.user_id WHERE behavior_type = 'click';",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData ON ProductRecommendations.user_id = UserBehaviorData.user_id ORDER BY recommendation_score DESC;",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData ON ProductRecommendations.user_id = UserBehaviorData.user_id ORDER BY recommendation_score DESC LIMIT 10;",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData ON ProductRecommendations.user_id = UserBehaviorData.user_id ORDER BY recommendation_score DESC, timestamp ASC;",
      "SELECT user_id, behavior_type, recommendation_score FROM ProductRecommendations JOIN UserBehaviorData ON ProductRecommendations.user_id = UserBehaviorData.user_id WHERE recommendation_date = '2022-10-15';",
      "SELECT user_id, COUNT(DISTINCT behavior_type) AS unique_behaviors FROM UserBehaviorData GROUP BY user_id;",
      "SELECT user_id, SUM(recommendation_score) AS total_score FROM ProductRecommendations GROUP BY user_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_profiles LIMIT 5;",
      "SELECT user_id, username, email FROM user_profiles WHERE age < 30;",
      "SELECT username, email FROM user_profiles WHERE gender = 'Female';",
      "SELECT * FROM user_profiles WHERE username LIKE 'A%';",
      "SELECT * FROM user_interactions LIMIT 5;",
      "SELECT user_id, action, item_id FROM user_interactions WHERE user_id = 1001;",
      "SELECT * FROM user_interactions WHERE timestamp >= '2022-01-01';",
      "SELECT * FROM product_recommendations LIMIT 5;",
      "SELECT user_id, recommended_item_id, score FROM product_recommendations WHERE user_id = 2001;",
      "SELECT * FROM product_recommendations WHERE score > 0.8;",
      "SELECT pr.recommended_item_id, pr.score, up.username FROM product_recommendations pr JOIN user_profiles up ON pr.user_id = up.user_id;",
      "SELECT pr.recommended_item_id, pr.score, ui.action FROM product_recommendations pr JOIN user_interactions ui ON pr.user_id = ui.user_id;",
      "SELECT ui.user_id, ui.action, pr.score FROM user_interactions ui JOIN product_recommendations pr ON ui.user_id = pr.user_id;",
      "SELECT up.gender, COUNT(ui.interaction_id) AS total_interactions FROM user_profiles up LEFT JOIN user_interactions ui ON up.user_id = ui.user_id GROUP BY up.gender;",
      "SELECT up.username, pr.recommended_item_id AS item_id, MAX(pr.score) AS max_score FROM user_profiles up JOIN product_recommendations pr ON up.user_id = pr.user_id GROUP BY up.username, pr.recommended_item_id;",
      "SELECT up.username, AVG(ui.item_id) AS avg_item_id FROM user_profiles up JOIN user_interactions ui ON up.user_id = ui.user_id GROUP BY up.username;",
      "SELECT DISTINCT up.username, ui.action FROM user_profiles up JOIN user_interactions ui ON up.user_id = ui.user_id ORDER BY up.username ASC;",
      "SELECT up.username, COUNT(pr.recommendation_id) AS total_recommendations FROM user_profiles up LEFT JOIN product_recommendations pr ON up.user_id = pr.user_id GROUP BY up.username;",
      "SELECT up.username, MAX(ui.timestamp) AS last_interaction FROM user_profiles up JOIN user_interactions ui ON up.user_id = ui.user_id GROUP BY up.username;",
      "SELECT * FROM user_profiles WHERE age > 30 AND gender = 'Male';",
      "SELECT DISTINCT username FROM user_profiles WHERE gender = 'Female';",
      "SELECT user_id, COUNT(interaction_id) AS total_interactions FROM user_interactions GROUP BY user_id HAVING total_interactions > 10;",
      "SELECT user_id, AVG(score) AS avg_score FROM product_recommendations GROUP BY user_id HAVING avg_score > 0.75;",
      "SELECT user_profiles.username, user_interactions.action FROM user_profiles JOIN user_interactions ON user_profiles.user_id = user_interactions.user_id WHERE user_profiles.age BETWEEN 20 AND 30;",
      "SELECT user_profiles.username, product_recommendations.recommended_item_id FROM user_profiles INNER JOIN product_recommendations ON user_profiles.user_id = product_recommendations.user_id WHERE product_recommendations.score >= 0.8;",
      "SELECT user_id, COUNT(DISTINCT item_id) AS unique_items FROM user_interactions GROUP BY user_id HAVING unique_items > 5;",
      "SELECT user_id, MAX(score) AS max_score FROM product_recommendations GROUP BY user_id;",
      "SELECT user_profiles.username, user_interactions.timestamp FROM user_profiles JOIN user_interactions ON user_profiles.user_id = user_interactions.user_id ORDER BY user_interactions.timestamp DESC;",
      "SELECT user_profiles.username, product_recommendations.recommended_item_id, product_recommendations.timestamp FROM user_profiles INNER JOIN product_recommendations ON user_profiles.user_id = product_recommendations.user_id ORDER BY product_recommendations.timestamp DESC;",
      "SELECT user_profiles.username, SUM(score) AS total_score FROM user_profiles LEFT JOIN product_recommendations ON user_profiles.user_id = product_recommendations.user_id GROUP BY user_profiles.username HAVING total_score > 100;",
      "SELECT user_id, AVG(DATEDIFF(NOW(), timestamp)) AS avg_days_since_interaction FROM user_interactions GROUP BY user_id HAVING avg_days_since_interaction < 10;",
      "SELECT user_id, COUNT(recommendation_id) AS total_recommendations FROM product_recommendations GROUP BY user_id ORDER BY total_recommendations DESC LIMIT 10;",
      "SELECT user_profiles.username, user_interactions.action FROM user_profiles LEFT JOIN user_interactions ON user_profiles.user_id = user_interactions.user_id WHERE user_interactions.action IS NULL;",
      "SELECT user_profiles.username, AVG(score) AS avg_score FROM user_profiles LEFT JOIN product_recommendations ON user_profiles.user_id = product_recommendations.user_id GROUP BY user_profiles.username ORDER BY avg_score DESC;",
      "SELECT user_profiles.username, COUNT(recommendation_id) AS total_recommendations FROM user_profiles LEFT JOIN product_recommendations ON user_profiles.user_id = product_recommendations.user_id GROUP BY user_profiles.username HAVING total_recommendations = 0;",
      "SELECT user_profiles.username, MAX(score) AS max_score FROM user_profiles LEFT JOIN product_recommendations ON user_profiles.user_id = product_recommendations.user_id GROUP BY user_profiles.username;",
      "SELECT user_profiles.username, MIN(score) AS min_score FROM user_profiles LEFT JOIN product_recommendations ON user_profiles.user_id = product_recommendations.user_id GROUP BY user_profiles.username;",
      "SELECT user_profiles.username, SUBSTRING(email, 1, 5) AS email_prefix FROM user_profiles;",
      "SELECT user_profiles.username, REPLACE(username, ' ', '_') AS new_username FROM user_profiles;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users;",
      "SELECT email FROM users WHERE username = 'example_username';",
      "SELECT * FROM products;",
      "SELECT product_name, category FROM products WHERE price > 100;",
      "SELECT * FROM user_actions;",
      "SELECT action_id, user_id, product_id FROM user_actions WHERE action_type = 'like';",
      "SELECT * FROM recommendations;",
      "SELECT user_id, recommended_product_id, recommendation_score FROM recommendations WHERE recommendation_score > 8.0;",
      "SELECT * FROM users WHERE username LIKE 'a%';",
      "SELECT * FROM products WHERE category IN ('electronics', 'clothing');",
      "SELECT user_id, action_timestamp FROM user_actions WHERE user_id = '1234-5678';",
      "SELECT user_id, recommended_product_id FROM recommendations WHERE user_id = '9876-5432';",
      "SELECT COUNT(*) FROM users;",
      "SELECT MAX(price), MIN(price), AVG(price) FROM products;",
      "SELECT user_id, count(action_id) FROM user_actions GROUP BY user_id;",
      "SELECT DISTINCT category FROM products;",
      "SELECT user_id, recommended_product_id, recommendation_score FROM recommendations ORDER BY recommendation_score DESC;",
      "SELECT * FROM user_actions WHERE action_timestamp >= '2023-01-01';",
      "SELECT user_id, SUM(price) FROM user_actions JOIN products ON user_actions.product_id = products.product_id GROUP BY user_id;",
      "SELECT user_id, username, email FROM users WHERE username = 'john_doe';",
      "SELECT product_id, product_name, price FROM products WHERE category = 'Electronics' AND price > 500;",
      "SELECT user_id, product_id, action_type FROM user_actions WHERE action_type = 'viewed' ORDER BY action_timestamp DESC;",
      "SELECT user_id, recommended_product_id, recommendation_score FROM recommendations WHERE user_id = 'b8f79d72-99f1-4f04-af56-00319e6cfd52';",
      "SELECT u.username, p.product_name, r.recommendation_score FROM users u JOIN recommendations r ON u.user_id = r.user_id JOIN products p ON r.recommended_product_id = p.product_id WHERE r.recommendation_score > 4.5;",
      "SELECT u.username, p.category, r.recommendation_score FROM users u JOIN recommendations r ON u.user_id = r.user_id JOIN products p ON r.recommended_product_id = p.product_id WHERE p.category = 'Clothing' AND r.recommendation_score > 4;",
      "SELECT COUNT(*) FROM users;",
      "SELECT AVG(price) FROM products WHERE category = 'Electronics';",
      "SELECT user_id, COUNT(*) AS total_actions FROM user_actions GROUP BY user_id HAVING total_actions > 10;",
      "SELECT user_id, COUNT(DISTINCT product_id) AS unique_products FROM user_actions GROUP BY user_id ORDER BY unique_products DESC;",
      "SELECT COUNT(*) AS total_recommendations, AVG(recommendation_score) AS average_score FROM recommendations;",
      "SELECT u.username, COUNT(r.recommended_product_id) AS recommended_products FROM users u JOIN recommendations r ON u.user_id = r.user_id GROUP BY u.username HAVING recommended_products >= 3;",
      "SELECT MAX(price) FROM products WHERE category = 'Electronics';",
      "SELECT MIN(price) FROM products WHERE category = 'Clothing';",
      "SELECT user_id, SUM(price) AS total_spent FROM user_actions ua JOIN products p ON ua.product_id = p.product_id GROUP BY user_id ORDER BY total_spent DESC;",
      "SELECT user_id, MAX(action_timestamp) AS last_action FROM user_actions GROUP BY user_id;",
      "SELECT user_id, MIN(action_timestamp) AS first_action FROM user_actions GROUP BY user_id;",
      "SELECT user_id, AVG(recommendation_score) AS avg_score FROM recommendations GROUP BY user_id;",
      "SELECT AVG(recommendation_score) AS overall_avg FROM recommendations;",
      "SELECT u.username, p.product_name, COUNT(r.recommendation_id) AS total_recommendations FROM users u LEFT JOIN recommendations r ON u.user_id = r.user_id JOIN products p ON r.recommended_product_id = p.product_id GROUP BY u.username, p.product_name ORDER BY total_recommendations DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_profiles;",
      "SELECT user_id, username, email FROM user_profiles WHERE age > 30;",
      "SELECT user_id, gender FROM user_profiles WHERE username = 'johndoe';",
      "SELECT * FROM user_events WHERE event_type = 'purchase' ORDER BY event_timestamp DESC;",
      "SELECT product_id, product_name, price FROM product_catalog WHERE price < 100;",
      "SELECT user_id, product_id, recommendation_score FROM recommended_products WHERE recommendation_score > 4.0;",
      "SELECT user_id, feedback_text FROM user_feedback WHERE feedback_rating = 5;",
      "SELECT user_id, event_type, event_timestamp FROM user_events WHERE user_id = 123;",
      "SELECT feedback_id, feedback_text FROM user_feedback WHERE user_id = 456 ORDER BY feedback_timestamp DESC;",
      "SELECT user_id, event_type, COUNT(*) AS event_count FROM user_events GROUP BY user_id, event_type;",
      "SELECT user_id, COUNT(*) AS total_feedback FROM user_feedback GROUP BY user_id HAVING total_feedback > 3;",
      "SELECT user_id, AVG(feedback_rating) AS avg_rating FROM user_feedback GROUP BY user_id;",
      "SELECT user_id, category, SUM(price) AS total_spent FROM product_catalog WHERE user_id = 789 GROUP BY category;",
      "SELECT user_id, event_type, MIN(event_timestamp) AS first_event FROM user_events GROUP BY user_id;",
      "SELECT user_id, MAX(price) AS max_spent FROM product_catalog WHERE user_id = 123;",
      "SELECT user_id, AVG(recommendation_score) AS avg_score FROM recommended_products WHERE user_id = 456;",
      "SELECT user_id, feedback_rating, COUNT(*) AS count FROM user_feedback GROUP BY user_id, feedback_rating;",
      "SELECT username, email, age, gender FROM user_profiles WHERE age BETWEEN 20 AND 30;",
      "SELECT user_id, event_type, AVG(recommendation_score) AS avg_score FROM user_events LEFT JOIN recommended_products ON user_events.user_id = recommended_products.user_id GROUP BY user_id, event_type;",
      "SELECT user_id, event_type, event_timestamp FROM user_events WHERE DATE(event_timestamp) = '2022-01-15';",
      "SELECT * FROM user_profiles WHERE age > 30;",
      "SELECT user_id, username, email FROM user_profiles WHERE gender = 'Female';",
      "SELECT u.user_id, u.username, e.event_type FROM user_profiles u JOIN user_events e ON u.user_id = e.user_id;",
      "SELECT p.product_id, p.product_name, p.price FROM product_catalog p JOIN recommended_products r ON p.product_id = r.product_id;",
      "SELECT u.user_id, u.username, COUNT(f.feedback_id) AS num_feedbacks FROM user_profiles u LEFT JOIN user_feedback f ON u.user_id = f.user_id GROUP BY u.user_id;",
      "SELECT user_id, MAX(age) AS max_age, MIN(age) AS min_age FROM user_profiles GROUP BY user_id;",
      "SELECT user_id, AVG(feedback_rating) AS avg_rating FROM user_feedback GROUP BY user_id HAVING avg_rating > 4;",
      "SELECT * FROM user_profiles WHERE user_id IN (SELECT user_id FROM recommended_products WHERE recommendation_score > 8);",
      "SELECT user_id, event_type, COUNT(event_id) AS num_events FROM user_events GROUP BY user_id, event_type;",
      "SELECT category, AVG(price) AS avg_price FROM product_catalog GROUP BY category HAVING avg_price > 50;",
      "SELECT user_id, event_type, event_timestamp FROM user_events WHERE event_timestamp BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT u.user_id, u.username, SUM(p.price) AS total_spent FROM user_profiles u JOIN recommended_products r ON u.user_id = r.user_id JOIN product_catalog p ON r.product_id = p.product_id GROUP BY u.user_id;",
      "SELECT user_id, event_type, DATEDIFF(CURDATE(), event_timestamp) AS days_since_event FROM user_events;",
      "SELECT u.user_id, u.username, COUNT(r.recommendation_id) AS num_recommendations FROM user_profiles u LEFT JOIN recommended_products r ON u.user_id = r.user_id GROUP BY u.user_id HAVING num_recommendations < 5;",
      "SELECT u.user_id, u.username, COUNT(f.feedback_id) AS num_feedbacks FROM user_profiles u LEFT JOIN user_feedback f ON u.user_id = f.user_id WHERE feedback_rating = 5 GROUP BY u.user_id;",
      "SELECT user_id, AVG(recommendation_score) AS avg_score FROM recommended_products GROUP BY user_id HAVING avg_score > 7;",
      "SELECT DISTINCT e.event_type FROM user_events e;",
      "SELECT u.user_id, u.username, f.feedback_text FROM user_profiles u JOIN user_feedback f ON u.user_id = f.user_id WHERE LENGTH(f.feedback_text) > 100;",
      "SELECT user_id, category, COUNT(product_id) AS num_products FROM product_catalog GROUP BY category ORDER BY num_products DESC;",
      "SELECT u.user_id, u.username, e.event_type, e.event_timestamp FROM user_profiles u JOIN user_events e ON u.user_id = e.user_id WHERE YEAR(event_timestamp) = 2021;"
    ]
  }
]