[
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT email FROM customers;",
      "SELECT customer_id, first_name, last_name FROM customers WHERE registration_date > '2022-01-01';",
      "SELECT * FROM customers WHERE customer_id = 5;",
      "SELECT first_name, email FROM customers WHERE phone_number LIKE '%12345%';",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE registration_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT * FROM customers WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT customer_id, email FROM customers WHERE registration_date < '2022-08-01';",
      "SELECT first_name, last_name, email FROM customers WHERE customer_id IN (1, 3, 5);",
      "SELECT * FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT COUNT(*) FROM customers;",
      "SELECT DISTINCT first_name FROM customers;",
      "SELECT MAX(registration_date) FROM customers;",
      "SELECT first_name, last_name FROM customers ORDER BY last_name ASC;",
      "SELECT * FROM customers WHERE registration_date > '2022-01-01' ORDER BY registration_date DESC;",
      "SELECT customer_id, first_name, last_name FROM customers WHERE registration_date < '2022-12-31' ORDER BY last_name, first_name ASC;",
      "SELECT DISTINCT email FROM customers WHERE registration_date > '2022-06-01';",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE registration_date < '2022-09-01' AND email LIKE '%@yahoo.com';",
      "SELECT AVG(LENGTH(first_name)) FROM customers;",
      "SELECT customer_id, first_name, last_name, email, phone_number FROM customers WHERE registration_date >= '2022-01-01'",
      "SELECT * FROM customers WHERE last_name LIKE 'S%' ORDER BY registration_date DESC",
      "SELECT COUNT(*) AS total_customers FROM customers WHERE registration_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT first_name, last_name, COUNT(*) AS order_count FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY first_name, last_name",
      "SELECT customer_id, registration_date FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE order_date >= '2022-01-01') ORDER BY registration_date DESC",
      "SELECT first_name, last_name, email FROM customers WHERE email LIKE '%@gmail.com' OR email LIKE '%@yahoo.com'",
      "SELECT * FROM customers WHERE first_name = 'John' AND (last_name = 'Doe' OR last_name = 'Smith')",
      "SELECT DISTINCT email FROM customers WHERE registration_date >= '2022-01-01'",
      "SELECT customer_id, first_name, last_name FROM customers WHERE registration_date < '2022-01-01' AND (email LIKE '%@gmail.com' OR email LIKE '%@yahoo.com')",
      "SELECT first_name, last_name, COUNT(*) AS order_count FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY first_name, last_name HAVING order_count > 5",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE registration_date >= '2022-01-01' AND (email NOT LIKE '%@gmail.com' AND email NOT LIKE '%@yahoo.com')",
      "SELECT first_name, last_name, registration_date FROM customers WHERE DATE_PART('year', registration_date) = 2022",
      "SELECT customer_id, first_name, last_name, phone_number FROM customers WHERE registration_date >= '2022-01-01' AND phone_number IS NOT NULL",
      "SELECT MAX(registration_date) AS latest_registration_date FROM customers",
      "SELECT first_name, last_name, COUNT(*) AS order_count FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY first_name, last_name",
      "SELECT first_name, last_name, COUNT(*) AS order_count FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id GROUP BY first_name, last_name",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE registration_date >= '2022-01-01' AND (email LIKE '%@gmail.com' OR email LIKE '%@yahoo.com') ORDER BY customer_id DESC LIMIT 10",
      "SELECT first_name, last_name, registration_date FROM customers WHERE EXTRACT(MONTH FROM registration_date) = 1",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE registration_date >= '2022-01-01' AND (last_name <> 'Doe' OR last_name != 'Smith')",
      "SELECT * FROM customers WHERE first_name IN ('Alice', 'Bob', 'Charlie') ORDER BY first_name",
      "SELECT first_name, last_name, email, registration_date FROM customers WHERE registration_date BETWEEN '2022-01-01' AND '2022-12-31'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers",
      "SELECT name, email FROM customers",
      "SELECT customer_id, name FROM customers",
      "SELECT * FROM orders",
      "SELECT order_date, total_amount FROM orders",
      "SELECT order_id, total_amount FROM orders",
      "SELECT c.name, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id",
      "SELECT c.name, o.total_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id",
      "SELECT c.name, o.total_amount FROM customers c, orders o WHERE c.customer_id = o.customer_id",
      "SELECT * FROM customers WHERE name LIKE 'A%'",
      "SELECT * FROM orders WHERE total_amount > 1000",
      "SELECT * FROM customers WHERE phone_number IS NULL",
      "SELECT c.name, COUNT(o.order_id) AS order_count FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name",
      "SELECT c.name, SUM(o.total_amount) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name",
      "SELECT c.name, AVG(o.total_amount) AS avg_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name",
      "SELECT c.name, MIN(o.total_amount) AS min_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name",
      "SELECT c.name, MAX(o.total_amount) AS max_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name",
      "SELECT * FROM customers ORDER BY name ASC",
      "SELECT * FROM orders ORDER BY order_date DESC LIMIT 5",
      "SELECT * FROM customers C, orders O WHERE C.customer_id = O.customer_id;",
      "SELECT * FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.name = 'John';",
      "SELECT customers.customer_id, customers.name, orders.order_date FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.total_amount > 1000;",
      "SELECT customers.name, COUNT(orders.order_id) AS num_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name HAVING COUNT(orders.order_id) >= 5;",
      "SELECT customers.name, SUM(orders.total_amount) AS total_spent FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name ORDER BY total_spent DESC;",
      "SELECT customers.name, AVG(orders.total_amount) AS avg_amount FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name HAVING AVG(orders.total_amount) > 500;",
      "SELECT customers.name, MIN(orders.total_amount) AS min_amount, MAX(orders.total_amount)..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_id, customer_name, signup_date FROM customers;",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date, total_amount FROM orders;",
      "SELECT order_id, customer_id, order_date, total_amount FROM orders;",
      "SELECT * FROM products;",
      "SELECT product_name, unit_price FROM products;",
      "SELECT product_id, product_name, category, unit_price FROM products;",
      "SELECT customer_name, order_date, total_amount FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, order_date, total_amount, product_name FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN products ON orders.product_id = products.product_id;",
      "SELECT customer_name, order_date, total_amount, product_name, unit_price FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN products ON orders.product_id = products.product_id WHERE total_amount > 100;",
      "SELECT customer_name, order_date, total_amount, product_name, unit_price FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN products ON orders.product_id = products.product_id WHERE category = 'Electronics';",
      "SELECT customer_name, order_date, total_amount, product_name, unit_price FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN products ON orders.product_id = products.product_id;",
      "SELECT customer_name, order_date, total_amount, product_name, unit_price FROM customers RIGHT JOIN orders ON customers.customer_id = orders.customer_id RIGHT JOIN products ON orders.product_id = products.product_id;",
      "SELECT DISTINCT category FROM products;",
      "SELECT AVG(unit_price) AS avg_unit_price FROM products;",
      "SELECT customer_id, COUNT(order_id) AS num_orders FROM orders GROUP BY customer_id;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(total_amount) AS avg_amount_spent FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, customer_email FROM customers WHERE signup_date > '2021-01-01';",
      "SELECT * FROM orders JOIN customers ON orders.customer_id = customers.customer_id WHERE orders.total_amount > 1000;",
      "SELECT product_name, unit_price, category FROM products WHERE unit_price < 50;",
      "SELECT orders.order_id, customers.customer_name, orders.total_amount FROM orders JOIN customers ON orders.customer_id = customers.customer_id WHERE orders.total_amount BETWEEN 500 AND 1000;",
      "SELECT customer_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date > '2021-06-01';",
      "SELECT customer_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount < 500;",
      "SELECT customer_name, order_date FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date IS NULL;",
      "SELECT customer_name, category FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE category = 'Electronics';",
      "SELECT customer_name, product_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customer_name LIKE 'J%';",
      "SELECT customer_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_date = '2021-08-01';",
      "SELECT customer_name, product_name, category FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE products.category = 'Clothing';",
      "SELECT customer_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2021-09-01' ORDER BY order_date DESC;",
      "SELECT customers.customer_name, products.product_name, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE orders.total_amount > products.unit_price;",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.total_amount = (SELECT MAX(total_amount) FROM orders);",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE orders.total_amount >= 100 AND products.unit_price <= 50;",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount IN (SELECT total_amount FROM orders WHERE total_amount > 500);",
      "SELECT customer_name, orders.order_id, products.product_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE products.category = 'Electronics' AND orders.total_amount > 1000;",
      "SELECT product_name, category, unit_price FROM products WHERE unit_price > (SELECT AVG(unit_price) FROM products);",
      "SELECT customer_name, products.product_name, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE products.category = 'Electronics' OR products.category = 'Clothing';",
      "SELECT customer_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.total_amount > (SELECT AVG(total_amount) FROM orders);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_name, phone_number FROM customers WHERE address='New York';",
      "SELECT * FROM orders;",
      "SELECT order_id, total_amount FROM orders WHERE order_date='2022-10-15';",
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products WHERE category='Electronics';",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, quantity, subtotal FROM transactions WHERE order_id=1001;",
      "SELECT customers.customer_name, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT products.product_name, transactions.quantity FROM products JOIN transactions ON products.product_id = transactions.product_id;",
      "SELECT orders.order_id, products.product_name, transactions.quantity FROM orders JOIN products ON orders.order_id = products.product_id JOIN transactions ON products.product_id = transactions.product_id;",
      "SELECT customers.customer_name, orders.total_amount, products.product_name, transactions.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id JOIN products ON transactions.product_id = products.product_id;",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%' AND phone_number LIKE '555%'",
      "SELECT customer_name, email FROM customers WHERE address LIKE '%Avenue%'",
      "SELECT customer_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id",
      "SELECT * FROM transactions WHERE quantity > 10 AND subtotal > 1000",
      "SELECT * FROM orders WHERE total_amount BETWEEN 100 AND 500",
      "SELECT customer_name, SUM(subtotal) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customer_name",
      "SELECT product_name, category, price FROM products WHERE price > 50 ORDER BY price DESC",
      "SELECT customer_name, COUNT(order_id) AS num_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING num_orders > 5",
      "SELECT customer_name, email FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM orders)",
      "SELECT customer_name, order_id, product_name, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id WHERE quantity > 5",
      "SELECT DISTINCT category FROM products",
      "SELECT customer_name, SUM(quantity) AS total_quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customer_name",
      "SELECT * FROM products WHERE category = 'Electronics' AND price < 1000 ORDER BY price",
      "SELECT customer_name, AVG(subtotal) AS avg_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customer_name",
      "SELECT customer_name, MAX(total_amount) AS max_purchase FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name",
      "SELECT customer_name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE total_amount > 1000)",
      "SELECT product_name, COUNT(product_id) AS num_products FROM products JOIN transactions ON products.product_id = transactions.product_id GROUP BY product_name HAVING num_products > 10",
      "SELECT customer_name, AVG(total_amount) AS avg_purchase FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name",
      "SELECT customer_name, MAX(subtotal) AS max_spend FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customer_name",
      "SELECT product_name, category, SUM(quantity) AS total_quantity FROM products JOIN transactions ON products.product_id = transactions.product_id GROUP BY product_name, category",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers",
      "SELECT customer_name, email FROM customers",
      "SELECT customer_name, phone_number FROM customers",
      "SELECT * FROM orders",
      "SELECT order_date, total_amount FROM orders",
      "SELECT * FROM products",
      "SELECT product_name, price FROM products",
      "SELECT * FROM transactions",
      "SELECT order_id, product_id, quantity FROM transactions",
      "SELECT * FROM feedback",
      "SELECT customer_id, product_id, rating FROM feedback",
      "SELECT customer_name, email, order_date, total_amount FROM customers, orders WHERE customers.customer_id = orders.customer_id",
      "SELECT product_name, price, category FROM products WHERE price > 50",
      "SELECT product_name, price, category FROM products WHERE category = 'electronics'",
      "SELECT customer_name, phone_number FROM customers WHERE registration_date > '2022-01-01'",
      "SELECT product_name, price FROM products ORDER BY price DESC",
      "SELECT customer_name, email, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id",
      "SELECT product_name, price, quantity FROM products JOIN transactions ON products.product_id = transactions.product_id",
      "SELECT customer_name, email, rating FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id",
      "SELECT customer_name, email, rating, product_name FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id",
      "SELECT customer_name, email, rating, product_name FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id WHERE rating > 3",
      "SELECT customer_name, email, phone_number FROM customers WHERE registration_date >= '2022-01-01';",
      "SELECT customer_name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE total_amount > 1000);",
      "SELECT product_name, price FROM products WHERE category = 'Electronics' AND price < 500;",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30');",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM feedback WHERE rating >= 4);",
      "SELECT customer_name, email, phone_number, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, email, product_name, price FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id;",
      "SELECT customers.customer_name, orders.order_date, products.product_name, transactions.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id JOIN products ON transactions.product_id = products.product_id;",
      "SELECT customer_name, email, phone_number, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT customer_name, email, phone_number, product_name, quantity FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id JOIN transactions ON feedback.product_id = transactions.product_id AND feedback.customer_id = transactions.order_id;",
      "SELECT product_name, category, price FROM products WHERE product_id IN (SELECT product_id FROM feedback WHERE rating = 5);",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING total_spent > 5000;",
      "SELECT customer_name, email, phone_number, product_name, quantity FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id JOIN transactions ON feedback.product_id = transactions.product_id;",
      "SELECT customer_name, email, phone_number, product_name, quantity, transaction_date FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id JOIN transactions ON feedback.product_id = transactions.product_id WHERE transaction_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT customer_name, email, phone_number, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount > 1000;",
      "SELECT customer_name, email, phone_number, product_name, category, quantity FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id JOIN transactions ON feedback.product_id = transactions.product_id;",
      "SELECT product_name, category, SUM(quantity) AS total_sold FROM products JOIN transactions ON products.product_id = transactions.product_id GROUP BY product_name, category;",
      "SELECT customer_name, email, phone_number, product_name, category, quantity, transaction_date FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id JOIN transactions ON feedback.product_id = transactions.product_id WHERE rating >= 4;",
      "SELECT customer_name, email, phone_number, product_name, quantity, transaction_date FROM customers JOIN feedback ON customers.customer_id = feedback.customer_id JOIN products ON feedback.product_id = products.product_id JOIN transactions ON feedback.product_id = transactions.product_id WHERE transaction_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT category, COUNT(product_id) AS total_products FROM products GROUP BY category HAVING total_products > 5;"
    ]
  }
]