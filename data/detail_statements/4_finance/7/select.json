[
  {
    "statements": [
      "SELECT * FROM financial_assets;",
      "SELECT asset_id, asset_name FROM financial_assets;",
      "SELECT asset_type, purchase_price FROM financial_assets;",
      "SELECT * FROM financial_assets WHERE purchase_price > 1000;",
      "SELECT asset_name FROM financial_assets WHERE purchase_date >= '2021-01-01';",
      "SELECT * FROM financial_assets WHERE asset_type = 'Stock';",
      "SELECT asset_name, quantity FROM financial_assets WHERE quantity > 10;",
      "SELECT asset_id, purchase_price FROM financial_assets WHERE purchase_date < '2021-06-01';",
      "SELECT * FROM financial_assets ORDER BY purchase_price DESC;",
      "SELECT asset_name FROM financial_assets ORDER BY purchase_date ASC;",
      "SELECT COUNT(*) FROM financial_assets;",
      "SELECT AVG(purchase_price) FROM financial_assets;",
      "SELECT MAX(quantity) FROM financial_assets WHERE asset_type = 'Bond';",
      "SELECT MIN(purchase_price) FROM financial_assets WHERE purchase_date >= '2021-10-01';",
      "SELECT SUM(quantity) FROM financial_assets;",
      "SELECT * FROM financial_assets WHERE purchase_date BETWEEN '2021-07-01' AND '2021-12-31';",
      "SELECT DISTINCT asset_type FROM financial_assets;",
      "SELECT * FROM financial_assets WHERE asset_name LIKE '%tech%';",
      "SELECT asset_id, purchase_date FROM financial_assets WHERE asset_type = 'ETF';",
      "SELECT * FROM financial_assets LIMIT 5 OFFSET 10;",
      "SELECT * FROM financial_assets WHERE purchase_price > 10000 AND quantity > 100",
      "SELECT asset_name, purchase_date FROM financial_assets WHERE asset_type = 'Stocks'",
      "SELECT DISTINCT asset_type FROM financial_assets",
      "SELECT asset_name, purchase_price * quantity AS total_value FROM financial_assets ORDER BY total_value DESC",
      "SELECT AVG(purchase_price) AS average_price FROM financial_assets",
      "SELECT * FROM financial_assets WHERE asset_type LIKE 'Bond%'",
      "SELECT COUNT(asset_id) AS total_assets FROM financial_assets",
      "SELECT asset_name, purchase_date FROM financial_assets WHERE purchase_date BETWEEN '2021-01-01' AND '2021-12-31'",
      "SELECT * FROM financial_assets WHERE asset_id IN (1, 5, 10)",
      "SELECT asset_type, SUM(quantity) AS total_quantity FROM financial_assets GROUP BY asset_type HAVING total_quantity > 500",
      "SELECT asset_name, DATEDIFF(NOW(), purchase_date) AS days_since_purchase FROM financial_assets",
      "SELECT asset_name, asset_type, quantity * purchase_price AS total_cost FROM financial_assets WHERE quantity * purchase_price > 5000",
      "SELECT COUNT(DISTINCT asset_type) AS unique_asset_types FROM financial_assets",
      "SELECT asset_type, AVG(purchase_price) AS avg_price FROM financial_assets GROUP BY asset_type",
      "SELECT asset_name, purchase_price, quantity, purchase_price * quantity AS total_cost FROM financial_assets HAVING total_cost < 100000",
      "SELECT asset_name, purchase_date, quantity FROM financial_assets WHERE purchase_date < '2021-01-01'",
      "SELECT asset_name, asset_type, purchase_date FROM financial_assets WHERE asset_type IN ('Stocks', 'Bonds')",
      "SELECT asset_name, purchase_price, quantity FROM financial_assets WHERE asset_type = 'Equity' AND quantity > 50",
      "SELECT asset_name, purchase_price, purchase_date FROM financial_assets WHERE purchase_price < 5000 ORDER BY purchase_date ASC",
      "SELECT AVG(quantity) AS avg_quantity FROM financial_assets"
    ]
  },
  {
    "statements": [
      "SELECT * FROM financial_assets;",
      "SELECT asset_id, asset_name FROM financial_assets;",
      "SELECT * FROM asset_transactions;",
      "SELECT transaction_id, asset_id, transaction_type FROM asset_transactions;",
      "SELECT asset_id, asset_name, asset_value FROM financial_assets WHERE asset_type = 'Stock';",
      "SELECT * FROM financial_assets WHERE asset_value > 100000;",
      "SELECT * FROM asset_transactions WHERE transaction_amount < 0;",
      "SELECT asset_id, asset_name, asset_value FROM financial_assets ORDER BY asset_value DESC;",
      "SELECT AVG(asset_value) AS avg_value FROM financial_assets;",
      "SELECT asset_name, COUNT(*) AS transaction_count FROM asset_transactions GROUP BY asset_name;",
      "SELECT * FROM asset_transactions WHERE asset_id = '0001-2345-6789';",
      "SELECT asset_id, SUM(transaction_amount) AS total_transaction_amount FROM asset_transactions GROUP BY asset_id;",
      "SELECT asset_name, MAX(transaction_date) AS latest_transaction_date FROM asset_transactions GROUP BY asset_name;",
      "SELECT asset_id, COUNT(*) AS transaction_count FROM asset_transactions GROUP BY asset_id HAVING COUNT(*) > 2;",
      "SELECT * FROM asset_transactions WHERE DATE(transaction_date) = '2022-01-15';",
      "SELECT asset_name, AVG(transaction_amount) AS avg_transaction_amount FROM asset_transactions GROUP BY asset_name;",
      "SELECT asset_id, MAX(asset_value) AS max_asset_value FROM financial_assets;",
      "SELECT asset_id, MIN(asset_value) AS min_asset_value FROM financial_assets;",
      "SELECT asset_name, SUM(transaction_amount) AS total_transaction_amount FROM asset_transactions GROUP BY asset_name;",
      "SELECT * FROM financial_assets WHERE asset_type IS NULL;",
      "SELECT * FROM financial_assets;",
      "SELECT asset_id, asset_name FROM financial_assets WHERE asset_value > 100000;",
      "SELECT asset_id, asset_name, asset_type FROM financial_assets WHERE asset_type = 'Stocks';",
      "SELECT asset_id, asset_name, asset_value FROM financial_assets WHERE asset_value BETWEEN 5000 AND 10000;",
      "SELECT COUNT(*) AS total_assets FROM financial_assets;",
      "SELECT asset_id, SUM(transaction_amount) AS total_transactions FROM asset_transactions GROUP BY asset_id;",
      "SELECT COUNT(*) AS total_transactions FROM asset_transactions WHERE transaction_date >= '2021-01-01';",
      "SELECT asset_name, AVG(asset_value) AS average_value FROM financial_assets GROUP BY asset_name;",
      "SELECT MIN(asset_value) AS min_value, MAX(asset_value) AS max_value FROM financial_assets;",
      "SELECT asset_name, SUM(transaction_amount) AS total_value FROM financial_assets JOIN asset_transactions ON financial_assets.asset_id = asset_transactions.asset_id GROUP BY asset_name;",
      "SELECT financial_assets.asset_id, asset_transactions.transaction_date FROM financial_assets JOIN asset_transactions ON financial_assets.asset_id = asset_transactions.asset_id;",
      "SELECT asset_id, AVG(transaction_amount) AS average_transaction FROM asset_transactions GROUP BY asset_id HAVING AVG(transaction_amount) > 500;",
      "SELECT asset_name, COUNT(*) AS total_transactions FROM financial_assets LEFT JOIN asset_transactions ON financial_assets.asset_id = asset_transactions.asset_id GROUP BY asset_name HAVING COUNT(*) > 2;",
      "SELECT asset_id, COUNT(*) AS total_transactions FROM asset_transactions WHERE transaction_amount > 10000 GROUP BY asset_id HAVING COUNT(*) > 1;",
      "SELECT asset_type, SUM(transaction_amount) AS total_amount FROM financial_assets LEFT JOIN asset_transactions ON financial_assets.asset_id = asset_transactions.asset_id GROUP BY asset_type;",
      "SELECT asset_id, transaction_date FROM asset_transactions WHERE transaction_type = 'Purchase' AND transaction_amount > 5000;",
      "SELECT asset_name, asset_value, transaction_amount, transaction_date FROM financial_assets JOIN asset_transactions ON financial_assets.asset_id = asset_transactions.asset_id WHERE transaction_date >= '2021-06-01';",
      "SELECT asset_id, asset_name, transaction_type, transaction_date FROM asset_transactions WHERE transaction_amount = (SELECT MAX(transaction_amount) FROM asset_transactions);",
      "SELECT DISTINCT asset_type FROM financial_assets;",
      "SELECT asset_id, asset_name, AVG(asset_value) AS average_value FROM financial_assets GROUP BY asset_id HAVING AVG(asset_value) > 5000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM stocks",
      "SELECT symbol, price FROM stocks WHERE price > 100",
      "SELECT company_name, volume FROM stocks ORDER BY volume DESC",
      "SELECT * FROM bonds",
      "SELECT issuer, interest_rate FROM bonds WHERE interest_rate > 5",
      "SELECT bond_type, maturity_date FROM bonds ORDER BY maturity_date",
      "SELECT * FROM commodities",
      "SELECT commodity_name, price FROM commodities WHERE price < 50",
      "SELECT commodity_type, quantity FROM commodities ORDER BY quantity DESC",
      "SELECT * FROM stocks WHERE symbol = 'AAPL'",
      "SELECT * FROM stocks WHERE price < 50 AND volume > 10000",
      "SELECT * FROM bonds WHERE issuer = 'ABC Company'",
      "SELECT * FROM bonds WHERE interest_rate > 2.5 AND face_value > 1000",
      "SELECT * FROM commodities WHERE commodity_type = 'Gold'",
      "SELECT * FROM commodities WHERE price > 100 AND quantity < 50",
      "SELECT sum(price) FROM stocks",
      "SELECT avg(interest_rate) FROM bonds",
      "SELECT max(quantity) FROM commodities",
      "SELECT count(*) FROM stocks",
      "SELECT count(*) FROM bonds",
      "SELECT count(*) FROM commodities",
      "SELECT symbol, company_name, price, volume, last_updated FROM stocks WHERE price > 100 AND volume > 1000",
      "SELECT symbol, price, last_updated FROM stocks WHERE last_updated > '2021-01-01' ORDER BY price DESC",
      "SELECT symbol, company_name, price, volume, last_updated FROM stocks WHERE company_name = 'Apple' AND price < 500",
      "SELECT issuer, bond_type, interest_rate, maturity_date, face_value FROM bonds WHERE interest_rate > 2 AND maturity_date > '2025-01-01'",
      "SELECT issuer, bond_type, interest_rate, maturity_date FROM bonds WHERE bond_type = 'Corporate' ORDER BY interest_rate DESC",
      "SELECT commodity_name, commodity_type, price, quantity FROM commodities WHERE price < 50 AND quantity > 1000",
      "SELECT commodity_name, price, quantity FROM commodities WHERE commodity_type = 'Metal' ORDER BY price ASC",
      "SELECT symbol, price, volume FROM stocks WHERE symbol LIKE 'A%'",
      "SELECT company_name, price, volume FROM stocks WHERE volume BETWEEN 500 AND 1000",
      "SELECT commodity_name, commodity_type, price FROM commodities WHERE price BETWEEN 20 AND 30",
      "SELECT symbol, price, volume FROM stocks WHERE volume > 500 OR price < 200",
      "SELECT symbol, company_name, price, volume, last_updated FROM stocks WHERE last_updated BETWEEN '2020-01-01' AND '2021-01-01'",
      "SELECT issuer, interest_rate, face_value FROM bonds WHERE interest_rate < 3 AND face_value > 1000",
      "SELECT commodity_name, price, quantity FROM commodities WHERE quantity < 500 ORDER BY quantity DESC",
      "SELECT symbol, price, volume FROM stocks WHERE company_name LIKE '%Inc%'",
      "SELECT issuer, bond_type, interest_rate, maturity_date FROM bonds WHERE interest_rate BETWEEN 1 AND 2.5",
      "SELECT commodity_name, price, quantity FROM commodities WHERE commodity_name = 'Gold'",
      "SELECT symbol, company_name, price, volume FROM stocks WHERE last_updated = '2022-01-01'",
      "SELECT issuer, bond_type, interest_rate, maturity_date, face_value FROM bonds WHERE maturity_date < '2023-01-01' AND face_value < 1000",
      "SELECT commodity_name, commodity_type, price FROM commodities WHERE commodity_type LIKE '%Grain%' ORDER BY price DESC",
      "SELECT symbol, company_name, price, volume FROM stocks WHERE volume < 100 OR price > 300"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Stocks;",
      "SELECT stock_symbol, stock_price FROM Stocks;",
      "SELECT stock_name, stock_price FROM Stocks WHERE stock_price > 100;",
      "SELECT * FROM Bonds;",
      "SELECT bond_name, bond_rating FROM Bonds;",
      "SELECT bond_symbol, bond_value FROM Bonds WHERE bond_value < 5000;",
      "SELECT * FROM Commodities;",
      "SELECT commodity_name, commodity_price FROM Commodities;",
      "SELECT commodity_symbol, commodity_price FROM Commodities WHERE commodity_price >= 50;",
      "SELECT * FROM Transactions;",
      "SELECT transaction_type, transaction_date FROM Transactions;",
      "SELECT asset_id, transaction_amount FROM Transactions WHERE transaction_amount < 0;",
      "SELECT stock_name, stock_price FROM Stocks WHERE stock_price BETWEEN 50 AND 100;",
      "SELECT bond_name, bond_value FROM Bonds WHERE bond_value BETWEEN 500 AND 1000;",
      "SELECT commodity_name, commodity_price FROM Commodities WHERE commodity_price > 100;",
      "SELECT transaction_type, transaction_amount FROM Transactions WHERE transaction_amount > 1000;",
      "SELECT stock_name, stock_price FROM Stocks ORDER BY stock_price DESC;",
      "SELECT bond_name, bond_value FROM Bonds ORDER BY bond_value ASC;",
      "SELECT commodity_name, commodity_price FROM Commodities ORDER BY commodity_price DESC;",
      "SELECT transaction_type, transaction_date FROM Transactions ORDER BY transaction_date ASC;",
      "SELECT * FROM Stocks WHERE stock_price > 100",
      "SELECT stock_name, stock_price FROM Stocks WHERE stock_price < 50",
      "SELECT * FROM Bonds WHERE bond_rating = 'AAA'",
      "SELECT bond_name FROM Bonds WHERE bond_value > 100000",
      "SELECT * FROM Commodities WHERE commodity_price BETWEEN 50 AND 100",
      "SELECT commodity_symbol, commodity_price FROM Commodities WHERE commodity_price < 50",
      "SELECT * FROM Transactions WHERE transaction_type = 'Buy'",
      "SELECT transaction_date FROM Transactions WHERE transaction_amount > 5000",
      "SELECT * FROM Stocks INNER JOIN Transactions ON Stocks.stock_id = Transactions.asset_id",
      "SELECT stock_price, bond_value FROM Stocks JOIN Bonds ON Stocks.stock_id = Bonds.bond_id",
      "SELECT * FROM Bonds INNER JOIN Transactions ON Bonds.bond_id = Transactions.asset_id",
      "SELECT commodity_name, transaction_amount FROM Commodities JOIN Transactions ON Commodities.commodity_id = Transactions.asset_id",
      "SELECT stock_name, bond_name, commodity_name FROM Stocks JOIN Bonds ON Stocks.stock_id = Bonds.stock_id JOIN Commodities ON Stocks.stock_id = Commodities.commodity_id",
      "SELECT * FROM Stocks WHERE stock_symbol LIKE 'AAPL%'",
      "SELECT * FROM Bonds WHERE bond_name LIKE '%Municipal%'",
      "SELECT * FROM Commodities WHERE commodity_name LIKE '%Gold%'",
      "SELECT COUNT(*) FROM Transactions WHERE transaction_type = 'Sell'",
      "SELECT AVG(transaction_amount) FROM Transactions",
      "SELECT MIN(stock_price), MAX(stock_price) FROM Stocks",
      "SELECT SUM(commodity_price) FROM Commodities",
      "SELECT COUNT(*) FROM Bonds WHERE bond_rating = 'A'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Stocks;",
      "SELECT stock_id, stock_name, stock_price FROM Stocks;",
      "SELECT stock_id, stock_name, stock_price, stock_quantity FROM Stocks WHERE stock_price > 100;",
      "SELECT * FROM Bonds;",
      "SELECT bond_id, bond_name, bond_type FROM Bonds;",
      "SELECT bond_id, bond_name, bond_value, bond_type FROM Bonds WHERE bond_value < 500;",
      "SELECT * FROM Commodities;",
      "SELECT commodity_id, commodity_name, commodity_price FROM Commodities;",
      "SELECT commodity_id, commodity_name, commodity_price, commodity_quantity FROM Commodities WHERE commodity_quantity > 50;",
      "SELECT * FROM Portfolio;",
      "SELECT portfolio_id, portfolio_name FROM Portfolio;",
      "SELECT portfolio_id, portfolio_name, total_value FROM Portfolio WHERE total_value > 10000;",
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, transaction_type, transaction_date FROM Transactions;",
      "SELECT transaction_id, transaction_type, transaction_date, amount FROM Transactions WHERE amount < 5000;",
      "SELECT t.transaction_id, t.transaction_type, t.transaction_date, t.amount, s.stock_name FROM Transactions t JOIN Stocks s ON t.asset_id = s.stock_id;",
      "SELECT t.transaction_id, t.transaction_type, t.transaction_date, t.amount, b.bond_name FROM Transactions t JOIN Bonds b ON t.asset_id = b.bond_id;",
      "SELECT t.transaction_id, t.transaction_type, t.transaction_date, t.amount, c.commodity_name FROM Transactions t JOIN Commodities c ON t.asset_id = c.commodity_id;",
      "SELECT t.transaction_id, t.transaction_type, t.transaction_date, t.amount, p.portfolio_name FROM Transactions t JOIN Portfolio p ON t.asset_id = p.portfolio_id;",
      "SELECT * FROM Stocks WHERE stock_price > 1000",
      "SELECT stock_name, stock_price, stock_quantity FROM Stocks WHERE stock_quantity > 50",
      "SELECT stock_name, SUM(stock_quantity) AS total_quantity FROM Stocks GROUP BY stock_name",
      "SELECT bond_name, bond_value, bond_type FROM Bonds WHERE bond_value < 500",
      "SELECT * FROM Commodities WHERE commodity_quantity < 100",
      "SELECT commodity_name, MAX(commodity_price) AS max_price FROM Commodities",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE total_value > 10000",
      "SELECT * FROM Transactions WHERE transaction_date >= '2022-01-01'",
      "SELECT transaction_type, SUM(amount) AS total_amount FROM Transactions GROUP BY transaction_type",
      "SELECT t.transaction_id, t.transaction_type, s.stock_name, t.amount FROM Transactions t INNER JOIN Stocks s ON t.asset_id = s.stock_id",
      "SELECT p.portfolio_name, t.transaction_type, t.amount, s.stock_name FROM Portfolio p INNER JOIN Transactions t ON p.portfolio_id = t.asset_id INNER JOIN Stocks s ON t.asset_id = s.stock_id",
      "SELECT * FROM Stocks WHERE stock_id IN (SELECT asset_id FROM Transactions WHERE transaction_type = 'buy')",
      "SELECT * FROM Bonds WHERE bond_id IN (SELECT asset_id FROM Transactions WHERE transaction_type = 'sell')",
      "SELECT * FROM Commodities WHERE commodity_id IN (SELECT asset_id FROM Transactions WHERE transaction_type = 'sell')",
      "SELECT p.portfolio_name, SUM(t.amount) AS total_amount FROM Portfolio p INNER JOIN Transactions t ON p.portfolio_id = t.asset_id GROUP BY p.portfolio_name",
      "SELECT s.stock_name, SUM(t.amount) AS total_amount FROM Stocks s INNER JOIN Transactions t ON s.stock_id = t.asset_id GROUP BY s.stock_name HAVING total_amount > 5000",
      "SELECT COUNT(DISTINCT transaction_type) AS unique_types FROM Transactions",
      "SELECT t.transaction_date, COUNT(*) AS total_transactions FROM Transactions t GROUP BY t.transaction_date",
      "SELECT p.portfolio_name, AVG(t.amount) AS average_transaction FROM Portfolio p INNER JOIN Transactions t ON p.portfolio_id = t.asset_id GROUP BY p.portfolio_name HAVING average_transaction > 100",
      "SELECT * FROM Stocks ORDER BY stock_price DESC LIMIT 5"
    ]
  }
]