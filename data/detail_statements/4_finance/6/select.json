[
  {
    "statements": [
      "SELECT * FROM financial_portfolio WHERE portfolio_id = 1;",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE risk_level = 'High';",
      "SELECT portfolio_id, stress_test_result FROM financial_portfolio WHERE total_value > 10000;",
      "SELECT * FROM financial_portfolio WHERE stress_test_result = 'TRUE';",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE risk_level = 'Medium' AND stress_test_result = 'FALSE';",
      "SELECT * FROM financial_portfolio WHERE stress_test_result = 'TRUE' AND risk_level = 'Low';",
      "SELECT portfolio_name, risk_level FROM financial_portfolio WHERE total_value < 5000;",
      "SELECT portfolio_id, total_value FROM financial_portfolio WHERE risk_level = 'High' AND stress_test_result = 'FALSE';",
      "SELECT * FROM financial_portfolio WHERE risk_level = 'Low' OR risk_level = 'Medium';",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE total_value BETWEEN 5000 AND 10000;",
      "SELECT * FROM financial_portfolio WHERE portfolio_id <> 3;",
      "SELECT portfolio_id, stress_test_result FROM financial_portfolio WHERE risk_level IN ('Low', 'Medium');",
      "SELECT portfolio_name, stress_test_result FROM financial_portfolio WHERE total_value < 20000;",
      "SELECT * FROM financial_portfolio WHERE stress_test_result = 'TRUE' OR risk_level = 'High';",
      "SELECT portfolio_name FROM financial_portfolio WHERE total_value > 15000;",
      "SELECT portfolio_id, risk_level FROM financial_portfolio WHERE stress_test_result = 'FALSE';",
      "SELECT total_value FROM financial_portfolio WHERE risk_level = 'Medium';",
      "SELECT * FROM financial_portfolio WHERE portfolio_id = 5 AND stress_test_result = 'FALSE';",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE stress_test_result = 'FALSE' AND risk_level <> 'High';",
      "SELECT * FROM financial_portfolio WHERE total_value <= 8000;",
      "SELECT portfolio_id, portfolio_name FROM financial_portfolio WHERE total_value > 10000 AND risk_level = 'High'",
      "SELECT AVG(total_value) as avg_value FROM financial_portfolio WHERE stress_test_result = true",
      "SELECT portfolio_name, total_value FROM financial_portfolio ORDER BY total_value DESC LIMIT 5",
      "SELECT COUNT(DISTINCT risk_level) as risk_levels_count FROM financial_portfolio",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE total_value BETWEEN 5000 AND 20000",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE risk_level IN ('Low', 'Medium')",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE stress_test_result = false",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE risk_level = 'High' AND stress_test_result = true",
      "SELECT COUNT(*) as total_portfolios FROM financial_portfolio",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE portfolio_name LIKE 'Tech%'",
      "SELECT SUM(total_value) as total_value FROM financial_portfolio",
      "SELECT portfolio_id, portfolio_name, risk_level FROM financial_portfolio WHERE total_value >= 50000",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE stress_test_result = false AND risk_level = 'Medium'",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE stress_test_result = true AND risk_level = 'High'",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE risk_level = 'Low' OR risk_level = 'High'",
      "SELECT AVG(total_value) as avg_value FROM financial_portfolio WHERE risk_level = 'Medium' AND stress_test_result = true",
      "SELECT portfolio_name, total_value, risk_level FROM financial_portfolio WHERE total_value > 20000",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE risk_level = 'Low' OR risk_level = 'Medium'",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE risk_level = 'Medium' ORDER BY total_value ASC",
      "SELECT portfolio_name, stress_test_result FROM financial_portfolio WHERE total_value < 5000"
    ]
  },
  {
    "statements": [
      "SELECT * FROM public.financial_portfolio;",
      "SELECT portfolio_id, portfolio_name FROM public.financial_portfolio WHERE risk_level > 2;",
      "SELECT asset_id, asset_name, asset_value FROM public.portfolio_assets;",
      "SELECT * FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id;",
      "SELECT portfolio_name, asset_name, asset_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id;",
      "SELECT * FROM public.financial_portfolio WHERE risk_level < 3 AND stress_test_passed = true;",
      "SELECT * FROM public.portfolio_assets WHERE asset_type = 'Stock';",
      "SELECT asset_id, asset_name FROM public.portfolio_assets WHERE asset_value > 5000;",
      "SELECT * FROM public.financial_portfolio WHERE risk_level BETWEEN 2 AND 4;",
      "SELECT COUNT(*) FROM public.portfolio_assets;",
      "SELECT AVG(asset_value) FROM public.portfolio_assets;",
      "SELECT MAX(asset_value) FROM public.portfolio_assets;",
      "SELECT DISTINCT portfolio_id FROM public.portfolio_assets;",
      "SELECT SUM(asset_value) FROM public.portfolio_assets GROUP BY asset_type;",
      "SELECT * FROM public.financial_portfolio ORDER BY risk_level DESC;",
      "SELECT portfolio_name, SUM(asset_value) AS total_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id GROUP BY portfolio_name;",
      "SELECT portfolio_name, COUNT(*) AS asset_count FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id GROUP BY portfolio_name;",
      "SELECT * FROM public.portfolio_assets ORDER BY asset_value ASC LIMIT 5;",
      "SELECT * FROM public.financial_portfolio WHERE portfolio_name LIKE 'Tech%';",
      "SELECT risk_level, COUNT(*) FROM public.financial_portfolio GROUP BY risk_level HAVING COUNT(*) > 1;",
      "SELECT * FROM public.financial_portfolio WHERE risk_level > 5;",
      "SELECT portfolio_name, risk_level, stress_test_passed FROM public.financial_portfolio WHERE stress_test_passed = TRUE;",
      "SELECT COUNT(*) FROM public.portfolio_assets WHERE asset_type = 'Stock';",
      "SELECT portfolio_name, asset_name, asset_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id;",
      "SELECT portfolio_name, asset_name, asset_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id WHERE public.financial_portfolio.risk_level > 5;",
      "SELECT AVG(asset_value) FROM public.portfolio_assets WHERE portfolio_id = 1;",
      "SELECT portfolio_name, SUM(asset_value) AS total_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id GROUP BY public.financial_portfolio.portfolio_name;",
      "SELECT DISTINCT asset_type FROM public.portfolio_assets;",
      "SELECT portfolio_name, MAX(asset_value) AS max_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id GROUP BY public.financial_portfolio.portfolio_name;",
      "SELECT portfolio_name, COUNT(asset_id) AS total_assets FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id GROUP BY public.financial_portfolio.portfolio_name;",
      "SELECT portfolio_name, asset_name, asset_value FROM public.financial_portfolio LEFT JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id;",
      "SELECT asset_name, asset_value FROM public.portfolio_assets WHERE asset_value > (SELECT AVG(asset_value) FROM public.portfolio_assets);",
      "SELECT portfolio_name, SUM(asset_value) AS total_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id WHERE public.financial_portfolio.stress_test_passed = TRUE GROUP BY public.financial_portfolio.portfolio_name;",
      "SELECT portfolio_name, asset_name FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id ORDER BY public.financial_portfolio.risk_level DESC;",
      "SELECT portfolio_name, asset_name, asset_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id WHERE public.portfolio_assets.asset_type = 'Bonds';",
      "SELECT portfolio_name, AVG(asset_value) AS avg_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id WHERE public.financial_portfolio.risk_level <= 3 GROUP BY public.financial_portfolio.portfolio_name;",
      "SELECT portfolio_name, MIN(asset_value) AS min_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id GROUP BY public.financial_portfolio.portfolio_name;",
      "SELECT portfolio_name, COUNT(asset_id) AS num_assets FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id WHERE public.portfolio_assets.asset_value > 10000 GROUP BY public.financial_portfolio.portfolio_name;",
      "SELECT portfolio_name, asset_type, SUM(asset_value) AS total_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id GROUP BY public.financial_portfolio.portfolio_name, public.portfolio_assets.asset_type;",
      "SELECT portfolio_name, asset_value FROM public.financial_portfolio JOIN public.portfolio_assets ON public.financial_portfolio.portfolio_id = public.portfolio_assets.portfolio_id WHERE public.portfolio_assets.asset_value = (SELECT MAX(asset_value) FROM public.portfolio_assets);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM portfolios;",
      "SELECT portfolio_name, start_date, end_date FROM portfolios;",
      "SELECT * FROM assets;",
      "SELECT asset_name, asset_type, asset_value FROM assets;",
      "SELECT * FROM risk_analysis;",
      "SELECT analysis_date, stress_test_result FROM risk_analysis;",
      "SELECT portfolio_name, asset_name, asset_value FROM portfolios JOIN assets ON portfolios.portfolio_id = assets.portfolio_id;",
      "SELECT analysis_date, stress_test_result, portfolio_name FROM risk_analysis JOIN portfolios ON risk_analysis.portfolio_id = portfolios.portfolio_id;",
      "SELECT asset_name, asset_type, asset_value, portfolio_name FROM assets JOIN portfolios ON assets.portfolio_id = portfolios.portfolio_id;",
      "SELECT portfolio_name, asset_name, analysis_date, stress_test_result FROM portfolios JOIN assets ON portfolios.portfolio_id = assets.portfolio_id JOIN risk_analysis ON risk_analysis.portfolio_id = assets.portfolio_id;",
      "SELECT * FROM portfolios WHERE portfolio_id = 1;",
      "SELECT * FROM assets WHERE portfolio_id = 1;",
      "SELECT * FROM risk_analysis WHERE portfolio_id = 1;",
      "SELECT * FROM portfolios WHERE client_id = 123;",
      "SELECT * FROM assets WHERE asset_type = 'Stock';",
      "SELECT asset_name, asset_value FROM assets WHERE portfolio_id = 2;",
      "SELECT portfolio_name, start_date, end_date FROM portfolios WHERE start_date >= '2022-01-01';",
      "SELECT asset_name, asset_value FROM assets WHERE asset_value >= 1000;",
      "SELECT analysis_date, stress_test_result FROM risk_analysis WHERE analysis_date = '2022-10-01';",
      "SELECT * FROM portfolios ORDER BY portfolio_name DESC LIMIT 5;",
      "SELECT * FROM portfolios WHERE portfolio_id = 1;",
      "SELECT portfolio_name, start_date FROM portfolios WHERE client_id = 100;",
      "SELECT asset_name, asset_value FROM assets WHERE portfolio_id = 1;",
      "SELECT analysis_date, stress_test_result FROM risk_analysis WHERE portfolio_id = 2;",
      "SELECT * FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id WHERE p.client_id = 100;",
      "SELECT p.portfolio_name, a.asset_name, a.asset_value FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id WHERE a.asset_type = 'Stock';",
      "SELECT p.portfolio_name, a.asset_name, r.analysis_date FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id JOIN risk_analysis r ON p.portfolio_id = r.portfolio_id WHERE r.stress_test_result = 'High Risk';",
      "SELECT COUNT(p.portfolio_id) AS num_portfolios, AVG(a.asset_value) AS avg_asset_value FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id;",
      "SELECT MAX(asset_value) AS max_asset_value, MIN(asset_value) AS min_asset_value FROM assets;",
      "SELECT p.portfolio_id, COUNT(a.asset_id) AS num_assets FROM portfolios p LEFT JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY p.portfolio_id;",
      "SELECT p.portfolio_id, COUNT(r.analysis_id) AS num_analysis FROM portfolios p LEFT JOIN risk_analysis r ON p.portfolio_id = r.portfolio_id GROUP BY p.portfolio_id;",
      "SELECT p.portfolio_name, COUNT(a.asset_id) AS num_assets FROM portfolios p LEFT JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY p.portfolio_name;",
      "SELECT p.portfolio_id, AVG(a.asset_value) AS avg_asset_value, MIN(a.asset_value) AS min_asset_value, MAX(a.asset_value) AS max_asset_value FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY p.portfolio_id;",
      "SELECT a.asset_type, SUM(a.asset_value) AS total_value FROM assets a GROUP BY a.asset_type;",
      "SELECT p.portfolio_name, COUNT(DISTINCT a.asset_type) AS num_asset_types FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY p.portfolio_name;",
      "SELECT p.portfolio_name, MAX(a.asset_value) AS max_asset_value FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY p.portfolio_name;",
      "SELECT portfolio_id, AVG(asset_value) AS avg_asset_value FROM assets GROUP BY portfolio_id HAVING AVG(asset_value) > 5000;",
      "SELECT portfolio_name, MAX(asset_value) AS max_asset_value FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY portfolio_name HAVING MAX(asset_value) > 10000;",
      "SELECT p.portfolio_name, COUNT(DISTINCT a.asset_type) AS num_asset_types FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY p.portfolio_name HAVING COUNT(DISTINCT a.asset_type) > 2;",
      "SELECT p.portfolio_name, MAX(a.asset_value) AS max_asset_value FROM portfolios p JOIN assets a ON p.portfolio_id = a.portfolio_id GROUP BY p.portfolio_name HAVING MAX(a.asset_value) > 5000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM financial_portfolio;",
      "SELECT portfolio_id, portfolio_name FROM financial_portfolio WHERE total_value > 100000;",
      "SELECT * FROM asset;",
      "SELECT asset_name, asset_type, asset_value FROM asset WHERE asset_value < 5000;",
      "SELECT * FROM risk_analysis;",
      "SELECT analysis_id, risk_score, analysis_date FROM risk_analysis WHERE risk_score > 7.5;",
      "SELECT * FROM stress_testing;",
      "SELECT testing_id, stress_level, test_date FROM stress_testing WHERE stress_level = 'High';",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE total_value > 50000;",
      "SELECT asset_name, asset_type, asset_value FROM asset WHERE asset_type = 'Stock';",
      "SELECT portfolio_name, total_value, risk_score FROM financial_portfolio JOIN risk_analysis ON financial_portfolio.portfolio_id = risk_analysis.portfolio_id;",
      "SELECT asset_name, asset_value, stress_level FROM asset JOIN risk_analysis ON asset.asset_id = risk_analysis.analysis_id JOIN stress_testing ON risk_analysis.analysis_id = stress_testing.analysis_id;",
      "SELECT portfolio_id, portfolio_name, analysis_date FROM financial_portfolio JOIN risk_analysis ON financial_portfolio.portfolio_id = risk_analysis.portfolio_id WHERE risk_score > 5;",
      "SELECT * FROM financial_portfolio WHERE portfolio_name LIKE '%Growth%';",
      "SELECT * FROM asset WHERE asset_name LIKE '%Tech%';",
      "SELECT portfolio_name, total_value, stress_level FROM financial_portfolio JOIN risk_analysis ON financial_portfolio.portfolio_id = risk_analysis.portfolio_id JOIN stress_testing ON risk_analysis.analysis_id = stress_testing.analysis_id WHERE stress_level = 'Extreme';",
      "SELECT asset_type, AVG(asset_value) AS avg_value FROM asset GROUP BY asset_type;",
      "SELECT portfolio_id, COUNT(*) AS num_analysis FROM risk_analysis GROUP BY portfolio_id;",
      "SELECT portfolio_name, SUM(total_value) AS total_portfolio_value FROM financial_portfolio;",
      "SELECT MIN(asset_value) AS min_value, MAX(asset_value) AS max_value FROM asset;",
      "SELECT portfolio_id, COUNT(analysis_id) AS num_tests FROM risk_analysis JOIN stress_testing ON risk_analysis.analysis_id = stress_testing.analysis_id GROUP BY portfolio_id;",
      "SELECT * FROM financial_portfolio;",
      "SELECT portfolio_name, total_value FROM financial_portfolio WHERE total_value > 10000;",
      "SELECT p.portfolio_name, a.asset_name FROM financial_portfolio p JOIN asset a ON p.portfolio_id = a.asset_id;",
      "SELECT p.portfolio_name, ra.risk_score FROM financial_portfolio p LEFT JOIN risk_analysis ra ON p.portfolio_id = ra.portfolio_id;",
      "SELECT pa.portfolio_name, sa.stress_level FROM risk_analysis ra JOIN stress_testing sa ON ra.analysis_id = sa.analysis_id JOIN financial_portfolio pa ON ra.portfolio_id = pa.portfolio_id;",
      "SELECT * FROM financial_portfolio WHERE portfolio_id IN (SELECT portfolio_id FROM risk_analysis);",
      "SELECT p.portfolio_name, COUNT(ra.analysis_id) AS num_analysis FROM financial_portfolio p LEFT JOIN risk_analysis ra ON p.portfolio_id = ra.portfolio_id GROUP BY p.portfolio_name;",
      "SELECT p.portfolio_name, AVG(ra.risk_score) AS avg_risk_score FROM financial_portfolio p JOIN risk_analysis ra ON p.portfolio_id = ra.portfolio_id GROUP BY p.portfolio_name;",
      "SELECT p.portfolio_name, MAX(sa.test_date) AS last_stress_test FROM stress_testing sa JOIN risk_analysis ra ON sa.analysis_id = ra.analysis_id JOIN financial_portfolio p ON ra.portfolio_id = p.portfolio_id GROUP BY p.portfolio_name;",
      "SELECT p.portfolio_id, p.portfolio_name, SUM(a.asset_value) AS total_asset_value FROM financial_portfolio p JOIN asset a ON p.portfolio_id = a.asset_id GROUP BY p.portfolio_id;",
      "SELECT p.portfolio_name, AVG(a.asset_value) AS avg_asset_value FROM financial_portfolio p JOIN asset a ON p.portfolio_id = a.asset_id GROUP BY p.portfolio_name HAVING avg_asset_value > 5000;",
      "SELECT p.portfolio_name, COUNT(DISTINCT ra.analysis_id) AS num_unique_analyses FROM financial_portfolio p JOIN risk_analysis ra ON p.portfolio_id = ra.portfolio_id GROUP BY p.portfolio_name;",
      "SELECT p.portfolio_name, r.risk_score from financial_portfolio p, risk_analysis r WHERE p.portfolio_id = r.portfolio_id AND r.analysis_date > '2022-01-01';",
      "SELECT p.portfolio_name, a.asset_name, st.stress_level FROM financial_portfolio p JOIN asset a ON p.portfolio_id = a.asset_id JOIN risk_analysis r ON p.portfolio_id = r.portfolio_id JOIN stress_testing st ON r.analysis_id = st.analysis_id WHERE r.risk_score > 50;",
      "SELECT p.portfolio_name, COUNT(*) AS num_tests FROM financial_portfolio p JOIN risk_analysis ra ON p.portfolio_id = ra.portfolio_id JOIN stress_testing st ON ra.analysis_id = st.analysis_id GROUP BY p.portfolio_name HAVING num_tests > 3;",
      "SELECT p.portfolio_name, MAX(st.test_date) AS last_test_date FROM financial_portfolio p JOIN risk_analysis ra ON p.portfolio_id = ra.portfolio_id JOIN stress_testing st ON ra.analysis_id = st.analysis_id GROUP BY p.portfolio_name;",
      "SELECT p.portfolio_name, AVG(r.risk_score) AS avg_risk_score FROM financial_portfolio p JOIN risk_analysis r ON p.portfolio_id = r.portfolio_id GROUP BY p.portfolio_name HAVING avg_risk_score < 30;",
      "SELECT p.portfolio_name, a.asset_type, COUNT(*) AS num_assets FROM financial_portfolio p JOIN asset a ON p.portfolio_id = a.asset_id GROUP BY p.portfolio_name, a.asset_type;",
      "SELECT p.portfolio_name, r.risk_score, st.stress_level FROM financial_portfolio p LEFT JOIN risk_analysis r ON p.portfolio_id = r.portfolio_id LEFT JOIN stress_testing st ON r.analysis_id = st.analysis_id;",
      "SELECT p.portfolio_name, a.asset_name, r.risk_score, st.stress_level FROM financial_portfolio p JOIN asset a ON p.portfolio_id = a.asset_id JOIN risk_analysis r ON p.portfolio_id = r.portfolio_id JOIN stress_testing st ON r.analysis_id = st.analysis_id WHERE a.asset_value > 10000 AND r.risk_score < 40;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Portfolio;",
      "SELECT portfolio_name FROM Portfolio;",
      "SELECT total_value, portfolio_name FROM Portfolio;",
      "SELECT * FROM Portfolio WHERE portfolio_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM Portfolio WHERE total_value > 10000;",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE total_value > 10000;",
      "SELECT * FROM Portfolio ORDER BY total_value DESC;",
      "SELECT * FROM Portfolio ORDER BY total_value ASC;",
      "SELECT * FROM Portfolio LIMIT 5 OFFSET 10;",
      "SELECT COUNT(*) FROM Portfolio;",
      "SELECT AVG(total_value) FROM Portfolio;",
      "SELECT SUM(total_value) FROM Portfolio;",
      "SELECT MAX(total_value) FROM Portfolio;",
      "SELECT MIN(total_value) FROM Portfolio;",
      "SELECT * FROM Portfolio WHERE total_value BETWEEN 10000 AND 50000;",
      "SELECT * FROM Portfolio WHERE portfolio_name LIKE '%Tech%';",
      "SELECT * FROM Portfolio WHERE portfolio_id IN ('123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174001');",
      "SELECT DISTINCT portfolio_name FROM Portfolio;",
      "SELECT portfolio_name, COUNT(*) FROM Portfolio GROUP BY portfolio_name;",
      "SELECT * FROM Portfolio INNER JOIN OtherTable ON Portfolio.portfolio_id = OtherTable.portfolio_id;",
      "SELECT * FROM Portfolio WHERE total_value > 10000;",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE portfolio_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT COUNT(*) AS total_portfolios FROM Portfolio;",
      "SELECT AVG(total_value) AS average_value FROM Portfolio;",
      "SELECT portfolio_name, total_value FROM Portfolio ORDER BY total_value DESC;",
      "SELECT portfolio_name, SUM(total_value) AS total_sum FROM Portfolio GROUP BY portfolio_name;",
      "SELECT portfolio_name, MAX(total_value) AS highest_value FROM Portfolio;",
      "SELECT DISTINCT portfolio_name FROM Portfolio;",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE portfolio_name LIKE '%Tech%';",
      "SELECT * FROM Portfolio WHERE total_value BETWEEN 5000 AND 10000;",
      "SELECT portfolio_name, total_value, total_value * 0.1 AS ten_percent FROM Portfolio;",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE total_value IN (2000, 5000, 10000);",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE portfolio_name = 'Investment Portfolio' OR portfolio_name = 'Savings Portfolio';",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE portfolio_name = 'Tech Portfolio' AND total_value > 5000;",
      "SELECT COUNT(*) AS total_portfolios, AVG(total_value) AS average_value FROM Portfolio;",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE total_value > (SELECT AVG(total_value) FROM Portfolio);",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE portfolio_name LIKE 'A%' OR portfolio_name LIKE '%Z';",
      "SELECT portfolio_name, total_value FROM Portfolio OFFSET 5 LIMIT 5;",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE total_value = (SELECT MAX(total_value) FROM Portfolio);",
      "SELECT portfolio_name, total_value FROM Portfolio WHERE total_value < (SELECT MIN(total_value) FROM Portfolio);"
    ]
  }
]