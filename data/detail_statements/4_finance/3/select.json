[
  {
    "statements": [
      "SELECT * FROM customer_information;",
      "SELECT customer_name, customer_email FROM customer_information;",
      "SELECT customer_id, customer_name, customer_phone FROM customer_information;",
      "SELECT customer_name, customer_address FROM customer_information;",
      "SELECT customer_email FROM customer_information WHERE customer_id = 1;",
      "SELECT * FROM customer_information WHERE customer_name LIKE 'A%';",
      "SELECT customer_address FROM customer_information WHERE customer_phone IS NOT NULL;",
      "SELECT customer_name FROM customer_information WHERE customer_name = 'John Smith';",
      "SELECT customer_id, customer_email FROM customer_information WHERE customer_address LIKE '%Street';",
      "SELECT customer_id, customer_name FROM customer_information WHERE customer_address IS NULL;",
      "SELECT customer_name, customer_phone FROM customer_information ORDER BY customer_name ASC;",
      "SELECT customer_email, customer_phone FROM customer_information ORDER BY customer_email DESC;",
      "SELECT DISTINCT customer_name FROM customer_information;",
      "SELECT customer_id, customer_name FROM customer_information LIMIT 5;",
      "SELECT COUNT(*) FROM customer_information;",
      "SELECT MAX(customer_id) FROM customer_information;",
      "SELECT MIN(customer_id) FROM customer_information;",
      "SELECT AVG(customer_id) FROM customer_information;",
      "SELECT SUM(customer_id) FROM customer_information;",
      "SELECT customer_name, LENGTH(customer_address) AS address_length FROM customer_information;",
      "SELECT customer_name, customer_email FROM customer_information WHERE customer_id = 1;",
      "SELECT customer_name, customer_phone FROM customer_information WHERE customer_id > 5 AND customer_id < 10;",
      "SELECT * FROM customer_information WHERE customer_phone LIKE '%555%';",
      "SELECT customer_id, customer_name, customer_email FROM customer_information WHERE customer_address LIKE '%California%';",
      "SELECT customer_name, customer_phone FROM customer_information WHERE customer_id IN (2, 4, 6, 8);",
      "SELECT COUNT(*) FROM customer_information;",
      "SELECT customer_name, customer_email, customer_phone FROM customer_information WHERE customer_name LIKE 'J%';",
      "SELECT customer_id, customer_name FROM customer_information WHERE LENGTH(customer_name) > 10;",
      "SELECT customer_name, customer_email FROM customer_information WHERE LENGTH(customer_name) <= 20;",
      "SELECT customer_id, customer_name, customer_email, customer_address FROM customer_information WHERE customer_email LIKE '%gmail.com' ORDER BY customer_name ASC;",
      "SELECT customer_name, LENGTH(customer_address) AS address_length FROM customer_information WHERE customer_address IS NOT NULL;",
      "SELECT DISTINCT customer_phone FROM customer_information;",
      "SELECT customer_id, customer_name, customer_email FROM customer_information WHERE customer_phone IS NULL;",
      "SELECT customer_id, customer_email FROM customer_information WHERE customer_email IS NOT NULL AND LENGTH(customer_email) > 15;",
      "SELECT customer_id, customer_name, customer_address FROM customer_information WHERE customer_id BETWEEN 3 AND 7;",
      "SELECT customer_name, customer_email, customer_phone FROM customer_information WHERE customer_name LIKE '%son' AND customer_name NOT LIKE 'John%';",
      "SELECT customer_id, customer_name, customer_email FROM customer_information WHERE customer_id < 5 OR customer_id > 15;",
      "SELECT customer_name, UPPER(customer_address) AS uppercase_address FROM customer_information WHERE customer_address IS NOT NULL;",
      "SELECT DISTINCT customer_email, customer_phone FROM customer_information WHERE customer_name = 'Alice';",
      "SELECT customer_id, customer_name, customer_phone FROM customer_information WHERE customer_address LIKE '%Street' AND customer_email LIKE '%example.com';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_phone FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, transaction_date, amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customer_name, transaction_date, amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE amount > 100;",
      "SELECT transaction_id, transaction_date, amount FROM transactions;",
      "SELECT transaction_id, transaction_date, amount FROM transactions WHERE customer_id = 1;",
      "SELECT transaction_id, transaction_date, amount FROM transactions WHERE amount > 100;",
      "SELECT customer_name, SUM(amount) FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_id;",
      "SELECT customer_name, AVG(amount) FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_id;",
      "SELECT COUNT(*) AS total_transactions FROM transactions WHERE customer_id = 1;",
      "SELECT DISTINCT customer_name FROM customers;",
      "SELECT customer_name, customer_phone, COUNT(*) AS total_transactions FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_id;",
      "SELECT customer_name, COUNT(*) AS total_transactions FROM customers LEFT JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_id;",
      "SELECT customer_name, MAX(amount) AS highest_transaction FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_id;",
      "SELECT customer_id, customer_name, transaction_date, amount FROM customers FULL OUTER JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customer_id, customer_name, transaction_date, amount FROM customers LEFT OUTER JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customer_id, customer_name, transaction_date, amount FROM customers RIGHT OUTER JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customer_name, AVG(amount) FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_type = 'purchase' GROUP BY customers.customer_id;",
      "SELECT customer_name, AVG(amount) FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_type = 'refund' GROUP BY customers.customer_id;",
      "SELECT * FROM customers WHERE customer_id = 123;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT * FROM transactions WHERE amount > 1000;",
      "SELECT customer_name, transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.amount > 1000;",
      "SELECT customer_name, transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = 'purchase' ORDER BY t.transaction_date DESC;",
      "SELECT customer_name, SUM(amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY customer_name HAVING total_amount > 5000;",
      "SELECT customer_name, COUNT(transaction_id) AS total_transactions FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY customer_name HAVING total_transactions > 5;",
      "SELECT customer_name, AVG(amount) AS avg_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY customer_name HAVING avg_amount > 500;",
      "SELECT customer_name, MIN(amount) AS min_amount, MAX(amount) AS max_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY customer_name;",
      "SELECT customer_name, transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT customer_name, COUNT(transaction_id) AS total_transactions FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE YEAR(t.transaction_date) = 2022 GROUP BY customer_name HAVING total_transactions > 3;",
      "SELECT customer_name, transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE MONTH(t.transaction_date) = 5;",
      "SELECT customer_name, AVG(amount) AS avg_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE YEAR(t.transaction_date) = 2022 GROUP BY customer_name HAVING avg_amount > 500;",
      "SELECT customer_name, transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = 'refund' ORDER BY t.transaction_date;",
      "SELECT customer_name, SUM(amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE YEAR(t.transaction_date) = 2022 GROUP BY customer_name HAVING total_amount > 10000;",
      "SELECT customer_name, MAX(amount) AS max_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = 'purchase' GROUP BY customer_name HAVING max_amount > 2000;",
      "SELECT customer_name, transaction_type, AVG(amount) AS avg_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY customer_name, transaction_type;",
      "SELECT customer_name, transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.amount > 500 AND t.transaction_type = 'purchase' ORDER BY t.transaction_date DESC;",
      "SELECT c.customer_name, SUM(t.amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = 'purchase' GROUP BY c.customer_name HAVING total_amount > 5000;",
      "SELECT c.customer_name, COUNT(t.transaction_id) AS total_transactions FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = 'purchase' GROUP BY c.customer_name HAVING total_transactions > 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT first_name, last_name, email FROM Customers WHERE customer_id = 1;",
      "SELECT account_id, balance FROM Accounts WHERE customer_id = 1;",
      "SELECT * FROM Accounts WHERE account_type = 'Savings';",
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, amount, transaction_date FROM Transactions WHERE account_id = 2;",
      "SELECT first_name, last_name, email, phone_number FROM Customers WHERE last_name = 'Smith';",
      "SELECT account_id, balance FROM Accounts WHERE balance > 1000;",
      "SELECT * FROM Customers WHERE first_name LIKE 'J%';",
      "SELECT transaction_id, transaction_type FROM Transactions WHERE amount < 0;",
      "SELECT account_id, SUM(amount) AS total_amount FROM Transactions GROUP BY account_id;",
      "SELECT first_name, last_name, email FROM Customers ORDER BY last_name;",
      "SELECT customer_id, COUNT(account_id) AS num_accounts FROM Accounts GROUP BY customer_id;",
      "SELECT account_id, AVG(amount) AS avg_amount FROM Transactions GROUP BY account_id HAVING AVG(amount) > 500;",
      "SELECT customer_id, account_type, MAX(balance) AS max_balance FROM Accounts GROUP BY customer_id;",
      "SELECT first_name, last_name, email, account_type, balance FROM Customers INNER JOIN Accounts ON Customers.customer_id = Accounts.customer_id;",
      "SELECT account_id, SUM(amount) AS total_amount FROM Transactions WHERE transaction_date >= '2022-01-01' GROUP BY account_id;",
      "SELECT customer_id, account_type, COUNT(transaction_id) AS num_transactions FROM Accounts LEFT JOIN Transactions ON Accounts.account_id = Transactions.account_id GROUP BY customer_id, account_type;",
      "SELECT COUNT(DISTINCT customer_id) AS num_customers FROM Accounts;",
      "SELECT avg(balance) AS avg_balance FROM Accounts WHERE account_type = 'Checking';",
      "SELECT * FROM Customers;",
      "SELECT * FROM Accounts;",
      "SELECT * FROM Transactions;",
      "SELECT first_name, last_name FROM Customers WHERE customer_id = 1;",
      "SELECT account_id, account_type FROM Accounts WHERE customer_id = 5;",
      "SELECT transaction_id, amount FROM Transactions WHERE account_id = 10;",
      "SELECT * FROM Customers WHERE email LIKE '%gmail.com%';",
      "SELECT * FROM Accounts WHERE balance > 1000;",
      "SELECT * FROM Transactions WHERE amount < 0;",
      "SELECT first_name, last_name, account_type FROM Customers JOIN Accounts ON Customers.customer_id = Accounts.customer_id;",
      "SELECT first_name, last_name, transaction_type FROM Customers JOIN Accounts ON Customers.customer_id = Accounts.customer_id JOIN Transactions ON Accounts.account_id = Transactions.account_id;",
      "SELECT c.first_name, a.account_type, t.amount FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Transactions t ON a.account_id = t.account_id;",
      "SELECT c.first_name, a.account_type, t.amount FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Transactions t ON a.account_id = t.account_id WHERE t.amount > 100;",
      "SELECT c.first_name, c.email, a.balance FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id WHERE a.balance < 0;",
      "SELECT c.first_name, a.account_type, SUM(t.amount) AS total_amount FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Transactions t ON a.account_id = t.account_id GROUP BY c.first_name, a.account_type;",
      "SELECT c.first_name, COUNT(a.account_id) AS num_accounts FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id GROUP BY c.first_name;",
      "SELECT c.first_name, MAX(t.amount) AS max_transaction_amount FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Transactions t ON a.account_id = t.account_id GROUP BY c.first_name;",
      "SELECT c.first_name, AVG(a.balance) AS avg_balance FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id GROUP BY c.first_name;",
      "SELECT c.first_name, a.account_type, MIN(t.transaction_date) AS earliest_transaction_date FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Transactions t ON a.account_id = t.account_id GROUP BY c.first_name, a.account_type;",
      "SELECT c.first_name, a.account_type, MAX(t.transaction_date) AS latest_transaction_date FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Transactions t ON a.account_id = t.account_id GROUP BY c.first_name, a.account_type;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers;",
      "SELECT * FROM accounts;",
      "SELECT account_id, account_type FROM accounts;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, amount FROM transactions;",
      "SELECT * FROM investments;",
      "SELECT investment_id, investment_type FROM investments;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT * FROM accounts WHERE balance > 1000;",
      "SELECT * FROM transactions WHERE amount < 0;",
      "SELECT * FROM investments WHERE investment_amount > 5000;",
      "SELECT * FROM customers ORDER BY last_name, first_name;",
      "SELECT * FROM customers WHERE first_name LIKE 'J%';",
      "SELECT * FROM accounts WHERE account_type = 'Savings';",
      "SELECT * FROM transactions WHERE transaction_date = '2022-01-15';",
      "SELECT * FROM investments WHERE investment_type IN ('Stocks', 'Bonds');",
      "SELECT customer_id, SUM(balance) FROM accounts GROUP BY customer_id;",
      "SELECT customer_id, AVG(amount) FROM transactions GROUP BY customer_id;",
      "SELECT * FROM customers WHERE first_name = 'Alice';",
      "SELECT customer_id, first_name, last_name FROM customers WHERE email LIKE '%@example.com';",
      "SELECT * FROM accounts WHERE balance > 1000;",
      "SELECT customer_id, first_name, last_name, account_type FROM customers INNER JOIN accounts ON customers.customer_id = accounts.customer_id WHERE accounts.balance < 0;",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM accounts);",
      "SELECT * FROM transactions WHERE amount > 5000 AND transaction_date >= '2022-01-01';",
      "SELECT * FROM investments WHERE investment_type = 'Stocks' ORDER BY investment_amount DESC;",
      "SELECT customer_id, first_name, last_name, SUM(balance) AS total_balance FROM customers INNER JOIN accounts ON customers.customer_id = accounts.customer_id GROUP BY customer_id;",
      "SELECT SUM(amount) AS total_transactions FROM transactions;",
      "SELECT customer_id, first_name, last_name,..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, address FROM customers;",
      "SELECT customer_id, customer_name, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT * FROM accounts;",
      "SELECT account_id, account_type, balance FROM accounts WHERE customer_id = 1;",
      "SELECT account_id, account_type, balance FROM accounts WHERE balance > 1000;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, transaction_type, amount FROM transactions WHERE account_id = 1;",
      "SELECT transaction_id, transaction_type, amount, transaction_date FROM transactions WHERE transaction_date < '2022-01-01';",
      "SELECT * FROM investments;",
      "SELECT customer_id, investment_amount FROM investments;",
      "SELECT investment_id, investment_type FROM investments WHERE customer_id = 1;",
      "SELECT * FROM employees;",
      "SELECT employee_name, position FROM employees;",
      "SELECT employee_id, department FROM employees WHERE position = 'Manager';",
      "SELECT * FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id;",
      "SELECT * FROM customers JOIN transactions ON customers.customer_id = transactions.account_id;",
      "SELECT * FROM accounts JOIN investments ON accounts.customer_id = investments.customer_id;",
      "SELECT * FROM employees JOIN customers ON employees.employee_id = customers.customer_id;",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM accounts);",
      "SELECT customer_id, customer_name, address, phone_number FROM customers;",
      "SELECT * FROM accounts WHERE balance > 10000;",
      "SELECT customers.customer_name, accounts.account_type, accounts.balance FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id;",
      "SELECT customer_name, account_type, balance FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id WHERE balance < 5000;",
      "SELECT customer_name, transaction_type, amount, transaction_date FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_id = transactions.account_id WHERE transaction_type='deposit';",
      "SELECT customer_name, SUM(amount) AS total_transactions FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_id = transactions.account_id GROUP BY customers.customer_id;",
      "SELECT customer_name, investment_type, investment_amount FROM customers JOIN investments ON customers.customer_id = investments.customer_id WHERE investment_amount > 5000;",
      "SELECT customer_name, employee_name, position, department FROM customers JOIN employees ON customers.customer_id = employees.employee_id;",
      "SELECT customer_name, COUNT(account_id) AS total_accounts FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id GROUP BY customers.customer_id;",
      "SELECT employee_name, department, COUNT(customer_id) AS total_customers FROM employees JOIN customers ON employees.employee_id = customers.customer_id GROUP BY employees.employee_id;",
      "SELECT customer_name, MAX(balance) AS max_balance FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id GROUP BY customers.customer_id;",
      "SELECT account_type, AVG(balance) AS avg_balance FROM accounts GROUP BY account_type;",
      "SELECT customer_name, SUM(investment_amount) AS total_investments FROM customers JOIN investments ON customers.customer_id = investments.customer_id GROUP BY customers.customer_id;",
      "SELECT customer_name, address FROM customers WHERE LENGTH(address) > 20;",
      "SELECT customer_name, account_type, investment_type, AVG(balance) AS avg_balance, SUM(investment_amount) AS total_investments FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN investments ON customers.customer_id = investments.customer_id GROUP BY customers.customer_id;",
      "SELECT customer_name, employee_name, position, department, COUNT(transaction_id) AS total_transactions FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_id = transactions.account_id JOIN employees ON customers.customer_id = employees.employee_id GROUP BY customers.customer_id;",
      "SELECT customer_name, address, phone_number FROM customers WHERE phone_number LIKE '%555%';",
      "SELECT employee_name, department, COUNT(DISTINCT customer_id) AS unique_customers FROM employees JOIN customers ON employees.employee_id = customers.customer_id GROUP BY employees.employee_id;",
      "SELECT customer_name, account_type, transaction_type, amount, transaction_date FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_id = transactions.account_id WHERE amount > 1000 AND transaction_type = 'withdrawal';",
      "SELECT customer_name, employee_name, position, department FROM customers JOIN employees ON customers.customer_id = employees.employee_id WHERE department = 'Finance';"
    ]
  }
]