[
  {
    "statements": [
      "SELECT * FROM billing_invoices WHERE invoice_id = 1;",
      "SELECT invoice_id, customer_id FROM billing_invoices WHERE customer_id = 5;",
      "SELECT invoice_id, invoice_date FROM billing_invoices WHERE invoice_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM billing_invoices WHERE total_amount > 1000;",
      "SELECT customer_id, total_amount FROM billing_invoices WHERE invoice_id = 10;",
      "SELECT * FROM billing_invoices WHERE customer_id = 3 ORDER BY invoice_date DESC;",
      "SELECT customer_id, SUM(total_amount) AS total_paid FROM billing_invoices WHERE customer_id = 7 GROUP BY customer_id;",
      "SELECT AVG(total_amount) AS average_amount FROM billing_invoices;",
      "SELECT customer_id, COUNT(*) AS invoice_count FROM billing_invoices GROUP BY customer_id HAVING COUNT(*) > 5;",
      "SELECT customer_id, MAX(total_amount) AS max_amount FROM billing_invoices GROUP BY customer_id ORDER BY max_amount DESC;",
      "SELECT DISTINCT customer_id FROM billing_invoices;",
      "SELECT * FROM billing_invoices WHERE invoice_date < '2022-03-15' LIMIT 10;",
      "SELECT customer_id, total_amount FROM billing_invoices WHERE customer_id IN (1, 2, 3);",
      "SELECT * FROM billing_invoices WHERE customer_id BETWEEN 4 AND 7;",
      "SELECT SUM(total_amount) AS total_amount FROM billing_invoices WHERE customer_id = 5;",
      "SELECT AVG(total_amount) AS average_amount FROM billing_invoices WHERE invoice_date > '2022-02-01';",
      "SELECT customer_id, COUNT(DISTINCT invoice_date) AS distinct_dates FROM billing_invoices GROUP BY customer_id;",
      "SELECT customer_id, MIN(total_amount) AS min_amount FROM billing_invoices GROUP BY customer_id ORDER BY min_amount ASC;",
      "SELECT customer_id, invoice_date FROM billing_invoices WHERE invoice_date = '2022-04-25';",
      "SELECT invoice_id, total_amount FROM billing_invoices WHERE total_amount = (SELECT MAX(total_amount) FROM billing_invoices);",
      "SELECT * FROM billing_invoices WHERE customer_id = 100;",
      "SELECT invoice_id, invoice_date FROM billing_invoices WHERE total_amount > 100.00;",
      "SELECT invoice_id, total_amount FROM billing_invoices WHERE invoice_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM billing_invoices WHERE invoice_date >= '2022-06-01' AND invoice_date <= '2022-06-30';",
      "SELECT AVG(total_amount) FROM billing_invoices GROUP BY customer_id;",
      "SELECT customer_id, COUNT(*) as invoice_count FROM billing_invoices GROUP BY customer_id HAVING invoice_count > 5;",
      "SELECT customer_id, SUM(total_amount) as total_spent FROM billing_invoices WHERE invoice_date >= '2022-01-01' GROUP BY customer_id ORDER BY total_spent DESC;",
      "SELECT customer_id, MAX(total_amount) as highest_invoice_amount FROM billing_invoices GROUP BY customer_id;",
      "SELECT customer_id, MIN(total_amount) as lowest_invoice_amount FROM billing_invoices GROUP BY customer_id HAVING lowest_invoice_amount < 50.00;",
      "SELECT DISTINCT customer_id FROM billing_invoices;",
      "SELECT * FROM billing_invoices LIMIT 10;",
      "SELECT * FROM billing_invoices WHERE invoice_id IN (1, 2, 3, 4);",
      "SELECT * FROM billing_invoices WHERE customer_id = (SELECT customer_id FROM customers WHERE name = 'John Doe');",
      "SELECT B.customer_id, COUNT(*) as invoice_count FROM billing_invoices B JOIN customers C ON B.customer_id = C.customer_id GROUP BY B.customer_id;",
      "SELECT * FROM billing_invoices WHERE invoice_date = (SELECT MAX(invoice_date) from billing_invoices);",
      "SELECT customer_id, AVG(total_amount) as avg_amount FROM billing_invoices WHERE invoice_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customer_id HAVING avg_amount > 200.00;",
      "SELECT CONCAT('INV_', invoice_id) as invoice_code, customer_id, total_amount FROM billing_invoices;",
      "SELECT customer_id, total_amount, DATE_FORMAT(invoice_date, '%m/%d/%Y') as formatted_date FROM billing_invoices;",
      "SELECT DISTINCT YEAR(invoice_date) as invoice_year FROM billing_invoices;",
      "SELECT AVG(total_amount) as avg_amount_per_invoice FROM billing_invoices;",
      "SELECT * FROM billing_invoices WHERE total_amount >= (SELECT AVG(total_amount) FROM billing_invoices);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM billing_invoices;",
      "SELECT invoice_id, customer_id, invoice_date, amount FROM billing_invoices WHERE invoice_id = '1';",
      "SELECT * FROM billing_invoices WHERE customer_id = '1';",
      "SELECT invoice_id, customer_id, invoice_date FROM billing_invoices WHERE invoice_date >= '2022-01-01';",
      "SELECT invoice_id, customer_id, invoice_date FROM billing_invoices WHERE amount > 1000;",
      "SELECT * FROM billing_transactions;",
      "SELECT transaction_id, invoice_id, transaction_date, transaction_amount FROM billing_transactions WHERE transaction_id = '1';",
      "SELECT * FROM billing_transactions WHERE invoice_id = '1';",
      "SELECT transaction_id, transaction_date, payment_method FROM billing_transactions WHERE transaction_amount > 500;",
      "SELECT * FROM billing_invoices WHERE customer_id = '1' AND amount > 500;",
      "SELECT * FROM billing_invoices WHERE customer_id = '1' OR amount > 1000;",
      "SELECT invoice_id, customer_id, invoice_date FROM billing_invoices WHERE invoice_id = '1' UNION SELECT transaction_id, invoice_id, transaction_date FROM billing_transactions WHERE invoice_id = '1';",
      "SELECT invoice_id, customer_id, invoice_date FROM billing_invoices INNER JOIN billing_transactions ON billing_invoices.invoice_id = billing_transactions.invoice_id;",
      "SELECT invoice_id, customer_id, invoice_date FROM billing_invoices LEFT JOIN billing_transactions ON billing_invoices.invoice_id = billing_transactions.invoice_id;",
      "SELECT MAX(invoice_date) FROM billing_invoices;",
      "SELECT MIN(invoice_date) FROM billing_invoices WHERE customer_id = '1';",
      "SELECT AVG(amount) FROM billing_invoices;",
      "SELECT COUNT(*) FROM billing_invoices WHERE customer_id = '1';",
      "SELECT SUM(amount) FROM billing_invoices WHERE invoice_date >= '2022-01-01';",
      "SELECT DISTINCT customer_id FROM billing_invoices;",
      "SELECT invoice_id, customer_id, invoice_date, amount FROM billing_invoices WHERE invoice_date >= '2021-01-01' AND amount > 1000 ORDER BY invoice_date DESC LIMIT 5",
      "SELECT * FROM billing_transactions WHERE transaction_amount > 500 AND payment_method = 'Credit Card' ORDER BY transaction_date",
      "SELECT t.*, i.invoice_date FROM billing_transactions t JOIN billing_invoices i ON t.invoice_id = i.invoice_id WHERE t.transaction_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT i.customer_id, SUM(t.transaction_amount) AS total_amount FROM billing_invoices i LEFT JOIN billing_transactions t ON i.invoice_id = t.invoice_id GROUP BY i.customer_id HAVING total_amount > 5000",
      "SELECT DISTINCT i.customer_id FROM billing_invoices i INNER JOIN billing_transactions t ON i.invoice_id = t.invoice_id WHERE t.payment_method = 'PayPal' ORDER BY i.customer_id ASC LIMIT 10"
    ]
  },
  {
    "statements": [
      "SELECT * FROM billing_invoices",
      "SELECT invoice_number, invoice_date FROM billing_invoices",
      "SELECT customer_name, customer_email FROM billing_customers",
      "SELECT * FROM billing_customers",
      "SELECT transaction_date, transaction_amount FROM billing_transactions",
      "SELECT invoice_number, amount FROM billing_invoices WHERE amount > 100",
      "SELECT customer_name, customer_address FROM billing_customers WHERE customer_id = 1",
      "SELECT invoice_number, invoice_date, amount FROM billing_invoices WHERE invoice_date BETWEEN '2022-01-01' AND '2022-02-28'",
      "SELECT customer_name, customer_email, customer_address FROM billing_customers WHERE customer_id = 2",
      "SELECT * FROM billing_invoices WHERE invoice_id = 3",
      "SELECT customer_name, customer_email, customer_address FROM billing_customers WHERE customer_name LIKE 'A%'",
      "SELECT invoice_number, amount FROM billing_invoices WHERE amount < 50",
      "SELECT * FROM billing_transactions ORDER BY transaction_date DESC",
      "SELECT invoice_number, amount FROM billing_invoices ORDER BY amount ASC",
      "SELECT customer_name, customer_email FROM billing_customers WHERE customer_address IS NULL",
      "SELECT invoice_number, amount FROM billing_invoices WHERE invoice_number LIKE '%INV%'",
      "SELECT transaction_date, transaction_amount FROM billing_transactions WHERE transaction_amount > 500",
      "SELECT DISTINCT customer_name FROM billing_customers",
      "SELECT SUM(amount) FROM billing_invoices",
      "SELECT AVG(transaction_amount) FROM billing_transactions",
      "SELECT * FROM billing_invoices",
      "SELECT invoice_number, amount FROM billing_invoices",
      "SELECT customer_name, customer_email FROM billing_customers",
      "SELECT invoice_date, amount FROM billing_invoices WHERE amount > 1000",
      "SELECT * FROM billing_transactions WHERE transaction_amount > 500",
      "SELECT invoice_number, customer_name FROM billing_invoices JOIN billing_customers ON billing_invoices.invoice_id = billing_transactions.invoice_id",
      "SELECT invoice_id, transaction_date FROM billing_transactions WHERE transaction_amount > 1000",
      "SELECT customer_name, transaction_amount FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id",
      "SELECT * FROM billing_invoices WHERE invoice_date > '2022-01-01'",
      "SELECT customer_name, invoice_date FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id WHERE transaction_amount < 500",
      "SELECT * FROM billing_invoices WHERE amount > (SELECT AVG(amount) FROM billing_invoices)",
      "SELECT customer_name, customer_email, invoice_date FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id JOIN billing_invoices ON billing_transactions.invoice_id = billing_invoices.invoice_id",
      "SELECT invoice_id, MAX(transaction_amount) FROM billing_transactions GROUP BY invoice_id",
      "SELECT customer_name, SUM(transaction_amount) AS total_spent FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id GROUP BY customer_name",
      "SELECT invoice_id, COUNT(transaction_id) AS num_transactions FROM billing_transactions GROUP BY invoice_id HAVING num_transactions > 5",
      "SELECT customer_name, AVG(transaction_amount) AS avg_amount FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id GROUP BY customer_name HAVING avg_amount > 100",
      "SELECT customer_name, MAX(transaction_amount) - MIN(transaction_amount) AS amount_range FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id GROUP BY customer_name",
      "SELECT invoice_id, customer_name, customer_email, SUM(transaction_amount) AS total_spent FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id GROUP BY invoice_id, customer_name, customer_email",
      "SELECT DISTINCT customer_name FROM billing_customers",
      "SELECT customer_name, AVG(transaction_amount) AS avg_amount FROM billing_customers JOIN billing_transactions ON billing_customers.customer_id = billing_transactions.customer_id GROUP BY customer_name ORDER BY avg_amount DESC",
      "SELECT customer_name, COUNT(*) AS num_invoices FROM billing_invoices JOIN billing_transactions ON billing_invoices.invoice_id = billing_transactions.invoice_id JOIN billing_customers ON billing_transactions.customer_id = billing_customers.customer_id GROUP BY customer_name HAVING num_invoices > 2"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_address FROM customers;",
      "SELECT * FROM invoices;",
      "SELECT invoice_id, total_amount FROM invoices;",
      "SELECT invoice_date, total_amount FROM invoices;",
      "SELECT * FROM products;",
      "SELECT product_name, product_price FROM products;",
      "SELECT * FROM transactions;",
      "SELECT quantity, transaction_date FROM transactions;",
      "SELECT customer_name, invoice_date FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id;",
      "SELECT product_name, product_price FROM products WHERE product_price > 100;",
      "SELECT customer_name, total_amount FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id WHERE total_amount > 500;",
      "SELECT customer_name, transaction_date FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id;",
      "SELECT customer_name, product_name, quantity FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id JOIN products ON transactions.product_id = products.product_id;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT AVG(total_amount) FROM invoices;",
      "SELECT MAX(product_price) FROM products;",
      "SELECT MIN(quantity) FROM transactions;",
      "SELECT customer_name, SUM(total_amount) FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customer_name;",
      "SELECT product_name, SUM(quantity) FROM products JOIN transactions ON products.product_id = transactions.product_id GROUP BY product_name;",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%'",
      "SELECT customer_name, customer_email FROM customers WHERE customer_address IS NOT NULL",
      "SELECT customer_name, invoice_date, total_amount FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customers.customer_id",
      "SELECT customer_name, product_name, quantity FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id JOIN products ON transactions.product_id = products.product_id",
      "SELECT customer_name, MAX(product_price) AS max_price FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id JOIN products ON transactions.product_id = products.product_id GROUP BY customers.customer_id",
      "SELECT DISTINCT customer_name FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id JOIN products ON transactions.product_id = products.product_id",
      "SELECT customer_name, AVG(product_price) AS avg_price FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id JOIN products ON transactions.product_id = products.product_id GROUP BY customers.customer_id",
      "SELECT customer_name, COUNT(DISTINCT product_id) AS total_products FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customers.customer_id",
      "SELECT customer_name, COUNT(*) AS total_transactions FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customers.customer_id",
      "SELECT customer_name, MIN(quantity) AS min_quantity FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customers.customer_id",
      "SELECT customer_name, MAX(quantity) AS max_quantity FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.transaction_id GROUP BY customers.customer_id",
      "SELECT customer_name, AVG(quantity) AS avg_quantity FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customers.customer_id",
      "SELECT customer_name, MIN(transaction_date) AS first_purchase FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customers.customer_id",
      "SELECT customer_name, MAX(transaction_date) AS latest_purchase FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customers.customer_id",
      "SELECT customer_name, COUNT(transaction_id) AS total_purchases FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customers.customer_id",
      "SELECT customer_name, AVG(total_amount) AS avg_spent FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customers.customer_id",
      "SELECT customer_name, AVG(quantity * product_price) AS avg_transaction_amount FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN transactions ON invoices.invoice_id = transactions.invoice_id JOIN products ON transactions.product_id = products.product_id GROUP BY customers.customer_id",
      "SELECT customer_name, MIN(total_amount) AS min_spent FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customers.customer_id",
      "SELECT customer_name, MAX(total_amount) AS max_spent FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customers.customer_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_name = 'John';",
      "SELECT * FROM invoices;",
      "SELECT invoice_id, customer_id FROM invoices;",
      "SELECT * FROM invoice_items;",
      "SELECT item_name, item_quantity FROM invoice_items;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, invoice_id, transaction_date FROM transactions;",
      "SELECT * FROM payments;",
      "SELECT payment_id, invoice_id, payment_date FROM payments;",
      "SELECT customer_name, invoice_id, item_name FROM customers INNER JOIN invoices ON customers.customer_id = invoices.customer_id INNER JOIN invoice_items ON invoices.invoice_id = invoice_items.invoice_id;",
      "SELECT invoice_id, transaction_date, transaction_amount FROM transactions WHERE transaction_amount > 100;",
      "SELECT customer_name, payment_date, payment_amount FROM customers INNER JOIN invoices ON customers.customer_id = invoices.customer_id INNER JOIN payments ON invoices.invoice_id = payments.invoice_id WHERE payment_amount > 50;",
      "SELECT customer_name, transaction_amount, payment_amount FROM customers INNER JOIN invoices ON customers.customer_id = invoices.customer_id INNER JOIN transactions ON invoices.invoice_id = transactions.invoice_id INNER JOIN payments ON invoices.invoice_id = payments.invoice_id;",
      "SELECT customer_name, customer_email, payment_amount FROM customers LEFT JOIN invoices ON customers.customer_id = invoices.customer_id LEFT JOIN payments ON invoices.invoice_id = payments.invoice_id WHERE payment_amount IS NULL;",
      "SELECT customer_name, invoice_id, payment_date, payment_amount FROM customers INNER JOIN invoices ON customers.customer_id = invoices.customer_id INNER JOIN payments ON invoices.invoice_id = payments.invoice_id WHERE payment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, COUNT(invoice_id) AS num_invoices FROM customers INNER JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customer_name;",
      "SELECT customer_name, SUM(transaction_amount) AS total_transactions FROM customers INNER JOIN invoices ON customers.customer_id = invoices.customer_id INNER JOIN transactions ON invoices.invoice_id = transactions.invoice_id GROUP BY customer_name HAVING total_transactions > 500;",
      "SELECT customer_name, AVG(item_price) AS avg_item_price FROM customers INNER JOIN invoices ON customers.customer_id = invoices.customer_id INNER JOIN invoice_items ON invoices.invoice_id = invoice_items.invoice_id GROUP BY customer_name;",
      "SELECT * FROM customers;",
      "SELECT customer_id, customer_name FROM customers WHERE customer_email LIKE '%gmail.com';",
      "SELECT c.customer_name, i.invoice_id FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id;",
      "SELECT c.customer_name, ii.item_name, ii.item_quantity FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN invoice_items ii ON i.invoice_id = ii.invoice_id;",
      "SELECT i.invoice_id, t.transaction_date, t.transaction_amount FROM invoices i LEFT JOIN transactions t ON i.invoice_id = t.invoice_id;",
      "SELECT i.invoice_id, p.payment_amount FROM invoices i LEFT JOIN payments p ON i.invoice_id = p.invoice_id WHERE p.payment_date > '2023-01-01';",
      "SELECT c.customer_name, COUNT(i.invoice_id) AS total_invoices FROM customers c LEFT JOIN invoices i ON c.customer_id = i.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, SUM(p.payment_amount) AS total_payments FROM customers c LEFT JOIN invoices i ON c.customer_id = i.customer_id LEFT JOIN payments p ON i.invoice_id = p.invoice_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, i.invoice_id, t.transaction_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN transactions t ON i.invoice_id = t.invoice_id WHERE t.transaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT i.invoice_id, AVG(ii.item_price) AS average_item_price FROM invoices i INNER JOIN invoice_items ii ON i.invoice_id = ii.invoice_id GROUP BY i.invoice_id HAVING AVG(ii.item_price) > 100;",
      "SELECT customer_name, invoice_id, payment_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN payments p ON i.invoice_id = p.invoice_id WHERE payment_amount >= 500;",
      "SELECT c.customer_name, p.payment_date, p.payment_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN payments p ON i.invoice_id = p.invoice_id WHERE DATE_PART('year', p.payment_date) = 2023;",
      "SELECT DISTINCT c.customer_name, ii.item_name FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN invoice_items ii ON i.invoice_id = ii.invoice_id WHERE c.customer_name LIKE 'A%';",
      "SELECT c.customer_name, COUNT(DISTINCT i.invoice_id) AS total_invoices FROM customers c LEFT JOIN invoices i ON c.customer_id = i.customer_id GROUP BY c.customer_name HAVING COUNT(DISTINCT i.invoice_id) > 2;",
      "SELECT customer_name, invoice_id, payment_amount, transaction_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN payments p ON i.invoice_id = p.invoice_id INNER JOIN transactions t ON i.invoice_id = t.invoice_id;",
      "SELECT c.customer_name, i.invoice_id, SUM(ii.item_quantity) AS total_quantity, SUM(ii.item_quantity * ii.item_price) AS total_price FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN invoice_items ii ON i.invoice_id = ii.invoice_id GROUP BY c.customer_name, i.invoice_id;",
      "SELECT c.customer_name, AVG(p.payment_amount) AS average_payment_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN payments p ON i.invoice_id = p.invoice_id GROUP BY c.customer_name HAVING AVG(p.payment_amount) > 500;",
      "SELECT c.customer_name, i.invoice_id, MAX(t.transaction_amount) AS max_transaction_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN transactions t ON i.invoice_id = t.invoice_id GROUP BY c.customer_name, i.invoice_id;",
      "SELECT c.customer_name, COUNT(i.invoice_id) AS total_invoices, SUM(p.payment_amount) AS total_payments FROM customers c LEFT JOIN invoices i ON c.customer_id = i.customer_id LEFT JOIN payments p ON i.invoice_id = p.invoice_id GROUP BY c.customer_name HAVING COUNT(i.invoice_id) > 0 AND SUM(p.payment_amount) > 1000;",
      "SELECT c.customer_name, i.invoice_id, AVG(ii.item_price) AS average_item_price, COUNT(DISTINCT p.payment_id) AS total_payments FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN invoice_items ii ON i.invoice_id = ii.invoice_id INNER JOIN payments p ON i.invoice_id = p.invoice_id GROUP BY c.customer_name, i.invoice_id HAVING AVG(ii.item_price) > 50;"
    ]
  }
]