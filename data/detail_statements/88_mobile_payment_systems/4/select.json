[
  {
    "statements": [
      "SELECT * FROM payments;",
      "SELECT payment_id, amount FROM payments WHERE user_id = 1;",
      "SELECT payment_id, amount, timestamp FROM payments WHERE currency = 'USD';",
      "SELECT * FROM payments WHERE status = 'processed';",
      "SELECT user_id, amount, currency FROM payments WHERE timestamp BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT COUNT(*) AS total_payments FROM payments;",
      "SELECT payment_id, currency, status FROM payments WHERE amount > 1000;",
      "SELECT * FROM payments ORDER BY timestamp DESC;",
      "SELECT user_id, SUM(amount) AS total_amount FROM payments GROUP BY user_id;",
      "SELECT DISTINCT currency FROM payments;",
      "SELECT AVG(amount) AS average_amount FROM payments;",
      "SELECT payment_id, currency, MAX(amount) AS max_amount FROM payments GROUP BY currency;",
      "SELECT user_id, MIN(amount) AS min_amount FROM payments WHERE status = 'pending' GROUP BY user_id;",
      "SELECT COUNT(DISTINCT user_id) AS total_users FROM payments;",
      "SELECT payment_id, user_id, status FROM payments WHERE currency IN ('USD', 'EUR');",
      "SELECT AVG(amount) AS average_amount_per_payment FROM payments;",
      "SELECT user_id, SUM(amount) AS total_amount_per_user FROM payments GROUP BY user_id HAVING SUM(amount) > 5000;",
      "SELECT payment_id, amount, status FROM payments WHERE status LIKE 'pend%';",
      "SELECT currency, COUNT(*) AS total_payments_per_currency FROM payments GROUP BY currency;",
      "SELECT * FROM payments WHERE user_id = 1 AND status = 'pending';",
      "SELECT payment_id, user_id, amount, currency, timestamp, status FROM payments WHERE user_id = 123 AND status = 'success';",
      "SELECT user_id, SUM(amount) as total_amount FROM payments WHERE currency = 'USD' GROUP BY user_id ORDER BY total_amount DESC;",
      "SELECT COUNT(payment_id) as total_payments, currency FROM payments GROUP BY currency ORDER BY total_payments DESC;",
      "SELECT user_id, AVG(amount) as avg_amount FROM payments GROUP BY user_id HAVING avg_amount > 1000;",
      "SELECT user_id, MAX(timestamp) as latest_payment FROM payments GROUP BY user_id;",
      "SELECT status, COUNT(*) as total_count FROM payments WHERE currency = 'EUR' GROUP BY status ORDER BY total_count DESC;",
      "SELECT currency, AVG(amount) as avg_amount FROM payments GROUP BY currency HAVING avg_amount > 500;",
      "SELECT user_id, MIN(timestamp) as oldest_payment FROM payments GROUP BY user_id;",
      "SELECT user_id, min(amount) as min_amount, max(amount) as max..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM payment_transactions;",
      "SELECT user_id, amount FROM payment_transactions WHERE status = 'SUCCESS';",
      "SELECT timestamp FROM payment_transactions WHERE amount > 100;",
      "SELECT transaction_id, status FROM payment_transactions WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT user_id, account_balance FROM user_accounts WHERE username = 'john_doe';",
      "SELECT * FROM user_accounts WHERE email = 'john.doe@example.com';",
      "SELECT user_id, email FROM user_accounts WHERE username LIKE 'j%';",
      "SELECT COUNT(*) FROM payment_transactions;",
      "SELECT SUM(amount) AS total_amount FROM payment_transactions WHERE status = 'SUCCESS';",
      "SELECT MIN(amount) AS min_amount, MAX(amount) AS max_amount FROM payment_transactions;",
      "SELECT DISTINCT status FROM payment_transactions;",
      "SELECT user_id, account_balance FROM user_accounts WHERE account_balance < 0;",
      "SELECT * FROM payment_transactions ORDER BY timestamp DESC;",
      "SELECT user_id, username, account_balance FROM user_accounts ORDER BY account_balance DESC;",
      "SELECT user_id, username, account_balance FROM user_accounts LIMIT 5;",
      "SELECT user_id, amount FROM payment_transactions WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT user_id, account_balance FROM user_accounts WHERE account_balance IN (100, 500, 1000);",
      "SELECT AVG(account_balance) AS average_balance FROM user_accounts;",
      "SELECT user_id, COUNT(*) AS num_transactions FROM payment_transactions GROUP BY user_id;",
      "SELECT user_id, account_balance, account_balance * 0.1 AS interest_earned FROM user_accounts;",
      "SELECT * FROM payment_transactions WHERE amount > 1000 AND status='completed';",
      "SELECT user_id, amount, timestamp FROM payment_transactions WHERE user_id='f1018301-3903-49ea-bb02-fd3fd1e49411' ORDER BY timestamp DESC LIMIT 5;",
      "SELECT * FROM user_accounts WHERE username LIKE 'john%' ORDER BY username;",
      "SELECT user_id, SUM(amount) AS total_amount FROM payment_transactions GROUP BY user_id HAVING total_amount > 5000;",
      "SELECT u.username, u.email, p.amount FROM user_accounts u INNER JOIN payment_transactions p ON u.user_id = p.user_id WHERE p.amount > 1000;",
      "SELECT COUNT(*) AS transaction_count, AVG(amount) AS avg_amount FROM payment_transactions WHERE status='completed';",
      "SELECT * FROM user_accounts WHERE user_id IN (SELECT user_id FROM payment_transactions WHERE amount > 500);",
      "SELECT * FROM payment_transactions WHERE timestamp BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM payment_transactions WHERE amount BETWEEN 500 AND 1000;",
      "SELECT user_id, MIN(amount) AS min_amount, MAX(amount) AS max_amount FROM payment_transactions GROUP BY user_id;",
      "SELECT user_id, COUNT(*) AS transaction_count FROM payment_transactions GROUP BY user_id HAVING transaction_count > 10;",
      "SELECT MAX(amount) AS highest_amount FROM payment_transactions;",
      "SELECT MIN(amount) AS lowest_amount FROM payment_transactions;",
      "SELECT * FROM payment_transactions WHERE amount > (SELECT account_balance FROM user_accounts WHERE user_id='a2689e4c-0989-4e4d-bcc6-bdd883cbfb62');",
      "SELECT * FROM user_accounts u LEFT JOIN payment_transactions p ON u.user_id = p.user_id;",
      "SELECT username, SUM(amount) AS total_amount FROM user_accounts u INNER JOIN payment_transactions p ON u.user_id = p.user_id GROUP BY username;",
      "SELECT user_id, AVG(amount) AS avg_amount FROM payment_transactions GROUP BY user_id HAVING avg_amount > 1000;",
      "SELECT * FROM user_accounts WHERE account_balance > (SELECT SUM(amount) FROM payment_transactions WHERE user_id='e6a431e7-3a3b-4f30-9449-d0548f8fb61f');",
      "SELECT * FROM payment_transactions WHERE EXTRACT(MONTH FROM timestamp) = 3;",
      "SELECT * FROM payment_transactions WHERE user_id IN (SELECT user_id FROM user_accounts WHERE username='alice');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM payments;",
      "SELECT payment_id, user_id, amount FROM payments;",
      "SELECT DISTINCT user_id FROM payments;",
      "SELECT * FROM payments WHERE payment_status = 'Success';",
      "SELECT payment_id, user_id, payment_date FROM payments WHERE amount > 1000;",
      "SELECT * FROM users;",
      "SELECT user_id, user_name FROM users;",
      "SELECT * FROM users WHERE email LIKE '%@example.com';",
      "SELECT user_name, phone_number FROM users WHERE user_name LIKE 'J%';",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, payment_id, user_id FROM transactions;",
      "SELECT * FROM transactions WHERE transaction_date > '2022-01-01';",
      "SELECT transaction_id, user_id, transaction_details FROM transactions WHERE user_id = 100;",
      "SELECT user_id, COUNT(transaction_id) AS total_transactions FROM transactions GROUP BY user_id;",
      "SELECT user_id, MAX(amount) AS max_payment FROM payments GROUP BY user_id;",
      "SELECT user_id, AVG(amount) AS avg_payment FROM payments GROUP BY user_id;",
      "SELECT user_id, payment_date FROM payments ORDER BY payment_date DESC;",
      "SELECT user_id, SUM(amount) AS total_amount FROM payments GROUP BY user_id HAVING total_amount > 5000;",
      "SELECT user_id, COUNT(*) AS total_payments FROM payments INNER JOIN users ON payments.user_id = users.user_id GROUP BY user_id;",
      "SELECT user_id, user_name, payment_date FROM users LEFT JOIN payments ON users.user_id = payments.user_id;",
      "SELECT * FROM payments WHERE payment_status = 'completed';",
      "SELECT user_name, email FROM users WHERE user_id = 5;",
      "SELECT payment_id, amount, payment_date FROM payments WHERE user_id = 10 AND payment_status = 'pending';",
      "SELECT * FROM transactions WHERE user_id = (SELECT MAX(user_id) FROM users);",
      "SELECT user_name, email, phone_number FROM users WHERE user_name LIKE 'A%';",
      "SELECT DISTINCT user_id FROM transactions WHERE payment_id IN (SELECT payment_id FROM payments WHERE payment_status = 'failed');",
      "SELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-02-28';",
      "SELECT user_id, SUM(amount) AS total_amount FROM payments GROUP BY user_id HAVING total_amount > 1000;",
      "SELECT user_id, COUNT(*) AS transaction_count FROM transactions GROUP BY user_id HAVING transaction_count > 5;",
      "SELECT user_name, email FROM users WHERE user_id NOT IN (SELECT DISTINCT user_id FROM transactions);",
      "SELECT user_id, AVG(amount) AS average_amount FROM payments GROUP BY user_id;",
      "SELECT MAX(amount) AS highest_amount FROM payments;",
      "SELECT COUNT(*) AS total_payments FROM payments WHERE payment_status = 'completed';",
      "SELECT user_id, MIN(payment_date) AS first_payment_date FROM payments GROUP BY user_id;",
      "SELECT user_id, MAX(payment_date) AS last_payment_date FROM payments GROUP BY user_id;",
      "SELECT user_id, MAX(transaction_date) - MIN(transaction_date) AS days_between_first_and_last_transaction FROM transactions GROUP BY user_id;",
      "SELECT user_id, COUNT(DISTINCT payment_id) AS unique_payments_count FROM transactions GROUP BY user_id HAVING unique_payments_count > 2;",
      "SELECT user_id, AVG(amount) AS average_amount FROM payments WHERE payment_date < '2022-03-01' GROUP BY user_id;",
      "SELECT user_name, email FROM users WHERE user_id = (SELECT user_id FROM transactions GROUP BY user_id HAVING COUNT(*) > 3);",
      "SELECT user_id, MAX(transaction_date) AS latest_transaction_date FROM transactions GROUP BY user_id HAVING latest_transaction_date < '2022-03-15';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM payments;",
      "SELECT payment_id, amount FROM payments WHERE status='pending';",
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users WHERE email='example@example.com';",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, payment_id, user_id FROM transactions WHERE transaction_date > '2022-01-01';",
      "SELECT * FROM accounts;",
      "SELECT account_id, user_id, balance FROM accounts WHERE balance < 0;",
      "SELECT payment_id, amount, transaction_date FROM payments WHERE transaction_date BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT user_id, email FROM users WHERE phone_number IS NULL;",
      "SELECT * FROM payments WHERE status IN ('completed', 'failed');",
      "SELECT payment_id, amount, status FROM payments ORDER BY amount DESC;",
      "SELECT user_id, username FROM users ORDER BY username ASC;",
      "SELECT transaction_id, payment_id, user_id FROM transactions ORDER BY transaction_date DESC;",
      "SELECT account_id, user_id, balance FROM accounts ORDER BY balance ASC;",
      "SELECT * FROM payments LIMIT 10;",
      "SELECT * FROM users LIMIT 5 OFFSET 5;",
      "SELECT payment_id, amount FROM payments WHERE amount > 100;",
      "SELECT user_id, email FROM users WHERE email LIKE '%@gmail.com%';",
      "SELECT COUNT(*) AS total_payments FROM payments;",
      "SELECT * FROM payments",
      "SELECT payment_id, amount, status FROM payments WHERE amount > 1000",
      "SELECT payment_id, status, transaction_date FROM payments WHERE status = 'approved'",
      "SELECT user_id, username, email FROM users WHERE email LIKE '%@gmail.com'",
      "SELECT payment_id, amount, transaction_date FROM payments WHERE amount < 500 AND status = 'pending'",
      "SELECT u.username, u.email, a.balance FROM users u INNER JOIN accounts a ON u.user_id = a.user_id WHERE a.balance > 10000",
      "SELECT t.transaction_id, p.payment_id, u.username FROM transactions t INNER JOIN payments p ON t.payment_id = p.payment_id INNER JOIN users u ON t.user_id = u.user_id",
      "SELECT user_id, SUM(amount) AS total_amount FROM payments GROUP BY user_id HAVING total_amount > 5000",
      "SELECT payment_id, amount, status, transaction_date FROM payments ORDER BY transaction_date DESC",
      "SELECT COUNT(user_id) AS total_users, AVG(balance) AS avg_balance FROM accounts",
      "SELECT user_id, username, COUNT(*) AS total_transactions FROM transactions GROUP BY user_id",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT u.username, a.balance FROM users u LEFT JOIN accounts a ON u.user_id = a.user_id",
      "SELECT p.payment_id, u.username, SUM(p.amount) AS total_amount FROM payments p INNER JOIN users u ON p.payment_id = u.user_id GROUP BY p.payment_id, u.username",
      "SELECT u.username, COUNT(t.transaction_id) AS total_transactions FROM users u LEFT JOIN transactions t ON u.user_id = t.user_id GROUP BY u.username",
      "SELECT user_id, MAX(balance) AS max_balance FROM accounts GROUP BY user_id",
      "SELECT username, phone_number FROM users WHERE phone_number IS NOT NULL",
      "SELECT u.username, COUNT(t.transaction_id) AS total_transactions FROM users u LEFT JOIN transactions t ON u.user_id = t.user_id GROUP BY u.username ORDER BY total_transactions DESC",
      "SELECT u.username, a.balance FROM users u RIGHT JOIN accounts a ON u.user_id = a.user_id",
      "SELECT AVG(balance) AS avg_balance, MAX(balance) AS max_balance, MIN(balance) AS min_balance FROM accounts"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users WHERE user_id = 1;",
      "SELECT * FROM transactions WHERE amount > 1000;",
      "SELECT user_id, amount, timestamp FROM transactions WHERE user_id = 3;",
      "SELECT user_id, payment_type FROM payment_methods WHERE payment_id = 5;",
      "SELECT * FROM orders WHERE total_amount < 50.00;",
      "SELECT order_id, user_id, total_amount FROM orders WHERE user_id = 2;",
      "SELECT user_id, role FROM permissions WHERE user_id = 4;",
      "SELECT * FROM users WHERE email LIKE '%gmail.com';",
      "SELECT user_id, card_number FROM payment_methods WHERE user_id = 1;",
      "SELECT * FROM transactions WHERE timestamp BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT user_id, order_date FROM orders WHERE order_date >= '2022-04-01';",
      "SELECT * FROM payments WHERE payment_type = 'credit card';",
      "SELECT user_id, order_date FROM orders WHERE total_amount > 100.00 ORDER BY order_date DESC LIMIT 5;",
      "SELECT * FROM users WHERE user_id > 5 AND user_id < 10;",
      "SELECT user_id, permission_id, role FROM users JOIN permissions ON users.user_id = permissions.user_id;",
      "SELECT user_id, total_amount FROM orders UNION ALL SELECT user_id, amount FROM transactions;",
      "SELECT user_id, payment_type FROM payment_methods WHERE payment_type IN ('credit card', 'paypal');",
      "SELECT user_id, username FROM users WHERE user_id IN (SELECT user_id FROM permissions WHERE role = 'admin');",
      "SELECT * FROM users WHERE password IS NULL;",
      "SELECT * FROM users WHERE user_id = 1;",
      "SELECT username, email FROM users WHERE user_id = 1;",
      "SELECT user_id, username, email FROM users WHERE username LIKE 'A%';",
      "SELECT * FROM transactions WHERE amount > 1000;",
      "SELECT user_id, SUM(amount) as total_amount FROM transactions GROUP BY user_id;",
      "SELECT * FROM transactions JOIN users ON transactions.user_id = users.user_id WHERE users.username = 'JohnDoe';",
      "SELECT orders.order_id, users.username, orders.total_amount FROM orders JOIN users ON orders.user_id = users.user_id;",
      "SELECT permissions.permission_id, users.username, permissions.role FROM permissions JOIN users ON permissions.user_id = users.user_id WHERE users.username = 'JaneSmith';",
      "SELECT username, email, payment_type FROM users JOIN payment_methods ON users.user_id = payment_methods.user_id WHERE payment_methods.payment_type = 'Credit Card';",
      "SELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT users.user_id, users.username, COUNT(orders.order_id) as total_orders FROM users LEFT JOIN orders ON users.user_id = orders.user_id GROUP BY users.user_id;",
      "SELECT user_id, MAX(timestamp) as latest_transaction FROM transactions GROUP BY user_id;",
      "SELECT * FROM users JOIN permissions ON users.user_id = permissions.user_id JOIN roles ON permissions.role_id = roles.role_id WHERE roles.role_name = 'Administrator';",
      "SELECT user_id, SUM(total_amount) as total_spent FROM orders WHERE user_id IN (SELECT user_id FROM permissions WHERE role = 'Customer');",
      "SELECT * FROM users WHERE user_id = (SELECT user_id FROM transactions GROUP BY user_id ORDER BY SUM(amount) DESC LIMIT 1);",
      "SELECT username, total_amount FROM (SELECT users.username, SUM(orders.total_amount) as total_amount FROM users JOIN orders ON users.user_id = orders.user_id GROUP BY users.username) as user_totals ORDER BY total_amount DESC LIMIT 5;",
      "SELECT * FROM transactions WHERE user_id = ANY (SELECT user_id FROM permissions WHERE role = 'Customer');",
      "SELECT COUNT(*) as num_users FROM users;",
      "SELECT user_id, AVG(total_amount) as avg_order_amount FROM orders GROUP BY user_id HAVING AVG(total_amount) > 500;",
      "SELECT user_id, MAX(total_amount) as max_order_amount FROM orders GROUP BY user_id ORDER BY max_order_amount DESC LIMIT 5;"
    ]
  }
]