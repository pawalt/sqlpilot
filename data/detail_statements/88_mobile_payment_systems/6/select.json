[
  {
    "statements": [
      "SELECT * FROM refunds;",
      "SELECT transaction_id, transaction_amount FROM refunds;",
      "SELECT customer_id, refund_amount FROM refunds;",
      "SELECT * FROM refunds WHERE transaction_date >= '2022-01-01';",
      "SELECT * FROM refunds WHERE customer_id = 123;",
      "SELECT * FROM refunds WHERE refund_amount > 100;",
      "SELECT * FROM refunds WHERE transaction_amount = 50;",
      "SELECT AVG(transaction_amount) AS avg_transaction_amount FROM refunds;",
      "SELECT SUM(refund_amount) AS total_refund_amount FROM refunds;",
      "SELECT transaction_id, transaction_date FROM refunds WHERE refund_date IS NOT NULL;",
      "SELECT customer_id, COUNT(*) AS total_refunds FROM refunds GROUP BY customer_id;",
      "SELECT MAX(transaction_amount) AS max_transaction_amount FROM refunds;",
      "SELECT MIN(refund_amount) AS min_refund_amount FROM refunds;",
      "SELECT DISTINCT customer_id FROM refunds;",
      "SELECT * FROM refunds ORDER BY transaction_date DESC;",
      "SELECT * FROM refunds ORDER BY refund_amount ASC;",
      "SELECT * FROM refunds LIMIT 10;",
      "SELECT * FROM refunds OFFSET 5;",
      "SELECT customer_id, AVG(refund_amount) AS avg_refund_amount FROM refunds GROUP BY customer_id;",
      "SELECT transaction_id, transaction_amount FROM refunds WHERE transaction_amount > refund_amount;",
      "SELECT * FROM refunds WHERE customer_id = 123 AND refund_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT customer_id, SUM(refund_amount) AS total_refund_amount FROM refunds GROUP BY customer_id;",
      "SELECT customer_id, COUNT(transaction_id) AS total_transactions FROM refunds GROUP BY customer_id HAVING total_transactions > 10;",
      "SELECT customer_id, AVG(transaction_amount) AS avg_transaction_amount FROM refunds GROUP BY customer_id ORDER BY avg_transaction_amount DESC;",
      "SELECT customer_id, transaction_id, transaction_date, refund_amount FROM refunds ORDER BY transaction_date DESC LIMIT 10;",
      "SELECT customer_id, AVG(refund_amount) AS avg_refund_amount FROM refunds WHERE refund_amount > 100 GROUP BY customer_id HAVING avg_refund_amount < 500;",
      "SELECT customer_id, COUNT(*) AS total_refunds, MAX(refund_amount) AS max_refund_amount FROM refunds GROUP BY customer_id HAVING total_refunds > 5;",
      "SELECT customer_id, transaction_date, refund_amount FR..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM transactions;",
      "SELECT transaction_id, amount FROM transactions;",
      "SELECT customer_id, full_name, email FROM customers;",
      "SELECT * FROM customers WHERE customer_id = '12345-67890';",
      "SELECT full_name, phone_number FROM customers WHERE email = 'john.doe@example.com';",
      "SELECT transaction_id, amount FROM transactions WHERE amount > 100;",
      "SELECT customer_id, full_name, address FROM customers WHERE phone_number = '555-5555';",
      "SELECT * FROM transactions ORDER BY transaction_date DESC;",
      "SELECT customer_id, full_name, address FROM customers WHERE address LIKE '%Street%';",
      "SELECT transaction_id, amount FROM transactions WHERE status = 'completed';",
      "SELECT * FROM customers WHERE full_name LIKE '%Doe%';",
      "SELECT customer_id, email FROM customers WHERE phone_number LIKE '555%';",
      "SELECT transaction_id, amount, transaction_date FROM transactions WHERE transaction_date > '2023-01-01';",
      "SELECT * FROM transactions WHERE amount BETWEEN 50 AND 100;",
      "SELECT customer_id, full_name, email, phone_number FROM customers WHERE customer_id = '67890-12345';",
      "SELECT * FROM transactions WHERE status IN ('completed', 'pending');",
      "SELECT transaction_id, amount FROM transactions WHERE amount < 50;",
      "SELECT customer_id, full_name, phone_number FROM customers WHERE email LIKE '%@example.com';",
      "SELECT * FROM transactions WHERE status = 'pending' ORDER BY transaction_date ASC;",
      "SELECT customer_id, full_name, address FROM customers WHERE address NOT LIKE '%Avenue%';",
      "SELECT * FROM transactions WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000' AND status = 'completed';",
      "SELECT customer_id, SUM(amount) AS total_amount FROM transactions GROUP BY customer_id;",
      "SELECT t.*, c.full_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.amount > 1000;",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT c.full_name, c.email, SUM(t.amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.full_name, c.email;",
      "SELECT c.full_name, COUNT(t.transaction_id) AS num_transactions FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.full_name;",
      "SELECT c.full_name, c.email, t.amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id ORDER BY t.amount DESC LIMIT 10;",
      "SELECT c.full_name, AVG(t.amount) AS avg_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.full_name;",
      "SELECT c.full_name, MIN(t.amount) AS min_amount, MAX(t.amount) AS max_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.full_name;",
      "SELECT c.full_name, t.* FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id WHERE t.amount IS NULL;",
      "SELECT c.full_name, c.email, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date >= '2022-01-01' AND t.transaction_date <= '2022-01-31';",
      "SELECT c.full_name, SUM(t.amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date >= '2022-01-01' AND t.transaction_date <= '2022-01-31' GROUP BY c.full_name;",
      "SELECT c.full_name, COUNT(t.transaction_id) AS num_transactions FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = 'pending' GROUP BY c.full_name;",
      "SELECT c.full_name, MAX(t.amount) AS max_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = 'completed' GROUP BY c.full_name;",
      "SELECT c.full_name, t.amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.amount = (SELECT MAX(amount) FROM transactions);",
      "SELECT c.email, AVG(t.amount) AS avg_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = 'completed' GROUP BY c.email;",
      "SELECT c.full_name, c.email, t.amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.amount > (SELECT AVG(amount) FROM transactions);",
      "SELECT c.full_name, t.* FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date = (SELECT MAX(transaction_date) FROM transactions WHERE customer_id = c.customer_id);",
      "SELECT c.full_name, c.address, t.* FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = (SELECT DISTINCT status FROM transactions WHERE customer_id = c.customer_id);",
      "SELECT c.full_name, SUM(t.amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = (SELECT DISTINCT status FROM transactions WHERE customer_id = c.customer_id) GROUP BY c.full_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transactions;",
      "SELECT transaction_amount, transaction_date FROM transactions;",
      "SELECT customer_id, status FROM transactions WHERE transaction_amount > 1000;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_name, phone_number FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT dispute_reason, resolution_status FROM disputes;",
      "SELECT dispute_id, dispute_reason FROM disputes WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM transactions WHERE status = 'pending';",
      "SELECT customer_id, customer_name FROM customers WHERE email LIKE '%example.com';",
      "SELECT transaction_amount FROM transactions WHERE transaction_date > '2022-01-01';",
      "SELECT customer_name, phone_number FROM customers;",
      "SELECT dispute_reason, resolution_status FROM disputes WHERE resolution_status = 'resolved';",
      "SELECT customer_id, customer_name, email FROM customers WHERE customer_name = 'John Doe';",
      "SELECT transaction_amount FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_name, email FROM customers WHERE phone_number IS NULL;",
      "SELECT transaction_id, transaction_amount, transaction_date FROM transactions ORDER BY transaction_amount DESC;",
      "SELECT customer_id, customer_name, email, phone_number FROM customers ORDER BY customer_name;",
      "SELECT transaction_id, transaction_amount, status FROM transactions WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT customer_name, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM transactions WHERE status = 'failed');",
      "SELECT transaction_id, transaction_date, status FROM transactions WHERE customer_id = '123e4567-e89b-12d3-a456-426614174123';",
      "SELECT * FROM transactions WHERE transaction_amount > 1000 AND status = 'approved';",
      "SELECT customer_id, count(*) FROM transactions GROUP BY customer_id HAVING count(*) > 5;",
      "SELECT c.customer_name, t.transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id;",
      "SELECT c.customer_name, d.dispute_reason FROM customers c LEFT JOIN disputes d ON c.customer_id = d.customer_id;",
      "SELECT t.transaction_date, SUM(t.transaction_amount) AS total_amount FROM transactions t GROUP BY t.transaction_date ORDER BY total_amount DESC;",
      "SELECT c.customer_name, COUNT(d.dispute_id) AS total_disputes FROM customers c LEFT JOIN disputes d ON c.customer_id = d.customer_id GROUP BY c.customer_id HAVING total_disputes > 2;",
      "SELECT t.transaction_id, c.customer_name, d.dispute_reason FROM transactions t LEFT JOIN customers c ON t.customer_id = c.customer_id LEFT JOIN disputes d ON t.transaction_id = d.transaction_id;",
      "SELECT d.dispute_id, t.transaction_date, c.customer_name FROM disputes d JOIN transactions t ON d.transaction_id = t.transaction_id JOIN customers c ON d.customer_id = c.customer_id;",
      "SELECT MAX(t.transaction_amount) AS max_amount, MIN(t.transaction_amount) AS min_amount, AVG(t.transaction_amount) AS avg_amount FROM transactions t;",
      "SELECT c.customer_name, t.transaction_date, d.resolution_status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN disputes d ON t.transaction_id = d.transaction_id ORDER BY t.transaction_date DESC;",
      "SELECT c.customer_name, t.transaction_date, d.dispute_reason FROM customers c JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN disputes d ON t.transaction_id = d.transaction_id WHERE d.dispute_id IS NULL;",
      "SELECT c.customer_name, SUM(t.transaction_amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_id HAVING total_amount > 5000;",
      "SELECT c.customer_name, COUNT(*) AS total_transactions FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, COUNT(*) AS total_disputes FROM customers c JOIN disputes d ON c.customer_id = d.customer_id GROUP BY c.customer_name ORDER BY total_disputes DESC;",
      "SELECT c.customer_name, AVG(t.transaction_amount) AS avg_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name HAVING avg_transaction_amount > 500;",
      "SELECT c.customer_name, t.transaction_date, d.resolution_status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN disputes d ON t.transaction_id = d.transaction_id WHERE d.resolution_status IN ('resolved', 'closed');",
      "SELECT customer_id, MAX(transaction_amount) AS max_amount FROM transactions GROUP BY customer_id HAVING max_amount > 1000;",
      "SELECT customer_id, AVG(transaction_amount) AS avg_amount FROM transactions GROUP BY customer_id HAVING avg_amount > 500;",
      "SELECT customer_id, COUNT(*) AS total_transactions FROM transactions GROUP BY customer_id;",
      "SELECT transaction_date, AVG(transaction_amount) AS avg_amount FROM transactions GROUP BY transaction_date HAVING avg_amount > 1000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transactions;",
      "SELECT transaction_id, customer_id, amount FROM transactions;",
      "SELECT transaction_id, date FROM transactions WHERE customer_id = 100;",
      "SELECT * FROM customers;",
      "SELECT customer_id, name, email FROM customers;",
      "SELECT * FROM refunds WHERE amount > 100;",
      "SELECT refund_id, transaction_id, date FROM refunds WHERE transaction_id = 200;",
      "SELECT * FROM disputes WHERE status = 'OPEN';",
      "SELECT dispute_id, reason FROM disputes WHERE customer_id = 300;",
      "SELECT * FROM transactions WHERE amount BETWEEN 50 AND 100;",
      "SELECT customer_id, name, phone_number FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT * FROM refunds WHERE amount < 50 OR amount > 200;",
      "SELECT dispute_id, status FROM disputes WHERE transaction_id = 400;",
      "SELECT transaction_id, customer_id, date FROM transactions ORDER BY date DESC;",
      "SELECT customer_id, name, email FROM customers ORDER BY name;",
      "SELECT dispute_id, reason FROM disputes ORDER BY dispute_id ASC;",
      "SELECT DISTINCT customer_id FROM transactions;",
      "SELECT COUNT(*) FROM refunds;",
      "SELECT MAX(amount) FROM transactions;",
      "SELECT MIN(date) FROM disputes;",
      "SELECT AVG(amount) FROM refunds;",
      "SELECT * FROM transactions WHERE amount > 1000;",
      "SELECT customer_id, SUM(amount) FROM transactions GROUP BY customer_id HAVING SUM(amount) > 5000;",
      "SELECT date, amount FROM transactions WHERE transaction_id IN (SELECT transaction_id FROM refunds);",
      "SELECT name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM disputes WHERE status = 'resolved');",
      "SELECT c.name, t.amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id;",
      "SELECT t.transaction_id, t.amount, r.amount AS refund_amount FROM transactions t LEFT JOIN refunds r ON t.transaction_id = r.transaction_id;",
      "SELECT c.name, SUM(t.amount) AS total_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_id;",
      "SELECT cus.name AS customer_name, trans.date AS transaction_date FROM customers cus INNER JOIN transactions trans ON cus.customer_id = trans.customer_id WHERE cus.email = 'example@gmail.com';",
      "SELECT cus.name AS customer_name, SUM(trans.amount) AS total_amount FROM customers cus INNER JOIN transactions trans ON cus.customer_id = trans.customer_id GROUP BY cus.name;",
      "SELECT c.name, COUNT(r.refund_id) AS total_refunds FROM customers c LEFT JOIN refunds r ON c.customer_id = r.transaction_id GROUP BY c.name;",
      "SELECT c.name, t.amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE t.date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT c.name, AVG(t.amount) AS avg_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT c.name, COUNT(t.transaction_id) AS total_transactions FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT d.reason, t.amount FROM disputes d INNER JOIN transactions t ON d.transaction_id = t.transaction_id WHERE d.status = 'pending';",
      "SELECT c.name AS customer_name, MAX(t.amount) AS highest_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT c.name AS customer_name, MIN(t.amount) AS lowest_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT c.name, MAX(t.date) AS latest_transaction_date FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT c.name, MIN(t.date) AS earliest_transaction_date FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT COUNT(*) AS total_transactions FROM transactions WHERE date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT AVG(amount) AS avg_amount FROM transactions WHERE date BETWEEN '2021-01-01' AND '2021-12-31';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transactions;",
      "SELECT id, customer_id FROM transactions;",
      "SELECT customer_id, transaction_amount FROM transactions;",
      "SELECT id, transaction_date FROM transactions;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_name, email, phone_number FROM customers;",
      "SELECT * FROM refunds;",
      "SELECT refund_id, refund_amount FROM refunds;",
      "SELECT transaction_id, refund_date FROM refunds;",
      "SELECT customer_id, transaction_date FROM customer_transactions;",
      "SELECT transaction_id, customer_id FROM customer_transactions;",
      "SELECT dispute_id, transaction_id FROM dispute_resolutions;",
      "SELECT transaction_id, reason FROM dispute_resolutions;",
      "SELECT * FROM disputes_resolutions;",
      "SELECT dispute_id, resolution_date FROM dispute_resolutions;",
      "SELECT transaction_id, reason, resolution_date FROM dispute_resolutions;",
      "SELECT c.customer_name, t.transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id;",
      "SELECT t.transaction_amount, r.refund_amount FROM transactions t JOIN refunds r ON t.id = r.transaction_id;",
      "SELECT c.customer_name, r.refund_amount FROM customers c JOIN refunds r ON c.customer_id = (SELECT customer_id FROM transactions WHERE id = r.transaction_id);",
      "SELECT c.customer_name, d.reason FROM customers c JOIN dispute_resolutions d ON c.customer_id = (SELECT customer_id FROM transactions WHERE id = d.transaction_id);",
      "SELECT * FROM transactions WHERE transaction_amount > 1000;",
      "SELECT customer_name, email FROM customers WHERE phone_number IS NULL;",
      "SELECT customer_id, refund_amount FROM refunds WHERE refund_amount >= 500;",
      "SELECT transaction_id, reason FROM dispute_resolutions WHERE reason LIKE '%fraud%';",
      "SELECT customer_id, COUNT(*) AS total_transactions FROM customer_transactions GROUP BY customer_id;",
      "SELECT customer_name, transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customer_name, refund_amount FROM customers LEFT JOIN refunds ON customers.customer_id = refunds.transaction_id;",
      "SELECT c.customer_name, t.transaction_amount, r.refund_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN refunds r ON t.id = r.transaction_id;",
      "SELECT SUM(transaction_amount) AS total_spent FROM transactions WHERE transaction_date > '2021-01-01';",
      "SELECT customer_name, AVG(transaction_amount) AS average_transaction FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name HAVING AVG(transaction_amount) > 500;",
      "SELECT customer_id, MAX(transaction_amount) AS max_transaction FROM transactions GROUP BY customer_id ORDER BY max_transaction DESC LIMIT 5;",
      "SELECT customer_name, COUNT(*) AS total_refunds FROM customers LEFT JOIN refunds ON customers.customer_id = refunds.transaction_id GROUP BY customer_name;",
      "SELECT c.customer_name, COUNT(r.refund_id) AS total_refunds FROM customers c LEFT JOIN refunds r ON c.customer_id = r.transaction_id GROUP BY c.customer_name;",
      "SELECT customer_name, SUM(refund_amount) AS total_refunds FROM customers LEFT JOIN refunds ON customers.customer_id = refunds.transaction_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(refund_amount) AS avg_refund_amount FROM customers JOIN refunds ON customers.customer_id = refunds.transaction_id GROUP BY customer_name HAVING AVG(refund_amount) > 200;",
      "SELECT customer_name, transaction_date FROM customers JOIN customer_transactions ON customers.customer_id = customer_transactions.customer_id WHERE transaction_date BETWEEN '2022-01-01' AND '2022-02-28';",
      "SELECT customer_name, refund_date FROM customers JOIN refunds ON customers.customer_id = refunds.transaction_id WHERE refund_date < '2022-03-15';",
      "SELECT customer_id, COUNT(*) AS total_disputes FROM disputes_resolutions GROUP BY customer_id;",
      "SELECT DISTINCT(customer_name) FROM customers;",
      "SELECT customer_id, SUM(transaction_amount) - SUM(refund_amount) AS net_spent FROM transactions JOIN refunds ON transactions.id = refunds.transaction_id GROUP BY customer_id;"
    ]
  }
]