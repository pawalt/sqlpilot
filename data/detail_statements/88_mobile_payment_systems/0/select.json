[
  {
    "statements": [
      "SELECT * FROM user_account;",
      "SELECT id, username FROM user_account;",
      "SELECT id, password FROM user_account;",
      "SELECT username FROM user_account WHERE id = 1;",
      "SELECT * FROM user_account WHERE username = 'john_doe';",
      "SELECT id, username, payment_details FROM user_account;",
      "SELECT id, password, payment_details FROM user_account;",
      "SELECT * FROM user_account WHERE id = 5;",
      "SELECT username, payment_details FROM user_account WHERE id = 3;",
      "SELECT id, username FROM user_account WHERE password = 'pwd123';",
      "SELECT * FROM user_account WHERE username LIKE 'a%';",
      "SELECT id, username FROM user_account WHERE payment_details IS NOT NULL;",
      "SELECT id, password FROM user_account WHERE username = 'jane_smith';",
      "SELECT * FROM user_account WHERE id > 10;",
      "SELECT * FROM user_account WHERE password LIKE '%password%';",
      "SELECT id, username FROM user_account WHERE payment_details LIKE '%credit card%';",
      "SELECT id, username FROM user_account WHERE username = 'admin' AND password = 'admin123';",
      "SELECT * FROM user_account ORDER BY id DESC;",
      "SELECT id, username, payment_details FROM user_account WHERE id BETWEEN 5 AND 10;",
      "SELECT id, username, payment_details FROM user_account WHERE username IN ('alice', 'bob', 'charlie');",
      "SELECT * FROM user_account WHERE id = 1;",
      "SELECT id, username FROM user_account WHERE username LIKE 'A%';",
      "SELECT * FROM user_account WHERE id > 10 AND username = 'John';",
      "SELECT COUNT(id) FROM user_account;",
      "SELECT DISTINCT username FROM user_account;",
      "SELECT MAX(id) FROM user_account;",
      "SELECT AVG(id) FROM user_account;",
      "SELECT id, password FROM user_account WHERE id = (SELECT MAX(id) FROM user_account);",
      "SELECT * FROM user_account WHERE username IN ('Alice', 'Bob', 'Charlie');",
      "SELECT id, username, payment_details FROM user_account WHERE payment_details IS NOT NULL;",
      "SELECT id, username FROM user_account WHERE username NOT LIKE '%admin%';",
      "SELECT id, password FROM user_account WHERE username = 'Alice' OR username = 'Bob';",
      "SELECT * FROM user_account ORDER BY id DESC;",
      "SELECT * FROM user_account WHERE username = 'Alice' ORDER BY id ASC;",
      "SELECT * FROM user_account WHERE id BETWEEN 5 AND 10;",
      "SELECT id, username FROM user_account WHERE id BETWEEN 1 AND 5 OR id BETWEEN 15 AND 20;",
      "SELECT id, password FROM user_account WHERE id IN (1, 3, 5);",
      "SELECT * FROM user_account WHERE username = 'Charlie' UNION SELECT * FROM user_account WHERE username = 'David';",
      "SELECT * FROM user_account WHERE username LIKE 'J%' UNION ALL SELECT * FROM user_account WHERE username LIKE 'M%';",
      "SELECT * FROM user_account WHERE password = 'securepwd' AND (username = 'Admin' OR username = 'Superuser');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username, email FROM users;",
      "SELECT user_id, payment_method FROM users;",
      "SELECT * FROM payments;",
      "SELECT payment_id, user_id, payment_date FROM payments;",
      "SELECT payment_id, amount, payment_status FROM payments;",
      "SELECT username, email FROM users WHERE payment_method='Credit Card';",
      "SELECT username, email FROM users WHERE payment_method='PayPal';",
      "SELECT * FROM payments WHERE amount > 100;",
      "SELECT user_id, payment_date, amount FROM payments WHERE payment_status='Pending';",
      "SELECT user_id, payment_date, amount FROM payments WHERE payment_status='Success';",
      "SELECT username, email FROM users WHERE user_id IN (1, 3, 5);",
      "SELECT user_id, username FROM users WHERE email LIKE '%gmail.com';",
      "SELECT username, payment_date FROM users LEFT JOIN payments ON users.user_id = payments.user_id;",
      "SELECT u.username, p.amount FROM users u JOIN payments p ON u.user_id = p.user_id;",
      "SELECT u.username, p.payment_date FROM users u INNER JOIN payments p ON u.user_id = p.user_id;",
      "SELECT u.username, p.amount, p.payment_status FROM users u JOIN payments p ON u.user_id = p.user_id WHERE p.payment_status='Pending';",
      "SELECT u.username, p.payment_date, p.amount FROM users u JOIN payments p ON u.user_id = p.user_id WHERE u.username='JohnDoe';",
      "SELECT u.username, p.amount FROM users u RIGHT JOIN payments p ON u.user_id = p.user_id;",
      "SELECT u.username, p.payment_date FROM users u LEFT JOIN payments p ON u.user_id = p.user_id WHERE p.amount > 50;",
      "SELECT username, email FROM users WHERE payment_method='Credit Card';",
      "SELECT username,email FROM users WHERE user_id=100;",
      "SELECT user_id,username,email,payment_method FROM users WHERE username LIKE '%John%';",
      "SELECT * FROM users WHERE username='admin' AND password='admin123';",
      "SELECT user_id,username,email FROM users WHERE user_id NOT IN (SELECT user_id FROM payments);",
      "SELECT user_id, COUNT(payment_id) AS num_payments FROM payments GROUP BY user_id HAVING num_payments > 5;",
      "SELECT u.username, p.amount, p.payment_date FROM users u INNER JOIN payments p ON u.user_id = p.user_id;",
      "SELECT u.username, COUNT(p.payment_id) AS num_payments FROM users u LEFT JOIN payments p ON u.user_id = p.user_id GROUP BY u.username HAVING num_payments < 3;",
      "SELECT * FROM users ORDER BY username ASC;",
      "SELECT username, MAX(amount) AS max_payment FROM users u INNER JOIN payments p ON u.user_id = p.user_id GROUP BY username;",
      "SELECT u.username, AVG(p.amount) AS avg_payment FROM users u INNER JOIN payments p ON u.user_id = p.user_id GROUP BY username;",
      "SELECT u.username, SUM(amount) AS total_payments FROM users u INNER JOIN payments p ON u.user_id = p.user_id GROUP BY username HAVING total_payments > 1000;",
      "SELECT username, payment_date, amount FROM users u INNER JOIN payments p ON u.user_id = p.user_id WHERE payment_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT u.username, p.amount, p.payment_status FROM users u INNER JOIN payments p ON u.user_id = p.user_id WHERE p.amount > 100 AND p.payment_status='Success';",
      "SELECT u.username, COUNT(p.payment_id) AS num_payments FROM users u LEFT JOIN payments p ON u.user_id = p.user_id GROUP BY u.username ORDER BY num_payments DESC;",
      "SELECT u.username, AVG(p.amount) AS avg_payment FROM users u INNER JOIN payments p ON u.user_id = p.user_id GROUP BY username HAVING avg_payment > 50;",
      "SELECT username, email, payment_date, amount FROM users u INNER JOIN payments p ON u.user_id = p.user_id WHERE email LIKE '%@gmail.com' AND amount < 100;",
      "SELECT u.username, COUNT(p.payment_id) AS num_payments FROM users u LEFT JOIN payments p ON u.user_id = p.user_id GROUP BY u.username HAVING num_payments = 0;",
      "SELECT username, payment_date, amount FROM users u INNER JOIN payments p ON u.user_id = p.user_id WHERE YEAR(payment_date) = 2022;",
      "SELECT u.username, MIN(p.amount) AS min_payment FROM users u INNER JOIN payments p ON u.user_id = p.user_id GROUP BY username;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT user_id, created_at FROM users WHERE username = 'john_doe';",
      "SELECT * FROM passwords;",
      "SELECT user_id, password_hash FROM passwords WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM payment_details;",
      "SELECT card_number, expiry_date FROM payment_details WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT users.username, payment_details.card_number FROM users JOIN payment_details ON users.user_id = payment_details.user_id;",
      "SELECT users.username, passwords.password_hash FROM users LEFT JOIN passwords ON users.user_id = passwords.user_id;",
      "SELECT users.username, payment_details.expiry_date FROM users RIGHT JOIN payment_details ON users.user_id = payment_details.user_id;",
      "SELECT users.username, passwords.password_hash FROM users JOIN passwords ON users.user_id = passwords.user_id WHERE users.username = 'alice_smith';",
      "SELECT users.username, payment_details.card_number FROM users JOIN payment_details ON users.user_id = payment_details.user_id WHERE users.username = 'bob_johnson';",
      "SELECT COUNT(*) AS total_users FROM users;",
      "SELECT MAX(created_at) AS latest_user_created FROM users;",
      "SELECT DISTINCT username FROM users;",
      "SELECT AVG(LENGTH(username)) AS average_username_length FROM users;",
      "SELECT username, COUNT(*) AS password_count FROM users JOIN passwords ON users.user_id = passwords.user_id GROUP BY username;",
      "SELECT username, SUM(LENGTH(email)) AS total_email_length FROM users GROUP BY username;",
      "SELECT username, MIN(created_at) AS earliest_user_created FROM users WHERE username IN ('alice_smith', 'bob_johnson');",
      "SELECT * FROM users WHERE username = 'john_doe';",
      "SELECT * FROM users WHERE username LIKE 'j%';",
      "SELECT username, email FROM users WHERE created_at > '2022-01-01';",
      "SELECT users.username, passwords.password_hash FROM users INNER JOIN passwords ON users.user_id = passwords.user_id;",
      "SELECT users.username, payment_details.card_number FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id;",
      "SELECT users.username, passwords.password_hash, payment_details.card_number FROM users INNER JOIN passwords ON users.user_id = passwords.user_id INNER JOIN payment_details ON users.user_id = payment_details.user_id;",
      "SELECT users.username, COUNT(*) FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id GROUP BY users.username HAVING COUNT(*) >= 2;",
      "SELECT users.username, MAX(payment_details.expiry_date) FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id GROUP BY users.username;",
      "SELECT users.username, MIN(payment_details.card_number) FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id GROUP BY users.username;",
      "SELECT DISTINCT users.username FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id WHERE payment_details.expiry_date < '2023-01-01';",
      "SELECT users.username, payment_details.card_number FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id WHERE users.username = 'jane_smith';",
      "SELECT users.username, payment_details.card_number FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id WHERE payment_details.cvv = '123';",
      "SELECT users.username, passwords.password_hash FROM users INNER JOIN passwords ON users.user_id = passwords.user_id WHERE users.email LIKE '%example.com';",
      "SELECT users.username, passwords.password_hash FROM users INNER JOIN passwords ON users.user_id = passwords.user_id ORDER BY users.created_at DESC;",
      "SELECT username, COALESCE(email, 'No email provided') AS email FROM users;",
      "SELECT username, COALESCE(password_hash, 'No password hash') AS password_hash FROM passwords;",
      "SELECT users.username, passwords.password_hash FROM users LEFT JOIN passwords ON users.user_id = passwords.user_id;",
      "SELECT username, CAST(card_number AS INT) AS card_number_int FROM payment_details;",
      "SELECT username, LENGTH(username) AS username_length FROM users;",
      "SELECT username, SUBSTRING(username, 1, 3) AS username_substr FROM users;",
      "SELECT username, REPLACE(username, '_', ' ') AS username_replaced FROM users;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT user_id, email FROM users WHERE username = 'john_doe';",
      "SELECT * FROM passwords;",
      "SELECT user_id, password FROM passwords WHERE password_id = 1;",
      "SELECT * FROM payment_details;",
      "SELECT card_number, exp_date FROM payment_details WHERE user_id = 1;",
      "SELECT * FROM address;",
      "SELECT city, state, zip_code FROM address WHERE user_id = 2;",
      "SELECT username, email FROM users WHERE user_id IN (SELECT user_id FROM passwords WHERE password = '123456');",
      "SELECT username, email, card_number FROM users u INNER JOIN payment_details p ON u.user_id = p.user_id;",
      "SELECT username, street_address, city, state, zip_code FROM users u JOIN address a ON u.user_id = a.user_id;",
      "SELECT COUNT(*) FROM users;",
      "SELECT AVG(cvv) FROM payment_details;",
      "SELECT MAX(exp_date) FROM payment_details WHERE user_id = 3;",
      "SELECT MIN(zip_code) FROM address WHERE city = 'New York';",
      "SELECT DISTINCT city FROM address;",
      "SELECT user_id, username, email FROM users ORDER BY username ASC;",
      "SELECT * FROM users WHERE email LIKE '%example.com';",
      "SELECT user_id, username FROM users WHERE username LIKE 'j%' ORDER BY username DESC;",
      "SELECT * FROM users JOIN passwords ON users.user_id = passwords.user_id",
      "SELECT users.username, passwords.password FROM users INNER JOIN passwords ON users.user_id = passwords.user_id",
      "SELECT users.username, payment_details.card_number FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id",
      "SELECT users.username, address.city FROM users INNER JOIN address ON users.user_id = address.user_id",
      "SELECT users.username, passwords.password, address.street_address FROM users INNER JOIN passwords ON users.user_id = passwords.user_id INNER JOIN address ON users.user_id = address.user_id",
      "SELECT users.username, payment_details.card_number, address.city FROM users INNER JOIN payment_details ON users.user_id = payment_details.user_id INNER JOIN address ON users.user_id = address.user_id",
      "SELECT users.username, passwords.password, address.street_address, payment_details.card_number FROM users INNER JOIN passwords ON users.user_id = passwords.user_id INNER JOIN address ON users.user_id = address.user_id INNER JOIN payment_details ON users.user_id = payment_details.user_id",
      "SELECT * FROM users WHERE users.username = 'john_doe'",
      "SELECT * FROM users WHERE users.email = 'john@example.com'",
      "SELECT users.username, passwords.password, payment_details.card_number, address.street_address FROM users INNER JOIN passwords ON users.user_id = passwords.user_id INNER JOIN address ON users.user_id = address.user_id INNER JOIN payment_details ON users.user_id = payment_details.user_id WHERE users.username LIKE '%admin%'",
      "SELECT * FROM users WHERE users.username IN ('alice', 'bob', 'charlie') AND users.email LIKE '%@example.com'",
      "SELECT * FROM users INNER JOIN passwords ON users.user_id = passwords.user_id WHERE passwords.password = 'password123'",
      "SELECT users.username, address.city FROM users INNER JOIN address ON users.user_id = address.user_id WHERE address.state = 'CA'",
      "SELECT * FROM users JOIN payments ON users.user_id = payments.user_id",
      "SELECT users.username, passwords.password, payment_details.card_number, address.street_address FROM users INNER JOIN passwords ON users.user_id = passwords.user_id INNER JOIN address ON users.user_id = address.user_id INNER JOIN payment_details ON users.user_id = payment_details.user_id WHERE users.username NOT LIKE '%test%'",
      "SELECT * FROM users WHERE users.username = 'test_user' AND users.email = 'test@example.com'",
      "SELECT users.username, passwords.password, payment_details.card_number, address.street_address FROM users INNER JOIN passwords ON users.user_id = passwords.user_id INNER JOIN address ON users.user_id = address.user_id INNER JOIN payment_details ON users.user_id = payment_details.user_id WHERE users.username IN ('test1', 'test2', 'test3')",
      "SELECT * FROM users INNER JOIN passwords ON users.user_id = passwords.user_id WHERE passwords.cvv = 1234",
      "SELECT users.username, passwords.password, payment_details.card_number, address.street_address FROM users INNER JOIN passwords ON users.user_id = passwords.user_id INNER JOIN address ON users.user_id = address.user_id INNER JOIN payment_details ON users.user_id = payment_details.user_id WHERE address.zip_code = '12345'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users;",
      "SELECT address_id, street_address, city, state FROM addresses;",
      "SELECT * FROM cards;",
      "SELECT card_id, card_number, card_expiry FROM cards;",
      "SELECT transaction_id, amount, timestamp FROM transactions;",
      "SELECT * FROM sessions;",
      "SELECT session_id, session_token, expiration_timestamp FROM sessions;",
      "SELECT user_id, username, email FROM users;",
      "SELECT user_id, username, email FROM users WHERE username = 'john_doe';",
      "SELECT user_id, username, email FROM users WHERE username LIKE '%smith%';",
      "SELECT user_id, username, email FROM users WHERE email LIKE '%@example.com%';",
      "SELECT user_id, username, email FROM users WHERE user_id = 1001;",
      "SELECT * FROM users JOIN addresses ON users.user_id = addresses.user_id;",
      "SELECT u.username, a.street_address, a.city, a.state FROM users u JOIN addresses a ON u.user_id = a.user_id;",
      "SELECT user_id, card_number, card_expiry FROM cards WHERE user_id = 2001;",
      "SELECT card_id, user_id, card_number, card_expiry FROM cards WHERE card_expiry > '2023-01-01';",
      "SELECT user_id, amount, timestamp FROM transactions WHERE amount > 1000;",
      "SELECT u.username, s.session_token FROM users u JOIN sessions s ON u.user_id = s.user_id;",
      "SELECT t.transaction_id, t.amount, s.session_token FROM transactions t JOIN sessions s ON t.user_id = s.user_id;",
      "SELECT * FROM users JOIN addresses ON users.user_id = addresses.user_id WHERE users.username LIKE 'A%'",
      "SELECT users.username, addresses.city, cards.card_number FROM users JOIN addresses ON users.user_id = addresses.user_id JOIN cards ON users.user_id = cards.user_id",
      "SELECT users.username, transactions.amount, sessions.expiration_timestamp FROM users JOIN transactions ON users.user_id = transactions.user_id JOIN sessions ON users.user_id = sessions.user_id",
      "SELECT users.username, addresses.city, transactions.amount, cards.card_number FROM users JOIN addresses ON users.user_id = addresses.user_id JOIN transactions ON users.user_id = transactions.user_id JOIN cards ON users.user_id = cards.user_id",
      "SELECT * FROM users WHERE user_id IN (SELECT user_id FROM transactions WHERE amount > 1000)",
      "SELECT users.username, addresses.city, cards.card_number, transactions.amount FROM users JOIN addresses ON users.user_id = addresses.user_id JOIN cards ON users.user_id = cards.user_id JOIN transactions ON users.user_id = transactions.user_id WHERE transactions.amount < 500",
      "SELECT users.username, addresses.city, cards.card_number, transactions.amount FROM users INNER JOIN addresses ON users.user_id = addresses.user_id INNER JOIN cards ON users.user_id = cards.user_id INNER JOIN transactions ON users.user_id = transactions.user_id WHERE transactions.timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT users.username, addresses.city, cards.card_number, transactions.amount FROM users JOIN addresses ON users.user_id = addresses.user_id JOIN cards ON users.user_id = cards.user_id JOIN transactions ON users.user_id = transactions.user_id WHERE transactions.timestamp < NOW() - INTERVAL '1 day'",
      "SELECT users.username, addresses.city, cards.card_number, transactions.amount, sessions.session_token FROM users JOIN addresses ON users.user_id = addresses.user_id JOIN cards ON users.user_id = cards.user_id JOIN transactions ON users.user_id = transactions.user_id JOIN sessions ON users.user_id = sessions.user_id WHERE sessions.expiration_timestamp > NOW()",
      "SELECT users.user_id, users.username, addresses.street_address, addresses.city, addresses.state, addresses.zipcode, sessions.session_token FROM users JOIN addresses ON users.user_id = addresses.user_id JOIN sessions ON users.user_id = sessions.user_id WHERE users.username = 'John Doe'",
      "SELECT COUNT(*) AS total_users FROM users",
      "SELECT AVG(transactions.amount) AS avg_transaction_amount FROM transactions",
      "SELECT users.username, COUNT(*) AS total_transactions FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY users.username",
      "SELECT SUM(transactions.amount) AS total_amount_spent FROM transactions",
      "SELECT users.username, MAX(transactions.amount) AS highest_transaction_amount FROM users JOIN transactions ON users.user_id = transactions.user_id",
      "SELECT users.username, MIN(transactions.amount) AS lowest_transaction_amount FROM users JOIN transactions ON users.user_id = transactions.user_id",
      "SELECT users.username, MAX(transactions.timestamp) AS latest_transaction_date FROM users JOIN transactions ON users.user_id = transactions.user_id",
      "SELECT users.username, MIN(transactions.timestamp) AS earliest_transaction_date FROM users JOIN transactions ON users.user_id = transactions.user_id",
      "SELECT users.username, addresses.city, cards.card_number FROM users JOIN addresses ON users.user_id = addresses.user_id JOIN cards ON users.user_id = cards.user_id WHERE users.username = 'Alice'"
    ]
  }
]