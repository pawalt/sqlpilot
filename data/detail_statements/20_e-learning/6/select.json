[
  {
    "statements": [
      "SELECT * FROM AttendanceData WHERE student_id = 1;",
      "SELECT student_id, course_id, status FROM AttendanceData WHERE status = 'Present';",
      "SELECT course_id, COUNT(*) as total_attendance FROM AttendanceData GROUP BY course_id;",
      "SELECT AVG(course_id) as avg_course_id FROM AttendanceData;",
      "SELECT student_id, MAX(date) as latest_date FROM AttendanceData GROUP BY student_id;",
      "SELECT * FROM AttendanceData WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT course_id, COUNT(DISTINCT student_id) as unique_students FROM AttendanceData GROUP BY course_id;",
      "SELECT course_id, status, COUNT(*) as count FROM AttendanceData GROUP BY course_id, status;",
      "SELECT AVG(course_id*2) as avg_course_id_double FROM AttendanceData;",
      "SELECT student_id, MIN(date) as earliest_date, MAX(date) as latest_date FROM AttendanceData GROUP BY student_id;",
      "SELECT DISTINCT course_id FROM AttendanceData;",
      "SELECT date, COUNT(*) as total_entries FROM AttendanceData GROUP BY date;",
      "SELECT course_id, AVG(student_id) as avg_student_id FROM AttendanceData GROUP BY course_id;",
      "SELECT * FROM AttendanceData WHERE status = 'Absent' AND course_id = 101;",
      "SELECT course_id, COUNT(*) as total_entries FROM AttendanceData WHERE date = '2022-01-01' GROUP BY course_id;",
      "SELECT student_id, COUNT(*) as total_entries FROM AttendanceData WHERE status = 'Late' GROUP BY student_id;",
      "SELECT DISTINCT course_id, date FROM AttendanceData ORDER BY course_id, date DESC;",
      "SELECT course_id, AVG(DATEDIFF(CURRENT_DATE, date)) as avg_days_since_last_entry FROM AttendanceData GROUP BY course_id;",
      "SELECT student_id, COUNT(*) as total_entries FROM AttendanceData WHERE course_id = 101 AND status = 'Present' GROUP BY student_id;",
      "SELECT * FROM AttendanceData ORDER BY date ASC LIMIT 10;",
      "SELECT * FROM AttendanceData WHERE date >= '2022-01-01' AND date <= '2022-01-31';",
      "SELECT student_id, course_id, COUNT(*) AS total_attendance FROM AttendanceData GROUP BY student_id, course_id HAVING total_attendance > 5;",
      "SELECT student_id, COUNT(DISTINCT course_id) AS num_courses FROM AttendanceData GROUP BY student_id;",
      "SELECT student_id, AVG(CASE WHEN status = 'Present' THEN 1 ELSE 0 END) AS attendance_rate FROM AttendanceData GROUP BY student_id;",
      "SELECT student_id, course_id, SUM(CASE WHEN status = 'Present' THEN 1 ELSE 0 END) AS total_present, SUM(CASE WHEN status = 'Absent' THEN 1 ELSE 0 END) AS total_absent FROM AttendanceData GROUP BY student_id, course_id;",
      "SELECT DISTINCT student_id FROM AttendanceData WHERE student_id NOT IN (SELECT student_id FROM AttendanceData WHERE status = 'Absent');",
      "SELECT student_id, AVG(CASE WHEN status = 'Present' THEN 1 ELSE 0 END) AS attendance_rate FROM AttendanceData WHERE course_id = 101 GROUP BY student_id;",
      "SELECT * FROM AttendanceData WHERE course_id IN (SELECT DISTINCT course_id FROM AttendanceData WHERE date >= '2022-01-01');",
      "SELECT student_id, course_id, MAX(date) AS latest_date FROM AttendanceData GROUP BY student_id, course_id;",
      "SELECT student_id, COUNT(*) AS total_records FROM AttendanceData WHERE status = 'Present' GROUP BY student_id HAVING total_records > 10;",
      "SELECT student_id, course_id, COUNT(*) AS total_records FROM AttendanceData WHERE status = 'Absent' GROUP BY student_id, course_id HAVING total_records > 3;",
      "SELECT date, COUNT(*) AS attendance_count FROM AttendanceData GROUP BY date ORDER BY attendance_count DESC LIMIT 5;",
      "SELECT student_id, course_id, MIN(date) AS earliest_date, MAX(date) AS latest_date FROM AttendanceData GROUP BY student_id, course_id;",
      "SELECT student_id, AVG(CASE WHEN date >= '2022-01-01' AND date < '2022-02-01' THEN 1 ELSE 0 END) AS monthly_attendance_rate FROM AttendanceData GROUP BY student_id;",
      "SELECT student_id, course_id, COUNT(*) AS total_attendance FROM AttendanceData WHERE date >= '2022-01-01' AND date < '2022-02-01' GROUP BY student_id, course_id;",
      "SELECT student_id, CASE WHEN COUNT(DISTINCT course_id) > 3 THEN 'High' ELSE 'Low' END AS course_load FROM AttendanceData GROUP BY student_id;",
      "SELECT course_id, AVG(CASE WHEN status = 'Present' THEN 1 ELSE 0 END) AS course_attendance_rate FROM AttendanceData GROUP BY course_id;",
      "SELECT student_id, course_id, MAX(date) AS latest_date FROM AttendanceData WHERE date >= '2022-01-01' GROUP BY student_id, course_id;",
      "SELECT course_id, COUNT(DISTINCT student_id) AS num_students FROM AttendanceData GROUP BY course_id HAVING num_students > 5;",
      "SELECT student_id, date, ROW_NUMBER() OVER(PARTITION BY student_id ORDER BY date) AS attendance_rank FROM AttendanceData;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM student_attendance WHERE student_id = 1;",
      "SELECT * FROM student_attendance WHERE course_id = 101;",
      "SELECT student_id, date_attended FROM student_attendance;",
      "SELECT * FROM course_requirements WHERE course_id = 101;",
      "SELECT course_id, passing_grade FROM course_requirements;",
      "SELECT student_id, course_id, date_attended FROM student_attendance WHERE course_id = 101;",
      "SELECT student_id, course_id, date_attended FROM student_attendance WHERE student_id = 1;",
      "SELECT student_id, course_id, date_attended FROM student_attendance WHERE date_attended >= '2022-01-01';",
      "SELECT * FROM student_attendance WHERE date_attended BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM student_attendance WHERE course_id = 101 AND date_attended >= '2022-01-01';",
      "SELECT * FROM student_attendance WHERE student_id = 1 AND date_attended BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT student_id, course_id, date_attended FROM student_attendance JOIN course_requirements ON student_attendance.course_id = course_requirements.course_id;",
      "SELECT student_id, course_id, date_attended, required_attendance FROM student_attendance JOIN course_requirements ON student_attendance.course_id = course_requirements.course_id;",
      "SELECT student_id, course_id, date_attended, required_attendance, passing_grade FROM student_attendance JOIN course_requirements ON student_attendance.course_id = course_requirements.course_id;",
      "SELECT * FROM student_attendance WHERE student_id IN (1, 2, 3);",
      "SELECT * FROM student_attendance WHERE course_id IN (101, 102);",
      "SELECT student_id, COUNT(date_attended) AS total_attendance FROM student_attendance GROUP BY student_id;",
      "SELECT student_id, AVG(required_attendance) AS avg_attendance FROM course_requirements GROUP BY student_id;",
      "SELECT course_id, SUM(passing_grade) AS total_passing_grade FROM course_requirements GROUP BY course_id;",
      "SELECT course_id, required_attendance, passing_grade FROM course_requirements WHERE passing_grade >= 70;",
      "SELECT * FROM student_attendance WHERE student_id = 1;",
      "SELECT course_id, COUNT(*) as total_attendance FROM student_attendance GROUP BY course_id;",
      "SELECT course_id, AVG(required_attendance) as avg_attendance FROM course_requirements GROUP BY course_id;",
      "SELECT s.student_id, c.course_id, s.date_attended FROM student_attendance s INNER JOIN course_requirements c ON s.course_id = c.course_id WHERE s.date_attended > '2022-01-01';",
      "SELECT s.student_id, c.course_id, s.date_attended FROM student_attendance s INNER JOIN course_requirements c ON s.course_id = c.course_id WHERE s.date_attended BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT s.student_id, c.course_id, s.date_attended FROM student_attendance s INNER JOIN course_requirements c ON s.course_id = c.course_id WHERE c.passing_grade >= 70;",
      "SELECT * FROM student_attendance ORDER BY student_id ASC, date_attended DESC;",
      "SELECT COUNT(DISTINCT student_id) as total_students FROM student_attendance;",
      "SELECT course_id, SUM(required_attendance) as total_required_attendance FROM course_requirements GROUP BY course_id;",
      "SELECT course_id, passing_grade, required_attendance FROM course_requirements WHERE required_attendance > 80 AND passing_grade >= 70;",
      "SELECT s.student_id, c.course_id, s.date_attended FROM student_attendance s LEFT JOIN course_requirements c ON s.course_id = c.course_id WHERE c.course_id IS NULL;",
      "SELECT s.student_id, c.course_id, s.date_attended FROM student_attendance s RIGHT JOIN course_requirements c ON s.course_id = c.course_id WHERE s.course_id IS NULL;",
      "SELECT student_id, COUNT(*) as total_attendance FROM student_attendance WHERE date_attended BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY student_id HAVING COUNT(*) > 10;",
      "SELECT student_id, course_id, date_attended, passing_grade FROM student_attendance s INNER JOIN course_requirements c ON s.course_id = c.course_id WHERE passing_grade < 50;",
      "SELECT * FROM student_attendance WHERE student_id IN (SELECT student_id FROM student_attendance GROUP BY student_id HAVING COUNT(*) > 1);",
      "SELECT course_id, AVG(passing_grade) as avg_passing_grade FROM course_requirements GROUP BY course_id HAVING AVG(passing_grade) > 80;",
      "SELECT student_id, COUNT(*) as total_attendance FROM student_attendance WHERE course_id IN (SELECT course_id FROM course_requirements WHERE passing_grade >= 70) GROUP BY student_id;",
      "SELECT student_id, course_id, SUM(required_attendance) as total_required_attendance FROM student_attendance s INNER JOIN course_requirements c ON s.course_id = c.course_id GROUP BY student_id, course_id;",
      "SELECT course_id, COUNT(DISTINCT student_id) as total_students FROM student_attendance GROUP BY course_id HAVING COUNT(DISTINCT student_id) >= 3;",
      "SELECT student_id, MAX(required_attendance) as max_required_attendance FROM student_attendance s INNER JOIN course_requirements c ON s.course_id = c.course_id GROUP BY student_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name FROM students;",
      "SELECT student_name, student_email FROM students;",
      "SELECT student_id, student_name, student_email FROM students WHERE student_id = 1;",
      "SELECT * FROM courses;",
      "SELECT course_name FROM courses;",
      "SELECT course_name, course_code FROM courses;",
      "SELECT course_id, course_name, course_code FROM courses WHERE course_id = 1;",
      "SELECT * FROM attendance;",
      "SELECT student_id, course_id FROM attendance;",
      "SELECT attendance_id, student_id, course_id, attendance_date FROM attendance;",
      "SELECT student_name, course_name, attendance_date FROM students s, courses c, attendance a WHERE s.student_id = a.student_id AND c.course_id = a.course_id;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM students s, courses c, attendance a WHERE s.student_id = a.student_id AND c.course_id = a.course_id;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM students s JOIN attendance a ON s.student_id = a.student_id JOIN courses c ON c.course_id = a.course_id;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM students s INNER JOIN attendance a ON s.student_id = a.student_id INNER JOIN courses c ON c.course_id = a.course_id;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM students s LEFT JOIN attendance a ON s.student_id = a.student_id LEFT JOIN courses c ON c.course_id = a.course_id;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM students s RIGHT JOIN attendance a ON s.student_id = a.student_id RIGHT JOIN courses c ON c.course_id = a.course_id;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM students s LEFT JOIN attendance a ON s.student_id = a.student_id RIGHT JOIN courses c ON c.course_id = a.course_id;",
      "SELECT AVG(a.attendance_date) AS avg_attendance FROM attendance a;",
      "SELECT COUNT(DISTINCT a.course_id) AS total_courses FROM attendance a;",
      "SELECT * FROM students;",
      "SELECT student_name FROM students WHERE student_id = 1;",
      "SELECT student_name, student_email FROM students WHERE student_id IN (1, 2, 3);",
      "SELECT * FROM courses WHERE course_id = 1;",
      "SELECT course_name, course_code FROM courses WHERE course_name LIKE '%Database%';",
      "SELECT course_name, course_code FROM courses WHERE course_id BETWEEN 1 AND 5;",
      "SELECT student_name, course_name FROM students JOIN attendance ON students.student_id = attendance.student_id JOIN courses ON attendance.course_id = courses.course_id;",
      "SELECT student_name, course_name FROM students INNER JOIN attendance ON students.student_id = attendance.student_id INNER JOIN courses ON attendance.course_id = courses.course_id;",
      "SELECT student_name, course_name FROM students LEFT JOIN attendance ON students.student_id = attendance.student_id LEFT JOIN courses ON attendance.course_id = courses.course_id;",
      "SELECT student_name, course_name FROM students RIGHT JOIN attendance ON students.student_id = attendance.student_id RIGHT JOIN courses ON attendance.course_id = courses.course_id;",
      "SELECT student_name, course_name, attendance_date FROM students JOIN attendance ON students.student_id = attendance.student_id JOIN courses ON attendance.course_id = courses.course_id WHERE attendance_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT COUNT(DISTINCT student_id) AS total_students FROM students;",
      "SELECT AVG(course_id) AS average_course_id FROM courses;",
      "SELECT MAX(student_id) AS max_student_id FROM students;",
      "SELECT student_name, COUNT(course_id) AS total_courses FROM students JOIN attendance ON students.student_id = attendance.student_id GROUP BY student_name;",
      "SELECT course_name, COUNT(student_id) AS total_students FROM courses JOIN attendance ON courses.course_id = attendance.course_id GROUP BY course_name;",
      "SELECT student_name, course_name, COUNT(attendance_id) AS total_attendance FROM students JOIN attendance ON students.student_id = attendance.student_id JOIN courses ON attendance.course_id = courses.course_id GROUP BY student_name, course_name;",
      "SELECT student_name, course_name FROM students JOIN attendance ON students.student_id = attendance.student_id JOIN courses ON attendance.course_id = courses.course_id ORDER BY student_name ASC, course_name DESC;",
      "SELECT student_name, course_name, attendance_date FROM students JOIN attendance ON students.student_id = attendance.student_id JOIN courses ON attendance.course_id = courses.course_id WHERE attendance_date >= '2022-01-01' AND attendance_date <= '2022-12-31';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_name FROM Students;",
      "SELECT student_id, student_name FROM Students;",
      "SELECT * FROM Courses;",
      "SELECT course_name FROM Courses;",
      "SELECT course_id, course_name FROM Courses;",
      "SELECT * FROM Attendance;",
      "SELECT student_id, course_id FROM Attendance;",
      "SELECT attendance_date FROM Attendance;",
      "SELECT * FROM CourseRequirements;",
      "SELECT course_id, required_attendance_percentage FROM CourseRequirements;",
      "SELECT student_name, course_name, present FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN Attendance ON Students.student_id = Attendance.student_id;",
      "SELECT student_name, course_name, attendance_date FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN Attendance ON Students.student_id = Attendance.student_id;",
      "SELECT student_name, course_name, required_attendance_percentage FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN CourseRequirements ON Courses.course_id = CourseRequirements.course_id;",
      "SELECT student_name, enrollment_year, course_name, attendance_date FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN Attendance ON Students.student_id = Attendance.student_id;",
      "SELECT student_name, enrollment_year, course_name, required_attendance_percentage FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN CourseRequirements ON Courses.course_id = CourseRequirements.course_id;",
      "SELECT student_name, enrollment_year, course_name, attendance_date, present FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN Attendance ON Students.student_id = Attendance.student_id;",
      "SELECT student_name, enrollment_year, course_name, attendance_date, present, required_attendance_percentage FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN Attendance ON Students.student_id = Attendance.student_id JOIN CourseRequirements ON Courses.course_id = CourseRequirements.course_id;",
      "SELECT student_name, course_name, attendance_date, required_attendance_percentage FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN Attendance ON Students.student_id = Attendance.student_id JOIN CourseRequirements ON Courses.course_id = CourseRequirements.course_id;",
      "SELECT student_name, enrollment_year, attendance_date, present, required_attendance_percentage FROM Students JOIN Courses ON Students.student_id = Courses.course_id JOIN Attendance ON Students.student_id = Attendance.student_id JOIN CourseRequirements ON Courses.course_id = CourseRequirements.course_id;",
      "SELECT * FROM Students;",
      "SELECT student_name FROM Students WHERE enrollment_year = 2020;",
      "SELECT course_name, course_code FROM Courses;",
      "SELECT * FROM Attendance WHERE present = true;",
      "SELECT s.student_name, c.course_name FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id;",
      "SELECT s.student_name, COUNT(a.course_id) AS courses_attended FROM Students s LEFT JOIN Attendance a ON s.student_id = a.student_id GROUP BY s.student_id HAVING COUNT(a.course_id) > 5;",
      "SELECT c.course_name, cr.required_attendance_percentage FROM Courses c JOIN CourseRequirements cr ON c.course_id = cr.course_id;",
      "SELECT s.student_name, c.course_name, cr.required_attendance_percentage FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id JOIN CourseRequirements cr ON c.course_id = cr.course_id;",
      "SELECT s.student_name, COUNT(a.attendance_id) AS total_attendance FROM Students s LEFT JOIN Attendance a ON s.student_id = a.student_id GROUP BY s.student_name HAVING COUNT(a.attendance_id) > 10;",
      "SELECT COUNT(DISTINCT s.student_id) AS total_students, COUNT(DISTINCT c.course_id) AS total_courses FROM Students s, Courses c, Attendance a WHERE s.student_id = a.student_id AND c.course_id = a.course_id;",
      "SELECT s.student_name, SUM(CASE WHEN a.present = true THEN 1 ELSE 0 END) AS total_present_days FROM Students s LEFT JOIN Attendance a ON s.student_id = a.student_id GROUP BY s.student_name;",
      "SELECT student_name, attendance_date FROM Students s JOIN Attendance a ON s.student_id = a.student_id WHERE a.present = false;",
      "SELECT s.student_name, AVG(CASE WHEN a.present = true THEN 1 ELSE 0 END) AS average_attendance FROM Students s JOIN Attendance a ON s.student_id = a.student_id GROUP BY s.student_name;",
      "SELECT s.student_name, c.course_name, COUNT(a.attendance_id) AS total_attendance FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id GROUP BY s.student_name, c.course_name HAVING COUNT(a.attendance_id) > 5;",
      "SELECT s.student_name, c.course_name, AVG(CASE WHEN a.present = true THEN 1 ELSE 0 END) AS attendance_percentage FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id GROUP BY s.student_name, c.course_name;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id WHERE a.present = false;",
      "SELECT s.student_name, c.course_name, COUNT(a.attendance_id) AS total_attendance, cr.required_attendance_percentage FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id JOIN CourseRequirements cr ON c.course_id = cr.course_id GROUP BY s.student_name, c.course_name HAVING COUNT(a.attendance_id) > cr.required_attendance_percentage;",
      "SELECT s.student_name, c.course_name, a.attendance_date FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id WHERE a.present = true AND s.enrollment_year = 2019;",
      "SELECT s1.student_name AS student_1, s2.student_name AS student_2 FROM Students s1, Students s2 WHERE s1.student_id != s2.student_id AND s1.enrollment_year = s2.enrollment_year;",
      "SELECT s.student_name, cr.required_attendance_percentage FROM Students s JOIN CourseRequirements cr ON s.enrollment_year <= 2020 AND s.enrollment_year >= 2018;",
      "SELECT s.student_name, c.course_name, cr.required_attendance_percentage FROM Students s JOIN Attendance a ON s.student_id = a.student_id JOIN Courses c ON a.course_id = c.course_id JOIN CourseRequirements cr ON c.course_id = cr.course_id WHERE a.attendance_date >= '2021-01-01';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students;",
      "SELECT student_name, email FROM students WHERE student_id = '12345678-1234-1234-1234-123456789abc';",
      "SELECT * FROM courses;",
      "SELECT course_id, course_name FROM courses;",
      "SELECT course_name, course_code FROM courses WHERE course_id = '12345678-1234-1234-1234-123456789abc';",
      "SELECT * FROM enrollments;",
      "SELECT enrollment_id, student_id, course_id, enrollment_date FROM enrollments;",
      "SELECT student_id, enrollment_date FROM enrollments WHERE course_id = '12345678-1234-1234-1234-123456789abc';",
      "SELECT * FROM attendance;",
      "SELECT attendance_id, enrollment_id, attendance_date, is_present FROM attendance;",
      "SELECT enrollment_id, is_present FROM attendance WHERE attendance_date = '2022-01-01';",
      "SELECT * FROM assignments;",
      "SELECT assignment_id, course_id, assignment_name, due_date FROM assignments;",
      "SELECT course_id, assignment_name FROM assignments WHERE due_date > '2022-01-01';",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id;",
      "SELECT student_name, attendance_date, is_present FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN attendance ON enrollments.enrollment_id = attendance.enrollment_id;",
      "SELECT student_name, assignment_name, due_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id JOIN assignments ON courses.course_id = assignments.course_id;",
      "SELECT student_name, course_name, due_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id JOIN assignments ON courses.course_id = assignments.course_id WHERE assignments.due_date < '2022-01-01';",
      "SELECT student_name, course_name, attendance_date, is_present FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id JOIN attendance ON enrollments.enrollment_id = attendance.enrollment_id;",
      "SELECT * FROM students WHERE student_name = 'John Doe';",
      "SELECT student_name, email FROM students WHERE email LIKE '%@example.com';",
      "SELECT c.course_name, e.enrollment_date FROM courses c JOIN enrollments e ON c.course_id = e.course_id;",
      "SELECT a.assignment_name, a.due_date FROM assignments a JOIN courses c ON a.course_id = c.course_id WHERE c.course_name = 'Mathematics';",
      "SELECT s.student_name, c.course_name, e.enrollment_date FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id;",
      "SELECT s.student_name, c.course_name, a.assignment_name FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN assignments a ON c.course_id = a.course_id;",
      "SELECT s.student_name, COUNT(e.course_id) AS total_courses FROM students s JOIN enrollments e ON s.student_id = e.student_id GROUP BY s.student_name;",
      "SELECT c.course_name, COUNT(e.student_id) AS total_students FROM courses c JOIN enrollments e ON c.course_id = e.course_id GROUP BY c.course_name;",
      "SELECT s.student_name, AVG(a.due_date - e.enrollment_date) AS average_days_to_submit FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN assignments a ON e.course_id = a.course_id;",
      "SELECT s.student_name, COUNT(a.assignment_id) AS total_assignments FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN assignments a ON e.course_id = a.course_id GROUP BY s.student_name HAVING COUNT(a.assignment_id) > 5;",
      "SELECT s.student_name, c.course_name, MAX(a.due_date) AS latest_due_date FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN assignments a ON c.course_id = a.course_id;",
      "SELECT c.course_name, SUM(CAST(attendance.is_present AS INT)) AS total_present_days FROM courses c JOIN enrollments e ON c.course_id = e.course_id JOIN attendance ON e.enrollment_id = attendance.enrollment_id GROUP BY c.course_name;",
      "SELECT s.student_name, AVG(CAST(attendance.is_present AS INT)) AS average_attendance FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN attendance ON e.enrollment_id = attendance.enrollment_id GROUP BY s.student_name;",
      "SELECT s.student_name, COUNT(DISTINCT c.course_name) AS total_courses_enrolled FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id;",
      "SELECT s.student_name, COUNT(*) AS total_enrollments FROM students s JOIN enrollments e ON s.student_id = e.student_id;",
      "SELECT s.student_name, c.course_name, MIN(a.due_date) AS earliest_due_date FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN assignments a ON c.course_id = a.course_id;",
      "SELECT s.student_name, SUM(CAST(attendance.is_present AS INT)) AS total_present_days FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN attendance ON e.enrollment_id = attendance.enrollment_id GROUP BY s.student_name HAVING SUM(CAST(attendance.is_present AS INT)) > 10;",
      "SELECT c.course_name, COUNT(a.assignment_id) AS total_assignments, AVG(CAST(attendance.is_present AS INT)) AS average_attendance FROM courses c JOIN enrollments e ON c.course_id = e.course_id JOIN assignments a ON e.course_id = a.course_id JOIN attendance ON e.enrollment_id = attendance.enrollment_id GROUP BY c.course_name;",
      "SELECT s.student_name, e.enrollment_date, a.assignment_name, a.due_date, attendance.attendance_date, attendance.is_present FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN assignments a ON e.course_id = a.course_id JOIN attendance ON e.enrollment_id = attendance.enrollment_id;",
      "SELECT s.student_name, c.course_name, e.enrollment_date, a.assignment_name, a.due_date, attendance.attendance_date, attendance.is_present FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN assignments a ON e.course_id = a.course_id JOIN attendance ON e.enrollment_id = attendance.enrollment_id;",
      "SELECT s.student_name, e.enrollment_date, AVG(CAST(attendance.is_present AS INT)) AS average_attendance FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN attendance ON e.enrollment_id = attendance.enrollment_id GROUP BY s.student_name;"
    ]
  }
]