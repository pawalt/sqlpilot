[
  {
    "statements": [
      "SELECT * FROM students WHERE enrollment_status = 'Active';",
      "SELECT id, first_name, last_name FROM students WHERE enrollment_status = 'Inactive';",
      "SELECT * FROM students WHERE first_name LIKE 'A%';",
      "SELECT * FROM students WHERE last_name = 'Smith';",
      "SELECT id, email FROM students WHERE enrollment_status = 'Pending';",
      "SELECT * FROM students WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT * FROM students WHERE enrollment_status <> 'Inactive';",
      "SELECT id, first_name, last_name, email FROM students WHERE enrollment_status = 'Graduated';",
      "SELECT COUNT(*) FROM students;",
      "SELECT * FROM students WHERE id = 5;",
      "SELECT first_name, last_name, email FROM students WHERE enrollment_status = 'Enrolled';",
      "SELECT * FROM students WHERE last_name LIKE '%son%';",
      "SELECT * FROM students WHERE enrollment_status = 'Dropped' AND last_name = 'Johnson';",
      "SELECT id, first_name, last_name, email FROM students WHERE enrollment_status = 'Suspended';",
      "SELECT * FROM students WHERE first_name = 'Sarah' OR first_name = 'Emily';",
      "SELECT * FROM students WHERE enrollment_status = 'Active' OR enrollment_status = 'Enrolled';",
      "SELECT id, first_name, last_name FROM students WHERE enrollment_status IN ('Active', 'Enrolled');",
      "SELECT id, first_name, last_name, email FROM students WHERE last_name <> 'Garcia';",
      "SELECT * FROM students WHERE enrollment_status = 'Active' OR enrollment_status = 'Pending';",
      "SELECT id, first_name, last_name, email FROM students WHERE first_name = 'Alex' AND enrollment_status = 'Enrolled';",
      "SELECT * FROM students WHERE enrollment_status = 'Active';",
      "SELECT first_name, last_name FROM students WHERE enrollment_status = 'Inactive';",
      "SELECT id, first_name, last_name, email FROM students WHERE enrollment_status = 'Pending';",
      "SELECT * FROM students WHERE first_name LIKE 'A%';",
      "SELECT id, first_name, last_name, email FROM students WHERE id > 100 AND enrollment_status = 'Active';",
      "SELECT * FROM students WHERE last_name = 'Smith' OR last_name = 'Johnson';",
      "SELECT first_name, last_name, email FROM students WHERE enrollment_status = 'Active' OR enrollment_status = 'Pending';",
      "SELECT * FROM students WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT id, first_name, last_name, email FROM students WHERE enrollment_status != 'Inactive';",
      "SELECT * FROM students WHERE enrollment_status = 'Active' AND first_name LIKE '%son%';",
      "SELECT * FROM students WHERE first_name <> 'Alice';",
      "SELECT * FROM students WHERE enrollment_status IN ('Active', 'Pending');",
      "SELECT first_name, last_name, email FROM students WHERE id BETWEEN 50 AND 100;",
      "SELECT * FROM students WHERE last_name LIKE '%son%' AND enrollment_status = 'Active';",
      "SELECT id, first_name, last_name, email FROM students WHERE first_name = 'Emma' OR first_name = 'Olivia';",
      "SELECT * FROM students WHERE first_name NOT LIKE '%a%';",
      "SELECT * FROM students WHERE enrollment_status = 'Active' ORDER BY last_name ASC;",
      "SELECT * FROM students WHERE enrollment_status = 'Pending' ORDER BY id DESC;",
      "SELECT * FROM students WHERE first_name LIKE 'J%' ORDER BY last_name ASC;",
      "SELECT * FROM students WHERE email = 'test@example.com';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Student;",
      "SELECT name, email FROM Student;",
      "SELECT student_id, name, email, enrollment_status FROM Student;",
      "SELECT * FROM Course;",
      "SELECT course_name, instructor FROM Course;",
      "SELECT course_id, course_name, instructor FROM Course;",
      "SELECT name, email, course_name FROM Student, Course;",
      "SELECT Student.name, Course.course_name FROM Student, Course;",
      "SELECT Student.name AS student_name, Course.course_name AS course_name FROM Student, Course;",
      "SELECT * FROM Student WHERE enrollment_status = 'Enrolled';",
      "SELECT student_id, name, email FROM Student WHERE enrollment_status = 'Enrolled';",
      "SELECT name, email FROM Student WHERE enrollment_status = 'Not Enrolled';",
      "SELECT * FROM Course WHERE instructor = 'John Doe';",
      "SELECT course_id, course_name FROM Course WHERE instructor = 'Jane Smith';",
      "SELECT name, email, course_name FROM Student, Course WHERE Student.name = 'Alice' AND Course.course_name = 'Math';",
      "SELECT Student.name AS student_name, Course.course_name AS course_name FROM Student, Course WHERE Student.student_id = 1 AND Course.course_id = 101;",
      "SELECT * FROM Student ORDER BY name ASC;",
      "SELECT * FROM Course ORDER BY instructor DESC;",
      "SELECT AVG(student_id) AS average_student_id FROM Student;",
      "SELECT COUNT(course_id) AS total_courses FROM Course;",
      "SELECT * FROM Student WHERE enrollment_status = 'Active';",
      "SELECT name, email FROM Student WHERE enrollment_status = 'Inactive';",
      "SELECT * FROM Student WHERE name LIKE 'A%';",
      "SELECT * FROM Course WHERE course_name = 'Mathematics';",
      "SELECT student_id, enrollment_status FROM Student WHERE email = 'john.doe@example.com';",
      "SELECT course_id, course_name FROM Course WHERE instructor = 'Professor Smith';",
      "SELECT * FROM Student WHERE enrollment_status = 'Active' AND name LIKE 'J%';",
      "SELECT * FROM Course WHERE course_name LIKE '%Science%';",
      "SELECT * FROM Student INNER JOIN Course ON Student.student_id = Course.course_id;",
      "SELECT * FROM Student LEFT JOIN Course ON Student.student_id = Course.course_id;",
      "SELECT * FROM Student RIGHT JOIN Course ON Student.student_id = Course.course_id;",
      "SELECT * FROM Student JOIN Course ON Student.student_id = Course.course_id WHERE Student.enrollment_status = 'Active';",
      "SELECT DISTINCT enrollment_status FROM Student;",
      "SELECT COUNT(*) FROM Student WHERE enrollment_status = 'Active';",
      "SELECT AVG(student_id) FROM Student;",
      "SELECT MAX(student_id) FROM Student;",
      "SELECT MIN(student_id) FROM Student;",
      "SELECT SUM(student_id) FROM Student;",
      "SELECT AVG(course_id) FROM Course;",
      "SELECT instructor, COUNT(*) FROM Course GROUP BY instructor;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_id, name, email FROM Students;",
      "SELECT name, enrollment_status FROM Students;",
      "SELECT * FROM Courses;",
      "SELECT course_name, department FROM Courses;",
      "SELECT * FROM Enrollments;",
      "SELECT student_id, course_id FROM Enrollments;",
      "SELECT student_id, enrollment_date FROM Enrollments;",
      "SELECT s.name, c.course_name FROM Students s JOIN Enrollments e ON s.student_id = e.student_id JOIN Courses c ON e.course_id = c.course_id;",
      "SELECT s.name, c.course_name, e.enrollment_date FROM Students s JOIN Enrollments e ON s.student_id = e.student_id JOIN Courses c ON e.course_id = c.course_id;",
      "SELECT s.name AS student_name, c.course_name AS course_name FROM Students s JOIN Enrollments e ON s.student_id = e.student_id JOIN Courses c ON e.course_id = c.course_id;",
      "SELECT s.name AS student_name, c.course_name AS course_name, e.enrollment_date FROM Students s JOIN Enrollments e ON s.student_id = e.student_id JOIN Courses c ON e.course_id = c.course_id;",
      "SELECT * FROM Students WHERE enrollment_status = 'Enrolled';",
      "SELECT * FROM Courses WHERE department = 'Computer Science';",
      "SELECT * FROM Enrollments WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT s.name, c.course_name FROM Students s JOIN Enrollments e ON s.student_id = e.student_id JOIN Courses c ON e.course_id = c.course_id WHERE s.name LIKE '%John%';",
      "SELECT s.name, c.course_name FROM Students s JOIN Enrollments e ON s.student_id = e.student_id JOIN Courses c ON e.course_id = c.course_id WHERE c.department = 'Mathematics';",
      "SELECT COUNT(*) AS Total_Enrollments FROM Enrollments;",
      "SELECT AVG(course_id) AS Avg_Course_ID FROM Enrollments;",
      "SELECT MAX(enrollment_date) AS Latest_Enrollment FROM Enrollments;",
      "SELECT * FROM Students;",
      "SELECT name, email FROM Students;",
      "SELECT student_id, name, email FROM Students WHERE enrollment_status = 'Enrolled';",
      "SELECT * FROM Courses;",
      "SELECT course_name, department FROM Courses;",
      "SELECT course_id, course_name, department FROM Courses WHERE course_name LIKE '%Science%';",
      "SELECT * FROM Enrollments;",
      "SELECT student_id, course_id, enrollment_date FROM Enrollments;",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT Students.name, Enrollments.enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id WHERE Students.enrollment_status = 'Enrolled';",
      "SELECT Courses.course_name, COUNT(Enrollments.student_id) AS num_students FROM Courses LEFT JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY Courses.course_id;",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date FROM Students, Courses, Enrollments WHERE Students.student_id = Enrollments.student_id AND Courses.course_id = Enrollments.course_id;",
      "SELECT * FROM Students WHERE student_id IN (SELECT student_id FROM Enrollments WHERE course_id = 1);",
      "SELECT * FROM Courses WHERE department = 'Math';",
      "SELECT Students.name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Students.enrollment_status = 'Enrolled' AND Courses.department = 'Science';",
      "SELECT AVG(DATEDIFF(NOW(), enrollment_date)) AS avg_days_enrolled FROM Enrollments;",
      "SELECT Courses.course_name, COUNT(DISTINCT Enrollments.student_id) AS num_students_enrolled FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY Courses.course_id;",
      "SELECT Students.name AS student_name, Courses.course_name AS course_name, DATEDIFF(NOW(), Enrollments.enrollment_date) AS days_enrolled FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_id, SUM(DATEDIFF(NOW(), enrollment_date)) AS total_days_enrolled FROM Enrollments GROUP BY student_id;",
      "SELECT Students.name, Courses.course_name, COUNT(Enrollments.enrollment_id) AS num_enrollments FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id GROUP BY Students.name, Courses.course_name HAVING COUNT(Enrollments.enrollment_id) >= 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT name, email FROM students;",
      "SELECT enrollment_status FROM students WHERE id = 1;",
      "SELECT * FROM courses;",
      "SELECT course_name, instructor FROM courses;",
      "SELECT * FROM enrollments;",
      "SELECT student_id, course_id FROM enrollments WHERE enrollment_id = 1;",
      "SELECT * FROM grades;",
      "SELECT student_id, course_id FROM grades WHERE grade_id = 1;",
      "SELECT name, enrollment_date FROM students JOIN enrollments ON students.id = enrollments.student_id;",
      "SELECT course_name, instructor FROM courses JOIN enrollments ON courses.course_id = enrollments.course_id;",
      "SELECT name, grade FROM students JOIN grades ON students.id = grades.student_id;",
      "SELECT course_name, grade FROM courses JOIN grades ON courses.course_id = grades.course_id;",
      "SELECT s.name, c.course_name, e.enrollment_date FROM students s JOIN enrollments e ON s.id = e.student_id JOIN courses c ON e.course_id = c.course_id;",
      "SELECT s.name, c.course_name, g.grade FROM students s JOIN grades g ON s.id = g.student_id JOIN courses c ON g.course_id = c.course_id;",
      "SELECT s.name AS student_name, e.enrollment_date FROM students s JOIN enrollments e ON s.id = e.student_id WHERE s.enrollment_status = 'Enrolled';",
      "SELECT c.course_name AS course, g.grade FROM courses c JOIN grades g ON c.course_id = g.course_id WHERE g.grade >= 'B';",
      "SELECT s.name AS student_name, c.course_name AS course, g.grade FROM students s JOIN grades g ON s.id = g.student_id JOIN courses c ON g.course_id = c.course_id WHERE g.grade IN ('A', 'A-', 'B+');",
      "SELECT s.name AS student_name, COUNT(g.grade) AS total_grades FROM students s JOIN grades g ON s.id = g.student_id GROUP BY s.id;",
      "SELECT c.course_name AS course, AVG(g.grade) AS average_grade FROM courses c JOIN grades g ON c.course_id = g.course_id GROUP BY c.course_id;",
      "SELECT * FROM students;",
      "SELECT name, email FROM students WHERE enrollment_status = 'Enrolled';",
      "SELECT s.name, c.course_name FROM students s INNER JOIN enrollments e ON s.id = e.student_id INNER JOIN courses c ON e.course_id = c.course_id;",
      "SELECT s.name, c.course_name, g.grade FROM students s INNER JOIN enrollments e ON s.id = e.student_id INNER JOIN courses c ON e.course_id = c.course_id INNER JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id;",
      "SELECT s.name, AVG(grade) AS average_grade FROM students s INNER JOIN grades g ON s.id = g.student_id GROUP BY s.id;",
      "SELECT instructor, COUNT(*) AS num_courses FROM courses GROUP BY instructor;",
      "SELECT s.name, e.enrollment_date FROM students s INNER JOIN enrollments e ON s.id = e.student_id WHERE e.enrollment_date > '2021-01-01';",
      "SELECT s.name, c.course_name, g.grade FROM students s LEFT JOIN enrollments e ON s.id = e.student_id LEFT JOIN courses c ON e.course_id = c.course_id LEFT JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id;",
      "SELECT MAX(grade) AS highest_grade FROM grades;",
      "SELECT s.name, COUNT(*) AS num_courses FROM students s INNER JOIN enrollments e ON s.id = e.student_id GROUP BY s.id HAVING COUNT(*) > 3;",
      "SELECT s.name, c.course_name, e.enrollment_date FROM students s INNER JOIN enrollments e ON s.id = e.student_id INNER JOIN courses c ON e.course_id = c.course_id ORDER BY e.enrollment_date DESC;",
      "SELECT DISTINCT e.course_id FROM enrollments e;",
      "SELECT s.name, CASE WHEN e.enrollment_status = 'Enrolled' THEN 'Active' ELSE 'Inactive' END AS status FROM students s INNER JOIN enrollments e ON s.id = e.student_id;",
      "SELECT s.name, c.course_name, g.grade FROM students s INNER JOIN enrollments e ON s.id = e.student_id INNER JOIN courses c ON e.course_id = c.course_id LEFT JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id WHERE g.grade = 'A';",
      "SELECT s.id, s.name, c.course_id, c.course_name, e.enrollment_date, g.grade FROM students s INNER JOIN courses c INNER JOIN enrollments e ON s.id = e.student_id AND e.course_id = c.course_id LEFT JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id;",
      "SELECT s.name, c.course_name, COUNT(g.grade) AS num_grades FROM students s INNER JOIN courses c INNER JOIN enrollments e ON s.id = e.student_id AND e.course_id = c.course_id LEFT JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id GROUP BY s.name, c.course_name;",
      "SELECT s.name, c.course_name, MAX(g.grade) AS highest_grade FROM students s INNER JOIN courses c INNER JOIN enrollments e ON s.id = e.student_id AND e.course_id = c.course_id LEFT JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id GROUP BY s.name, c.course_name;",
      "SELECT s.name, c.course_name, SUM(CAST(g.grade AS INT)) AS total_grade FROM students s INNER JOIN courses c INNER JOIN enrollments e ON s.id = e.student_id AND e.course_id = c.course_id LEFT JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id GROUP BY s.name, c.course_name;",
      "SELECT s.name, c.course_name, AVG(CAST(g.grade AS INT)) AS average_grade FROM students s INNER JOIN courses c INNER JOIN enrollments e ON s.id = e.student_id AND e.course_id = c.course_id LEFT JOIN grades g ON s.id = g.student_id AND c.course_id = g.course_id GROUP BY s.name, c.course_name;",
      "SELECT s.name, COUNT(e.course_id) AS num_courses FROM students s LEFT JOIN enrollments e ON s.id = e.student_id GROUP BY s.name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT name, email FROM Students WHERE enrollment_status='Enrolled';",
      "SELECT course_name, course_description FROM Courses;",
      "SELECT enrollment_id, enrollment_date FROM Enrollments;",
      "SELECT id, name, email, enrollment_status FROM Students WHERE enrollment_status='Pending';",
      "SELECT course_id, course_name FROM Courses WHERE course_id > 5;",
      "SELECT student_id, course_id, enrollment_date FROM Enrollments WHERE enrollment_date > '2022-01-01';",
      "SELECT * FROM Grades;",
      "SELECT department_id, department_name FROM Departments;",
      "SELECT course_id, course_name, course_description FROM Courses WHERE course_id < 10;",
      "SELECT * FROM Enrollments WHERE student_id = 1;",
      "SELECT id, name, enrollment_status FROM Students WHERE id = 3;",
      "SELECT course_id, course_name FROM Courses WHERE course_name LIKE 'Intro%';",
      "SELECT enrollment_id, student_id, course_id, enrollment_date FROM Enrollments WHERE student_id = 5;",
      "SELECT * FROM Grades WHERE student_id = 2 AND grade = 'A';",
      "SELECT id, name, email, enrollment_status FROM Students WHERE enrollment_status IN ('Enrolled', 'Pending');",
      "SELECT department_id, department_name, department_head FROM Departments WHERE department_name = 'Science';",
      "SELECT course_id, AVG(grade) AS avg_grade FROM Grades GROUP BY course_id;",
      "SELECT DISTINCT course_id FROM Enrollments WHERE student_id = 4;",
      "SELECT id, name, email, enrollment_status FROM Students WHERE id BETWEEN 2 AND 5;",
      "SELECT * FROM Students",
      "SELECT * FROM Courses",
      "SELECT * FROM Enrollments JOIN Students ON Enrollments.student_id = Students.id JOIN Courses ON Enrollments.course_id = Courses.course_id",
      "SELECT Students.name, Courses.course_name FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date, Grades.grade FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id JOIN Grades ON Enrollments.student_id = Grades.student_id AND Enrollments.course_id = Grades.course_id",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date, Grades.grade, Departments.department_name FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id JOIN Grades ON Enrollments.student_id = Grades.student_id AND Enrollments.course_id = Grades.course_id JOIN Departments ON Students.enrollment_status = 'Enrolled' AND Departments.department_id = 1",
      "SELECT Students.name, COUNT(Enrollments.enrollment_id) as enrollment_count FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id GROUP BY Students.name ORDER BY enrollment_count DESC",
      "SELECT Courses.course_name, AVG(Grades.grade) as avg_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY Courses.course_name ORDER BY avg_grade DESC",
      "SELECT Departments.department_name, COUNT(DISTINCT Students.id) as student_count FROM Departments JOIN Students ON Departments.department_id = 1 GROUP BY Departments.department_name",
      "SELECT Courses.course_name, COUNT(DISTINCT Students.id) as student_count FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id JOIN Students ON Grades.student_id = Students.id GROUP BY Courses.course_name ORDER BY student_count DESC",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Students.enrollment_status = 'Enrolled'",
      "SELECT Students.name, Departments.department_name FROM Students JOIN Departments ON Students.enrollment_status = 'Enrolled' AND Departments.department_id = 1",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Enrollments.enrollment_date >= '2022-01-01'",
      "SELECT Courses.course_name, Departments.department_name, COUNT(DISTINCT Students.id) as student_count FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id JOIN Students ON Grades.student_id = Students.id JOIN Departments ON Students.enrollment_status = 'Enrolled' AND Departments.department_id = 1 GROUP BY Courses.course_name, Departments.department_name ORDER BY student_count DESC",
      "SELECT Departments.department_name, AVG(Grades.grade) as avg_grade FROM Departments JOIN Students ON Departments.department_id = 1 JOIN Grades ON Students.id = Grades.student_id GROUP BY Departments.department_name ORDER BY avg_grade DESC",
      "SELECT Students.name, AVG(CAST(Grades.grade as INTEGER)) as avg_grade FROM Students JOIN Grades ON Students.id = Grades.student_id GROUP BY Students.name ORDER BY avg_grade DESC",
      "SELECT Students.name, Courses.course_name, Grades.grade FROM Students JOIN Grades ON Students.id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE Grades.grade >= 'B'",
      "SELECT Courses.course_name, COUNT(Grades.grade) as grade_count FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id WHERE Grades.grade >= 'A' GROUP BY Courses.course_name ORDER BY grade_count DESC",
      "SELECT Students.name, Courses.course_name, Enrollments.enrollment_date FROM Students JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Enrollments.enrollment_date >= '2022-01-01' AND Students.enrollment_status = 'Enrolled'",
      "SELECT Departments.department_name, Students.name, Courses.course_name FROM Departments JOIN Students ON Departments.department_id = 1 JOIN Enrollments ON Students.id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Students.enrollment_status = 'Enrolled' ORDER BY Departments.department_name, Students.name"
    ]
  }
]