[
  {
    "statements": [
      "SELECT * FROM learning_experience;",
      "SELECT student_id, course_id FROM learning_experience;",
      "SELECT student_id, enrollment_date FROM learning_experience;",
      "SELECT * FROM learning_experience WHERE student_id = 1;",
      "SELECT * FROM learning_experience WHERE course_id = 100;",
      "SELECT student_id, completion_status FROM learning_experience WHERE completion_status = true;",
      "SELECT student_id, course_id FROM learning_experience WHERE enrollment_date > '2022-01-01';",
      "SELECT * FROM learning_experience WHERE completion_status = false;",
      "SELECT student_id, enrollment_date FROM learning_experience WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT student_id, completion_date FROM learning_experience WHERE completion_date IS NULL;",
      "SELECT student_id, course_id FROM learning_experience ORDER BY course_id DESC;",
      "SELECT * FROM learning_experience WHERE student_id IN (1, 2, 3);",
      "SELECT student_id, enrollment_date FROM learning_experience WHERE course_id = 200;",
      "SELECT * FROM learning_experience WHERE completion_date < '2022-06-30';",
      "SELECT * FROM learning_experience WHERE completion_status = true AND enrollment_date < '2022-12-31';",
      "SELECT student_id, course_id FROM learning_experience WHERE completion_status = false;",
      "SELECT COUNT(*) FROM learning_experience;",
      "SELECT DISTINCT course_id FROM learning_experience;",
      "SELECT AVG(course_id) FROM learning_experience;",
      "SELECT MAX(enrollment_date) FROM learning_experience;",
      "SELECT * FROM learning_experience WHERE student_id = 100;",
      "SELECT student_id, course_id, enrollment_date FROM learning_experience WHERE completion_status = TRUE;",
      "SELECT student_id, course_id, enrollment_date, completion_date FROM learning_experience WHERE completion_status = FALSE;",
      "SELECT student_id, course_id, completion_date FROM learning_experience WHERE enrollment_date >= '2022-01-01';",
      "SELECT COUNT(*) FROM learning_experience WHERE completion_status = TRUE;",
      "SELECT AVG(course_id) FROM learning_experience WHERE student_id = 200;",
      "SELECT MAX(enrollment_date) FROM learning_experience WHERE course_id = 300;",
      "SELECT MIN(completion_date) FROM learning_experience WHERE student_id = 400;",
      "SELECT student_id, completion_status FROM learning_experience WHERE completion_date BETWEEN '2022-01-01' AND '2022-06-01';",
      "SELECT * FROM learning_experience WHERE student_id = 500 AND completion_status = TRUE;",
      "SELECT student_id, enrollment_date, completion_status FROM learning_experience WHERE course_id = 600 AND enrollment_date <= '2022-12-31';",
      "SELECT student_id, course_id, completion_status FROM learning_experience WHERE completion_status = TRUE AND enrollment_date BETWEEN '2022-01-01' AND '2022-06-01';",
      "SELECT student_id, completion_status FROM learning_experience WHERE student_id = 700 OR course_id = 800;",
      "SELECT student_id, course_id FROM learning_experience WHERE enrollment_date >= '2022-01-01' OR completion_date <= '2022-12-31';",
      "SELECT * FROM learning_experience WHERE completion_status != FALSE;",
      "SELECT student_id, completion_date FROM learning_experience WHERE student_id = 900 AND enrollment_date <= '2022-12-31';",
      "SELECT student_id, completion_status FROM learning_experience WHERE enrollment_date <= '2022-12-31' AND completion_status = TRUE;",
      "SELECT student_id, completion_date FROM learning_experience WHERE course_id = 1000 AND completion_status = TRUE;",
      "SELECT student_id, course_id, enrollment_date, completion_date FROM learning_experience WHERE enrollment_date = completion_date;",
      "SELECT student_id, completion_status FROM learning_experience WHERE enrollment_date = '2022-06-30' AND completion_date IS NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT name, grade FROM students WHERE age > 20;",
      "SELECT * FROM courses;",
      "SELECT course_name, instructor FROM courses WHERE credits > 3;",
      "SELECT * FROM students WHERE major = 'Computer Science';",
      "SELECT name, grade FROM students WHERE major = 'Engineering';",
      "SELECT * FROM courses WHERE dept = 'Mathematics';",
      "SELECT course_name, instructor FROM courses WHERE credits > 2 AND dept = 'Science';",
      "SELECT * FROM students WHERE age < 25;",
      "SELECT name, age FROM students WHERE grade = 'A';",
      "SELECT * FROM courses WHERE credits <= 4;",
      "SELECT course_name, instructor FROM courses WHERE course_id = 101;",
      "SELECT * FROM students WHERE major = 'Biology' AND age >= 21;",
      "SELECT name, age FROM students WHERE grade = 'B' AND major = 'Physics';",
      "SELECT * FROM courses WHERE dept = 'Computer Science';",
      "SELECT course_name, instructor FROM courses WHERE credits = 5;",
      "SELECT * FROM students WHERE age BETWEEN 18 AND 22;",
      "SELECT name, grade FROM students WHERE major = 'Chemistry';",
      "SELECT * FROM courses WHERE instructor = 'Professor Smith';",
      "SELECT course_name, instructor FROM courses WHERE dept = 'Engineering';",
      "SELECT students.name, students.grade, courses.course_name FROM students JOIN courses ON students.major = courses.dept WHERE students.age > 20 AND courses.credits > 3;",
      "SELECT courses.course_name, courses.instructor, students.name FROM courses JOIN students ON courses.dept = students.major WHERE students.grade = 'A' AND courses.credits = 4;",
      "SELECT courses.course_name, students.name FROM courses LEFT JOIN students ON courses.dept = students.major;",
      "SELECT students.name, students.age, courses.course_name, courses.instructor FROM students LEFT JOIN courses ON students.major = courses.dept WHERE students.age < 25;",
      "SELECT students.name, courses.course_name FROM students INNER JOIN courses ON students.major = courses.dept WHERE students.age >= 20 AND courses.credits >= 3;",
      "SELECT students.name, courses.course_name FROM students LEFT JOIN courses ON students.major = courses.dept WHERE students.major IS NULL;",
      "SELECT students.name, students.age, courses.course_name FROM students LEFT JOIN courses ON students.major = courses.dept;",
      "SELECT students.name, courses.course_name FROM students RIGHT JOIN courses ON students.major = courses.dept;",
      "SELECT students.name, courses.course_name FROM students JOIN courses ON students.major = courses.dept WHERE students.grade != 'B';",
      "SELECT students.name, courses.course_name, students.age FROM students JOIN courses ON students.major = courses.dept WHERE students.age BETWEEN 20 AND 30;",
      "SELECT students.name, courses.course_name, students.major FROM students JOIN courses ON students.major = courses.dept WHERE courses.credits > 2 AND courses.credits < 5;",
      "SELECT students.name, students.age, courses.course_name, courses.instructor FROM students JOIN courses ON students.major = courses.dept WHERE students.grade = 'A' OR students.grade = 'B';",
      "SELECT courses.course_name, courses.instructor, students.name FROM courses JOIN students ON courses.dept = students.major WHERE students.age > 25 AND courses.credits < 4;",
      "SELECT students.name, students.age, courses.course_name FROM students LEFT JOIN courses ON students.major = courses.dept WHERE students.age > 18 AND courses.credits > 4;",
      "SELECT students.name, students.age, courses.course_name FROM students RIGHT JOIN courses ON students.major = courses.dept WHERE students.age < 30;",
      "SELECT students.name, courses.course_name FROM students JOIN courses ON students.major = courses.dept WHERE students.major IS NOT NULL;",
      "SELECT students.name, students.age, courses.course_name, courses.instructor FROM students JOIN courses ON students.major = courses.dept WHERE students.age >= 22 AND courses.credits >= 4;",
      "SELECT students.name, courses.course_name, students.major FROM students JOIN courses ON students.major = courses.dept WHERE students.grade = 'A' OR students.grade = 'C';",
      "SELECT courses.course_name, courses.credits, students.name FROM courses JOIN students ON courses.dept = students.major WHERE students.age > 21 AND courses.credits > 3;",
      "SELECT students.name, courses.course_name, students.age FROM students JOIN courses ON students.major = courses.dept WHERE students.age < 28;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_name, major FROM Students;",
      "SELECT student_id, birth_date FROM Students;",
      "SELECT * FROM Courses;",
      "SELECT course_name, department FROM Courses;",
      "SELECT course_id, credits FROM Courses;",
      "SELECT * FROM Enrollments;",
      "SELECT student_id, course_id FROM Enrollments;",
      "SELECT enrollment_id, enrollment_date FROM Enrollments;",
      "SELECT student_name, course_name FROM Students, Courses WHERE Students.student_id = Courses.course_id;",
      "SELECT student_name, course_name FROM Students, Courses, Enrollments WHERE Students.student_id = Enrollments.student_id AND Courses.course_id = Enrollments.course_id;",
      "SELECT student_name, course_name, enrollment_date FROM Students, Courses, Enrollments WHERE Students.student_id = Enrollments.student_id AND Courses.course_id = Enrollments.course_id;",
      "SELECT student_name, department, credits FROM Students JOIN Courses ON Students.major = Courses.department;",
      "SELECT student_name, course_name, enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_name, course_name, enrollment_date FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id INNER JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_name, course_name, enrollment_date FROM Students LEFT JOIN Enrollments ON Students.student_id = Enrollments.student_id LEFT JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_name, course_name, enrollment_date FROM Students RIGHT JOIN Enrollments ON Students.student_id = Enrollments.student_id RIGHT JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_name, course_name, enrollment_date FROM Students FULL JOIN Enrollments ON Students.student_id = Enrollments.student_id FULL JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_id, student_name, birth_date, course_id, course_name, department FROM Students, Courses;",
      "SELECT * FROM Students",
      "SELECT student_id, student_name, major FROM Students",
      "SELECT course_id, course_name, credits FROM Courses",
      "SELECT * FROM Enrollments",
      "SELECT Students.student_id, Students.student_name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id",
      "SELECT Students.student_name, Courses.credits FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id",
      "SELECT student_id, count(course_id) AS courses_enrolled FROM Enrollments GROUP BY student_id",
      "SELECT major, avg(credits) AS avg_credits FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id GROUP BY major",
      "SELECT student_name, course_name, enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id ORDER BY enrollment_date DESC",
      "SELECT student_name, count(enrollment_id) AS total_enrollments FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name HAVING total_enrollments > 5",
      "SELECT department, sum(credits) AS total_credits FROM Courses GROUP BY department HAVING total_credits > 50",
      "SELECT Students.student_name, Courses.course_name, Courses.credits FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id JOIN Students ON Enrollments.student_id = Students.student_id ORDER BY Students.student_name, Courses.course_name",
      "SELECT student_id, student_name FROM Students WHERE birth_date BETWEEN '1990-01-01' AND '2000-12-31'",
      "SELECT student_name, major FROM Students WHERE major IN ('Computer Science', 'Mathematics')",
      "SELECT student_id, course_id, enrollment_date FROM Enrollments WHERE enrollment_date > '2021-01-01'",
      "SELECT * FROM Students WHERE student_name LIKE 'A%'",
      "SELECT student_name, course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Courses.credits > 3"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students;",
      "SELECT student_name, age FROM students;",
      "SELECT * FROM courses;",
      "SELECT course_name, instructor FROM courses;",
      "SELECT course_id, credits FROM courses;",
      "SELECT * FROM enrollments;",
      "SELECT student_id, course_id FROM enrollments;",
      "SELECT enrollment_id, enrollment_date FROM enrollments;",
      "SELECT * FROM grades;",
      "SELECT enrollment_id, course_id FROM grades;",
      "SELECT grade_id, grade_value FROM grades;",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id;",
      "SELECT student_name, grade_value FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id;",
      "SELECT student_name, course_name, grade_value FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id;",
      "SELECT * FROM students WHERE age > 18;",
      "SELECT * FROM courses WHERE credits >= 3;",
      "SELECT * FROM enrollments WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM grades WHERE grade_value >= 80.0;",
      "SELECT * FROM students;",
      "SELECT student_name, age FROM students WHERE age > 20;",
      "SELECT student_name, grade FROM students WHERE grade = 'A';",
      "SELECT student_name, age, grade FROM students WHERE age > 20 AND grade = 'A';",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id;",
      "SELECT course_name, instructor FROM courses WHERE credits > 3;",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE grade = 'A';",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE grade_value > 80;",
      "SELECT student_name, course_name, enrollment_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE enrollment_date > '2022-01-01';",
      "SELECT student_name, enrollment_date, grade_value FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id WHERE grade_value < 60;",
      "SELECT student_name, age, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE age BETWEEN 20 AND 25;",
      "SELECT student_name, grade FROM students WHERE grade IN ('A', 'B');",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE instructor = 'John Smith';",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id ORDER BY student_name ASC;",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id ORDER BY enrollment_date DESC;",
      "SELECT COUNT(*) AS total_students FROM students;",
      "SELECT AVG(age) AS average_age FROM students;",
      "SELECT MAX(credits) AS max_credits FROM courses;",
      "SELECT student_name, COUNT(course_id) AS total_courses FROM students JOIN enrollments ON students.student_id = enrollments.student_id GROUP BY student_name;",
      "SELECT student_name, AVG(grade_value) AS average_grade FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN grades ON enrollments.enrollment_id = grades.enrollment_id GROUP BY student_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_name, enrollment_date FROM Students;",
      "SELECT course_name FROM Courses;",
      "SELECT instructor_name, department_id FROM Instructors;",
      "SELECT department_name FROM Departments;",
      "SELECT student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id;",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
      "SELECT instructor_name, course_name, start_date FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id;",
      "SELECT student_name, enrollment_date, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id;",
      "SELECT course_name, start_date FROM Courses WHERE start_date >= '2022-01-01';",
      "SELECT student_name, enrollment_date FROM Students WHERE enrollment_date < '2021-01-01';",
      "SELECT course_name, instructor_name FROM Courses JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
      "SELECT department_name, instructor_name FROM Departments JOIN Instructors ON Departments.department_id = Instructors.department_id;",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id ORDER BY grade DESC;",
      "SELECT course_name, COUNT(*) AS enrolled_students FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
      "SELECT instructor_name, AVG(grade) AS average_grade FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY instructor_name;",
      "SELECT student_name, SUM(CASE WHEN grade = 'A' THEN 1 ELSE 0 END) AS total_A_grades FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
      "SELECT instructor_name, COUNT(*) AS num_courses FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id GROUP BY instructor_name;",
      "SELECT MAX(enrollment_date) AS latest_enrollment_date FROM Students;",
      "SELECT * FROM Students;",
      "SELECT student_id, student_name, course_id FROM Students WHERE enrollment_date > '2022-01-01';",
      "SELECT Students.student_name, Courses.course_name FROM Students JOIN Courses ON Students.course_id = Courses.course_id;",
      "SELECT Students.student_name, Courses.course_name, Instructors.instructor_name FROM Students JOIN Courses ON Students.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
      "SELECT student_id, student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
      "SELECT student_name, course_name, instructor_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade != 'A';",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade IN ('A', 'B');",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade LIKE 'A%';",
      "SELECT COUNT(*) AS total_students FROM Students;",
      "SELECT department_name, COUNT(student_id) AS total_students FROM Departments JOIN Instructors ON Departments.department_id = Instructors.department_id JOIN Courses ON Instructors.instructor_id = Courses.instructor_id JOIN Students ON Courses.course_id = Students.course_id GROUP BY department_name;",
      "SELECT department_name, AVG(grade) AS avg_grade FROM Departments JOIN Instructors ON Departments.department_id = Instructors.department_id JOIN Courses ON Instructors.instructor_id = Courses.instructor_id JOIN Students ON Courses.course_id = Students.course_id JOIN Grades ON Students.student_id = Grades.student_id GROUP BY department_name;",
      "SELECT course_name, MIN(grade) AS min_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
      "SELECT course_name, MAX(grade) AS max_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
      "SELECT instructor_name, COUNT(course_id) AS total_courses FROM Instructors JOIN Courses ON Instructors.instructor_id = Courses.instructor_id GROUP BY instructor_name;",
      "SELECT course_name, start_date FROM Courses WHERE start_date > '2022-01-01';",
      "SELECT course_name, start_date FROM Courses WHERE start_date < '2022-01-01';",
      "SELECT student_name, instructor_name FROM Students JOIN Courses ON Students.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
      "SELECT department_name, AVG(DATEDIFF(enrollment_date, start_date)) AS avg_days_to_enroll FROM Students JOIN Courses ON Students.course_id = Courses.course_id JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id JOIN Departments ON Instructors.department_id = Departments.department_id GROUP BY department_name;"
    ]
  }
]