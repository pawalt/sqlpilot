[
  {
    "statements": [
      "SELECT * FROM destinations;",
      "SELECT destination_id, destination_name FROM destinations;",
      "SELECT destination_id, destination_name, country FROM destinations;",
      "SELECT destination_id, country, description FROM destinations;",
      "SELECT destination_name, country FROM destinations;",
      "SELECT destination_name, description FROM destinations;",
      "SELECT * FROM destinations WHERE country = 'USA';",
      "SELECT * FROM destinations WHERE country = 'Canada';",
      "SELECT * FROM destinations WHERE destination_id = 1;",
      "SELECT * FROM destinations WHERE destination_name = 'Paris';",
      "SELECT destination_id, destination_name FROM destinations WHERE country = 'Japan';",
      "SELECT destination_id, description FROM destinations WHERE country = 'Italy';",
      "SELECT destination_name FROM destinations WHERE country = 'Australia';",
      "SELECT * FROM destinations WHERE country = 'Germany' OR country = 'France';",
      "SELECT * FROM destinations WHERE destination_id BETWEEN 1 AND 10;",
      "SELECT destination_id, description FROM destinations WHERE destination_id > 5;",
      "SELECT destination_name, country FROM destinations WHERE description LIKE '%beach%';",
      "SELECT * FROM destinations ORDER BY destination_name ASC;",
      "SELECT * FROM destinations ORDER BY destination_name DESC;",
      "SELECT * FROM destinations ORDER BY destination_id ASC LIMIT 5;",
      "SELECT * FROM destinations WHERE country = 'France';",
      "SELECT destination_name, country FROM destinations WHERE destination_id = 5;",
      "SELECT destination_id, destination_name, country FROM destinations WHERE country = 'Italy' AND destination_name LIKE '%Rome%';",
      "SELECT * FROM destinations WHERE destination_name LIKE '%Beach%' OR country = 'Spain';",
      "SELECT destination_id, destination_name, country FROM destinations WHERE description IS NOT NULL ORDER BY destination_id DESC LIMIT 5;",
      "SELECT COUNT(*) AS total_destinations FROM destinations;",
      "SELECT destination_name, LENGTH(description) AS description_length FROM destinations WHERE LENGTH(description) > 100;",
      "SELECT destination_name, country, CHAR_LENGTH(destination_name) AS name_length FROM destinations WHERE country = 'Greece';",
      "SELECT destination_id, destination_name, country FROM destinations WHERE description LIKE '%mountain%' AND CHAR_LENGTH(description) > 200;",
      "SELECT DISTINCT country FROM destinations;",
      "SELECT COUNT(DISTINCT country) AS distinct_countries FROM destinations;",
      "SELECT destination_name, country FROM destinations WHERE destination_name IN ('London', 'Paris', 'New York');",
      "SELECT AVG(destination_id) AS average_id FROM destinations;",
      "SELECT destination_name, country, SUBSTRING(description, 1, 50) AS short_description FROM destinations WHERE country = 'Japan';",
      "SELECT destination_name, country FROM destinations WHERE country != 'China' ORDER BY destination_name ASC;",
      "SELECT destination_name, country FROM destinations WHERE destination_name REGEXP '^(P|B).*';",
      "SELECT AVG(destination_id) AS average_id, SUM(destination_id) AS total_id FROM destinations;",
      "SELECT destination_id, destination_name, country FROM destinations WHERE destination_name = 'Sydney' AND (country = 'Australia' OR country = 'New Zealand');",
      "SELECT destination_id, destination_name, country, UPPER(destination_name) AS uppercase_name FROM destinations WHERE country IN ('Germany', 'Italy', 'Spain');",
      "SELECT destination_id, destination_name, country FROM destinations WHERE destination_name IS NOT NULL AND destination_name != '';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM destinations;",
      "SELECT name, location FROM destinations;",
      "SELECT id, name, location FROM destinations WHERE id = 1;",
      "SELECT * FROM user_feedback;",
      "SELECT feedback, rating FROM user_feedback WHERE destination_id = 1;",
      "SELECT destination_id, AVG(rating) AS avg_rating FROM user_feedback GROUP BY destination_id;",
      "SELECT * FROM destinations JOIN user_feedback ON destinations.id = user_feedback.destination_id;",
      "SELECT d.name, COUNT(uf.id) AS feedback_count FROM destinations d LEFT JOIN user_feedback uf ON d.id = uf.destination_id GROUP BY d.id;",
      "SELECT d.name, MAX(uf.rating) AS highest_rating FROM destinations d JOIN user_feedback uf ON d.id = uf.destination_id GROUP BY d.id;",
      "SELECT * FROM destinations WHERE location LIKE '%beach%';",
      "SELECT * FROM destinations WHERE description LIKE '%scenic%';",
      "SELECT * FROM destinations ORDER BY name ASC;",
      "SELECT * FROM destinations WHERE id BETWEEN 1 AND 5;",
      "SELECT AVG(rating) AS avg_rating FROM user_feedback;",
      "SELECT COUNT(id) AS total_destinations FROM destinations;",
      "SELECT AVG(rating) AS avg_rating, COUNT(id) AS total_destinations FROM user_feedback;",
      "SELECT d.name, MAX(uf.rating) AS highest_rating FROM destinations d JOIN user_feedback uf ON d.id = uf.destination_id GROUP BY d.name;",
      "SELECT d.name, SUM(uf.rating) AS total_rating FROM destinations d JOIN user_feedback uf ON d.id = uf.destination_id GROUP BY d.name;",
      "SELECT d.name, COUNT(uf.id) AS feedback_count, AVG(uf.rating) AS avg_rating FROM destinations d LEFT JOIN user_feedback uf ON d.id = uf.destination_id GROUP BY d.name;",
      "SELECT d.name, MIN(uf.rating) AS lowest_rating FROM destinations d JOIN user_feedback uf ON d.id = uf.destination_id GROUP BY d.name;",
      "SELECT * FROM destinations WHERE id = 1;",
      "SELECT name, location FROM destinations WHERE location = 'Paris';",
      "SELECT * FROM destinations WHERE description LIKE '%beach%';",
      "SELECT d.name, d.location, u.feedback FROM destinations d INNER JOIN user_feedback u ON d.id = u.destination_id;",
      "SELECT d.name AS destination_name, COUNT(u.id) AS feedback_count FROM destinations d LEFT JOIN user_feedback u ON d.id = u.destination_id GROUP BY d.id;",
      "SELECT d.name, AVG(u.rating) AS average_rating FROM destinations d INNER JOIN user_feedback u ON d.id = u.destination_id GROUP BY d.id;",
      "SELECT d.name, u.rating FROM destinations d INNER JOIN user_feedback u ON d.id = u.destination_id WHERE u.rating > 4;",
      "SELECT d.name, d.location FROM destinations d WHERE d.id IN (SELECT destination_id FROM user_feedback WHERE rating < 3);",
      "SELECT d.name, d.location, u.feedback FROM destinations d LEFT JOIN user_feedback u ON d.id = u.destination_id WHERE u.feedback IS NOT NULL;",
      "SELECT d.name, d.location FROM destinations d WHERE NOT EXISTS (SELECT * FROM user_feedback u WHERE d.id = u.destination_id);",
      "SELECT d.name, d.location, u.feedback FROM destinations d LEFT JOIN user_feedback u ON d.id = u.destination_id WHERE u.rating IS NULL;",
      "SELECT d.name, COUNT(u.id) AS feedback_count FROM destinations d LEFT JOIN user_feedback u ON d.id = u.destination_id GROUP BY d.id HAVING COUNT(u.id) > 5;",
      "SELECT d.name, d.location FROM destinations d WHERE EXISTS (SELECT * FROM user_feedback u WHERE d.id = u.destination_id AND u.rating = 5);",
      "SELECT d.name, u.rating FROM destinations d JOIN user_feedback u ON d.id = u.destination_id ORDER BY u.rating DESC;",
      "SELECT MAX(rating) AS max_rating FROM user_feedback;",
      "SELECT MIN(rating) AS min_rating FROM user_feedback;",
      "SELECT AVG(rating) AS avg_rating FROM user_feedback;",
      "SELECT SUM(rating) AS total_rating FROM user_feedback;",
      "SELECT d.name, d.location, (SELECT COUNT(*) FROM user_feedback WHERE destination_id = d.id) AS feedback_count FROM destinations d;",
      "SELECT d.name, d.location, COUNT(*) AS feedback_count FROM destinations d JOIN user_feedback u ON d.id = u.destination_id GROUP BY d.id HAVING COUNT(*) > 3;",
      "SELECT d1.name AS from_destination, d2.name AS to_destination, u.feedback FROM destinations d1 JOIN user_feedback u ON d1.id = u.destination_id JOIN destinations d2 ON u.destination_id = d2.id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM destinations;",
      "SELECT name, location FROM destinations;",
      "SELECT name, rating FROM destinations WHERE rating > 4.5;",
      "SELECT description FROM destinations WHERE location = 'Paris';",
      "SELECT * FROM user_feedback;",
      "SELECT user_id, destination_id, rating FROM user_feedback WHERE rating < 3.0;",
      "SELECT feedback_id, user_id, comments FROM user_feedback WHERE destination_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM users;",
      "SELECT username, email FROM users WHERE age > 30;",
      "SELECT user_id, created_at FROM users WHERE created_at > '2022-01-01';",
      "SELECT name, location, rating FROM destinations WHERE rating >= 4.0 ORDER BY rating DESC;",
      "SELECT feedback_id, rating, comments FROM user_feedback WHERE created_at > '2022-05-01';",
      "SELECT * FROM destinations WHERE description IS NOT NULL;",
      "SELECT * FROM user_feedback WHERE comments IS NOT NULL;",
      "SELECT user_id, destination_id, rating FROM user_feedback WHERE rating > 3.0 AND rating < 4.0;",
      "SELECT * FROM users WHERE email LIKE '%gmail.com';",
      "SELECT DISTINCT location FROM destinations;",
      "SELECT COUNT(*) FROM destinations;",
      "SELECT AVG(rating) FROM destinations;",
      "SELECT MAX(age) FROM users;",
      "SELECT name, description, location, rating FROM destinations WHERE rating > 4.5",
      "SELECT name, description, location FROM destinations WHERE name LIKE 'B%'",
      "SELECT * FROM destinations WHERE location = 'Paris' AND rating > 4",
      "SELECT destination_id, COUNT(feedback_id) as total_feedback FROM destinations JOIN user_feedback ON destinations.destination_id = user_feedback.destination_id GROUP BY destination_id",
      "SELECT username, age FROM users WHERE age BETWEEN 25 AND 40",
      "SELECT * FROM user_feedback WHERE rating < 3",
      "SELECT user_id, COUNT(feedback_id) as total_feedback FROM user_feedback GROUP BY user_id HAVING COUNT(feedback_id) > 5",
      "SELECT AVG(rating) as average_rating FROM user_feedback WHERE destination_id = '123e4567-e89b-12d3-a456-426655440000'",
      "SELECT destination_id, AVG(rating) as average_rating FROM user_feedback GROUP BY destination_id HAVING AVG(rating) > 4",
      "SELECT name, description, location FROM destinations WHERE created_at BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT username, email FROM users WHERE email LIKE '%@example.com%'",
      "SELECT destination_id, COUNT(user_id) as total_users FROM user_feedback GROUP BY destination_id HAVING COUNT(user_id) > 2",
      "SELECT name, description, location, rating FROM destinations WHERE description IS NOT NULL",
      "SELECT DISTINCT location FROM destinations",
      "SELECT * FROM destinations ORDER BY rating DESC",
      "SELECT username, email, age FROM users ORDER BY age",
      "SELECT username, email, age FROM users WHERE created_at >= '2021-01-01'",
      "SELECT * FROM user_feedback ORDER BY created_at DESC LIMIT 10",
      "SELECT u.username, d.name, uf.rating FROM users u JOIN user_feedback uf ON u.user_id = uf.user_id JOIN destinations d ON uf.destination_id = d.destination_id",
      "SELECT destination_id, MAX(rating) as max_rating FROM user_feedback GROUP BY destination_id",
      "SELECT * FROM destinations WHERE rating IN (SELECT MAX(rating) FROM destinations)",
      "SELECT u.username, COUNT(uf.feedback_id) as total_feedback FROM users u LEFT JOIN user_feedback uf ON u.user_id = uf.user_id GROUP BY u.username HAVING COUNT(uf.feedback_id) > 0"
    ]
  },
  {
    "statements": [
      "SELECT * FROM destinations;",
      "SELECT destination_id, destination_name FROM destinations;",
      "SELECT user_id, username FROM users;",
      "SELECT user_id, email, age FROM users;",
      "SELECT feedback_id, user_id, destination_id FROM feedback;",
      "SELECT feedback_id, rating, comment FROM feedback;",
      "SELECT user_id, destination_id FROM favourites;",
      "SELECT user_id FROM favourites;",
      "SELECT destination_id FROM favourites;",
      "SELECT destination_name, location FROM destinations;",
      "SELECT user_id, username, email, age FROM users;",
      "SELECT destination_id, destination_name, location FROM destinations;",
      "SELECT user_id, username, email FROM users;",
      "SELECT user_id, destination_id, rating FROM feedback;",
      "SELECT user_id, destination_id, comment FROM feedback;",
      "SELECT user_id, destination_id, user_id FROM favourites;",
      "SELECT user_id, destination_id, destination_id FROM favourites;",
      "SELECT DISTINCT destination_name FROM destinations;",
      "SELECT username, email, age FROM users;",
      "SELECT destination_id, location FROM destinations;",
      "SELECT * FROM destinations;",
      "SELECT destination_name, location FROM destinations WHERE destination_id = 1;",
      "SELECT username, email FROM users WHERE age > 30;",
      "SELECT feedback_id, destination_name, rating FROM feedback INNER JOIN destinations ON feedback.destination_id = destinations.destination_id;",
      "SELECT user_id, username, destination_name FROM users INNER JOIN favourites ON users.user_id = favourites.user_id INNER JOIN destinations ON favourites.destination_id = destinations.destination_id;",
      "SELECT user_id, destination_name, rating FROM feedback WHERE rating > 4 ORDER BY rating DESC;",
      "SELECT u.username, d.destination_name, f.rating FROM users u, destinations d, feedback f WHERE u.user_id = f.user_id AND d.destination_id = f.destination_id;",
      "SELECT d.destination_name, COUNT(f.feedback_id) AS total_feedbacks FROM destinations d LEFT JOIN feedback f ON d.destination_id = f.destination_id GROUP BY d.destination_name;",
      "SELECT u.username, d.location, f.rating FROM users u, destinations d, feedback f WHERE u.user_id = f.user_id AND d.destination_id = f.destination_id AND f.rating >= 3;",
      "SELECT user_id, destination_name, rating FROM feedback WHERE user_id = (SELECT user_id FROM users WHERE username = 'john_doe');",
      "SELECT username, email FROM users WHERE user_id IN (SELECT user_id FROM favourites WHERE destination_id = 1);",
      "SELECT destination_id, destination_name, location FROM destinations WHERE destination_id NOT IN (SELECT destination_id FROM feedback);",
      "SELECT u.username, d.destination_name, f.rating FROM users u JOIN favourites a ON u.user_id = a.user_id JOIN destinations d ON d.destination_id = a.destination_id JOIN feedback f ON f.user_id = u.user_id AND f.destination_id = d.destination_id;",
      "SELECT d.destination_name, AVG(f.rating) AS avg_rating FROM destinations d JOIN feedback f ON d.destination_id = f.destination_id GROUP BY d.destination_name HAVING avg_rating > 3;",
      "SELECT u.username, COUNT(f.feedback_id) AS total_feedbacks FROM users u JOIN feedback f ON u.user_id = f.user_id GROUP BY u.username;",
      "SELECT user_id, destination_name, rating FROM feedback WHERE comment LIKE '%beautiful%';",
      "SELECT u.username, d.destination_name, f.rating FROM users u JOIN feedback f ON u.user_id = f.user_id JOIN destinations d ON f.destination_id = d.destination_id WHERE u.age > 25;",
      "SELECT DISTINCT username, email FROM users;",
      "SELECT TOP 5 username, email FROM users ORDER BY user_id DESC;",
      "SELECT DISTINCT destination_name FROM destinations ORDER BY destination_name ASC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM destinations;",
      "SELECT destination_name, description FROM destinations;",
      "SELECT DISTINCT location FROM destinations;",
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT * FROM user_feedback;",
      "SELECT user_id, destination_id, rating FROM user_feedback;",
      "SELECT feedback_id, feedback_text FROM user_feedback;",
      "SELECT * FROM tags;",
      "SELECT tag_name FROM tags;",
      "SELECT * FROM destination_tags;",
      "SELECT destination_id, tag_id FROM destination_tags;",
      "SELECT d.destination_name, t.tag_name FROM destinations d JOIN destination_tags dt ON d.destination_id = dt.destination_id JOIN tags t ON dt.tag_id = t.tag_id;",
      "SELECT u.username, d.destination_name, uf.rating, uf.feedback_text FROM users u JOIN user_feedback uf ON u.user_id = uf.user_id JOIN destinations d ON uf.destination_id = d.destination_id;",
      "SELECT d.destination_name, COUNT(uf.feedback_id) AS feedback_count FROM destinations d LEFT JOIN user_feedback uf ON d.destination_id = uf.destination_id GROUP BY d.destination_id;",
      "SELECT d.destination_name, AVG(uf.rating) AS avg_rating FROM destinations d LEFT JOIN user_feedback uf ON d.destination_id = uf.destination_id GROUP BY d.destination_id;",
      "SELECT d.destination_name, t.tag_name FROM destinations d JOIN destination_tags dt ON d.destination_id = dt.destination_id JOIN tags t ON dt.tag_id = t.tag_id WHERE t.tag_name = 'Nature';",
      "SELECT d.destination_name, t.tag_name FROM destinations d JOIN destination_tags dt ON d.destination_id = dt.destination_id JOIN tags t ON dt.tag_id = t.tag_id WHERE d.location = 'Europe';",
      "SELECT d.destination_name, d.location, COUNT(dt.tag_id) AS tag_count FROM destinations d JOIN destination_tags dt ON d.destination_id = dt.destination_id GROUP BY d.destination_id;",
      "SELECT d.destination_name, uf.rating, COUNT(dt.tag_id) AS tag_count FROM destinations d JOIN user_feedback uf ON d.destination_id = uf.destination_id JOIN destination_tags dt ON d.destination_id = dt.destination_id GROUP BY d.destination_id, uf.rating;",
      "SELECT * FROM destinations;",
      "SELECT destination_name, location FROM destinations WHERE destination_id = 1;",
      "SELECT destination_name, description FROM destinations WHERE location = 'Beach';",
      "SELECT user_id, username FROM users WHERE username LIKE 'A%';",
      "SELECT destination_id, destination_name, description FROM destinations WHERE description IS NOT NULL;",
      "SELECT user_id, email FROM users WHERE email LIKE '%@gmail.com';",
      "SELECT destination_name, location FROM destinations WHERE location IN ('Mountain', 'Forest');",
      "SELECT destination_id, destination_name FROM destinations ORDER BY destination_name ASC;",
      "SELECT user_id, username, email FROM users WHERE username = 'john_doe' OR email = 'john.doe@example.com';",
      "SELECT user_id, COUNT(feedback_id) AS total_feedback FROM user_feedback GROUP BY user_id;",
      "SELECT d.destination_name, t.tag_name FROM destinations d JOIN destination_tags dt ON d.destination_id = dt.destination_id JOIN tags t ON dt.tag_id = t.tag_id;",
      "SELECT d.destination_name, COUNT(dt.tag_id) AS total_tags FROM destinations d LEFT JOIN destination_tags dt ON d.destination_id = dt.destination_id GROUP BY d.destination_id;",
      "SELECT u.username, df.destination_id, df.rating, df.feedback_text FROM users u JOIN user_feedback df ON u.user_id = df.user_id WHERE df.rating >= 4;",
      "SELECT d.destination_name, COUNT(df.feedback_id) AS total_feedback FROM destinations d LEFT JOIN user_feedback df ON d.destination_id = df.destination_id GROUP BY d.destination_id;",
      "SELECT d.destination_name, t.tag_name FROM destinations d LEFT JOIN destination_tags dt ON d.destination_id = dt.destination_id LEFT JOIN tags t ON dt.tag_id = t.tag_id WHERE t.tag_name LIKE '%nature%';",
      "SELECT d.destination_name, AVG(df.rating) AS avg_rating FROM destinations d JOIN user_feedback df ON d.destination_id = df.destination_id GROUP BY d.destination_id HAVING avg_rating >= 4;",
      "SELECT d.destination_name, t.tag_name FROM destinations d JOIN destination_tags dt ON d.destination_id = dt.destination_id JOIN tags t ON dt.tag_id = t.tag_id WHERE t.tag_name = 'adventure';",
      "SELECT u.username, COUNT(df.feedback_id) AS total_feedback FROM users u LEFT JOIN user_feedback df ON u.user_id = df.user_id GROUP BY u.user_id HAVING total_feedback >= 5;",
      "SELECT d.destination_name, MAX(df.rating) AS max_rating FROM destinations d JOIN user_feedback df ON d.destination_id = df.destination_id GROUP BY d.destination_id HAVING max_rating = 5;"
    ]
  }
]