[
  {
    "statements": [
      "SELECT * FROM interactions;",
      "SELECT interaction_id, user_id, action FROM interactions;",
      "SELECT DISTINCT user_id FROM interactions;",
      "SELECT * FROM interactions WHERE user_id = 1;",
      "SELECT * FROM interactions WHERE reward > 10.0;",
      "SELECT * FROM interactions WHERE timestamp > '2022-01-01 00:00:00';",
      "SELECT * FROM interactions WHERE action LIKE 'click%';",
      "SELECT COUNT(*) FROM interactions;",
      "SELECT interaction_id, MAX(reward) AS max_reward FROM interactions GROUP BY interaction_id;",
      "SELECT AVG(reward) AS avg_reward FROM interactions;",
      "SELECT user_id, COUNT(interaction_id) AS num_interactions FROM interactions GROUP BY user_id ORDER BY num_interactions DESC;",
      "SELECT user_id, SUM(reward) AS total_reward FROM interactions GROUP BY user_id;",
      "SELECT AVG(reward) AS avg_reward, COUNT(*) AS num_interactions FROM interactions GROUP BY user_id;",
      "SELECT user_id, COUNT(*) AS num_interactions FROM interactions GROUP BY user_id HAVING num_interactions >= 5;",
      "SELECT DATE(timestamp) AS date, SUM(reward) AS total_reward FROM interactions GROUP BY DATE(timestamp);",
      "SELECT user_id, COUNT(*) AS num_interactions FROM interactions GROUP BY user_id HAVING num_interactions >= 3 ORDER BY user_id ASC;",
      "SELECT action, COUNT(*) AS num_actions FROM interactions GROUP BY action ORDER BY num_actions DESC;",
      "SELECT * FROM interactions ORDER BY timestamp ASC;",
      "SELECT * FROM interactions WHERE TIMESTAMPDIFF(MONTH, timestamp, NOW()) <= 3;",
      "SELECT user_id, COUNT(*) AS num_interactions FROM interactions GROUP BY user_id ORDER BY num_interactions DESC LIMIT 5;",
      "SELECT * FROM interactions WHERE action = 'click' AND reward > 0.5;",
      "SELECT interaction_id, action, timestamp FROM interactions WHERE user_id = 123;",
      "SELECT AVG(reward) AS average_reward FROM interactions GROUP BY action;",
      "SELECT COUNT(*) AS total_interactions FROM interactions WHERE user_id = 456;",
      "SELECT DISTINCT user_id FROM interactions;",
      "SELECT * FROM interactions WHERE timestamp BETWEEN '2021-01-01' AND '2021-01-31';",
      "SELECT interaction_id, action, timestamp FROM interactions WHERE reward < 0.2 ORDER BY timestamp DESC;",
      "SELECT user_id, SUM(reward) AS total_reward FROM interactions GROUP BY user_id HAVING total_reward > 10;",
      "SELECT MAX(reward) AS highest_reward FROM interactions;",
      "SELECT COUNT(DISTINCT user_id) AS total_users FROM interactions;",
      "SELECT action, COUNT(*) AS total_actions FROM interactions GROUP BY action ORDER BY total_actions DESC;",
      "SELECT interaction_id, user_id, MAX(timestamp) AS latest_timestamp FROM interactions GROUP BY user_id;",
      "SELECT SUM(reward) AS total_reward FROM interactions WHERE action = 'purchase';",
      "SELECT user_id, COUNT(*) AS total_interactions FROM interactions GROUP BY user_id HAVING total_interactions > 5;",
      "SELECT AVG(reward) AS average_reward, MAX(reward) AS highest_reward, MIN(reward) AS lowest_reward FROM interactions;",
      "SELECT * FROM interactions WHERE user_id IN (1, 2, 3);",
      "SELECT user_id, AVG(reward) AS average_reward FROM interactions GROUP BY user_id ORDER BY average_reward DESC;",
      "SELECT user_id, action, timestamp, reward FROM interactions WHERE action LIKE 'view%';",
      "SELECT * FROM interactions WHERE reward IN (0.1, 0.2, 0.3);",
      "SELECT user_id, MAX(reward) AS highest_reward FROM interactions GROUP BY user_id HAVING highest_reward > 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM interactions;",
      "SELECT id, user_id FROM interactions WHERE user_id = 123;",
      "SELECT * FROM labeled_data WHERE label = 'spam';",
      "SELECT id, label FROM labeled_data WHERE data_id = 456;",
      "SELECT id, interaction_time FROM interactions WHERE interaction_type = 'like';",
      "SELECT * FROM labeled_data WHERE reinforcement_score > 0.5;",
      "SELECT id, user_id, interaction_time FROM interactions WHERE user_id = 789 AND interaction_type = 'comment';",
      "SELECT id, interaction_type FROM interactions WHERE interaction_time BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT * FROM labeled_data WHERE label IN ('positive', 'negative');",
      "SELECT id, data_id, label, reinforcement_score FROM labeled_data WHERE reinforcement_score >= 0.8;",
      "SELECT id, user_id FROM interactions WHERE user_id = 555 OR user_id = 666;",
      "SELECT * FROM interactions WHERE interaction_time < '2022-03-15';",
      "SELECT id, label FROM labeled_data WHERE data_id IN (123, 456, 789);",
      "SELECT id, user_id, interaction_time FROM interactions ORDER BY interaction_time DESC;",
      "SELECT * FROM labeled_data WHERE label LIKE '%spam%';",
      "SELECT id, label FROM labeled_data WHERE label NOT LIKE '%spam%';",
      "SELECT COUNT(*) AS total_interactions FROM interactions;",
      "SELECT AVG(reinforcement_score) AS avg_score FROM labeled_data;",
      "SELECT user_id, COUNT(*) AS total_interactions FROM interactions GROUP BY user_id;",
      "SELECT label, AVG(reinforcement_score) AS avg_score FROM labeled_data GROUP BY label;",
      "SELECT i.id, i.interaction_time, l.label FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE i.interaction_type = 'click'",
      "SELECT i.id, i.user_id, l.label, l.reinforcement_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE i.interaction_type = 'hover'",
      "SELECT i.*, l.* FROM interactions i JOIN labeled_data l ON i.id = l.data_id",
      "SELECT i.user_id, COUNT(*) AS interaction_count FROM interactions i GROUP BY i.user_id HAVING COUNT(*) > 5",
      "SELECT i.interaction_type, AVG(l.reinforcement_score) AS avg_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id GROUP BY i.interaction_type",
      "SELECT i.id, i.interaction_time, l.label, l.reinforcement_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE i.user_id = 12345",
      "SELECT i.user_id, COUNT(l.label) AS label_count FROM interactions i JOIN labeled_data l ON i.id = l.data_id GROUP BY i.user_id",
      "SELECT i.user_id, MAX(l.reinforcement_score) AS max_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id GROUP BY i.user_id",
      "SELECT i.user_id, MIN(l.reinforcement_score) AS min_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id GROUP BY i.user_id",
      "SELECT i.user_id, SUM(l.reinforcement_score) AS total_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id GROUP BY i.user_id",
      "SELECT i.id, i.user_id, i.interaction_time, l.label, l.reinforcement_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id",
      "SELECT i.interaction_type, COUNT(*) AS interaction_count FROM interactions i GROUP BY i.interaction_type",
      "SELECT i.user_id, AVG(l.reinforcement_score) AS avg_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id GROUP BY i.user_id",
      "SELECT i.id, i.user_id, i.interaction_time, l.label, l.reinforcement_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE l.label = 'positive'",
      "SELECT i.id, i.user_id, i.interaction_time, l.label, l.reinforcement_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE l.label = 'negative'",
      "SELECT i.user_id, ROUND(AVG(l.reinforcement_score), 2) AS avg_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id GROUP BY i.user_id",
      "SELECT i.id, i.user_id, i.interaction_time, l.label, l.reinforcement_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE i.interaction_time BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT i.id, i.user_id, i.interaction_time, l.label, l.reinforcement_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE HOUR(i.interaction_time) = 10",
      "SELECT i.user_id, SUM(l.reinforcement_score) AS total_score FROM interactions i JOIN labeled_data l ON i.id = l.data_id WHERE i.interaction_time > '2022-01-01'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM interactions;",
      "SELECT interaction_id, user_id, action, timestamp FROM interactions WHERE user_id = 1;",
      "SELECT label FROM labeled_data WHERE timestamp > '2022-01-01';",
      "SELECT task_description, reward FROM reinforcement_learning_tasks WHERE task_id = 3;",
      "SELECT * FROM interactions WHERE interaction_id = 5;",
      "SELECT label, timestamp FROM labeled_data WHERE label = 'spam';",
      "SELECT task_id, task_description FROM reinforcement_learning_tasks WHERE reward > 100;",
      "SELECT action, timestamp FROM interactions WHERE user_id = 2;",
      "SELECT * FROM labeled_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT interaction_id, user_id FROM interactions WHERE timestamp < '2022-03-01';",
      "SELECT * FROM reinforcement_learning_tasks;",
      "SELECT DISTINCT(user_id) FROM interactions;",
      "SELECT label, timestamp FROM labeled_data WHERE label != 'spam';",
      "SELECT task_id, task_description, reward FROM reinforcement_learning_tasks WHERE task_id IN (1, 2, 3);",
      "SELECT * FROM interactions WHERE action = 'click';",
      "SELECT COUNT(*) FROM labeled_data WHERE label = 'spam';",
      "SELECT task_id, task_description FROM reinforcement_learning_tasks WHERE reward < 50;",
      "SELECT MAX(reward) FROM reinforcement_learning_tasks;",
      "SELECT AVG(reward) FROM reinforcement_learning_tasks;",
      "SELECT interaction_id, user_id, action, timestamp FROM interactions ORDER BY timestamp DESC;",
      "SELECT * FROM interactions JOIN labeled_data ON interactions.user_id = labeled_data.data_id WHERE interactions.timestamp < now() AND labeled_data.label = 'positive';",
      "SELECT interactions.user_id, labeled_data.label, reinforcement_learning_tasks.task_description FROM interactions JOIN labeled_data ON interactions.user_id = labeled_data.data_id JOIN reinforcement_learning_tasks ON interactions.user_id = reinforcement_learning_tasks.task_id WHERE interactions.timestamp >= '2021-01-01' AND reinforcement_learning_tasks.reward > 5;",
      "SELECT interaction_id, label, reward FROM interactions JOIN labeled_data ON interactions.interaction_id = labeled_data.data_id JOIN reinforcement_learning_tasks ON interactions.interaction_id = reinforcement_learning_tasks.task_id WHERE labeled_data.timestamp > '2021-06-01' AND reinforcement_learning_tasks.task_description LIKE '%classification%';",
      "SELECT interactions.user_id, labeled_data.data_id, reinforcement_learning_tasks.reward FROM interactions JOIN labeled_data ON interactions.user_id = labeled_data.data_id LEFT JOIN reinforcement_learning_tasks ON labeled_data.data_id = reinforcement_learning_tasks.task_id WHERE labeled_data.label = 'negative' AND reinforcement_learning_tasks.reward IS NULL;",
      "SELECT interaction_id, task_description, reward FROM interactions JOIN reinforcement_learning_tasks ON interactions.interaction_id = reinforcement_learning_tasks.task_id WHERE interactions.timestamp BETWEEN '2021-07-01' AND '2021-09-30' ORDER BY reward DESC;",
      "SELECT COUNT(*) AS total_interactions FROM interactions;",
      "SELECT AVG(reward) AS average_reward FROM reinforcement_learning_tasks;",
      "SELECT user_id, MAX(reward) AS max_reward FROM interactions JOIN reinforcement_learning_tasks ON interactions.user_id = reinforcement_learning_tasks.task_id GROUP BY user_id;",
      "SELECT DISTINCT labeled_data.label FROM labeled_data;",
      "SELECT task_id, COUNT(*) AS total_tasks FROM reinforcement_learning_tasks GROUP BY task_id HAVING COUNT(*) > 1;",
      "SELECT user_id, MIN(reward) AS min_reward, MAX(reward) AS max_reward, AVG(reward) AS avg_reward FROM interactions JOIN reinforcement_learning_tasks ON interactions.user_id = reinforcement_learning_tasks.task_id GROUP BY user_id;",
      "SELECT * FROM labeled_data WHERE label LIKE '%important%' AND timestamp < '2021-12-31';",
      "SELECT interaction_id, task_id, reward FROM interactions JOIN reinforcement_learning_tasks ON interactions.interaction_id = reinforcement_learning_tasks.task_id WHERE reward > 0;",
      "SELECT user_id, COUNT(*) AS total_interactions FROM interactions GROUP BY user_id ORDER BY total_interactions DESC;",
      "SELECT interaction_id, task_description, reward FROM interactions JOIN reinforcement_learning_tasks ON interactions.interaction_id = reinforcement_learning_tasks.task_id WHERE interactions.timestamp < '2021-06-01';",
      "SELECT task_id, AVG(reward) AS avg_reward FROM reinforcement_learning_tasks GROUP BY task_id;",
      "SELECT * FROM interactions WHERE timestamp = (SELECT MAX(timestamp) FROM interactions);",
      "SELECT interaction_id, task_description, reward FROM interactions JOIN reinforcement_learning_tasks ON interactions.interaction_id = reinforcement_learning_tasks.task_id WHERE reward BETWEEN 1 AND 10;",
      "SELECT user_id, COUNT(*) AS total_tasks FROM interactions JOIN labeled_data ON interactions.user_id = labeled_data.data_id JOIN reinforcement_learning_tasks ON interactions.user_id = reinforcement_learning_tasks.task_id GROUP BY user_id HAVING COUNT(*) > 2 ORDER BY total_tasks DESC;",
      "SELECT task_id, task_description, reward FROM reinforcement_learning_tasks WHERE task_description IS NOT NULL ORDER BY task_id ASC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_interactions;",
      "SELECT user_id, interaction_type FROM user_interactions WHERE user_id = 123;",
      "SELECT * FROM labeled_data WHERE label_id = 5;",
      "SELECT data_description, data_value FROM labeled_data WHERE data_id = 10;",
      "SELECT task_name, task_description FROM reinforcement_tasks;",
      "SELECT task_id, task_status FROM reinforcement_tasks WHERE task_status = 'pending';",
      "SELECT * FROM user_scores WHERE user_id = 456;",
      "SELECT task_id, score_value FROM user_scores WHERE completion_status = 'completed';",
      "SELECT COUNT(*) FROM user_interactions;",
      "SELECT AVG(score_value) FROM user_scores;",
      "SELECT MAX(data_value) FROM labeled_data;",
      "SELECT MIN(score_value) FROM user_scores;",
      "SELECT DISTINCT(user_id) FROM user_interactions;",
      "SELECT COUNT(DISTINCT(label_id)) FROM labeled_data;",
      "SELECT task_id, MAX(score_value) FROM user_scores GROUP BY task_id;",
      "SELECT user_id, AVG(score_value) FROM user_scores GROUP BY user_id;",
      "SELECT task_id, COUNT(*) FROM user_scores GROUP BY task_id HAVING task_id > 100;",
      "SELECT user_id, SUM(score_value) FROM user_scores GROUP BY user_id HAVING SUM(score_value) > 500;",
      "SELECT task_id, AVG(score_value) AS average_score FROM user_scores GROUP BY task_id ORDER BY average_score DESC;",
      "SELECT * FROM user_interactions WHERE user_id IN (SELECT user_id FROM user_scores WHERE completion_status = 'completed');",
      "SELECT * FROM user_interactions;",
      "SELECT user_id, interaction_id, interaction_type FROM user_interactions WHERE user_id = 1;",
      "SELECT * FROM labeled_data WHERE data_value > 100;",
      "SELECT user_id, task_id, score_value FROM user_scores WHERE score_value >= 50;",
      "SELECT task_name, task_description FROM reinforcement_tasks WHERE task_status = 'pending';",
      "SELECT interaction_id, interaction_data FROM user_interactions WHERE interaction_type = 'like';",
      "SELECT data_id, label_id, data_description FROM labeled_data WHERE label_id = 3;",
      "SELECT * FROM user_scores WHERE completion_status = 'completed';",
      "SELECT user_id, interaction_id, interaction_data FROM user_interactions WHERE user_id = 2 AND interaction_type = 'comment';",
      "SELECT * FROM user_scores WHERE completion_status = 'pending' AND score_value < 30;",
      "SELECT task_id, task_name FROM reinforcement_tasks WHERE task_id IN (1, 2, 3);",
      "SELECT user_id, interaction_id, interaction_type FROM user_interactions WHERE user_id = 3 OR interaction_type = 'share';",
      "SELECT * FROM labeled_data WHERE data_description LIKE '%important%';",
      "SELECT user_id, interaction_type, interaction_data FROM user_interactions WHERE interaction_data IS NOT NULL;",
      "SELECT * FROM user_scores WHERE user_id = 4 AND completion_status = 'completed';",
      "SELECT task_id, task_name, task_description FROM reinforcement_tasks WHERE task_status = 'completed';",
      "SELECT user_id, interaction_id, interaction_data FROM user_interactions WHERE interaction_type IN ('like', 'share');",
      "SELECT * FROM labeled_data WHERE data_value BETWEEN 50 AND 100;",
      "SELECT * FROM user_scores WHERE user_id = 5 AND score_value > 80;",
      "SELECT user_id, interaction_type, interaction_data FROM user_interactions WHERE interaction_data LIKE '%fun%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM interactions;",
      "SELECT user_id, action FROM interactions WHERE interaction_id = 1;",
      "SELECT * FROM labels WHERE interaction_id = 1;",
      "SELECT task_name FROM tasks WHERE task_id = 2;",
      "SELECT reward_value FROM rewards WHERE interaction_id = 3;",
      "SELECT * FROM users WHERE name = 'John';",
      "SELECT * FROM interactions WHERE user_id = 5;",
      "SELECT task_name, task_description FROM tasks WHERE task_id = 1;",
      "SELECT SUM(reward_value) FROM rewards WHERE interaction_id = 2;",
      "SELECT label FROM labels WHERE label_id = 3;",
      "SELECT COUNT(*) FROM interactions;",
      "SELECT interaction_id, action, reward FROM interactions WHERE user_id = 4;",
      "SELECT * FROM tasks WHERE task_name LIKE '%project%';",
      "SELECT name FROM users WHERE user_id = 6;",
      "SELECT AVG(reward_value) FROM rewards WHERE interaction_id = 1;",
      "SELECT interaction_id, label FROM labels WHERE label_id = 2;",
      "SELECT MAX(reward_value) FROM rewards WHERE interaction_id = 4;",
      "SELECT * FROM users WHERE user_id = 8;",
      "SELECT action FROM interactions WHERE user_id = 7;",
      "SELECT * FROM labels WHERE interaction_id = 5;",
      "SELECT * FROM interactions WHERE action='click' AND reward > 10;",
      "SELECT users.name, interactions.action, rewards.reward_value FROM users INNER JOIN interactions ON users.user_id = interactions.user_id LEFT JOIN rewards ON interactions.interaction_id = rewards.interaction_id;",
      "SELECT COUNT(DISTINCT user_id) AS unique_users FROM interactions WHERE reward > 5 GROUP BY user_id HAVING COUNT(interaction_id) > 3;",
      "SELECT tasks.task_name, labels.label FROM tasks LEFT JOIN labels ON tasks.task_id = labels.interaction_id WHERE tasks.task_description LIKE '%important%';",
      "SELECT user_id, SUM(reward_value) AS total_reward FROM interactions INNER JOIN rewards ON interactions.interaction_id = rewards.interaction_id GROUP BY user_id;",
      "SELECT user_id, COUNT(interaction_id) AS total_interactions FROM interactions GROUP BY user_id HAVING COUNT(interaction_id) > 5;",
      "SELECT users.name, tasks.task_name FROM users INNER JOIN interactions ON users.user_id = interactions.user_id INNER JOIN tasks ON interactions.user_id = tasks.task_id;",
      "SELECT DISTINCT label_id, interaction_id FROM labels WHERE label = 'important' ORDER BY label_id DESC;",
      "SELECT interaction_id, user_id, action, reward_value FROM interactions INNER JOIN rewards ON interactions.interaction_id = rewards.interaction_id WHERE reward_value >= 20;",
      "SELECT user_id, COUNT(*) AS total_interactions, AVG(reward) AS avg_reward FROM interactions WHERE action = 'like' GROUP BY user_id HAVING COUNT(*) > 3;",
      "SELECT tasks.task_name, SUM(reward_value) AS total_reward FROM tasks LEFT JOIN rewards ON tasks.task_id = rewards.interaction_id GROUP BY tasks.task_name;",
      "SELECT user_id, MAX(reward_value) AS max_reward FROM interactions INNER JOIN rewards ON interactions.interaction_id = rewards.interaction_id GROUP BY user_id;",
      "SELECT user_id, name, action, reward_value FROM users LEFT JOIN interactions ON users.user_id = interactions.user_id LEFT JOIN rewards ON interactions.interaction_id = rewards.interaction_id;",
      "SELECT label, COUNT(*) AS total_count FROM labels GROUP BY label HAVING COUNT(*) > 1;",
      "SELECT task_id, task_name, COUNT(interaction_id) AS total_interactions FROM tasks LEFT JOIN labels ON tasks.task_id = labels.interaction_id GROUP BY task_id;",
      "SELECT task_name, COUNT(*) AS total_labels FROM tasks LEFT JOIN labels ON tasks.task_id = labels.interaction_id GROUP BY task_name;",
      "SELECT user_id, name, action, reward_value FROM users JOIN interactions USING(user_id) JOIN rewards USING(interaction_id);",
      "SELECT AVG(reward_value) AS avg_reward, MAX(reward_value) AS max_reward, MIN(reward_value) AS min_reward FROM rewards;",
      "SELECT label, SUM(reward_value) AS total_reward FROM labels JOIN interactions ON labels.interaction_id = interactions.interaction_id JOIN rewards ON interactions.interaction_id = rewards.interaction_id GROUP BY label;",
      "SELECT user_id, name, COUNT(interaction_id) AS total_interactions, MAX(reward) AS max_reward FROM users JOIN interactions USING(user_id) GROUP BY user_id HAVING MAX(reward) > 15;"
    ]
  }
]