[
  {
    "statements": [
      "SELECT * FROM customers",
      "SELECT customer_name, age FROM customers",
      "SELECT DISTINCT gender FROM customers",
      "SELECT customer_name, location FROM customers",
      "SELECT * FROM customers WHERE age > 30",
      "SELECT customer_name, age FROM customers WHERE gender = 'Male'",
      "SELECT * FROM customers WHERE location = 'New York'",
      "SELECT * FROM customers WHERE purchase_history IS NOT NULL",
      "SELECT MAX(age) FROM customers",
      "SELECT customer_name, location FROM customers ORDER BY location DESC",
      "SELECT * FROM customers WHERE age > 25 AND location = 'California'",
      "SELECT AVG(age) FROM customers",
      "SELECT customer_name, purchase_history -> 'product' FROM customers",
      "SELECT COUNT(*) FROM customers",
      "SELECT * FROM customers WHERE gender = 'Female' AND location <> 'Texas'",
      "SELECT customer_name, purchase_history ->> 'date' AS purchase_date FROM customers",
      "SELECT * FROM customers WHERE customer_id IN (1, 2, 3)",
      "SELECT MIN(age) FROM customers",
      "SELECT * FROM customers WHERE age BETWEEN 20 AND 40",
      "SELECT SUM(age) FROM customers",
      "SELECT * FROM customers WHERE age > 30 AND gender = 'FEMALE';",
      "SELECT customer_name, age FROM customers WHERE location LIKE '%New York%';",
      "SELECT COUNT(*) FROM customers WHERE age BETWEEN 25 AND 35;",
      "SELECT customer_id, customer_name, age, gender FROM customers WHERE age < 18 OR age > 60;",
      "SELECT customer_id, customer_name, location FROM customers WHERE gender = 'MALE' AND age >= 18 AND age <= 40;",
      "SELECT AVG(age) AS average_age FROM customers;",
      "SELECT customer_name FROM customers WHERE JSON_EXTRACT(purchase_history, '$.total_purchases') > 10;",
      "SELECT customer_id, customer_name, location FROM customers WHERE JSON_CONTAINS(purchase_history, JSON_OBJECT('last_purchase', '2022-01-01'));",
      "SELECT customer_name, location FROM customers WHERE purchase_history->'$.last_purchase' < '2022-03-01';",
      "SELECT COUNT(DISTINCT customer_name) AS unique_customers FROM customers WHERE JSON_ARRAY_LENGTH(purchase_history->'$.purchases') > 0;",
      "SELECT customer_name, age, location FROM customers WHERE JSON_SEARCH(purchase_history, 'all', 'apple') IS NOT NULL;",
      "SELECT customer_name, location FROM customers WHERE JSON_CONTAINS(purchase_history, JSON_OBJECT('favorite_product', 'Phone'), '$.purchases[*].products');",
      "SELECT customer_name, location FROM customers WHERE JSON_CONTAINS_PATH(purchase_history, 'one', '$.purchases[0].products');",
      "SELECT customer_id, age FROM customers WHERE purchase_history->'$.loyalty_points' > 500;",
      "SELECT customer_name, location FROM customers WHERE JSON_SEARCH(purchase_history, 'one', '2022-01-01') IS NOT NULL;",
      "SELECT customer_name, age, location FROM customers WHERE JSON_UNQUOTE(JSON_EXTRACT(purchase_history, '$.last_purchase')) < '2022-02-01';",
      "SELECT customer_name, location FROM customers WHERE JSON_CONTAINS_PATH(purchase_history, 'all', '$.purchases[*].products[*].category', '$.purchases[*].products[*].price');",
      "SELECT customer_name, age FROM customers WHERE JSON_EXTRACT(purchase_history, '$.preferred_payment') = 'Credit Card';",
      "SELECT customer_name, age, location FROM customers WHERE JSON_UNQUOTE(JSON_EXTRACT(purchase_history, '$.last_purchase')) BETWEEN '2022-01-01' AND '2022-02-28';",
      "SELECT customer_name, location FROM customers WHERE JSON_SEARCH(purchase_history, 'all', 'iPhone') IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, first_name, last_name FROM customers WHERE age > 30;",
      "SELECT first_name, last_name FROM customers WHERE gender = 'Male';",
      "SELECT * FROM customers WHERE age BETWEEN 25 AND 35;",
      "SELECT * FROM customer_segments;",
      "SELECT segment_name, description FROM customer_segments;",
      "SELECT segment_name FROM customer_segments WHERE segment_id = 1;",
      "SELECT * FROM customers JOIN customer_segments ON customers.customer_id = customer_segments.segment_id;",
      "SELECT customers.first_name, customer_segments.segment_name FROM customers JOIN customer_segments ON customers.customer_id = customer_segments.segment_id;",
      "SELECT * FROM customers WHERE first_name LIKE 'A%';",
      "SELECT customer_id, first_name, last_name FROM customers ORDER BY age DESC;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT AVG(age) FROM customers;",
      "SELECT MAX(age) FROM customers;",
      "SELECT MIN(age) FROM customers;",
      "SELECT segment_name, COUNT(customer_id) FROM customer_segments JOIN customers ON customer_segments.segment_id = customers.customer_id GROUP BY segment_name;",
      "SELECT segment_name, AVG(age) FROM customer_segments JOIN customers ON customer_segments.segment_id = customers.customer_id GROUP BY segment_name;",
      "SELECT first_name, last_name, CASE WHEN age > 30 THEN 'Senior' ELSE 'Junior' END AS customer_status FROM customers;",
      "SELECT first_name, last_name, CASE WHEN age > 30 THEN 'Senior' WHEN age > 25 THEN 'Mid-age' ELSE 'Junior' END AS customer_status FROM customers;",
      "SELECT first_name, last_name, IF(age > 30, 'Senior', 'Junior') AS customer_status FROM customers;",
      "SELECT * FROM customers WHERE age > 30 AND gender = 'Female';",
      "SELECT first_name, last_name FROM customers WHERE age BETWEEN 25 AND 35;",
      "SELECT * FROM customers WHERE gender = 'Male' ORDER BY last_name ASC;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT * FROM customers c JOIN customer_segments cs ON c.customer_id = cs.segment_id;",
      "SELECT c.first_name, c.last_name, cs.segment_name FROM customers c JOIN customer_segments cs ON c.customer_id = cs.segment_id;",
      "SELECT c.first_name, c.last_name, cs.segment_name FROM customers c LEFT JOIN customer_segments cs ON c.customer_id = cs.segment_id;",
      "SELECT c.first_name, c.last_name, cs.segment_name FROM customers c RIGHT JOIN customer_segments cs ON c.customer_id = cs.segment_id;",
      "SELECT AVG(age) AS average_age FROM customers;",
      "SELECT segment_name, COUNT(*) AS total_customers FROM customer_segments cs JOIN customers c ON c.customer_id = cs.segment_id GROUP BY segment_name;",
      "SELECT first_name, last_name, CASE WHEN age > 30 THEN 'Senior' ELSE 'Young' END AS age_group FROM customers;",
      "SELECT first_name, last_name, age, CASE WHEN age < 18 THEN 'Minor' WHEN age >= 18 AND age < 65 THEN 'Adult' ELSE 'Senior' END AS age_group FROM customers;",
      "SELECT * FROM customers WHERE first_name LIKE 'J%';",
      "SELECT * FROM customers WHERE first_name LIKE '%e' AND last_name LIKE '%s';",
      "SELECT * FROM customers WHERE age IN (20, 25, 30);",
      "SELECT DISTINCT gender FROM customers;",
      "SELECT * FROM customers WHERE age > (SELECT AVG(age) FROM customers);",
      "SELECT * FROM customers WHERE customer_id IN (SELECT segment_id FROM customer_segments WHERE segment_name = 'VIP');",
      "SELECT * FROM customers c1 WHERE age = (SELECT MAX(age) FROM customers c2 WHERE c1.gender = c2.gender);",
      "SELECT first_name, last_name, age, gender, segment_name FROM customers c JOIN customer_segments cs ON c.customer_id = cs.segment_id WHERE c.age BETWEEN 18 AND 60 AND cs.description LIKE '%special%' LIMIT 10;",
      "SELECT first_name, last_name, age FROM customers WHERE age = (SELECT MAX(age) FROM customers);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers_demographic;",
      "SELECT customer_id, age, gender FROM customers_demographic;",
      "SELECT customer_id, gender, income FROM customers_demographic;",
      "SELECT * FROM customers_behavioral;",
      "SELECT customer_id, visits, purchases FROM customers_behavioral;",
      "SELECT customer_id, last_purchase_date FROM customers_behavioral;",
      "SELECT * FROM customer_segments;",
      "SELECT segment_id, segment_name FROM customer_segments;",
      "SELECT segment_id, description FROM customer_segments;",
      "SELECT customer_id, age, gender, income FROM customers_demographic WHERE age > 30;",
      "SELECT customer_id, visits, purchases FROM customers_behavioral WHERE purchases > 5;",
      "SELECT segment_id, segment_name FROM customer_segments WHERE segment_name = 'VIP';",
      "SELECT customer_id, age, gender FROM customers_demographic WHERE gender = 'Female';",
      "SELECT customer_id, visits FROM customers_behavioral WHERE visits > 10;",
      "SELECT segment_id, description FROM customer_segments WHERE segment_id = 2;",
      "SELECT customer_id, age, income FROM customers_demographic WHERE income > 50000;",
      "SELECT customer_id, purchases, last_purchase_date FROM customers_behavioral WHERE last_purchase_date > '2021-01-01';",
      "SELECT segment_id, segment_name, description FROM customer_segments WHERE segment_id = 1;",
      "SELECT customer_id, age, gender, income FROM customers_demographic WHERE age BETWEEN 25 AND 40;",
      "SELECT * FROM customers_behavioral WHERE purchases > 0 AND visits > 0;",
      "SELECT * FROM customers_demographic WHERE age > 30 AND income >= 50000",
      "SELECT customer_id, visits FROM customers_behavioral WHERE purchases > 5 AND last_purchase_date >= '2022-01-01'",
      "SELECT customer_id, segment_name FROM customers_demographic JOIN customer_segments ON customers_demographic.customer_id = customer_segments.segment_id",
      "SELECT customer_id, age, gender FROM customers_demographic WHERE gender = 'Male' AND income >= 60000",
      "SELECT customer_id, age, visits FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id",
      "SELECT customer_id, gender, segment_name FROM customers_demographic JOIN customer_segments ON customers_demographic.customer_id = customer_segments.segment_id WHERE gender = 'Female'",
      "SELECT customer_id, age, gender, visits FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id WHERE age > 25",
      "SELECT customer_id, segment_name, description FROM customer_segments WHERE segment_id IN (1, 2, 3)",
      "SELECT customer_id, age, purchases FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id WHERE purchases > 3",
      "SELECT customer_id, gender, segment_name FROM customers_demographic JOIN customer_segments ON customers_demographic.customer_id = customer_segments.segment_id WHERE segment_name LIKE '%VIP%'",
      "SELECT customer_id, age, gender, visits, purchases FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id WHERE age BETWEEN 30 AND 50 AND purchases > 2",
      "SELECT customer_id, gender, segment_name FROM customers_demographic JOIN customer_segments ON customers_demographic.customer_id = customer_segments.segment_id WHERE gender = 'Other'",
      "SELECT customer_id, age, income FROM customers_demographic WHERE income < 40000",
      "SELECT customer_id, age, visits, purchases FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id WHERE age < 40 AND visits > 10",
      "SELECT customer_id, segment_name, description FROM customer_segments WHERE description LIKE '%loyal%'",
      "SELECT customer_id, age, purchases FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id WHERE purchases > 1 AND age < 35",
      "SELECT customer_id, gender, segment_name FROM customers_demographic JOIN customer_segments ON customers_demographic.customer_id = customer_segments.segment_id WHERE segment_name NOT LIKE '%New%'",
      "SELECT customer_id, gender, segment_name FROM customers_demographic JOIN customer_segments ON customers_demographic.customer_id = customer_segments.segment_id WHERE segment_name IN ('Gold', 'Silver')",
      "SELECT customer_id, age, gender, visits, purchases FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id WHERE visits < 5 AND purchases < 3",
      "SELECT customer_id, age, gender, income FROM customers_demographic WHERE income BETWEEN 40000 AND 60000",
      "SELECT customer_id, age, visits, purchases, last_purchase_date FROM customers_demographic JOIN customers_behavioral ON customers_demographic.customer_id = customers_behavioral.customer_id WHERE last_purchase_date >= '2022-06-01'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, age, gender FROM customers;",
      "SELECT * FROM demographics;",
      "SELECT customer_id, region, income FROM demographics;",
      "SELECT * FROM behaviors;",
      "SELECT customer_id, purchase_history FROM behaviors;",
      "SELECT behavior_id, website_activity FROM behaviors;",
      "SELECT * FROM segments;",
      "SELECT segment_name FROM segments;",
      "SELECT segment_id, criteria FROM segments;",
      "SELECT * FROM customers WHERE age > 30;",
      "SELECT first_name, last_name FROM customers WHERE gender = 'Female';",
      "SELECT * FROM demographics WHERE income >= 50000;",
      "SELECT region, education_level FROM demographics WHERE region = 'North';",
      "SELECT * FROM behaviors WHERE customer_id = 1001;",
      "SELECT purchase_history FROM behaviors WHERE customer_id = 1002;",
      "SELECT behavior_id FROM behaviors WHERE customer_id = 1003;",
      "SELECT * FROM segments WHERE segment_name = 'VIP';",
      "SELECT criteria FROM segments WHERE segment_id = 2001;",
      "SELECT * FROM customers WHERE age > 30;",
      "SELECT first_name, last_name, region FROM customers JOIN demographics ON customers.customer_id = demographics.customer_id;",
      "SELECT customer_id, COUNT(behavior_id) FROM customers LEFT JOIN behaviors ON customers.customer_id = behaviors.customer_id GROUP BY customer_id;",
      "SELECT segment_name, criteria->>'gender' AS gender FROM segments;",
      "SELECT * FROM demographics WHERE income > 50000 AND education_level = 'Bachelor';",
      "SELECT first_name, last_name, age, purchase_history->'total_purchases' AS total_purchases FROM customers JOIN behaviors ON customers.customer_id = behaviors.customer_id;",
      "SELECT * FROM customers WHERE gender = 'Female' AND age BETWEEN 20 AND 30;",
      "SELECT DISTINCT region FROM demographics;",
      "SELECT * FROM behaviors WHERE purchase_history->'last_purchase_date' > now() - INTERVAL '30 days';",
      "SELECT first_name, last_name, region, income FROM customers JOIN demographics ON customers.customer_id = demographics.customer_id WHERE income > 60000;",
      "SELECT customer_id, COUNT(*) AS num_purchases FROM customers JOIN behaviors ON customers.customer_id = behaviors.customer_id GROUP BY customer_id HAVING num_purchases > 5;",
      "SELECT segment_name, criteria->>'age_range' AS age_range FROM segments;",
      "SELECT * FROM customers WHERE age > 25 AND gender = 'Male';",
      "SELECT demographic_id, region, COUNT(customer_id) AS num_customers FROM demographics GROUP BY region HAVING num_customers > 3;",
      "SELECT first_name, last_name, purchase_history->'total_spent' AS total_spent FROM customers JOIN behaviors ON customers.customer_id = behaviors.customer_id WHERE total_spent > 1000;",
      "SELECT * FROM customers WHERE age <= 40 AND (gender = 'Male' OR gender = 'Female');",
      "SELECT segment_name, criteria->'purchase_history' AS purchase_criteria FROM segments;",
      "SELECT customer_id, COUNT(*) AS num_behaviors FROM customers JOIN behaviors ON customers.customer_id = behaviors.customer_id GROUP BY customer_id;",
      "SELECT * FROM demographics WHERE region = 'East Coast' AND (income > 70000 OR education_level = 'Master');",
      "SELECT first_name, last_name, age, gender, income FROM customers JOIN demographics ON customers.customer_id = demographics.customer_id;",
      "SELECT segment_name, criteria->'website_activity' AS website_criteria FROM segments;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, gender, state FROM customers WHERE country = 'USA';",
      "SELECT customer_id, date_of_birth, city, state FROM customers WHERE city = 'New York';",
      "SELECT COUNT(*) FROM purchases;",
      "SELECT customer_id, product_name FROM purchases WHERE amount > 100;",
      "SELECT DISTINCT education_level FROM demographics;",
      "SELECT customer_id, loyalty_score FROM behaviors WHERE loyalty_score > 50;",
      "SELECT customer_id, interaction_date FROM interactions WHERE interaction_type = 'email';",
      "SELECT customer_id, income FROM demographics WHERE income > 50000;",
      "SELECT customer_id, gender, state FROM customers WHERE date_of_birth >= '1990-01-01';",
      "SELECT customer_id, occupation FROM demographics WHERE education_level = 'Bachelor';",
      "SELECT customer_id, gender FROM customers WHERE state = 'California';",
      "SELECT customer_id, preferred_genre FROM behaviors WHERE preferred_genre = 'Action';",
      "SELECT customer_id, loyalty_score, interaction_frequency FROM behaviors WHERE loyalty_score > 80 AND interaction_frequency > 15;",
      "SELECT customer_id, interaction_date FROM interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT customer_id FROM purchases WHERE product_name LIKE '%Shoes%';",
      "SELECT customer_id, income FROM demographics WHERE occupation = 'Engineer';",
      "SELECT customer_id, interaction_type FROM interactions WHERE interaction_type IN ('call', 'visit');",
      "SELECT customer_id, loyalty_score FROM behaviors WHERE preferred_genre = 'Comedy';",
      "SELECT customer_id, date, amount FROM purchases WHERE amount BETWEEN 50 AND 200;",
      "SELECT * FROM customers WHERE state = 'California';",
      "SELECT customer_id, date_of_birth, city FROM customers WHERE gender = 'Male';",
      "SELECT customer_id, date_of_birth, city, state FROM customers WHERE country = 'USA' AND state = 'New York';",
      "SELECT customer_id, date_of_birth, gender FROM customers WHERE city = 'Los Angeles' AND state = 'California';",
      "SELECT customer_id, date_of_birth, gender, city, state, country FROM customers WHERE city = 'Seattle' OR city = 'Portland';",
      "SELECT * FROM purchases WHERE amount > 1000;",
      "SELECT purchase_id, customer_id, date FROM purchases WHERE product_name LIKE '%iPhone%';",
      "SELECT customer_id, income, education_level FROM demographics WHERE income > 50000;",
      "SELECT customer_id, loyalty_score, preferred_genre FROM behaviors WHERE interaction_frequency > 10;",
      "SELECT * FROM interactions WHERE interaction_type = 'Email';",
      "SELECT customer_id, interaction_date, interaction_type FROM interactions WHERE interaction_type = 'Phone Call';",
      "SELECT DISTINCT city FROM customers;",
      "SELECT DISTINCT country FROM customers;",
      "SELECT customer_id, date_of_birth, city, state, country, amount, product_name FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id WHERE amount > 500;",
      "SELECT customer_id, income, education_level, occupation, loyalty_score, interaction_frequency, preferred_genre FROM demographics INNER JOIN behaviors ON demographics.customer_id = behaviors.customer_id;",
      "SELECT customers.customer_id, customers.date_of_birth, purchases.date, demographics.income, behaviors.loyalty_score, interactions.interaction_date FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id LEFT JOIN demographics ON customers.customer_id = demographics.customer_id LEFT JOIN behaviors ON customers.customer_id = behaviors.customer_id LEFT JOIN interactions ON customers.customer_id = interactions.customer_id WHERE customers.state = 'California';",
      "SELECT customer_id, income, education_level, occupation, loyalty_score, interaction_frequency, preferred_genre FROM demographics INNER JOIN behaviors ON demographics.customer_id = behaviors.customer_id INNER JOIN interactions ON demographics.customer_id = interactions.customer_id WHERE interactions.interaction_type = 'Email' AND behaviors.loyalty_score > 50;",
      "SELECT customers.customer_id, behaviors.loyalty_score, interactions.interaction_date FROM customers INNER JOIN behaviors ON customers.customer_id = behaviors.customer_id INNER JOIN interactions ON customers.customer_id = interactions.customer_id WHERE behaviors.loyalty_score BETWEEN 70 AND 90;",
      "SELECT demographics.customer_id, demographics.income, behaviors.loyalty_score, interactions.interaction_date FROM demographics INNER JOIN behaviors ON demographics.customer_id = behaviors.customer_id INNER JOIN interactions ON demographics.customer_id = interactions.customer_id WHERE behaviors.interaction_frequency < 5;",
      "SELECT customer_id, gender, city, state, country, purchase_id, date, amount, product_name, income, education_level, occupation, loyalty_score, interaction_frequency, preferred_genre, interaction_type FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id LEFT JOIN demographics ON customers.customer_id = demographics.customer_id LEFT JOIN behaviors ON customers.customer_id = behaviors.customer_id LEFT JOIN interactions ON customers.customer_id = interactions.customer_id;"
    ]
  }
]