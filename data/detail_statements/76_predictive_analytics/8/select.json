[
  {
    "statements": [
      "SELECT * FROM SalesForecast;",
      "SELECT sale_id, sale_date FROM SalesForecast;",
      "SELECT DISTINCT product_name FROM SalesForecast;",
      "SELECT * FROM SalesForecast WHERE sale_amount > 100;",
      "SELECT * FROM SalesForecast WHERE sale_date BETWEEN '2023-01-01' AND '2023-12-31';",
      "SELECT product_name, SUM(sale_amount) AS total_sales FROM SalesForecast GROUP BY product_name;",
      "SELECT product_name, COUNT(sale_id) AS total_sales_count FROM SalesForecast GROUP BY product_name;",
      "SELECT AVG(sale_amount) AS average_sale_amount FROM SalesForecast;",
      "SELECT * FROM SalesForecast ORDER BY sale_date DESC;",
      "SELECT * FROM SalesForecast WHERE product_name LIKE '%product%';",
      "SELECT * FROM SalesForecast WHERE sale_amount BETWEEN 50 AND 100;",
      "SELECT product_name, SUM(sale_amount) AS total_sales FROM SalesForecast WHERE sale_date < '2023-06-30' GROUP BY product_name;",
      "SELECT DATE_FORMAT(sale_date, '%Y-%m') AS month, SUM(sale_amount) AS total_sales FROM SalesForecast GROUP BY month;",
      "SELECT * FROM SalesForecast LIMIT 10;",
      "SELECT DATE_FORMAT(sale_date, '%Y') AS year, SUM(sale_amount) AS total_sales FROM SalesForecast GROUP BY year;",
      "SELECT * FROM SalesForecast WHERE product_name IN ('Product1', 'Product2', 'Product3');",
      "SELECT COUNT(*) AS total_sales_count FROM SalesForecast;",
      "SELECT * FROM SalesForecast WHERE sale_amount > (SELECT AVG(sale_amount) FROM SalesForecast);",
      "SELECT product_name, MAX(sale_amount) AS max_sale_amount FROM SalesForecast GROUP BY product_name;",
      "SELECT sale_date, COUNT(*) AS sales_count FROM SalesForecast GROUP BY sale_date HAVING sales_count > 1;",
      "SELECT sale_id, sale_date, product_name, sale_amount FROM SalesForecast WHERE sale_amount > 1000",
      "SELECT sale_id, product_name FROM SalesForecast WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT SUM(sale_amount) AS total_sales FROM SalesForecast GROUP BY sale_date",
      "SELECT product_name, AVG(sale_amount) AS avg_sale_amount FROM SalesForecast WHERE sale_amount > 500 GROUP BY product_name",
      "SELECT COUNT(sale_id) AS total_sales_count FROM SalesForecast WHERE sale_date = '2022-06-30'",
      "SELECT * FROM SalesForecast ORDER BY sale_date DESC LIMIT 5",
      "SELECT sale_id, product_name FROM SalesForecast WHERE product_name LIKE '%computer%'",
      "SELECT MAX(sale_amount) AS max_sale_amount FROM SalesForecast",
      "SELECT MIN(sale_amount) AS min_sale_amount FROM SalesForecast",
      "SELECT product_name, SUM(sale_amount) AS total_sales FROM SalesForecast GROUP BY product_name HAVING total_sales > 5000",
      "SELECT DISTINCT product_name FROM SalesForecast",
      "SELECT sale_id, sale_date, product_name, sale_amount FROM SalesForecast WHERE sale_date >= '2022-01-01' AND sale_date <= '2022-06-30'",
      "SELECT sale_id, sale_amount FROM SalesForecast WHERE product_name IN ('Laptop', 'Tablet', 'Phone')",
      "SELECT sale_id, product_name FROM SalesForecast WHERE sale_amount > 2000",
      "SELECT AVG(sale_amount) AS avg_sale_amount FROM SalesForecast WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT COUNT(DISTINCT product_name) AS unique_products_count FROM SalesForecast",
      "SELECT * FROM SalesForecast WHERE sale_date = (SELECT MAX(sale_date) FROM SalesForecast)",
      "SELECT sale_id, product_name FROM SalesForecast WHERE sale_date = (SELECT MIN(sale_date) FROM SalesForecast)",
      "SELECT sale_id, product_name, sale_amount FROM SalesForecast WHERE sale_amount > (SELECT AVG(sale_amount) FROM SalesForecast)",
      "SELECT sale_id, sale_date, product_name, sale_amount FROM SalesForecast WHERE product_name='Laptop' ORDER BY sale_amount DESC LIMIT 10",
      "SELECT sale_id, sale_date, product_name, sale_amount FROM SalesForecast WHERE sale_amount BETWEEN 500 AND 1000"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sales_forecast;",
      "SELECT id, location FROM sales_forecast;",
      "SELECT forecast_date, forecast_amount FROM sales_forecast;",
      "SELECT id, location, forecast_date, forecast_amount FROM sales_forecast;",
      "SELECT * FROM marketing_strategies;",
      "SELECT id, strategy_name FROM marketing_strategies;",
      "SELECT targeted_audience, marketing_channel FROM marketing_strategies;",
      "SELECT id, strategy_name, targeted_audience, marketing_channel FROM marketing_strategies;",
      "SELECT id, location, forecast_date, forecast_amount FROM sales_forecast WHERE location='New York';",
      "SELECT id, location, forecast_date, forecast_amount FROM sales_forecast WHERE forecast_date > '2023-01-01';",
      "SELECT * FROM marketing_strategies WHERE marketing_channel='Social Media';",
      "SELECT id, strategy_name, targeted_audience FROM marketing_strategies WHERE targeted_audience='Millennials';",
      "SELECT * FROM sales_forecast ORDER BY forecast_amount DESC;",
      "SELECT id, strategy_name FROM marketing_strategies ORDER BY id ASC;",
      "SELECT id, location, forecast_date, forecast_amount FROM sales_forecast WHERE id=5;",
      "SELECT * FROM sales_forecast WHERE location='Chicago' AND forecast_date='2023-06-15';",
      "SELECT * FROM marketing_strategies WHERE strategy_name LIKE '%SEO%';",
      "SELECT id, location, forecast_date, forecast_amount FROM sales_forecast WHERE location='Los Angeles' OR location='San Francisco';",
      "SELECT id, strategy_name, targeted_audience, marketing_channel FROM marketing_strategies WHERE id BETWEEN 3 AND 7;",
      "SELECT id, location, forecast_date, forecast_amount FROM sales_forecast LIMIT 10;",
      "SELECT * FROM sales_forecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT location, forecast_amount FROM sales_forecast WHERE forecast_amount > 10000;",
      "SELECT id, location FROM sales_forecast ORDER BY location ASC;",
      "SELECT SUM(forecast_amount) AS total_forecast FROM sales_forecast;",
      "SELECT location, AVG(forecast_amount) AS avg_amount FROM sales_forecast GROUP BY location;",
      "SELECT COUNT(*) AS total_forecasts FROM sales_forecast;",
      "SELECT strategy_name, marketing_channel FROM marketing_strategies WHERE targeted_audience = 'New Customers';",
      "SELECT * FROM sales_forecast INNER JOIN marketing_strategies ON sales_forecast.location = marketing_strategies.strategy_name;",
      "SELECT location, COUNT(*) AS total_strategies FROM sales_forecast LEFT JOIN marketing_strategies ON sales_forecast.location = marketing_strategies.strategy_name GROUP BY location;",
      "SELECT strategy_name, COUNT(*) AS total_sales FROM marketing_strategies RIGHT JOIN sales_forecast ON marketing_strategies.strategy_name = sales_forecast.location GROUP BY strategy_name;",
      "SELECT forecast_date, forecast_amount FROM sales_forecast WHERE location = 'New York' AND forecast_amount > 5000;",
      "SELECT location, AVG(forecast_amount) AS avg_amount FROM sales_forecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY location HAVING AVG(forecast_amount) > 10000;",
      "SELECT strategy_name, SUM(forecast_amount) AS total_amount FROM marketing_strategies INNER JOIN sales_forecast ON marketing_strategies.strategy_name = sales_forecast.location GROUP BY strategy_name;",
      "SELECT DISTINCT(location) FROM sales_forecast;",
      "SELECT location, MAX(forecast_amount) AS max_amount FROM sales_forecast GROUP BY location;",
      "SELECT forecast_date, forecast_amount FROM sales_forecast WHERE location LIKE '%California%';",
      "SELECT strategy_name, COUNT(*) AS total_forecasts FROM marketing_strategies WHERE marketing_channel = 'Social Media' GROUP BY strategy_name;",
      "SELECT forecast_date, forecast_amount FROM sales_forecast WHERE forecast_amount BETWEEN 5000 AND 10000;",
      "SELECT location, COUNT(*) AS total_strategies FROM sales_forecast LEFT JOIN marketing_strategies ON sales_forecast.location = marketing_strategies.strategy_name WHERE marketing_strategies.id IS NULL GROUP BY location;",
      "SELECT strategy_name, AVG(forecast_amount) AS avg_amount FROM marketing_strategies LEFT JOIN sales_forecast ON marketing_strategies.strategy_name = sales_forecast.location GROUP BY strategy_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sales_data;",
      "SELECT product_name, sales_amount FROM sales_data;",
      "SELECT sale_date FROM sales_data WHERE sales_amount > 1000;",
      "SELECT * FROM customer_data;",
      "SELECT customer_name, customer_email FROM customer_data;",
      "SELECT customer_age FROM customer_data WHERE customer_age > 30;",
      "SELECT * FROM marketing_data;",
      "SELECT campaign_name, marketing_channel FROM marketing_data;",
      "SELECT campaign_start_date, campaign_end_date FROM marketing_data WHERE campaign_start_date > '2022-01-01';",
      "SELECT sales_id, product_name, sales_amount, sale_date FROM sales_data WHERE sales_id = 1;",
      "SELECT customer_id, customer_name, customer_email FROM customer_data WHERE customer_id = 5;",
      "SELECT campaign_id, campaign_name, marketing_channel FROM marketing_data WHERE campaign_id = 10;",
      "SELECT SUM(sales_amount) AS total_sales FROM sales_data;",
      "SELECT AVG(customer_age) AS avg_customer_age FROM customer_data;",
      "SELECT MIN(sales_amount) AS min_sales_amount FROM sales_data;",
      "SELECT MAX(sales_amount) AS max_sales_amount FROM sales_data;",
      "SELECT COUNT(*) AS total_customers FROM customer_data;",
      "SELECT COUNT(DISTINCT product_name) AS unique_products FROM sales_data;",
      "SELECT campaign_name, COUNT(*) AS total_campaigns FROM marketing_data GROUP BY campaign_name;",
      "SELECT customer_name, customer_age, CASE WHEN customer_age < 30 THEN 'Young' ELSE 'Old' END AS age_group FROM customer_data;",
      "SELECT * FROM sales_data;",
      "SELECT product_name, sales_amount FROM sales_data WHERE sales_amount > 1000;",
      "SELECT product_name, sale_date FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, customer_email FROM customer_data;",
      "SELECT customer_name, customer_age FROM customer_data WHERE customer_age >= 18;",
      "SELECT campaign_id, campaign_name FROM marketing_data;",
      "SELECT campaign_name, marketing_channel FROM marketing_data WHERE marketing_channel = 'Online';",
      "SELECT product_name, sales_amount, sale_date FROM sales_data WHERE product_name LIKE 'S%';",
      "SELECT customer_name, customer_email, customer_age FROM customer_data WHERE customer_age BETWEEN 25 AND 40;",
      "SELECT campaign_name, campaign_start_date, campaign_end_date FROM marketing_data WHERE campaign_start_date < '2022-07-01';",
      "SELECT sales_id, product_name, sales_amount, sale_date FROM sales_data ORDER BY sale_date DESC;",
      "SELECT customer_name, customer_email, customer_age FROM customer_data ORDER BY customer_age DESC;",
      "SELECT campaign_id, campaign_name, marketing_channel FROM marketing_data ORDER BY campaign_name ASC;",
      "SELECT product_name, sales_amount, sale_date FROM sales_data LIMIT 5;",
      "SELECT customer_name, customer_email, customer_age FROM customer_data LIMIT 3;",
      "SELECT campaign_name, campaign_start_date, campaign_end_date FROM marketing_data LIMIT 2;",
      "SELECT COUNT(sales_id) AS total_sales FROM sales_data;",
      "SELECT AVG(sales_amount) AS avg_sales_amount FROM sales_data;",
      "SELECT MAX(customer_age) AS max_age FROM customer_data;",
      "SELECT MIN(sales_amount) AS min_sales_amount FROM sales_data;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM SalesData;",
      "SELECT product_id, sale_amount FROM SalesData;",
      "SELECT * FROM Products;",
      "SELECT product_name, price FROM Products;",
      "SELECT * FROM Customers;",
      "SELECT customer_name, email FROM Customers;",
      "SELECT * FROM MarketingCampaigns;",
      "SELECT campaign_id, campaign_name FROM MarketingCampaigns;",
      "SELECT sales_id, product_id, sale_date, sale_amount FROM SalesData;",
      "SELECT product_id, product_name, category, price FROM Products;",
      "SELECT customer_id, customer_name, email, phone_number FROM Customers;",
      "SELECT campaign_id, campaign_name, start_date, end_date FROM MarketingCampaigns;",
      "SELECT sales_id, product_id, sale_date, sale_amount FROM SalesData WHERE sale_amount > 1000;",
      "SELECT product_id, product_name, price FROM Products WHERE price < 50;",
      "SELECT customer_id, customer_name, email FROM Customers WHERE customer_name LIKE '%John%';",
      "SELECT campaign_id, campaign_name, start_date, end_date FROM MarketingCampaigns WHERE start_date > '2022-01-01';",
      "SELECT * FROM SalesData ORDER BY sale_date DESC;",
      "SELECT * FROM Products ORDER BY price ASC;",
      "SELECT * FROM Customers WHERE email LIKE '%gmail.com';",
      "SELECT * FROM MarketingCampaigns WHERE end_date < '2023-01-01';",
      "SELECT * FROM SalesData WHERE sale_amount > 1000 AND sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT product_name, category, price FROM Products WHERE price < 50 ORDER BY price DESC;",
      "SELECT customer_name, email FROM Customers WHERE phone_number LIKE '%555%';",
      "SELECT campaign_name, end_date FROM MarketingCampaigns WHERE start_date >= '2022-02-01';",
      "SELECT product_name, price FROM Products WHERE category = 'Electronics' OR category = 'Appliances';",
      "SELECT sales_id, sale_amount FROM SalesData WHERE product_id = 5 AND sale_date = '2022-03-15';",
      "SELECT customer_name, phone_number FROM Customers WHERE email LIKE '%@example.com%';",
      "SELECT campaign_name FROM MarketingCampaigns WHERE end_date < '2022-05-01';",
      "SELECT product_id, product_name FROM Products WHERE price BETWEEN 50 AND 100 ORDER BY product_name ASC;",
      "SELECT customer_name, email, phone_number FROM Customers WHERE customer_id = 10;",
      "SELECT * FROM SalesData WHERE sale_date = '2022-04-20' AND sale_amount > 5000 ORDER BY sale_amount DESC;",
      "SELECT campaign_id, campaign_name FROM MarketingCampaigns WHERE start_date < '2022-06-01' ORDER BY start_date DESC;",
      "SELECT product_id, product_name, price FROM Products WHERE category IN ('Clothing', 'Shoes') ORDER BY price ASC;",
      "SELECT sales_id, sale_date FROM SalesData WHERE sale_amount BETWEEN 2000 AND 5000 AND product_id IN (3, 7, 9);",
      "SELECT customer_id, customer_name, email FROM Customers WHERE phone_number IS NOT NULL;",
      "SELECT campaign_name, start_date, end_date FROM MarketingCampaigns WHERE campaign_id > 5 AND start_date < '2022-05-15';",
      "SELECT product_id, product_name FROM Products WHERE price > 100 ORDER BY product_name DESC;",
      "SELECT * FROM SalesData WHERE sale_date > '2022-03-01' AND sale_amount < 1000 ORDER BY sale_date ASC;",
      "SELECT customer_id, customer_name FROM Customers WHERE email NOT LIKE '%gmail.com%';",
      "SELECT DISTINCT category FROM Products ORDER BY category ASC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sales_data;",
      "SELECT product_name, sale_amount, sale_date FROM sales_data;",
      "SELECT * FROM customer_data;",
      "SELECT customer_name, customer_email FROM customer_data;",
      "SELECT * FROM product_data;",
      "SELECT product_name, category, unit_price FROM product_data;",
      "SELECT * FROM sales_forecast;",
      "SELECT forecast_id, forecast_date, forecasted_amount FROM sales_forecast;",
      "SELECT * FROM marketing_strategies;",
      "SELECT strategy_name, campaign_budget, start_date, end_date FROM marketing_strategies;",
      "SELECT product_name, unit_price FROM product_data WHERE category = 'Electronics';",
      "SELECT customer_name, customer_email, customer_phone FROM customer_data WHERE customer_id = 1001;",
      "SELECT sales_id, product_name, sale_amount, sale_date FROM sales_data WHERE sale_amount > 1000;",
      "SELECT strategy_name, campaign_budget FROM marketing_strategies WHERE start_date > '2023-01-01';",
      "SELECT product_name, category, unit_price FROM product_data WHERE unit_price < 50;",
      "SELECT forecast_id, forecast_date, forecasted_amount FROM sales_forecast WHERE forecasted_amount > 5000;",
      "SELECT customer_name, customer_email, customer_phone FROM customer_data WHERE customer_name LIKE 'A%';",
      "SELECT product_name, unit_price FROM product_data WHERE category = 'Clothing';",
      "SELECT sales_id, product_name, sale_date FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT strategy_name, campaign_budget FROM marketing_strategies WHERE end_date < '2024-06-30';",
      "SELECT product_name, unit_price FROM product_data ORDER BY unit_price DESC LIMIT 5;",
      "SELECT product_name, sale_amount FROM sales_data WHERE sale_date > '2022-01-01';",
      "SELECT customer_name, customer_email FROM customer_data WHERE customer_phone LIKE '%123%';",
      "SELECT product_name, category, unit_price FROM product_data WHERE unit_price > 50;",
      "SELECT product_name, forecasted_amount FROM sales_forecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT strategy_name, campaign_budget, start_date FROM marketing_strategies WHERE end_date > '2022-06-30';",
      "SELECT customer_name, sale_amount FROM customer_data JOIN sales_data ON customer_data.customer_id = sales_data.sales_id;",
      "SELECT product_name, category, forecasted_amount FROM product_data JOIN sales_forecast ON product_data.product_id = sales_forecast.product_id;",
      "SELECT strategy_name, campaign_budget, end_date FROM marketing_strategies JOIN sales_forecast ON marketing_strategies.strategy_id = sales_forecast.forecast_id;",
      "SELECT product_name, category, forecasted_amount FROM product_data JOIN sales_forecast ON product_data.product_id = sales_forecast.product_id ORDER BY forecasted_amount DESC;",
      "SELECT product_name, category, forecasted_amount FROM product_data JOIN sales_forecast ON product_data.product_id = sales_forecast.product_id WHERE category = 'Electronics' AND unit_price > 100;",
      "SELECT customer_name, sale_amount FROM customer_data JOIN sales_data ON customer_data.customer_id = sales_data.sales_id WHERE sale_date > '2022-01-01';",
      "SELECT customer_name, customer_email, sale_amount FROM customer_data JOIN sales_data ON customer_data.customer_id = sales_data.sales_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT product_name, category, unit_price, forecasted_amount FROM product_data JOIN sales_forecast ON product_data.product_id = sales_forecast.product_id WHERE unit_price < 100 ORDER BY forecasted_amount DESC;",
      "SELECT customer_name, sale_amount, strategy_name, campaign_budget FROM sales_data JOIN marketing_strategies ON sales_data.sales_id = marketing_strategies.strategy_id WHERE campaign_budget > 50000;",
      "SELECT customer_name, customer_email, start_date, end_date FROM customer_data JOIN marketing_strategies ON customer_data.customer_id = marketing_strategies.strategy_id WHERE end_date > '2022-09-30';",
      "SELECT product_name, category, sale_amount, campaign_budget FROM sales_data JOIN product_data ON sales_data.sales_id = product_data.product_id JOIN marketing_strategies ON sales_data.sale_amount = marketing_strategies.campaign_budget WHERE product_name = 'Laptop';",
      "SELECT customer_name, customer_email, sale_amount, start_date, end_date FROM customer_data JOIN sales_data ON customer_data.customer_id = sales_data.sales_id JOIN marketing_strategies ON sales_data.sale_amount = marketing_strategies.campaign_budget WHERE end_date < '2023-01-01';",
      "SELECT product_name, unit_price, forecasted_amount FROM product_data JOIN sales_forecast ON product_data.product_id = sales_forecast.product_id WHERE forecast_date > '2022-06-30';",
      "SELECT customer_name, customer_email, sale_amount FROM customer_data JOIN sales_data ON customer_data.customer_id = sales_data.sales_id WHERE sale_date > '2022-01-01' AND sale_amount > 1000;",
      "SELECT product_name, category, unit_price, sale_amount FROM product_data JOIN sales_data ON product_data.product_id = sales_data.sales_id WHERE category = 'Clothing' AND sale_amount < 500;",
      "SELECT customer_name, customer_email, customer_phone, sale_amount FROM customer_data JOIN sales_data ON customer_data.customer_id = sales_data.sales_id WHERE customer_phone LIKE '%456%' AND sale_date < '2022-06-30';"
    ]
  }
]