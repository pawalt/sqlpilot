[
  {
    "statements": [
      "SELECT * FROM GeneticData;",
      "SELECT id, chromosome, genotype FROM GeneticData;",
      "SELECT sample_id, quality FROM GeneticData WHERE position > 1000;",
      "SELECT * FROM GeneticData WHERE genotype = 'AA';",
      "SELECT id, chromosome, position, quality FROM GeneticData WHERE sample_id = 1234;",
      "SELECT DISTINCT chromosome FROM GeneticData;",
      "SELECT COUNT(*) FROM GeneticData;",
      "SELECT AVG(quality) FROM GeneticData WHERE chromosome = 'X';",
      "SELECT id, position, genotype FROM GeneticData WHERE quality >= 30.0;",
      "SELECT DISTINCT sample_id FROM GeneticData WHERE chromosome IN ('X', 'Y');",
      "SELECT * FROM GeneticData WHERE genotype LIKE 'A%';",
      "SELECT id, position, genotype, quality FROM GeneticData WHERE sample_id = 5678 AND chromosome = 'Y';",
      "SELECT MAX(quality) FROM GeneticData WHERE sample_id = 9876;",
      "SELECT id, genotype FROM GeneticData WHERE position BETWEEN 1000 AND 2000;",
      "SELECT * FROM GeneticData ORDER BY quality DESC;",
      "SELECT AVG(quality) AS avg_quality FROM GeneticData WHERE sample_id = 3456;",
      "SELECT COUNT(DISTINCT sample_id) FROM GeneticData WHERE chromosome = 'X';",
      "SELECT id, chromosome FROM GeneticData WHERE sample_id IN (1234, 5678);",
      "SELECT AVG(quality) AS avg_quality FROM GeneticData WHERE genotype = 'AA';",
      "SELECT id, sample_id, genotype FROM GeneticData WHERE sample_id = 1234 ORDER BY position ASC;",
      "SELECT id, sample_id, genotype FROM GeneticData WHERE position > 100 AND quality > 0.7",
      "SELECT * FROM GeneticData WHERE chromosome = 'X' AND genotype IN ('AA', 'TT')",
      "SELECT sample_id, AVG(quality) AS average_quality FROM GeneticData GROUP BY sample_id HAVING AVG(quality) > 0.5",
      "SELECT DISTINCT chromosome FROM GeneticData WHERE sample_id IN (SELECT id FROM Samples WHERE gender = 'Female')",
      "SELECT COUNT(*) AS total_rows FROM GeneticData",
      "SELECT * FROM GeneticData ORDER BY position DESC, quality ASC LIMIT 10",
      "SELECT * FROM GeneticData JOIN Samples ON GeneticData.sample_id = Samples.id WHERE Samples.gender = 'Male'",
      "SELECT chromosome, COUNT(*) AS total_count FROM GeneticData GROUP BY chromosome HAVING COUNT(*) > 100",
      "SELECT * FROM GeneticData WHERE position BETWEEN 500 AND 1000",
      "SELECT sample_id, MAX(quality) AS max_quality FROM GeneticData GROUP BY sample_id ORDER BY max_quality DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Genes;",
      "SELECT name FROM Genes;",
      "SELECT id, name FROM Genes;",
      "SELECT id, name, sequence FROM Genes;",
      "SELECT * FROM Variants;",
      "SELECT type FROM Variants;",
      "SELECT allele_frequency FROM Variants;",
      "SELECT id, gene_id FROM Variants;",
      "SELECT id, gene_id, type FROM Variants;",
      "SELECT * FROM Genes JOIN Variants ON Genes.id = Variants.gene_id;",
      "SELECT Genes.id, Genes.name, Variants.type FROM Genes JOIN Variants ON Genes.id = Variants.gene_id;",
      "SELECT Variants.id, Variants.type, Variants.allele_frequency, Genes.name FROM Genes JOIN Variants ON Genes.id = Variants.gene_id;",
      "SELECT Genes.id, Genes.sequence, Variants.type, Variants.allele_frequency FROM Genes JOIN Variants ON Genes.id = Variants.gene_id;",
      "SELECT * FROM Genes WHERE id = 1;",
      "SELECT name FROM Genes WHERE id = 2;",
      "SELECT type FROM Variants WHERE gene_id = 1;",
      "SELECT allele_frequency FROM Variants WHERE gene_id = 2;",
      "SELECT id, sequence FROM Genes WHERE name = 'ABC';",
      "SELECT id, name FROM Genes WHERE sequence = 'XYZ';",
      "SELECT * FROM Genes ORDER BY id ASC;",
      "SELECT * FROM Genes ORDER BY name DESC;",
      "SELECT * FROM Genes WHERE id = 1;",
      "SELECT name, sequence FROM Genes WHERE id > 10;",
      "SELECT id, name, sequence FROM Genes WHERE name LIKE 'A%';",
      "SELECT id, gene_id, type FROM Variants WHERE allele_frequency > 0.5;",
      "SELECT id, gene_id, type FROM Variants WHERE gene_id IN (SELECT id FROM Genes WHERE name = 'ABC');",
      "SELECT Genes.name, Variants.type FROM Genes JOIN Variants ON Genes.id = Variants.gene_id;",
      "SELECT Genes.name, COUNT(Variants.type) AS variant_count FROM Genes LEFT JOIN Variants ON Genes.id = Variants.gene_id GROUP BY Genes.name;",
      "SELECT Genes.name, MAX(Variants.allele_frequency) AS max_frequency FROM Genes JOIN Variants ON Genes.id = Variants.gene_id GROUP BY Genes.name;",
      "SELECT Genes.name, AVG(Variants.allele_frequency) AS avg_frequency FROM Genes JOIN Variants ON Genes.id = Variants.gene_id GROUP BY Genes.name;",
      "SELECT Genes.name, SUM(Variants.allele_frequency) AS total_frequency FROM Genes JOIN Variants ON Genes.id = Variants.gene_id GROUP BY Genes.name;",
      "SELECT Genes.name, Variants.type, MAX(Variants.allele_frequency) AS max_frequency FROM Genes JOIN Variants ON Genes.id = Variants.gene_id GROUP BY Genes.name, Variants.type;",
      "SELECT Genes.name, Variants.type, AVG(Variants.allele_frequency) AS avg_frequency FROM Genes JOIN Variants ON Genes.id = Variants.gene_id WHERE Genes.id < 10 GROUP BY Genes.name, Variants.type;",
      "SELECT Genes.name, Variants.type, SUM(Variants.allele_frequency) AS total_frequency FROM Genes JOIN Variants ON Genes.id = Variants.gene_id WHERE Variants.allele_frequency <= 0.5 GROUP BY Genes.name, Variants.type;",
      "SELECT g.name AS gene_name, v.type AS variant_type FROM Genes g JOIN Variants v ON g.id = v.gene_id;",
      "SELECT g.name AS gene_name, COUNT(v.type) AS variant_count FROM Genes g LEFT JOIN Variants v ON g.id = v.gene_id GROUP BY g.name;",
      "SELECT g.name AS gene_name, MAX(v.allele_frequency) AS max_frequency FROM Genes g JOIN Variants v ON g.id = v.gene_id GROUP BY g.name;",
      "SELECT g.name AS gene_name, AVG(v.allele_frequency) AS avg_frequency FROM Genes g JOIN Variants v ON g.id = v.gene_id GROUP BY g.name;",
      "SELECT g.name AS gene_name, SUM(v.allele_frequency) AS total_frequency FROM Genes g JOIN Variants v ON g.id = v.gene_id GROUP BY g.name;",
      "SELECT g.name AS gene_name, v.type AS variant_type, MAX(v.allele_frequency) AS max_frequency FROM Genes g JOIN Variants v ON g.id = v.gene_id GROUP BY g.name, v.type;",
      "SELECT g.name AS gene_name, v.type AS variant_type, AVG(v.allele_frequency) AS avg_frequency FROM Genes g JOIN Variants v ON g.id = v.gene_id WHERE g.id < 10 GROUP BY g.name, v.type;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM DNA_Sequences;",
      "SELECT id, sequence FROM DNA_Sequences WHERE quality_score > 5;",
      "SELECT variant_name, gene_name FROM Genetic_Variants;",
      "SELECT * FROM Genetic_Variants WHERE allele_frequency >= 0.5;",
      "SELECT id, trait FROM Phenotype_Information;",
      "SELECT * FROM Phenotype_Information WHERE trait = 'Trait1';",
      "SELECT id, sequence, quality_score FROM DNA_Sequences WHERE id = 10;",
      "SELECT variant_name, allele_frequency FROM Genetic_Variants WHERE gene_name = 'Gene1';",
      "SELECT id, trait FROM Phenotype_Information WHERE sample_id = 100;",
      "SELECT * FROM DNA_Sequences ORDER BY quality_score DESC;",
      "SELECT * FROM Genetic_Variants ORDER BY allele_frequency ASC;",
      "SELECT * FROM Phenotype_Information ORDER BY sample_id;",
      "SELECT COUNT(*) FROM DNA_Sequences;",
      "SELECT COUNT(*) FROM Genetic_Variants WHERE gene_name IS NOT NULL;",
      "SELECT COUNT(*) FROM Phenotype_Information WHERE trait = 'Trait2';",
      "SELECT AVG(quality_score) FROM DNA_Sequences;",
      "SELECT AVG(allele_frequency) FROM Genetic_Variants;",
      "SELECT MAX(sample_id) FROM Phenotype_Information;",
      "SELECT MIN(quality_score) FROM DNA_Sequences;",
      "SELECT SUM(allele_frequency) FROM Genetic_Variants;",
      "SELECT * FROM DNA_Sequences WHERE quality_score > 30;",
      "SELECT variant_name, gene_name FROM Genetic_Variants WHERE allele_frequency < 0.05;",
      "SELECT * FROM DNA_Sequences JOIN Genetic_Variants ON DNA_Sequences.id = Genetic_Variants.id;",
      "SELECT sequence, quality_score FROM DNA_Sequences WHERE id = 10;",
      "SELECT DNA_Sequences.sequence, Genetic_Variants.variant_name FROM DNA_Sequences JOIN Genetic_Variants ON DNA_Sequences.id = Genetic_Variants.id;",
      "SELECT * FROM DNA_Sequences WHERE sequence LIKE 'ATG%';",
      "SELECT * FROM Genetic_Variants WHERE gene_name = 'ABC';",
      "SELECT sample_id, trait FROM Phenotype_Information WHERE sample_id = 100;",
      "SELECT DISTINCT gene_name FROM Genetic_Variants;",
      "SELECT AVG(quality_score) AS avg_quality FROM DNA_Sequences;",
      "SELECT MAX(allele_frequency) AS max_frequency FROM Genetic_Variants;",
      "SELECT COUNT(*) AS sequence_count FROM DNA_Sequences;",
      "SELECT COUNT(DISTINCT gene_name) AS gene_count FROM Genetic_Variants;",
      "SELECT * FROM DNA_Sequences WHERE sequence NOT LIKE 'CGT%';",
      "SELECT * FROM DNA_Sequences WHERE quality_score BETWEEN 20 AND 40;",
      "SELECT variant_name, allele_frequency FROM Genetic_Variants WHERE variant_name LIKE '%insertion%';",
      "SELECT * FROM DNA_Sequences ORDER BY quality_score DESC;",
      "SELECT trait, COUNT(*) AS sample_count FROM Phenotype_Information GROUP BY trait;",
      "SELECT gene_name, AVG(allele_frequency) AS avg_frequency FROM Genetic_Variants GROUP BY gene_name;",
      "SELECT sequence, quality_score FROM DNA_Sequences WHERE quality_score IS NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Patient;",
      "SELECT first_name, last_name, age FROM Patient;",
      "SELECT * FROM Genetic_Test;",
      "SELECT test_date, test_result FROM Genetic_Test;",
      "SELECT * FROM Variant;",
      "SELECT gene_name, chromosome, position FROM Variant;",
      "SELECT * FROM Analysis_Result;",
      "SELECT analysis_date, analysis_result FROM Analysis_Result;",
      "SELECT p.first_name, p.last_name, g.test_date, g.test_result FROM Patient p JOIN Genetic_Test g ON p.patient_id = g.patient_id;",
      "SELECT v.gene_name, v.chromosome, a.analysis_date, a.analysis_result FROM Variant v JOIN Analysis_Result a ON v.variant_id = a.variant_id;",
      "SELECT p.first_name, p.last_name, a.analysis_date, a.analysis_result FROM Patient p JOIN Genetic_Test g ON p.patient_id = g.patient_id JOIN Analysis_Result a ON g.test_id = a.test_id;",
      "SELECT p.first_name, p.last_name, a.analysis_date, a.analysis_result FROM Patient p JOIN Genetic_Test g ON p.patient_id = g.patient_id JOIN Analysis_Result a ON g.test_id = a.test_id JOIN Variant v ON a.variant_id = v.variant_id;",
      "SELECT * FROM Patient WHERE age > 50;",
      "SELECT * FROM Patient WHERE sex = 'M';",
      "SELECT * FROM Patient WHERE first_name LIKE 'A%';",
      "SELECT * FROM Genetic_Test WHERE test_date >= '2022-01-01' AND test_date <= '2022-12-31';",
      "SELECT * FROM Variant WHERE allele_freq > 0.5;",
      "SELECT * FROM Analysis_Result WHERE analysis_result = 'Positive';",
      "SELECT p.first_name, p.last_name, g.test_result, v.variant_type FROM Patient p JOIN Genetic_Test g ON p.patient_id = g.patient_id JOIN Analysis_Result a ON g.test_id = a.test_id JOIN Variant v ON a.variant_id = v.variant_id;",
      "SELECT p.first_name, p.last_name, g.test_result, v.variant_type FROM Patient p JOIN Genetic_Test g ON p.patient_id = g.patient_id JOIN Analysis_Result a ON g.test_id = a.test_id JOIN Variant v ON a.variant_id = v.variant_id WHERE g.test_result = 'Negative';",
      "SELECT p.first_name, p.last_name, a.analysis_result FROM Patient p JOIN Genetic_Test g ON p.patient_id = g.patient_id JOIN Analysis_Result a ON g.test_id = a.test_id WHERE g.test_result = 'Positive';",
      "SELECT * FROM Patient;",
      "SELECT first_name, last_name, age FROM Patient WHERE age > 40;",
      "SELECT * FROM Genetic_Test WHERE test_result='Positive';",
      "SELECT Patient.first_name, Variant.gene_name FROM Patient INNER JOIN Variant ON Patient.patient_id = Variant.variant_id;",
      "SELECT Patient.first_name, Genetic_Test.test_date FROM Patient INNER JOIN Genetic_Test ON Patient.patient_id = Genetic_Test.patient_id;",
      "SELECT Patient.first_name, Variant.gene_name, Analysis_Result.analysis_result FROM Patient INNER JOIN Variant ON Patient.patient_id = Variant.variant_id INNER JOIN Analysis_Result ON Variant.variant_id = Analysis_Result.variant_id;",
      "SELECT Patient.first_name, Genetic_Test.test_result, Variant.variant_type FROM Patient LEFT JOIN Genetic_Test ON Patient.patient_id = Genetic_Test.patient_id LEFT JOIN Variant ON Genetic_Test.test_id = Variant.variant_id;",
      "SELECT * FROM Patient WHERE age BETWEEN 30 AND 50;",
      "SELECT DISTINCT sex FROM Patient;",
      "SELECT * FROM Patient ORDER BY age DESC;",
      "SELECT first_name, last_name, age FROM Patient WHERE sex='M' AND age > 50;",
      "SELECT first_name, age FROM Patient WHERE first_name LIKE 'J%';",
      "SELECT COUNT(*) FROM Patient;",
      "SELECT COUNT(DISTINCT last_name) FROM Patient;",
      "SELECT AVG(age) FROM Patient;",
      "SELECT patient_id, MAX(age) AS oldest_patient_age FROM Patient;",
      "SELECT test_date, COUNT(*) AS num_tests FROM Genetic_Test GROUP BY test_date;",
      "SELECT gene_name, AVG(allele_freq) FROM Variant GROUP BY gene_name;",
      "SELECT first_name, MAX(age) AS max_age FROM Patient GROUP BY first_name;",
      "SELECT first_name, test_date FROM Patient, Genetic_Test WHERE Patient.patient_id = Genetic_Test.patient_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM patients",
      "SELECT first_name, last_name, age FROM patients",
      "SELECT * FROM samples",
      "SELECT sample_type, collection_date FROM samples",
      "SELECT * FROM variants",
      "SELECT chromosome, position, variant_type FROM variants",
      "SELECT * FROM genes",
      "SELECT gene_symbol, gene_name FROM genes",
      "SELECT * FROM interpretations",
      "SELECT interpretation_text FROM interpretations",
      "SELECT p.first_name, p.last_name, s.sample_type FROM patients p JOIN samples s ON p.patient_id = s.patient_id",
      "SELECT v.chromosome, v.position, v.variant_type, s.sample_type FROM variants v JOIN samples s ON v.sample_id = s.sample_id",
      "SELECT g.gene_symbol, g.gene_name, i.interpretation_text FROM genes g JOIN interpretations i ON g.gene_id = i.gene_id",
      "SELECT p.first_name, p.last_name, v.chromosome, v.position, i.interpretation_text FROM patients p JOIN samples s ON p.patient_id = s.patient_id JOIN variants v ON s.sample_id = v.sample_id JOIN interpretations i ON v.variant_id = i.variant_id LIMIT 10",
      "SELECT * FROM patients WHERE age > 30 AND gender = 'Male';",
      "SELECT * FROM samples WHERE quantity > 100 AND collection_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT patients.first_name, samples.sample_type FROM patients JOIN samples ON patients.patient_id = samples.patient_id;",
      "SELECT variants.variant_type, genes.gene_name FROM variants JOIN genes ON variants.chromosome = genes.chromosome;",
      "SELECT patient_id, first_name, last_name, date_of_birth FROM patients WHERE age >= 40;",
      "SELECT gene_symbol, gene_name FROM genes WHERE start_position < 1000 AND end_position > 500;",
      "SELECT gene_name, interpretation_text FROM interpretations JOIN genes ON interpretations.gene_id = genes.gene_id;",
      "SELECT COUNT(*) AS total_variants FROM variants;",
      "SELECT DISTINCT gene_symbol FROM genes;",
      "SELECT AVG(age) AS avg_age FROM patients;",
      "SELECT gene_name, COUNT(*) AS total_interpretations FROM genes JOIN interpretations ON genes.gene_id = interpretations.gene_id GROUP BY gene_name;",
      "SELECT patient_id, first_name, last_name, age FROM patients WHERE date_of_birth < '1980-01-01';",
      "SELECT sample_id, sample_type, collection_date FROM samples WHERE collection_date > '2021-06-01' AND quantity < 50;",
      "SELECT gene_name, interpretation_text FROM genes JOIN interpretations ON genes.gene_id = interpretations.gene_id WHERE length(interpretation_text) > 1000;",
      "SELECT patient_id, first_name, last_name, gender FROM patients WHERE gender = 'Female';",
      "SELECT gene_name, COUNT(*) AS total_variants FROM genes JOIN variants ON genes.gene_id = variants.variant_id GROUP BY gene_name HAVING COUNT(*) > 3;",
      "SELECT patient_id, first_name, last_name, age, gender FROM patients WHERE age BETWEEN 20 AND 30 AND gender = 'Female';",
      "SELECT interpretation_id, interpretation_text FROM interpretations WHERE interpretation_text LIKE '%pathogenic%';",
      "SELECT gene_name, AVG(start_position) AS avg_start_position FROM genes GROUP BY gene_name;",
      "SELECT DISTINCT interpretation_text FROM interpretations;",
      "SELECT first_name, last_name, age FROM patients ORDER BY age DESC, last_name ASC LIMIT 5;"
    ]
  }
]