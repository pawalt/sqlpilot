[
  {
    "statements": [
      "SELECT * FROM CustomerData WHERE customer_id = 12345;",
      "SELECT first_name, last_name FROM CustomerData WHERE customer_id = 54321;",
      "SELECT email FROM CustomerData WHERE subscription_status = TRUE;",
      "SELECT * FROM CustomerData WHERE birthdate >= '1990-01-01';",
      "SELECT customer_id, email FROM CustomerData WHERE subscription_status = TRUE AND birthdate <= '2000-12-31';",
      "SELECT first_name, last_name FROM CustomerData WHERE birthdate BETWEEN '1980-01-01' AND '1990-12-31';",
      "SELECT customer_id, email FROM CustomerData WHERE subscription_status = FALSE;",
      "SELECT * FROM CustomerData WHERE first_name LIKE 'A%';",
      "SELECT * FROM CustomerData WHERE last_name LIKE '%son';",
      "SELECT * FROM CustomerData WHERE birthdate = '1975-05-20';",
      "SELECT first_name, last_name, email FROM CustomerData ORDER BY last_name ASC, first_name ASC;",
      "SELECT COUNT(*) FROM CustomerData;",
      "SELECT MAX(birthdate) AS oldest_birthdate FROM CustomerData;",
      "SELECT AVG(customer_id) AS average_id FROM CustomerData;",
      "SELECT DISTINCT last_name FROM CustomerData;",
      "SELECT first_name, last_name, email FROM CustomerData WHERE subscription_status = TRUE LIMIT 5;",
      "SELECT customer_id, birthdate FROM CustomerData WHERE birthdate IS NOT NULL;",
      "SELECT * FROM CustomerData WHERE customer_id IN (1001, 2002, 3003);",
      "SELECT * FROM CustomerData WHERE subscription_status = TRUE AND first_name = 'John';",
      "SELECT * FROM CustomerData WHERE birthdate < '1995-01-01';",
      "SELECT * FROM CustomerData WHERE subscription_status = true;",
      "SELECT first_name, last_name, email FROM CustomerData WHERE birthdate > '1990-01-01';",
      "SELECT customer_id, first_name, last_name FROM CustomerData WHERE last_name LIKE 'S%';",
      "SELECT * FROM CustomerData WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT customer_id, email FROM CustomerData WHERE subscription_status = false;",
      "SELECT first_name, last_name, email FROM CustomerData WHERE birthdate BETWEEN '1980-01-01' AND '1990-01-01';",
      "SELECT customer_id, email FROM CustomerData WHERE birthdate > '2000-01-01' AND subscription_status = true;",
      "SELECT * FROM CustomerData WHERE email LIKE '%@gmail.com';",
      "SELECT customer_id, first_name, last_name, email FROM CustomerData WHERE birthdate < '1970-01-01';",
      "SELECT * FROM CustomerData WHERE first_name != 'Alice';",
      "SELECT COUNT(*) FROM CustomerData WHERE subscription_status = true;",
      "SELECT customer_id, first_name, last_name FROM CustomerData WHERE email NOT LIKE '%@yahoo.com';",
      "SELECT AVG(customer_id) FROM CustomerData;",
      "SELECT DISTINCT birthdate FROM CustomerData;",
      "SELECT * FROM CustomerData ORDER BY birthdate DESC;",
      "SELECT first_name, last_name, COUNT(*) AS total_customers FROM CustomerData GROUP BY first_name, last_name;",
      "SELECT customer_id, first_name, last_name FROM CustomerData WHERE subscription_status = true ORDER BY first_name ASC;",
      "SELECT email, COUNT(*) AS frequency FROM CustomerData GROUP BY email HAVING frequency > 1;",
      "SELECT customer_id, email FROM CustomerData WHERE birthdate > '1995-01-01' AND birthdate < '2000-01-01';",
      "SELECT * FROM CustomerData WHERE first_name = 'Bob' OR last_name = 'Smith';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers;",
      "SELECT * FROM messages;",
      "SELECT message_id, customer_id, content FROM messages;",
      "SELECT message_id, content, sent_date FROM messages;",
      "SELECT customers.first_name, messages.content FROM customers JOIN messages ON customers.customer_id = messages.customer_id;",
      "SELECT customers.first_name, messages.content FROM customers LEFT JOIN messages ON customers.customer_id = messages.customer_id;",
      "SELECT customers.first_name, messages.content FROM customers RIGHT JOIN messages ON customers.customer_id = messages.customer_id;",
      "SELECT customers.first_name, messages.content FROM customers INNER JOIN messages ON customers.customer_id = messages.customer_id;",
      "SELECT customers.first_name, messages.content FROM customers FULL OUTER JOIN messages ON customers.customer_id = messages.customer_id;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE first_name = 'John';",
      "SELECT * FROM customers WHERE email = 'john@example.com';",
      "SELECT * FROM messages WHERE customer_id = 1;",
      "SELECT * FROM messages WHERE content LIKE '%important%';",
      "SELECT * FROM messages WHERE sent_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT COUNT(*) FROM customers;",
      "SELECT COUNT(*) FROM messages;",
      "SELECT AVG(customer_id) FROM customers;",
      "SELECT first_name, last_name FROM customers WHERE customer_id = 1;",
      "SELECT customer_id, content FROM messages WHERE sent_date > '2022-01-01';",
      "SELECT customers.first_name, messages.content FROM customers JOIN messages ON customers.customer_id = messages.customer_id;",
      "SELECT customers.first_name, messages.content FROM customers INNER JOIN messages ON customers.customer_id = messages.customer_id WHERE messages.sent_date >= '2023-01-01';",
      "SELECT customers.first_name, messages.content FROM customers LEFT JOIN messages ON customers.customer_id = messages.customer_id;",
      "SELECT customers.first_name, messages.content FROM customers RIGHT JOIN messages ON customers.customer_id = messages.customer_id WHERE messages.sent_date < '2024-01-01';",
      "SELECT customers.first_name, messages.content FROM customers FULL JOIN messages ON customers.customer_id = messages.customer_id WHERE messages.sent_date < '2024-01-01';",
      "SELECT AVG(customer_id) AS average_customer_id FROM customers;",
      "SELECT COUNT(customer_id) AS total_customers FROM customers;",
      "SELECT MAX(customer_id) AS max_customer_id FROM customers;",
      "SELECT MIN(customer_id) AS min_customer_id FROM customers;",
      "SELECT SUM(customer_id) AS total_customer_id FROM customers;",
      "SELECT DISTINCT first_name FROM customers;",
      "SELECT first_name, COUNT(*) AS total_messages FROM messages GROUP BY first_name;",
      "SELECT first_name, last_name, COUNT(*) AS total_messages FROM customers JOIN messages ON customers.customer_id = messages.customer_id GROUP BY first_name, last_name;",
      "SELECT first_name, last_name, COUNT(*) AS total_messages FROM customers JOIN messages ON customers.customer_id = messages.customer_id WHERE messages.sent_date >= '2021-01-01' GROUP BY first_name, last_name;",
      "SELECT first_name, COUNT(*) AS total_messages FROM customers LEFT JOIN messages ON customers.customer_id = messages.customer_id GROUP BY first_name;",
      "SELECT first_name, COUNT(*) AS total_messages FROM customers RIGHT JOIN messages ON customers.customer_id = messages.customer_id WHERE messages.sent_date < '2020-01-01' GROUP BY first_name;",
      "SELECT first_name, COUNT(*) AS total_messages FROM customers FULL JOIN messages ON customers.customer_id = messages.customer_id WHERE messages.sent_date < '2020-01-01' GROUP BY first_name;",
      "SELECT first_name, AVG(customer_id) AS avg_customer_id FROM customers GROUP BY first_name;",
      "SELECT first_name, MAX(customer_id) AS max_customer_id FROM customers GROUP BY first_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, price FROM products;",
      "SELECT product_id, category FROM products WHERE price > 100;",
      "SELECT * FROM marketing_messages;",
      "SELECT message_id, customer_id, message_text FROM marketing_messages;",
      "SELECT message_id, send_date FROM marketing_messages WHERE customer_id = 1;",
      "SELECT first_name, last_name FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id;",
      "SELECT customer_id, email, message_text FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id;",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM marketing_messages);",
      "SELECT * FROM products WHERE category = 'Electronics';",
      "SELECT * FROM marketing_messages WHERE send_date >= '2022-01-01';",
      "SELECT customer_id, first_name, last_name, message_text FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id WHERE message_text LIKE '%special offer%';",
      "SELECT c.first_name, c.last_name, p.product_id, p.product_name, p.price FROM customers c JOIN products p ON c.customer_id = p.product_id;",
      "SELECT * FROM products ORDER BY price ASC;",
      "SELECT * FROM marketing_messages ORDER BY send_date DESC;",
      "SELECT customer_id, COUNT(message_id) AS total_messages FROM marketing_messages GROUP BY customer_id;",
      "SELECT category, AVG(price) AS avg_price FROM products GROUP BY category;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT first_name, last_name FROM customers WHERE last_name LIKE 'S%';",
      "SELECT * FROM products WHERE category = 'Electronics' ORDER BY price DESC;",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT customer_id, first_name, last_name, email, message_text, send_date FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id;",
      "SELECT customer_id, first_name, last_name, message_text FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id WHERE send_date >= '2022-01-01';",
      "SELECT COUNT(*) AS total_customers FROM customers;",
      "SELECT AVG(price) AS avg_price FROM products WHERE category = 'Clothing';",
      "SELECT MIN(price) AS min_price, MAX(price) AS max_price FROM products WHERE category = 'Shoes';",
      "SELECT customer_id, COUNT(message_id) AS total_messages FROM marketing_messages GROUP BY customer_id ORDER BY total_messages DESC;",
      "SELECT category, COUNT(*) AS total_products FROM products GROUP BY category;",
      "SELECT first_name, last_name, MAX(price) AS max_price FROM customers JOIN products ON customers.customer_id = products.product_id GROUP BY customers.customer_id;",
      "SELECT customer_id, first_name, last_name, message_text, send_date FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id WHERE send_date BETWEEN '2022-01-01' AND '2022-03-01';",
      "SELECT customer_id, first_name, last_name, email, message_text, send_date FROM customers LEFT JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id;",
      "SELECT customer_id, first_name, last_name, email, message_text, send_date FROM customers RIGHT JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id;",
      "SELECT customer_id, first_name, last_name, email, message_text, send_date FROM customers INNER JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id;",
      "SELECT customer_id, first_name, last_name, email, message_text, send_date FROM customers LEFT JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id WHERE send_date IS NULL;",
      "SELECT category, SUM(price) AS total_price FROM products GROUP BY category HAVING total_price > 1000;",
      "SELECT customer_id, first_name, last_name, email, message_text, send_date FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id WHERE message_text LIKE '%special offer%';",
      "SELECT customer_id, first_name, last_name, email, message_text, send_date FROM customers JOIN marketing_messages ON customers.customer_id = marketing_messages.customer_id WHERE send_date >= '2022-01-01' AND send_date <= '2022-03-01';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers;",
      "SELECT id, phone FROM customers WHERE id = 5;",
      "SELECT * FROM orders;",
      "SELECT order_date, total_amount FROM orders WHERE customer_id = 10;",
      "SELECT product_name, category FROM products;",
      "SELECT price FROM products WHERE product_id = 15;",
      "SELECT id, message_text FROM marketing_messages;",
      "SELECT message_text, send_date FROM marketing_messages WHERE customer_id = 20;",
      "SELECT * FROM customers WHERE name = 'John';",
      "SELECT * FROM orders WHERE total_amount > 1000;",
      "SELECT product_name, price FROM products WHERE category = 'Electronics';",
      "SELECT name, email, phone FROM customers WHERE id BETWEEN 5 AND 10;",
      "SELECT category, price FROM products WHERE price <= 50.00;",
      "SELECT * FROM marketing_messages WHERE customer_id IN (1, 2, 3);",
      "SELECT id, email FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT * FROM orders WHERE order_date > '2022-01-01';",
      "SELECT product_name, price FROM products ORDER BY price DESC;",
      "SELECT * FROM customers WHERE id = (SELECT customer_id FROM orders WHERE total_amount = (SELECT MAX(total_amount) FROM orders));",
      "SELECT customer_id, COUNT(*) AS order_count FROM orders GROUP BY customer_id HAVING order_count > 5;",
      "SELECT * FROM customers WHERE id = 1;",
      "SELECT name, email FROM customers WHERE phone LIKE '%123%';",
      "SELECT customer_id, order_date FROM orders WHERE total_amount > 1000;",
      "SELECT * FROM products WHERE category = 'Electronics' AND price < 500;",
      "SELECT product_name, category, price FROM products WHERE price BETWEEN 50 AND 100;",
      "SELECT customers.name, orders.total_amount FROM customers JOIN orders ON customers.id = orders.customer_id;",
      "SELECT customers.name, orders.total_amount FROM customers LEFT JOIN orders ON customers.id = orders.customer_id;",
      "SELECT customers.name, orders.total_amount FROM customers RIGHT JOIN orders ON customers.id = orders.customer_id;",
      "SELECT customers.name, orders.total_amount FROM customers INNER JOIN orders ON customers.id = orders.customer_id;",
      "SELECT customers.name, orders.total_amount FROM customers JOIN orders ON customers.id = orders.customer_id WHERE orders.total_amount > 500;",
      "SELECT customers.name, products.product_name FROM customers JOIN orders ON customers.id = orders.customer_id JOIN products ON orders.product_id = products.product_id;",
      "SELECT customers.name, products.product_name, marketing_messages.message_text FROM customers JOIN orders ON customers.id = orders.customer_id JOIN products ON orders.product_id = products.product_id JOIN marketing_messages ON customers.id = marketing_messages.customer_id;",
      "SELECT customers.name, orders.total_amount FROM customers JOIN orders ON customers.id = orders.customer_id WHERE orders.total_amount > (SELECT AVG(total_amount) FROM orders);",
      "SELECT customers.name, orders.total_amount FROM customers JOIN orders ON customers.id = orders.customer_id WHERE orders.total_amount > (SELECT MIN(total_amount) FROM orders);",
      "SELECT * FROM customers WHERE name IN (SELECT name FROM customers WHERE email LIKE '%gmail.com%');",
      "SELECT customers.name, COUNT(orders.order_id) AS order_count FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name, SUM(orders.total_amount) AS total_spent FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name, AVG(orders.total_amount) AS avg_spent FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name, MAX(orders.total_amount) AS max_spent FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name;",
      "SELECT customers.name, MIN(orders.total_amount) AS min_spent FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, name, email FROM customers;",
      "SELECT name, age FROM customers WHERE age > 30;",
      "SELECT * FROM products;",
      "SELECT product_id, name, price FROM products WHERE price < 50.00;",
      "SELECT name, category FROM products WHERE category = 'Electronics';",
      "SELECT * FROM orders;",
      "SELECT order_id, customer_id, product_id FROM orders WHERE quantity > 1;",
      "SELECT * FROM campaigns;",
      "SELECT campaign_id, name, start_date FROM campaigns WHERE start_date >= '2023-01-01';",
      "SELECT * FROM campaign_results;",
      "SELECT result_id, campaign_id, customer_id FROM campaign_results WHERE conversion = TRUE;",
      "SELECT name, email FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT name, price FROM products JOIN orders ON products.product_id = orders.product_id;",
      "SELECT name, category FROM products JOIN orders ON products.product_id = orders.product_id WHERE orders.quantity > 5;",
      "SELECT name, purchase_date FROM customers JOIN campaign_results ON customers.customer_id = campaign_results.customer_id WHERE campaign_results.conversion = TRUE;",
      "SELECT name, end_date FROM campaigns JOIN campaign_results ON campaigns.campaign_id = campaign_results.campaign_id WHERE campaign_results.conversion = TRUE;",
      "SELECT DISTINCT category FROM products;",
      "SELECT name, email, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT name, email, purchase_date FROM customers JOIN campaign_results ON customers.customer_id = campaign_results.customer_id WHERE campaign_results.conversion = TRUE;",
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers WHERE age > 30;",
      "SELECT name, email, age FROM customers WHERE name LIKE 'A%' ORDER BY age DESC;",
      "SELECT customer_id, COUNT(*) FROM orders GROUP BY customer_id HAVING COUNT(*) > 5;",
      "SELECT customers.name, products.name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id;",
      "SELECT customers.name, products.name, orders.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE orders.quantity > 10;",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders GROUP BY customer_id HAVING COUNT(*) > 3);",
      "SELECT COUNT(DISTINCT category) FROM products;",
      "SELECT campaign_id, name FROM campaigns WHERE start_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT DISTINCT customer_id FROM campaign_results WHERE conversion = TRUE;",
      "SELECT customers.name, campaign_results.purchase_date FROM customers JOIN campaign_results ON customers.customer_id = campaign_results.customer_id WHERE campaign_results.conversion = TRUE;",
      "SELECT products.name, SUM(orders.quantity) AS total_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY products.name ORDER BY total_quantity DESC;",
      "SELECT campaigns.name, CONCAT(customers.name, ' - ', customers.email) AS customer_info FROM campaigns JOIN campaign_results ON campaigns.campaign_id = campaign_results.campaign_id JOIN customers ON campaign_results.customer_id = customers.customer_id;",
      "SELECT products.name, AVG(orders.quantity) AS avg_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY products.name ORDER BY avg_quantity DESC;",
      "SELECT campaign_id, COUNT(*) AS total_customers FROM campaign_results GROUP BY campaign_id;",
      "SELECT customers.name, COUNT(*) AS total_conversions FROM customers JOIN campaign_results ON customers.customer_id = campaign_results.customer_id WHERE campaign_results.conversion = TRUE GROUP BY customers.name;",
      "SELECT customers.name, AVG(orders.quantity) AS avg_quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name HAVING AVG(orders.quantity) > 15;",
      "SELECT products.category, COUNT(*) AS total_sales FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY products.category ORDER BY total_sales DESC;",
      "SELECT DISTINCT customer_id FROM campaign_results WHERE purchase_date IS NOT NULL;",
      "SELECT customers.name, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name ORDER BY total_orders DESC;"
    ]
  }
]