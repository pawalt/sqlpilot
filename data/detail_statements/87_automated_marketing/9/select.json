[
  {
    "statements": [
      "SELECT * FROM reports;",
      "SELECT report_id, campaign_name FROM reports;",
      "SELECT campaign_name, start_date, end_date FROM reports;",
      "SELECT report_id, conversions, revenue FROM reports;",
      "SELECT * FROM reports WHERE campaign_name = 'Campaign A';",
      "SELECT report_id, clicks FROM reports WHERE start_date >= '2022-01-01';",
      "SELECT * FROM reports WHERE clicks > 100;",
      "SELECT report_id, clicks FROM reports WHERE revenue >= 100.00;",
      "SELECT * FROM reports ORDER BY start_date DESC;",
      "SELECT campaign_name, SUM(conversions) AS total_conversions FROM reports GROUP BY campaign_name;",
      "SELECT AVG(clicks) AS avg_clicks, AVG(conversions) AS avg_conversions FROM reports;",
      "SELECT campaign_name, SUM(revenue) AS total_revenue FROM reports WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY campaign_name;",
      "SELECT campaign_name, COUNT(report_id) AS total_reports FROM reports GROUP BY campaign_name HAVING COUNT(report_id) > 5;",
      "SELECT campaign_name, AVG(clicks) AS avg_clicks, AVG(conversions) AS avg_conversions FROM reports WHERE revenue > 500.00 GROUP BY campaign_name;",
      "SELECT * FROM reports WHERE start_date < '2022-06-01' AND end_date > '2022-06-30';",
      "SELECT campaign_name, MAX(revenue) AS max_revenue FROM reports WHERE conversions > 10 GROUP BY campaign_name;",
      "SELECT DISTINCT campaign_name FROM reports;",
      "SELECT * FROM reports LIMIT 10;",
      "SELECT campaign_name, AVG(revenue) AS avg_revenue FROM reports WHERE clicks > 50 GROUP BY campaign_name HAVING AVG(revenue) > 200.00;",
      "SELECT campaign_name, MIN(clicks) AS min_clicks, MAX(clicks) AS max_clicks FROM reports GROUP BY campaign_name;",
      "SELECT report_id, campaign_name, conversions FROM reports WHERE revenue < 1000.00 ORDER BY conversions DESC;",
      "SELECT * FROM reports WHERE campaign_name = 'Summer campaign' AND clicks > 100",
      "SELECT report_id, campaign_name, start_date FROM reports WHERE conversions >= 5 AND revenue > 500",
      "SELECT campaign_name, end_date FROM reports WHERE start_date >= '2022-01-01' AND end_date <= '2022-12-31'",
      "SELECT report_id, clicks, conversions, revenue FROM reports WHERE clicks < 50 OR conversions = 0",
      "SELECT SUM(clicks) AS total_clicks FROM reports WHERE campaign_name LIKE '%sale%'",
      "SELECT AVG(revenue) AS average_revenue FROM reports WHERE revenue > 1000",
      "SELECT campaign_name, start_date, end_date, revenue FROM reports WHERE end_date < start_date",
      "SELECT report_id, campaign_name, start_date, end_date FROM reports WHERE start_date BETWEEN '2022-06-01' AND '2022-07-31'",
      "SELECT campaign_name, SUM(revenue) AS total_revenue FROM reports GROUP BY campaign_name HAVING SUM(revenue) > 5000",
      "SELECT campaign_name, AVG(clicks) AS average_clicks, AVG(conversions) AS average_conversions FROM reports GROUP BY campaign_name HAVING AVG(clicks) > 50 AND AVG(conversions) > 5",
      "SELECT report_id, campaign_name, start_date, end_date FROM reports ORDER BY start_date DESC",
      "SELECT campaign_name, start_date, end_date, revenue FROM reports ORDER BY revenue DESC",
      "SELECT DISTINCT campaign_name FROM reports",
      "SELECT report_id, campaign_name, end_date FROM reports WHERE end_date IS NULL",
      "SELECT campaign_name, AVG(revenue) AS average_revenue FROM reports WHERE campaign_name IN ('Spring sale', 'Summer campaign')",
      "SELECT campaign_name, start_date, end_date, revenue FROM reports WHERE campaign_name NOT LIKE '%discount%'",
      "SELECT report_id, campaign_name, clicks, revenue FROM reports WHERE revenue BETWEEN 100 AND 500",
      "SELECT campaign_name, MIN(start_date) AS first_start_date, MAX(end_date) AS last_end_date FROM reports GROUP BY campaign_name",
      "SELECT report_id, campaign_name, end_date FROM reports WHERE report_id IN (101, 105, 110)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM campaign_data;",
      "SELECT campaign_id, start_date, end_date FROM campaign_data WHERE campaign_id = 1;",
      "SELECT SUM(ad_spend) FROM campaign_data;",
      "SELECT AVG(conversions) FROM campaign_data;",
      "SELECT MAX(revenue) FROM campaign_data;",
      "SELECT MIN(ad_spend) FROM campaign_data;",
      "SELECT campaign_id, report_date, impressions, clicks FROM campaign_reports;",
      "SELECT campaign_id, report_date, cost FROM campaign_reports WHERE campaign_id = 2;",
      "SELECT SUM(impressions) FROM campaign_reports;",
      "SELECT AVG(clicks) FROM campaign_reports;",
      "SELECT MAX(cost) FROM campaign_reports;",
      "SELECT MIN(roi) FROM campaign_reports;",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE campaign_id = 3;",
      "SELECT campaign_id, report_date, impressions, clicks, cost, roi FROM campaign_reports WHERE campaign_id = 4;",
      "SELECT campaign_id, start_date, ad_spend, conversions, revenue FROM campaign_data WHERE end_date > start_date;",
      "SELECT campaign_id, report_date, impressions, clicks, cost, roi FROM campaign_reports WHERE roi > 1.5;",
      "SELECT campaign_id, start_date, ad_spend, conversions, revenue FROM campaign_data WHERE end_date < '2022-12-31';",
      "SELECT campaign_id, report_date, impressions, clicks, cost, roi FROM campaign_reports WHERE clicks > 500;",
      "SELECT campaign_id, report_date, roi FROM campaign_reports WHERE cost < 1000;",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE campaign_id BETWEEN 5 AND 10;",
      "SELECT campaign_id, report_date, impressions, clicks, cost, roi FROM campaign_reports WHERE campaign_id IN (6, 8, 10);",
      "SELECT * FROM campaign_data",
      "SELECT campaign_id, start_date, end_date, ad_spend FROM campaign_data WHERE ad_spend > 1000",
      "SELECT DISTINCT campaign_id, start_date FROM campaign_data ORDER BY start_date DESC",
      "SELECT campaign_id, SUM(conversions) AS total_conversions FROM campaign_data GROUP BY campaign_id",
      "SELECT campaign_id, AVG(revenue) AS average_revenue FROM campaign_data GROUP BY campaign_id HAVING AVG(revenue) > 5000",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE start_date BETWEEN '2022-01-01' AND '2022-06-30'",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE end_date > '2022-12-31'",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE ad_spend > 5000 AND revenue > 10000",
      "SELECT c.campaign_id, c.start_date, r.report_date, r.impressions, r.clicks, r.cost FROM campaign_data c INNER JOIN campaign_reports r ON c.campaign_id = r.campaign_id",
      "SELECT c.campaign_id, c.start_date, r.report_date, r.impressions, r.clicks, r.cost, r.roi FROM campaign_data c INNER JOIN campaign_reports r ON c.campaign_id = r.campaign_id WHERE r.roi > 2.0",
      "SELECT c.campaign_id, c.start_date, c.end_date, c.ad_spend, r.impressions, r.clicks, r.cost, r.roi FROM campaign_data c LEFT JOIN campaign_reports r ON c.campaign_id = r.campaign_id WHERE r.cost > 500",
      "SELECT c.campaign_id, c.start_date, c.end_date, c.ad_spend, r.impressions, r.clicks, r.cost, r.roi FROM campaign_data c RIGHT JOIN campaign_reports r ON c.campaign_id = r.campaign_id WHERE r.clicks > 1000",
      "SELECT c.campaign_id, c.start_date, c.end_date, c.ad_spend, r.impressions, r.clicks, r.cost, r.roi FROM campaign_data c FULL OUTER JOIN campaign_reports r ON c.campaign_id = r.campaign_id WHERE r.impressions > 5000",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE campaign_id IN (SELECT campaign_id FROM campaign_reports WHERE impressions > 1000)",
      "SELECT c.campaign_id, c.start_date, c.end_date, c.ad_spend, r.impressions, r.clicks, r.cost, r.roi FROM campaign_data c INNER JOIN (SELECT * FROM campaign_reports WHERE impressions > 500) r ON c.campaign_id = r.campaign_id",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE campaign_id = (SELECT campaign_id FROM campaign_reports WHERE clicks > 500)",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE campaign_id = ANY (SELECT campaign_id FROM campaign_reports WHERE impressions > 1000)",
      "SELECT campaign_id, AVG(conversions) AS avg_conversions, AVG(revenue) AS avg_revenue FROM campaign_data GROUP BY campaign_id HAVING AVG(conversions) > 50 AND AVG(revenue) > 5000",
      "SELECT campaign_id, start_date, end_date, ad_spend, conversions, revenue FROM campaign_data WHERE campaign_id = ANY (SELECT campaign_id FROM campaign_reports WHERE roi > 2.0)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM campaign_metrics;",
      "SELECT campaign_id, impressions FROM campaign_metrics;",
      "SELECT campaign_id, clicks FROM campaign_metrics;",
      "SELECT campaign_id, conversions FROM campaign_metrics;",
      "SELECT campaign_id, cost FROM campaign_metrics;",
      "SELECT * FROM purchase_history;",
      "SELECT purchase_id, campaign_id FROM purchase_history;",
      "SELECT campaign_id, purchase_amount FROM purchase_history;",
      "SELECT campaign_id, purchase_date FROM purchase_history;",
      "SELECT * FROM roi_reports;",
      "SELECT report_id, campaign_id FROM roi_reports;",
      "SELECT campaign_id, roi FROM roi_reports;",
      "SELECT campaign_id, report_date FROM roi_reports;",
      "SELECT campaign_id, impressions, clicks FROM campaign_metrics;",
      "SELECT roi, report_date FROM roi_reports;",
      "SELECT campaign_id, purchase_amount, purchase_date FROM purchase_history;",
      "SELECT campaign_id, roi, report_date FROM roi_reports;",
      "SELECT campaign_id, impressions, clicks, conversions FROM campaign_metrics;",
      "SELECT campaign_id, purchase_amount, purchase_date, roi FROM purchase_history JOIN roi_reports ON purchase_history.campaign_id = roi_reports.campaign_id;",
      "SELECT campaign_id, impressions, clicks, conversions, cost FROM campaign_metrics;",
      "SELECT * FROM campaign_metrics WHERE clicks > 100 AND conversions > 10;",
      "SELECT campaign_id, impressions, clicks, conversions, cost FROM campaign_metrics WHERE cost < 500;",
      "SELECT report_id, campaign_id, roi, report_date FROM roi_reports WHERE roi > 0.1 AND report_date > '2022-01-01';",
      "SELECT campaign_id, SUM(conversions) AS total_conversions FROM campaign_metrics GROUP BY campaign_id;",
      "SELECT campaign_id, AVG(impressions) AS avg_impressions FROM campaign_metrics GROUP BY campaign_id HAVING avg_impressions > 1000;",
      "SELECT MAX(conversions) AS max_conversions FROM campaign_metrics;",
      "SELECT campaign_id, SUM(cost) AS total_cost FROM campaign_metrics GROUP BY campaign_id HAVING total_cost > 1000;",
      "SELECT campaign_id, clicks, conversions, cost, purchase_amount, purchase_date FROM campaign_metrics JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id;",
      "SELECT campaign_id, impressions, clicks, conversions, cost, purchase_amount, purchase_date, roi FROM campaign_metrics JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id JOIN roi_reports ON campaign_metrics.campaign_id = roi_reports.campaign_id;",
      "SELECT campaign_id, SUM(conversions) AS total_conversions, AVG(cost) AS avg_cost FROM campaign_metrics JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id GROUP BY campaign_id HAVING total_conversions > 5 AND avg_cost < 50;",
      "SELECT campaign_id, impressions, clicks, conversions, cost, purchase_amount, purchase_date, roi, report_date FROM campaign_metrics JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id JOIN roi_reports ON campaign_metrics.campaign_id = roi_reports.campaign_id WHERE roi > 0.05 AND report_date > '2022-01-01' AND purchase_date > '2022-01-01';",
      "SELECT campaign_id, COUNT(DISTINCT purchase_id) AS total_purchases FROM purchase_history GROUP BY campaign_id;",
      "SELECT campaign_id, AVG(roi) AS avg_roi FROM roi_reports GROUP BY campaign_id HAVING avg_roi > 0.2;",
      "SELECT campaign_id, SUM(impressions) AS total_impressions FROM campaign_metrics GROUP BY campaign_id ORDER BY total_impressions DESC;",
      "SELECT campaign_id, clicks, conversions, cost, purchase_amount, purchase_date, roi, report_date FROM campaign_metrics JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id JOIN roi_reports ON campaign_metrics.campaign_id = roi_reports.campaign_id WHERE cost < 500 AND purchase_amount > 10;",
      "SELECT campaign_id, impressions, clicks, conversions, cost, purchase_amount, purchase_date, roi, report_date FROM campaign_metrics LEFT JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id LEFT JOIN roi_reports ON campaign_metrics.campaign_id = roi_reports.campaign_id;",
      "SELECT campaign_id, impressions, clicks, conversions, cost, purchase_amount, purchase_date, roi, report_date FROM campaign_metrics RIGHT JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id RIGHT JOIN roi_reports ON campaign_metrics.campaign_id = roi_reports.campaign_id;",
      "SELECT campaign_id, impressions, clicks, conversions, cost, purchase_amount, purchase_date, roi, report_date FROM campaign_metrics FULL JOIN purchase_history ON campaign_metrics.campaign_id = purchase_history.campaign_id FULL JOIN roi_reports ON campaign_metrics.campaign_id = roi_reports.campaign_id;",
      "SELECT campaign_id, COUNT(*) AS total_records FROM (SELECT campaign_id FROM campaign_metrics UNION SELECT campaign_id FROM purchase_history UNION SELECT campaign_id FROM roi_reports) AS total_campaigns GROUP BY campaign_id HAVING total_records > 2;",
      "SELECT campaign_id, AVG(roi) AS avg_roi, COUNT(*) AS total_reports FROM roi_reports GROUP BY campaign_id HAVING avg_roi > 0.2 AND total_reports > 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Campaigns;",
      "SELECT campaign_id, campaign_name FROM Campaigns;",
      "SELECT * FROM Clicks;",
      "SELECT click_id, click_date FROM Clicks;",
      "SELECT * FROM Conversions;",
      "SELECT conversion_id, conversion_date FROM Conversions;",
      "SELECT * FROM Costs;",
      "SELECT cost_id, amount FROM Costs;",
      "SELECT c.campaign_id, c.campaign_name, cl.click_id, cl.click_date FROM Campaigns c JOIN Clicks cl ON c.campaign_id = cl.campaign_id;",
      "SELECT c.campaign_id, c.campaign_name, co.conversion_id, co.conversion_date FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id;",
      "SELECT c.campaign_id, c.campaign_name, co.conversion_id, co.conversion_date FROM Campaigns c INNER JOIN Conversions co ON c.campaign_id = co.click_id;",
      "SELECT c.campaign_id, c.campaign_name, co.conversion_id, co.revenue FROM Campaigns c INNER JOIN Conversions co ON c.campaign_id = co.click_id;",
      "SELECT c.campaign_id, c.campaign_name, co.conversion_id, co.revenue FROM Campaigns c LEFT JOIN Conversions co ON c.campaign_id = co.click_id;",
      "SELECT c.campaign_id, c.campaign_name, c.start_date, cl.click_date FROM Campaigns c, Clicks cl WHERE c.campaign_id = cl.campaign_id;",
      "SELECT c.campaign_id, c.campaign_name, c.start_date, cl.click_date FROM Campaigns c INNER JOIN Clicks cl ON c.campaign_id = cl.campaign_id;",
      "SELECT c.campaign_id, c.campaign_name, c.start_date, cl.click_date FROM Campaigns c LEFT JOIN Clicks cl ON c.campaign_id = cl.campaign_id;",
      "SELECT c.campaign_id, SUM(co.revenue) AS total_revenue FROM Campaigns c LEFT JOIN Conversions co ON c.campaign_id = co.click_id GROUP BY c.campaign_id;",
      "SELECT c.campaign_id, COUNT(co.conversion_id) AS total_conversions FROM Campaigns c LEFT JOIN Conversions co ON c.campaign_id = co.click_id GROUP BY c.campaign_id;",
      "SELECT c.campaign_id, AVG(co.revenue) AS avg_revenue FROM Campaigns c LEFT JOIN Conversions co ON c.campaign_id = co.click_id GROUP BY c.campaign_id;",
      "SELECT * FROM Campaigns;",
      "SELECT campaign_id, campaign_name FROM Campaigns WHERE start_date > '2021-01-01';",
      "SELECT campaign_name, SUM(revenue) AS total_revenue FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id GROUP BY campaign_name;",
      "SELECT campaign_name, COUNT(ip_address) AS total_clicks FROM Campaigns c JOIN Clicks cl ON c.campaign_id = cl.campaign_id GROUP BY campaign_name HAVING total_clicks > 100;",
      "SELECT campaign_name, AVG(amount) AS average_cost FROM Campaigns c JOIN Costs co ON c.campaign_id = co.campaign_id GROUP BY campaign_name HAVING average_cost < 500;",
      "SELECT campaign_name, conversion_date, revenue FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id WHERE campaign_name LIKE '%Sale%';",
      "SELECT campaign_name, click_date, ip_address FROM Campaigns c JOIN Clicks cl ON c.campaign_id = cl.campaign_id WHERE click_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT c.campaign_name, cl.click_date, co.amount FROM Campaigns c JOIN Clicks cl ON c.campaign_id = cl.campaign_id JOIN Costs co ON c.campaign_id = co.campaign_id WHERE cl.click_date > '2021-06-30' AND co.amount > 1000;",
      "SELECT campaign_id, campaign_name, start_date, end_date FROM Campaigns WHERE campaign_id IN (SELECT campaign_id FROM Clicks WHERE click_date > '2021-07-01');",
      "SELECT c.campaign_name, co.cost_date, SUM(co.amount) AS total_cost FROM Campaigns c JOIN Costs co ON c.campaign_id = co.campaign_id WHERE co.cost_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY c.campaign_name HAVING total_cost > 5000;",
      "SELECT campaign_name, click_date, revenue FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id WHERE revenue > 1000 ORDER BY revenue DESC;",
      "SELECT campaign_name, COUNT(conversion_id) AS total_conversions FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id GROUP BY campaign_name HAVING total_conversions > 10;",
      "SELECT campaign_name, AVG(revenue) AS average_revenue FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id WHERE campaign_name LIKE '%Promo%' GROUP BY campaign_name;",
      "SELECT campaign_id, campaign_name, start_date, end_date FROM Campaigns WHERE start_date < '2021-09-01' OR end_date > '2022-01-01';",
      "SELECT campaign_name, click_date, ip_address FROM Campaigns c JOIN Clicks cl ON c.campaign_id = cl.campaign_id WHERE ip_address IN (SELECT DISTINCT ip_address FROM Clicks WHERE click_date > '2021-10-01');",
      "SELECT campaign_name, SUM(revenue) AS total_revenue FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id WHERE co.conversion_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY campaign_name;",
      "SELECT campaign_name, COUNT(ip_address) AS total_clicks FROM Campaigns c JOIN Clicks cl ON c.campaign_id = cl.campaign_id GROUP BY campaign_name HAVING total_clicks > (SELECT COUNT(DISTINCT ip_address) FROM Clicks WHERE click_date > '2021-11-01');",
      "SELECT campaign_name, AVG(amount) AS average_cost FROM Campaigns c JOIN Costs co ON c.campaign_id = co.campaign_id GROUP BY campaign_name HAVING average_cost < (SELECT AVG(amount) FROM Costs WHERE cost_date > '2021-06-01');",
      "SELECT campaign_name, MAX(revenue) AS max_revenue FROM Campaigns c JOIN Conversions co ON c.campaign_id = co.click_id GROUP BY campaign_name HAVING max_revenue > 5000;",
      "SELECT campaign_name, MIN(amount) AS min_cost FROM Campaigns c JOIN Costs co ON c.campaign_id = co.campaign_id GROUP BY campaign_name HAVING min_cost < 1000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM campaign_metrics",
      "SELECT campaign_id, clicks, impressions FROM campaign_metrics",
      "SELECT campaign_id, conversions FROM campaign_metrics",
      "SELECT campaign_id, cost FROM campaign_metrics",
      "SELECT * FROM campaign_roi",
      "SELECT campaign_id, revenue, roi FROM campaign_roi",
      "SELECT * FROM campaign_dates",
      "SELECT campaign_id, start_date, end_date FROM campaign_dates",
      "SELECT * FROM campaign_performance",
      "SELECT campaign_id, clicks, conversions, revenue FROM campaign_performance",
      "SELECT * FROM campaign_summary",
      "SELECT campaign_id, total_clicks, total_conversions, total_revenue FROM campaign_summary",
      "SELECT campaign_id, total_impressions FROM campaign_summary",
      "SELECT campaign_id, total_clicks, total_impressions, total_conversions, total_revenue FROM campaign_summary WHERE total_revenue > 1000",
      "SELECT campaign_id, total_clicks, total_impressions, total_conversions, total_revenue FROM campaign_summary WHERE total_impressions > 5000",
      "SELECT campaign_id, total_clicks, total_impressions, total_conversions, total_revenue FROM campaign_summary WHERE total_clicks > 100 AND total_conversions > 10",
      "SELECT campaign_id, total_revenue / total_clicks AS revenue_per_click FROM campaign_summary",
      "SELECT campaign_id, total_revenue / total_conversions AS revenue_per_conversion FROM campaign_summary",
      "SELECT campaign_id, total_revenue / total_clicks AS revenue_per_click FROM campaign_summary WHERE campaign_id = 5",
      "SELECT campaign_id, clicks, impressions, conversions, cost FROM campaign_metrics WHERE clicks > 100 AND impressions < 500",
      "SELECT campaign_id, revenue, cost, roi FROM campaign_roi WHERE revenue > 1000 AND cost < 500",
      "SELECT campaign_id, start_date, end_date FROM campaign_dates WHERE start_date >= '2022-01-01' AND end_date <= '2022-12-31'",
      "SELECT campaign_id, clicks, impressions, conversions, revenue FROM campaign_performance WHERE clicks > 200 AND revenue > 5000",
      "SELECT campaign_id, total_clicks, total_impressions, total_conversions, total_revenue FROM campaign_summary WHERE total_clicks > 500 AND total_revenue > 10000",
      "SELECT campaign_id, clicks, impressions, conversions, cost, revenue FROM campaign_metrics JOIN campaign_performance ON campaign_metrics.campaign_id = campaign_performance.campaign_id",
      "SELECT campaign_id, revenue, cost, roi, total_revenue FROM campaign_roi JOIN campaign_summary ON campaign_roi.campaign_id = campaign_summary.campaign_id",
      "SELECT campaign_id, start_date, end_date, total_clicks, total_impressions FROM campaign_dates JOIN campaign_summary ON campaign_dates.campaign_id = campaign_summary.campaign_id",
      "SELECT campaign_id, clicks, impressions, conversions, revenue, total_revenue FROM campaign_performance JOIN campaign_summary ON campaign_performance.campaign_id = campaign_summary.campaign_id",
      "SELECT campaign_id, clicks, impressions, cost, revenue, total_revenue FROM campaign_metrics JOIN campaign_performance ON campaign_metrics.campaign_id = campaign_performance.campaign_id JOIN campaign_summary ON campaign_performance.campaign_id = campaign_summary.campaign_id",
      "SELECT campaign_metrics.campaign_id, campaign_roi.revenue, campaign_summary.total_revenue FROM campaign_metrics JOIN campaign_roi ON campaign_metrics.campaign_id = campaign_roi.campaign_id JOIN campaign_summary ON campaign_metrics.campaign_id = campaign_summary.campaign_id",
      "SELECT campaign_dates.campaign_id, campaign_performance.clicks, campaign_summary.total_conversions FROM campaign_dates JOIN campaign_performance ON campaign_dates.campaign_id = campaign_performance.campaign_id JOIN campaign_summary ON campaign_dates.campaign_id = campaign_summary.campaign_id",
      "SELECT campaign_metrics.campaign_id, campaign_roi.cost, campaign_dates.start_date, campaign_summary.total_revenue FROM campaign_metrics JOIN campaign_roi ON campaign_metrics.campaign_id = campaign_roi.campaign_id JOIN campaign_dates ON campaign_metrics.campaign_id = campaign_dates.campaign_id JOIN campaign_summary ON campaign_metrics.campaign_id = campaign_summary.campaign_id",
      "SELECT campaign_id, clicks, impressions, conversions, revenue FROM campaign_performance WHERE clicks > 300 AND revenue > 7500",
      "SELECT campaign_id, revenue, cost, roi, total_revenue FROM campaign_roi WHERE revenue > 2000 AND cost < 1000",
      "SELECT campaign_id, start_date, end_date, total_clicks, total_impressions FROM campaign_dates WHERE total_impressions > 1000",
      "SELECT campaign_id, clicks, impressions, conversions, total_revenue FROM campaign_performance WHERE impressions > 400 AND total_revenue > 10000",
      "SELECT campaign_id, clicks, impressions, cost, revenue, total_revenue FROM campaign_metrics JOIN campaign_performance ON campaign_metrics.campaign_id = campaign_performance.campaign_id JOIN campaign_summary ON campaign_performance.campaign_id = campaign_summary.campaign_id WHERE revenue > 5000",
      "SELECT campaign_metrics.campaign_id, campaign_roi.revenue, campaign_summary.total_revenue FROM campaign_metrics JOIN campaign_roi ON campaign_metrics.campaign_id = campaign_roi.campaign_id JOIN campaign_summary ON campaign_metrics.campaign_id = campaign_summary.campaign_id WHERE revenue < 5000",
      "SELECT campaign_dates.campaign_id, campaign_performance.clicks, campaign_summary.total_conversions FROM campaign_dates JOIN campaign_performance ON campaign_dates.campaign_id = campaign_performance.campaign_id JOIN campaign_summary ON campaign_dates.campaign_id = campaign_summary.campaign_id WHERE clicks > 150",
      "SELECT campaign_metrics.campaign_id, campaign_roi.cost, campaign_dates.start_date, campaign_summary.total_revenue FROM campaign_metrics JOIN campaign_roi ON campaign_metrics.campaign_id = campaign_roi.campaign_id JOIN campaign_dates ON campaign_metrics.campaign_id = campaign_dates.campaign_id JOIN campaign_summary ON campaign_metrics.campaign_id = campaign_summary.campaign_id WHERE cost < 1000"
    ]
  }
]