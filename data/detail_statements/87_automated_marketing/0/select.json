[
  {
    "statements": [
      "SELECT * FROM customer_profiles WHERE customer_id = 1;",
      "SELECT first_name, last_name FROM customer_profiles WHERE birthdate > '1990-01-01';",
      "SELECT customer_id, email FROM customer_profiles WHERE phone_number LIKE '%555%';",
      "SELECT * FROM customer_profiles WHERE preferences->>'favorite_color' = 'blue';",
      "SELECT first_name, last_name, email FROM customer_profiles WHERE birthdate < '1980-01-01' ORDER BY last_name ASC;",
      "SELECT * FROM customer_profiles WHERE birthdate BETWEEN '1970-01-01' AND '1980-01-01';",
      "SELECT customer_id, preferences FROM customer_profiles WHERE preferences @> '{\"notify_me\": true}';",
      "SELECT customer_id, phone_number FROM customer_profiles WHERE email ILIKE '%gmail.com';",
      "SELECT * FROM customer_profiles WHERE birthdate < '1995-01-01' AND (preferences->>'newsletter_subscribed')::boolean = false;",
      "SELECT * FROM customer_profiles WHERE preferences -> 'subscription_level' = 'premium';",
      "SELECT customer_id, first_name, last_name FROM customer_profiles WHERE birthdate > '1999-01-01' AND preferences->>'notify_me' = 'true';",
      "SELECT customer_id, email FROM customer_profiles WHERE birthdate > '1985-01-01' AND email LIKE '%company.com';",
      "SELECT * FROM customer_profiles WHERE preferences->'subscription_level' = '\"basic\"';",
      "SELECT customer_id, first_name, last_name FROM customer_profiles WHERE birthdate BETWEEN '1980-01-01' AND '1990-01-01';",
      "SELECT * FROM customer_profiles WHERE customer_id <> 5 AND customer_id <> 10;",
      "SELECT * FROM customer_profiles WHERE phone_number IS NOT NULL;",
      "SELECT * FROM customer_profiles WHERE email NOT LIKE '%yahoo.com';",
      "SELECT customer_id, email FROM customer_profiles WHERE preferences->>'newsletter_subscribed' = 'false';",
      "SELECT customer_id, birthdate, preferences FROM customer_profiles WHERE birthdate < '1975-01-01' AND preferences->>'subscription_level' = 'premium';",
      "SELECT * FROM customer_profiles WHERE email ILIKE '%hotmail.com' OR email ILIKE '%gmail.com';",
      "SELECT * FROM customer_profiles WHERE customer_id = 123;",
      "SELECT first_name, last_name, email FROM customer_profiles WHERE phone_number LIKE '%555%';",
      "SELECT * FROM customer_profiles WHERE birthdate BETWEEN '1990-01-01' AND '2000-12-31';",
      "SELECT customer_id, preferences->'category' FROM customer_profiles WHERE preferences @> '{"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_phone FROM customers;",
      "SELECT customer_name, customer_dob FROM customers;",
      "SELECT * FROM preferences;",
      "SELECT pref_category, pref_value FROM preferences;",
      "SELECT customer_name, pref_category, pref_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE customer_name = 'John Smith';",
      "SELECT * FROM customers WHERE customer_dob > '1990-01-01';",
      "SELECT * FROM preferences WHERE pref_category = 'Food';",
      "SELECT * FROM preferences WHERE pref_value LIKE '%coffee%';",
      "SELECT customer_name, pref_category, pref_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE pref_category = 'Music';",
      "SELECT * FROM customers ORDER BY customer_name ASC;",
      "SELECT * FROM customers ORDER BY customer_dob DESC;",
      "SELECT customer_name, pref_category, pref_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id ORDER BY customer_dob ASC;",
      "SELECT COUNT(*) AS total_customers FROM customers;",
      "SELECT AVG(customer_dob) AS avg_dob FROM customers;",
      "SELECT customer_name, COUNT(pref_id) AS total_prefs FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customer_name HAVING total_prefs > 2;",
      "SELECT customer_name, MAX(pref_value) AS fav_pref FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customer_name;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_dob < '1990-01-01';",
      "SELECT customer_name, pref_category FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id;",
      "SELECT c.customer_name, p.pref_category FROM customers c JOIN preferences p ON c.customer_id = p.customer_id WHERE p.pref_category = 'Food';",
      "SELECT COUNT(*) FROM customers WHERE customer_dob > '1980-01-01';",
      "SELECT customer_name, pref_category, pref_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE pref_value LIKE '%discount%';",
      "SELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_email LIKE '%gmail.com';",
      "SELECT c.customer_name, p.pref_value FROM customers c LEFT JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT c.customer_name, p.pref_category FROM customers c RIGHT JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT AVG(DATEDIFF(NOW(), customer_dob)) AS avg_age FROM customers;",
      "SELECT customer_name, COUNT(pref_id) AS pref_count FROM customers LEFT JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customers.customer_id;",
      "SELECT c.customer_name, COUNT(p.pref_id) AS pref_count FROM customers c LEFT JOIN preferences p ON c.customer_id = p.customer_id GROUP BY c.customer_id ORDER BY pref_count DESC;",
      "SELECT customer_name, MIN(pref_id) AS min_pref_id FROM customers LEFT JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customers.customer_name;",
      "SELECT customer_name, MAX(pref_id) AS max_pref_id FROM customers LEFT JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customers.customer_name;",
      "SELECT customer_name, AVG(pref_id) AS avg_pref_id FROM customers LEFT JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customers.customer_name;",
      "SELECT customer_name, pref_category, COUNT(pref_id) AS pref_count FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customer_name, pref_category ORDER BY pref_count DESC;",
      "SELECT customer_name, pref_category, pref_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE pref_category = 'Tech' AND pref_value like '%gadget%';",
      "SELECT c.customer_name, p.pref_value FROM customers c JOIN preferences p ON c.customer_id = p.customer_id WHERE p.pref_value IN ('Discount', 'Coupon', 'Sale');",
      "SELECT customer_name, pref_category, COUNT(pref_id) AS pref_count FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customer_name, pref_category HAVING pref_count > 1;",
      "SELECT customer_name, pref_category, MAX(pref_id) AS max_pref_id FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customer_name, pref_category ORDER BY max_pref_id DESC;",
      "SELECT c.customer_name, p.pref_category, p.pref_value FROM customers c LEFT JOIN preferences p ON c.customer_id = p.customer_id WHERE p.pref_id IS NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT full_name, email FROM customers;",
      "SELECT customer_id, full_name, email, phone_number, join_date FROM customers WHERE join_date > '2022-01-01';",
      "SELECT * FROM preferences;",
      "SELECT preference_name, preference_value FROM preferences WHERE customer_id = 1;",
      "SELECT * FROM campaigns;",
      "SELECT campaign_name, start_date, end_date FROM campaigns;",
      "SELECT campaign_id, campaign_name FROM campaigns WHERE start_date < '2022-05-01';",
      "SELECT customer_id, full_name, email, preference_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id;",
      "SELECT full_name, email, preference_name, preference_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id;",
      "SELECT c.customer_id, c.full_name, p.preference_name, p.preference_value FROM customers c JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT c.full_name, p.preference_name, c.phone_number, p.preference_value FROM customers c JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT c.full_name AS customer_name, p.preference_name AS customer_preference, c.phone_number, p.preference_value FROM customers c JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT COUNT(*) AS total_customers FROM customers;",
      "SELECT preference_name, COUNT(*) AS preference_count FROM preferences GROUP BY preference_name;",
      "SELECT AVG(customer_id) AS avg_customer_id FROM customers;",
      "SELECT MAX(campaign_id) AS max_campaign_id FROM campaigns;",
      "SELECT MIN(campaign_id) AS min_campaign_id FROM campaigns;",
      "SELECT DISTINCT preference_name FROM preferences;",
      "SELECT * FROM customers WHERE full_name LIKE '%John%';",
      "SELECT * FROM customers ORDER BY join_date DESC LIMIT 5;",
      "SELECT * FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE customers.full_name LIKE 'John%'",
      "SELECT customers.full_name, preferences.preference_name FROM customers INNER JOIN preferences ON customers.customer_id = preferences.customer_id WHERE customers.join_date > '2022-01-01' AND preferences.preference_value = 'high'",
      "SELECT customers.full_name, campaigns.campaign_name FROM customers LEFT JOIN campaigns ON customers.customer_id = campaigns.campaign_id WHERE campaigns.start_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT customers.full_name, COUNT(preferences.preference_id) AS preference_count FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customers.full_name HAVING preference_count > 5",
      "SELECT customers.full_name, AVG(campaigns.campaign_id) AS avg_campaign_id FROM customers LEFT JOIN campaigns ON customers.customer_id = campaigns.campaign_id GROUP BY customers.full_name ORDER BY avg_campaign_id DESC",
      "SELECT campaigns.campaign_name, COUNT(customers.customer_id) AS customer_count FROM campaigns JOIN customers ON campaigns.campaign_id = customers.customer_id WHERE customers.join_date < '2022-06-01' GROUP BY campaigns.campaign_name HAVING customer_count > 10",
      "SELECT customers.full_name FROM customers WHERE EXISTS (SELECT * FROM preferences WHERE customers.customer_id = preferences.customer_id AND preferences.preference_value = 'low')",
      "SELECT customers.full_name, AVG(DATEDIFF(campaigns.end_date, campaigns.start_date)) AS avg_campaign_length FROM customers JOIN campaigns ON customers.customer_id = campaigns.campaign_id GROUP BY customers.full_name ORDER BY avg_campaign_length DESC",
      "SELECT customers.full_name, COUNT(preferences.preference_id) AS preference_count FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE customers.phone_number IS NOT NULL GROUP BY customers.full_name HAVING preference_count < 3",
      "SELECT customers.full_name, preferences.preference_name FROM customers INNER JOIN preferences ON customers.customer_id = preferences.customer_id WHERE customers.full_name LIKE '%Smith%'",
      "SELECT DISTINCT customers.full_name, preferences.preference_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE customers.join_date < '2022-03-01' AND customers.full_name NOT LIKE '%Johnson%'",
      "SELECT customers.full_name, preferences.preference_name, campaigns.campaign_name FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id JOIN campaigns ON customers.customer_id = campaigns.campaign_id WHERE preferences.preference_value IN ('low', 'medium', 'high') AND campaigns.start_date < '2022-05-01'",
      "SELECT customers.full_name, COUNT(*) AS total_campaigns FROM customers LEFT JOIN campaigns ON customers.customer_id = campaigns.campaign_id WHERE campaigns.end_date < '2022-12-31' GROUP BY customers.full_name ORDER BY total_campaigns",
      "SELECT customers.full_name, MAX(DATEDIFF(campaigns.end_date, campaigns.start_date)) AS max_campaign_length FROM customers JOIN campaigns ON customers.customer_id = campaigns.campaign_id GROUP BY customers.full_name ORDER BY max_campaign_length DESC",
      "SELECT COUNT(customers.customer_id) AS total_customers, AVG(DATEDIFF(campaigns.end_date, campaigns.start_date)) AS avg_campaign_length FROM customers LEFT JOIN campaigns ON customers.customer_id = campaigns.campaign_id WHERE customers.join_date < '2022-02-01'",
      "SELECT DISTINCT c1.full_name, c2.full_name AS referral_name FROM customers c1 JOIN customers c2 ON c1.customer_id = c2.customer_id AND c1.full_name <> c2.full_name AND c2.join_date > c1.join_date",
      "SELECT customers.full_name, COUNT(DISTINCT preferences.preference_name) AS unique_preferences FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id GROUP BY customers.full_name HAVING unique_preferences > 2",
      "SELECT customers.full_name, AVG(DATEDIFF('2022-12-31', customers.join_date)) AS avg_days_since_join FROM customers GROUP BY customers.full_name HAVING avg_days_since_join > 365",
      "SELECT customers.full_name, COUNT(preferences.preference_id) AS preference_count FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE customers.full_name LIKE '%Doe%' AND preferences.preference_value = 'medium'",
      "SELECT customers.full_name, MIN(DATEDIFF('2022-12-31', customers.join_date)) AS min_days_since_join FROM customers GROUP BY customers.full_name ORDER BY min_days_since_join ASC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers;",
      "SELECT * FROM preferences;",
      "SELECT preference_type, preference_value FROM preferences;",
      "SELECT * FROM campaigns;",
      "SELECT campaign_name, start_date, end_date FROM campaigns;",
      "SELECT * FROM customer_campaigns;",
      "SELECT customer_id, campaign_id FROM customer_campaigns;",
      "SELECT customer_id, campaign_id, campaign_response FROM customer_campaigns;",
      "SELECT c.first_name, c.last_name, p.preference_type, p.preference_value FROM customers c JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT c.first_name, c.last_name, ca.campaign_name, cc.campaign_response FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id JOIN campaigns ca ON cc.campaign_id = ca.campaign_id;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT * FROM preferences WHERE customer_id = 1;",
      "SELECT * FROM campaigns WHERE campaign_id = 1;",
      "SELECT * FROM customer_campaigns WHERE customer_id = 1;",
      "SELECT * FROM customer_campaigns WHERE campaign_id = 1;",
      "SELECT * FROM customers WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT * FROM customers WHERE email LIKE '%example.com';",
      "SELECT * FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT * FROM customers WHERE first_name LIKE 'A%' AND last_name LIKE '%son';",
      "SELECT * FROM customers WHERE first_name = 'John';",
      "SELECT customer_id, first_name, email FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT c.first_name, p.preference_type FROM customers c JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT c.first_name, cc.campaign_response FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id;",
      "SELECT c.first_name, c.last_name, cmp.campaign_name FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id JOIN campaigns cmp ON cc.campaign_id = cmp.campaign_id;",
      "SELECT c.first_name, p.preference_value FROM customers c LEFT JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT c.customer_id, COUNT(cc.campaign_id) AS total_campaigns FROM customers c LEFT JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.customer_id;",
      "SELECT c.first_name, COUNT(DISTINCT cc.campaign_id) AS num_campaigns FROM customers c LEFT JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name HAVING COUNT(DISTINCT cc.campaign_id) > 2;",
      "SELECT c.first_name, COUNT(cc.campaign_response) AS response_count FROM customers c LEFT JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name;",
      "SELECT c.first_name, SUM(cc.campaign_response = 'Interested') AS total_interested, SUM(cc.campaign_response = 'Not Interested') AS total_not_interested FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name;",
      "SELECT c.first_name, AVG(cc.campaign_response = 'Interested') AS avg_interest FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name;",
      "SELECT c.first_name, MAX(cc.campaign_response) AS max_response FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name;",
      "SELECT c.first_name, p.preference_value FROM customers c JOIN preferences p ON c.customer_id = p.customer_id WHERE p.preference_type = 'Subscription';",
      "SELECT c.first_name, cmp.campaign_name, cc.campaign_response FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id JOIN campaigns cmp ON cc.campaign_id = cmp.campaign_id WHERE cmp.start_date >= '2022-01-01' AND cmp.end_date <= '2022-12-31';",
      "SELECT c.first_name, COUNT(DISTINCT cc.campaign_id) AS num_campaigns FROM customers c LEFT JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name HAVING num_campaigns > 1;",
      "SELECT c.first_name, SUM(cc.campaign_response = 'Interested') AS total_interested, SUM(cc.campaign_response = 'Not Interested') AS total_not_interested FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name HAVING total_interested > 0 AND total_not_interested > 0;",
      "SELECT c.first_name, COUNT(DISTINCT cc.campaign_id) AS num_campaigns FROM customers c LEFT JOIN customer_campaigns cc ON c.customer_id = cc.customer_id GROUP BY c.first_name ORDER BY num_campaigns DESC;",
      "SELECT c.first_name, p.preference_value FROM customers c JOIN preferences p ON c.customer_id = p.customer_id GROUP BY c.first_name, p.preference_value HAVING COUNT(p.preference_id) > 1;",
      "SELECT c.first_name, CASE WHEN cc.campaign_response = 'Interested' THEN 'Yes' ELSE 'No' END AS interested FROM customers c JOIN customer_campaigns cc ON c.customer_id = cc.customer_id;",
      "SELECT c.first_name, CONCAT(c.first_name, ' ', c.last_name) AS full_name FROM customers c;",
      "SELECT c.first_name, COALESCE(cc.campaign_response, 'No Response') AS response_status FROM customers c LEFT JOIN customer_campaigns cc ON c.customer_id = cc.customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_name, phone_number FROM customers;",
      "SELECT * FROM addresses;",
      "SELECT street_address, city, state, postal_code FROM addresses;",
      "SELECT * FROM preferences;",
      "SELECT category, preference_value FROM preferences;",
      "SELECT * FROM purchases;",
      "SELECT purchase_date, total_amount FROM purchases;",
      "SELECT * FROM campaigns;",
      "SELECT campaign_name, start_date, end_date FROM campaigns;",
      "SELECT total_budget, status FROM campaigns;",
      "SELECT customer_name, street_address, city, state, postal_code FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id;",
      "SELECT customer_name, email, category, preference_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id;",
      "SELECT customer_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT campaign_name, start_date, end_date, total_budget, status FROM campaigns WHERE status='Active';",
      "SELECT customer_name, email, phone_number, campaign_name, start_date, total_budget FROM customers JOIN campaigns ON customers.customer_id = campaigns.customer_id ORDER BY start_date DESC;",
      "SELECT customer_name, purchase_date, total_amount, campaign_name, start_date, end_date FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN campaigns ON customers.customer_id = campaigns.customer_id ORDER BY purchase_date DESC, start_date DESC;",
      "SELECT customer_name, email, category, preference_value, campaign_name, start_date FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id JOIN campaigns ON customers.customer_id = campaigns.customer_id WHERE category='Fashion';",
      "SELECT DISTINCT city FROM addresses;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_name ORDER BY total_spent DESC LIMIT 10;",
      "SELECT * FROM customers WHERE date_of_birth > '1990-01-01';",
      "SELECT customer_name, email FROM customers WHERE phone_number LIKE '%555%';",
      "SELECT customers.customer_name, addresses.street_address, addresses.city, addresses.state, addresses.postal_code FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id;",
      "SELECT customers.customer_name, preferences.category, preferences.preference_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id;",
      "SELECT customers.customer_name, purchases.purchase_date, purchases.total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.total_amount > 1000;",
      "SELECT customers.customer_name, purchases.purchase_date, campaigns.campaign_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN campaigns ON purchases.purchase_date BETWEEN campaigns.start_date AND campaigns.end_date;",
      "SELECT preferences.category, AVG(purchases.total_amount) AS avg_total_amount FROM preferences JOIN purchases ON preferences.customer_id = purchases.customer_id GROUP BY preferences.category;",
      "SELECT DISTINCT customers.customer_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.total_amount > 500;",
      "SELECT SUM(total_budget) AS total_campaign_budget FROM campaigns;",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM purchases WHERE total_amount > 2000);",
      "SELECT customer_name, email, category FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE category = 'Fashion';",
      "SELECT customer_name, email, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, email, start_date, end_date, total_budget FROM customers JOIN campaigns ON customers.customer_id = campaigns.customer_id WHERE total_budget > 5000;",
      "SELECT customer_name, email, preference_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE preference_value LIKE '%something%';",
      "SELECT customer_name, email, city, state FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id WHERE city = 'New York' AND state = 'NY';",
      "SELECT customer_name, email, start_date, end_date, total_budget, status FROM customers JOIN campaigns ON customers.customer_id = campaigns.customer_id WHERE status = 'Active';",
      "SELECT AVG(total_amount) AS avg_total_amount FROM purchases;",
      "SELECT campaign_name, SUM(total_amount) AS total_purchase_amount FROM campaigns JOIN purchases ON campaigns.customer_id = purchases.customer_id GROUP BY campaign_name;",
      "SELECT customer_name, email, purchase_date, total_amount, start_date, end_date FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN campaigns ON purchases.purchase_date BETWEEN campaigns.start_date AND campaigns.end_date;",
      "SELECT customer_name, email, category, preference_value FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id WHERE category = 'Electronics' AND preference_value LIKE '%smart%';",
      "SELECT customer_name, email, category, start_date, end_date FROM customers JOIN preferences ON customers.customer_id = preferences.customer_id JOIN campaigns ON preferences.category = campaigns.campaign_name;"
    ]
  }
]