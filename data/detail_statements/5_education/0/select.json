[
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT first_name, last_name FROM students;",
      "SELECT student_id, first_name, last_name FROM students WHERE student_id = 1;",
      "SELECT * FROM students WHERE first_name = 'John';",
      "SELECT * FROM students WHERE last_name LIKE 'Sm%';",
      "SELECT student_id, first_name, last_name FROM students ORDER BY last_name DESC;",
      "SELECT first_name, last_name, address FROM students WHERE address LIKE '%Street%';",
      "SELECT * FROM students WHERE contact_number IS NOT NULL;",
      "SELECT student_id, first_name FROM students WHERE last_name = 'Doe' AND address = '123 Main St';",
      "SELECT COUNT(*) FROM students;",
      "SELECT AVG(student_id) FROM students;",
      "SELECT MAX(student_id) FROM students;",
      "SELECT MIN(student_id) FROM students;",
      "SELECT COUNT(DISTINCT contact_number) FROM students;",
      "SELECT first_name, last_name, contact_number FROM students WHERE contact_number LIKE '555%';",
      "SELECT DISTINCT last_name FROM students;",
      "SELECT first_name, last_name FROM students LIMIT 5;",
      "SELECT * FROM students WHERE student_id BETWEEN 1 AND 10;",
      "SELECT first_name, last_name, address FROM students WHERE student_id IN (1, 2, 3, 4);",
      "SELECT * FROM students WHERE first_name = 'Alice' OR first_name = 'Bob';",
      "SELECT * FROM students;",
      "SELECT first_name, last_name FROM students WHERE contact_number LIKE '%123%';",
      "SELECT student_id, first_name, last_name FROM students WHERE address = '123 Main Street';",
      "SELECT * FROM students ORDER BY last_name ASC;",
      "SELECT student_id, first_name, last_name, address FROM students WHERE student_id > 10 AND student_id < 20;",
      "SELECT COUNT(*) AS total_students FROM students;",
      "SELECT first_name, last_name, address FROM students WHERE first_name LIKE 'A%' AND last_name NOT LIKE 'S%';",
      "SELECT * FROM students WHERE first_name = 'John' OR last_name = 'Doe';",
      "SELECT student_id, first_name, last_name FROM students WHERE address LIKE '%Ave';",
      "SELECT * FROM students WHERE student_id BETWEEN 5 AND 10;",
      "SELECT DISTINCT address FROM students;",
      "SELECT AVG(student_id) AS avg_student_id FROM students;",
      "SELECT * FROM students WHERE first_name LIKE '%a%' OR last_name LIKE '%a%';",
      "SELECT first_name, last_name, contact_number FROM students WHERE contact_number IS NOT NULL;",
      "SELECT first_name, last_name FROM students WHERE contact_number = '1234567890' AND address = '456 Elm St';",
      "SELECT MAX(student_id) AS max_student_id FROM students;",
      "SELECT * FROM students WHERE first_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT first_name, last_name, address, contact_number FROM students WHERE address IN ('123 Main St', '456 Elm St');",
      "SELECT * FROM students WHERE student_id = (SELECT MAX(student_id) FROM students);",
      "SELECT first_name, last_name FROM students WHERE student_id = (SELECT MIN(student_id) FROM students);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT name, address FROM students WHERE student_id = 1;",
      "SELECT student_id, name, address, contact_number FROM students WHERE name LIKE '%John%';",
      "SELECT * FROM courses;",
      "SELECT course_name, instructor_name FROM courses WHERE course_id = 101;",
      "SELECT course_id, course_name, instructor_name, department FROM courses WHERE instructor_name LIKE '%Smith%';",
      "SELECT student_id, name, address FROM students WHERE contact_number = 1234567890;",
      "SELECT course_id, course_name, department FROM courses WHERE course_name LIKE '%Database%';",
      "SELECT name, contact_number FROM students WHERE address IS NULL;",
      "SELECT course_name, department FROM courses WHERE instructor_name IS NOT NULL;",
      "SELECT * FROM students WHERE name = 'Alice' AND address = '123 Main St';",
      "SELECT student_id, name FROM students WHERE contact_number > 1000000000;",
      "SELECT * FROM courses WHERE department = 'Computer Science';",
      "SELECT student_id, name, address, contact_number FROM students WHERE contact_number BETWEEN 1000000000 AND 2000000000;",
      "SELECT course_id, course_name FROM courses WHERE department = 'Mathematics';",
      "SELECT name, contact_number FROM students WHERE address LIKE '%Court%';",
      "SELECT * FROM courses WHERE instructor_name = 'Dr. Brown';",
      "SELECT student_id, name, address FROM students WHERE name = 'Bob' OR name = 'Charlie';",
      "SELECT course_id, course_name, instructor_name, department FROM courses WHERE department = 'Physics';",
      "SELECT name, address, contact_number FROM students WHERE name IN ('Diana', 'Eve', 'Frank');",
      "SELECT * FROM students WHERE student_id = 1;",
      "SELECT name, address FROM students WHERE address LIKE '%Street';",
      "SELECT student_id, name, contact_number FROM students WHERE name LIKE 'J%';",
      "SELECT * FROM students WHERE address IS NULL;",
      "SELECT * FROM courses WHERE department = 'Computer Science';",
      "SELECT course_id, course_name, instructor_name FROM courses WHERE instructor_name IS NOT NULL;",
      "SELECT course_id, course_name, department FROM courses WHERE department IN ('Computer Science', 'Mathematics');",
      "SELECT * FROM students INNER JOIN courses ON students.student_id = courses.course_id;",
      "SELECT s.name, c.course_name FROM students s INNER JOIN courses c ON s.student_id = c.course_id;",
      "SELECT * FROM students LEFT JOIN courses ON students.student_id = courses.course_id;",
      "SELECT s.name, c.course_name FROM students s LEFT JOIN courses c ON s.student_id = c.course_id;",
      "SELECT * FROM students RIGHT JOIN courses ON students.student_id = courses.course_id;",
      "SELECT s.name, c.course_name FROM students s RIGHT JOIN courses c ON s.student_id = c.course_id;",
      "SELECT * FROM students WHERE student_id = (SELECT MAX(student_id) FROM students);",
      "SELECT AVG(contact_number) as avg_contact FROM students;",
      "SELECT COUNT(*) as student_count FROM students;",
      "SELECT course_id, course_name, instructor_name FROM courses ORDER BY course_name ASC;",
      "SELECT name, address, contact_number FROM students WHERE address IS NOT NULL ORDER BY name DESC;",
      "SELECT student_id, name, address FROM students WHERE name LIKE 'A%' UNION SELECT course_id, course_name, instructor_name FROM courses WHERE course_name LIKE 'C%';",
      "SELECT DISTINCT department FROM courses;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT name, address FROM Students;",
      "SELECT student_id, name, address FROM Students WHERE student_id = 1;",
      "SELECT course_name, instructor FROM Courses;",
      "SELECT * FROM Courses WHERE start_date >= '2022-01-01';",
      "SELECT student_id, course_id FROM Enrollments;",
      "SELECT Students.name, Enrollments.course_id FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id;",
      "SELECT Courses.course_name, Enrollments.enrollment_date FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id;",
      "SELECT Students.name AS student_name, Courses.course_name AS course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Courses.course_id = Enrollments.course_id;",
      "SELECT student_id, course_id FROM Enrollments WHERE enrollment_date >= '2022-01-01';",
      "SELECT Students.name, Courses.course_name FROM Students, Courses, Enrollments WHERE Students.student_id = Enrollments.student_id AND Courses.course_id = Enrollments.course_id;",
      "SELECT DISTINCT instructor FROM Courses;",
      "SELECT student_id, COUNT(course_id) AS course_count FROM Enrollments GROUP BY student_id;",
      "SELECT AVG(course_id) AS avg_course_id FROM Enrollments;",
      "SELECT student_id, MAX(course_id) AS max_course_id FROM Enrollments GROUP BY student_id;",
      "SELECT student_id, course_id, enrollment_date FROM Enrollments ORDER BY enrollment_date DESC;",
      "SELECT name, address FROM Students WHERE address LIKE '%Street%';",
      "SELECT student_id, course_id, enrollment_date FROM Enrollments WHERE student_id IN (1, 2, 3);",
      "SELECT * FROM Students LIMIT 10;",
      "SELECT course_name, start_date FROM Courses ORDER BY start_date ASC LIMIT 5;",
      "SELECT * FROM Students WHERE student_id = 1;",
      "SELECT name, address FROM Students WHERE address LIKE '%Street%';",
      "SELECT course_id, course_name, start_date FROM Courses WHERE instructor = 'John Doe';",
      "SELECT Students.name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_id, enrollment_id FROM Enrollments WHERE enrollment_date BETWEEN '2021-01-01' AND '2021-03-31';",
      "SELECT COUNT(*) AS total_students FROM Students;",
      "SELECT MAX(enrollment_date) AS latest_enrollment FROM Enrollments;",
      "SELECT course_id, COUNT(*) AS total_enrollments FROM Enrollments GROUP BY course_id ORDER BY total_enrollments DESC;",
      "SELECT Students.name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Students.address LIKE '%Avenue%';",
      "SELECT AVG(enrollment_id) AS avg_enrollment_id FROM Enrollments;",
      "SELECT student_id, COUNT(*) AS total_courses_enrolled FROM Enrollments WHERE student_id = 2 GROUP BY student_id;",
      "SELECT course_name, COUNT(*) AS total_students_enrolled FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name;",
      "SELECT student_id, course_name, enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Students.name = 'Alice';",
      "SELECT instructor, COUNT(*) AS total_courses_taught FROM Courses GROUP BY instructor HAVING COUNT(*) > 1;",
      "SELECT student_id, enrollment_id FROM Enrollments WHERE student_id IN (1, 3, 5);",
      "SELECT course_id, course_name, MAX(start_date) AS latest_start_date FROM Courses;",
      "SELECT Students.name, COUNT(*) AS total_courses_enrolled FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY Students.name ORDER BY total_courses_enrolled DESC;",
      "SELECT course_id, course_name, AVG(DATEDIFF(NOW(), start_date)) AS avg_days_since_start FROM Courses;",
      "SELECT student_id, enrollment_id, enrollment_date FROM Enrollments WHERE enrollment_date < (SELECT MIN(enrollment_date) FROM Enrollments);",
      "SELECT course_id, course_name, instructor FROM Courses UNION SELECT course_id, course_name, instructor FROM Courses WHERE start_date > '2021-01-01';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT first_name, last_name, address FROM Students;",
      "SELECT student_id, first_name, last_name, phone_number FROM Students;",
      "SELECT * FROM Courses;",
      "SELECT course_name, instructor FROM Courses;",
      "SELECT course_id, course_name, schedule FROM Courses;",
      "SELECT * FROM Registrations;",
      "SELECT student_id, course_id, registration_date FROM Registrations;",
      "SELECT registration_id, course_id FROM Registrations;",
      "SELECT * FROM Grades;",
      "SELECT student_id, course_id, grade FROM Grades;",
      "SELECT grade_id, student_id, comments FROM Grades;",
      "SELECT Students.first_name, Courses.course_name FROM Students, Courses;",
      "SELECT Registrations.student_id, Courses.course_name, Registrations.registration_date FROM Registrations, Courses;",
      "SELECT Grades.student_id, Students.first_name, Courses.course_name, Grades.grade FROM Grades, Students, Courses;",
      "SELECT * FROM Students WHERE student_id = 1;",
      "SELECT course_name, instructor FROM Courses WHERE course_id = 2;",
      "SELECT student_id, course_id, registration_date FROM Registrations WHERE student_id = 3;",
      "SELECT student_id, grade, comments FROM Grades WHERE course_id = 4;",
      "SELECT * FROM Grades WHERE student_id = 5;",
      "SELECT * FROM Students;",
      "SELECT student_id, first_name, last_name FROM Students WHERE address LIKE '%California%';",
      "SELECT course_id, course_name, instructor FROM Courses WHERE schedule='Monday';",
      "SELECT student_id, course_id, registration_date FROM Registrations ORDER BY registration_date DESC;",
      "SELECT course_id, course_name, instructor, schedule FROM Courses WHERE instructor='John Doe' AND schedule='Tuesday';",
      "SELECT student_id, first_name, last_name, address, phone_number FROM Students WHERE phone_number LIKE '%555%';",
      "SELECT student_id, first_name, last_name, course_id, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id;",
      "SELECT course_id, course_name, course_description, instructor FROM Courses WHERE course_description LIKE '%advanced%';",
      "SELECT student_id, registration_date, course_id FROM Registrations WHERE student_id IN (SELECT student_id FROM Students WHERE first_name='Alice');",
      "SELECT student_id, course_id, grade, comments FROM Grades WHERE grade='A' ORDER BY student_id;",
      "SELECT student_id, first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Registrations WHERE course_id=101);",
      "SELECT course_id, course_name, instructor FROM Courses WHERE course_id IN (SELECT course_id FROM Grades WHERE grade='B');",
      "SELECT student_id, AVG(CAST(grade AS INT)) AS average_grade FROM Grades GROUP BY student_id HAVING AVG(CAST(grade AS INT)) > 80;",
      "SELECT student_id, registration_date, course_name, instructor FROM Registrations JOIN Courses ON Registrations.course_id = Courses.course_id;",
      "SELECT student_id, MAX(CAST(grade AS INT)) AS highest_grade FROM Grades GROUP BY student_id ORDER BY highest_grade DESC;",
      "SELECT student_id, first_name, last_name, course_id, grade FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id;",
      "SELECT course_id, course_name, instructor, COUNT(course_id) AS total_students FROM Courses JOIN Registrations ON Courses.course_id = Registrations.course_id GROUP BY course_id;",
      "SELECT student_id, first_name, last_name, course_id, grade, comments FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id WHERE grade IS NULL;",
      "SELECT course_id, course_name, AVG(CAST(grade AS INT)) AS average_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_id HAVING AVG(CAST(grade AS INT)) > 70;",
      "SELECT student_id, first_name, last_name, course_id, grade, comments FROM Students FULL JOIN Grades ON Students.student_id = Grades.student_id ORDER BY student_id DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT first_name, last_name FROM Students WHERE student_id = 1;",
      "SELECT course_name, credit_hours FROM Courses WHERE credit_hours > 3;",
      "SELECT * FROM Enrollments WHERE grade = 'A';",
      "SELECT street_address, city, state, postal_code FROM Addresses WHERE student_id = 2;",
      "SELECT contact_name, relationship, contact_number FROM Contacts WHERE student_id = 3;",
      "SELECT first_name, last_name, address, phone_number FROM Students WHERE student_id = 4;",
      "SELECT course_name, course_description FROM Courses WHERE course_id = 1;",
      "SELECT student_id, course_id, semester FROM Enrollments WHERE semester = 'Fall';",
      "SELECT * FROM Addresses WHERE city = 'New York';",
      "SELECT contact_name, contact_number FROM Contacts WHERE relationship = 'Parent';",
      "SELECT first_name, last_name, phone_number FROM Students WHERE phone_number LIKE '555%';",
      "SELECT course_name, credit_hours FROM Courses WHERE credit_hours < 4;",
      "SELECT * FROM Enrollments WHERE grade = 'B';",
      "SELECT street_address, city, state, postal_code FROM Addresses WHERE city = 'Los Angeles';",
      "SELECT contact_name, contact_number FROM Contacts WHERE student_id = 5;",
      "SELECT first_name, last_name, address, phone_number FROM Students WHERE student_id = 6;",
      "SELECT course_name, course_description, credit_hours FROM Courses WHERE course_name LIKE '%Math%';",
      "SELECT student_id, course_id, semester, grade FROM Enrollments WHERE grade IN ('A', 'A+');",
      "SELECT * FROM Addresses WHERE state = 'CA';",
      "SELECT * FROM Students WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT course_name, course_description FROM Courses WHERE credit_hours > 3;",
      "SELECT student_id, course_id, semester FROM Enrollments WHERE grade = 'A';",
      "SELECT student_id, street_address, city, state FROM Addresses WHERE postal_code = '12345';",
      "SELECT contact_name, relationship FROM Contacts WHERE student_id = 1001;",
      "SELECT * FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id;",
      "SELECT student_id, first_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT student_id, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE semester = 'Spring';",
      "SELECT student_id, contact_name, contact_number FROM Students JOIN Contacts ON Students.student_id = Contacts.student_id;",
      "SELECT student_id, first_name, last_name, street_address, city, state, postal_code FROM Students JOIN Addresses ON Students.student_id = Addresses.student_id;",
      "SELECT student_id, first_name, last_name, course_name, grade, street_address, city, state FROM Students JOIN Addresses ON Students.student_id = Addresses.student_id JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE grade <> 'F';",
      "SELECT first_name, last_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE grade IN ('A', 'B', 'C');",
      "SELECT student_id, contact_number FROM Students JOIN Contacts ON Students.student_id = Contacts.student_id WHERE relationship = 'Parent';",
      "SELECT contact_name, contact_number, city FROM Contacts JOIN Addresses ON Contacts.student_id = Addresses.student_id WHERE state = 'CA';",
      "SELECT first_name, last_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE course_name LIKE '%Math%';",
      "SELECT student_id, course_id, semester, grade FROM Enrollments WHERE semester IN ('Fall', 'Spring');",
      "SELECT contact_name, contact_number, postal_code FROM Contacts JOIN Addresses ON Contacts.student_id = Addresses.student_id WHERE street_address LIKE '%Main Street%';",
      "SELECT student_id, course_name, semester FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE city = 'New York';",
      "SELECT student_id, address_id, street_address, city, state, postal_code FROM Students JOIN Addresses ON Students.student_id = Addresses.student_id WHERE state = 'TX';",
      "SELECT contact_name, relationship, contact_number FROM Contacts JOIN Addresses ON Contacts.student_id = Addresses.student_id WHERE city = 'Chicago';",
      "SELECT student_id, first_name, last_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE city = 'Los Angeles';"
    ]
  }
]