[
  {
    "statements": [
      "SELECT * FROM academic_records;",
      "SELECT id, student_name FROM academic_records;",
      "SELECT student_name, program_name FROM academic_records;",
      "SELECT * FROM academic_records WHERE id = 1;",
      "SELECT student_name FROM academic_records WHERE program_name = 'Computer Science';",
      "SELECT * FROM academic_records WHERE diploma_status = true;",
      "SELECT id, student_name, program_name FROM academic_records WHERE program_name LIKE '%Engineering%';",
      "SELECT * FROM academic_records ORDER BY id DESC;",
      "SELECT DISTINCT program_name FROM academic_records;",
      "SELECT COUNT(*) AS total_records FROM academic_records;",
      "SELECT student_name, program_name FROM academic_records LIMIT 5;",
      "SELECT * FROM academic_records WHERE id > 10 AND diploma_status = true;",
      "SELECT student_name, program_name FROM academic_records WHERE program_name = 'Mathematics' AND diploma_status = false;",
      "SELECT MAX(id) AS max_id FROM academic_records;",
      "SELECT AVG(id) AS avg_id FROM academic_records;",
      "SELECT COUNT(*) AS total_records FROM academic_records WHERE transcript IS NULL;",
      "SELECT program_name, COUNT(*) AS total_students FROM academic_records GROUP BY program_name;",
      "SELECT program_name, AVG(id) AS avg_id FROM academic_records GROUP BY program_name;",
      "SELECT * FROM academic_records WHERE transcript IS NOT NULL;",
      "SELECT student_name, program_name, transcript FROM academic_records WHERE diploma_status = false;",
      "SELECT * FROM academic_records WHERE program_name = 'Computer Science';",
      "SELECT student_name, program_name FROM academic_records WHERE diploma_status = TRUE;",
      "SELECT DISTINCT program_name FROM academic_records;",
      "SELECT student_name, program_name FROM academic_records WHERE id > 100 AND id < 200;",
      "SELECT * FROM academic_records WHERE student_name LIKE '%Smith%';",
      "SELECT COUNT(*) FROM academic_records;",
      "SELECT AVG(id) FROM academic_records;",
      "SELECT MAX(id) FROM academic_records;",
      "SELECT MIN(id) FROM academic_records;",
      "SELECT student_name, program_name, transcript FROM academic_records WHERE diploma_status = FALSE;",
      "SELECT program_name, COUNT(*) FROM academic_records GROUP BY program_name;",
      "SELECT * FROM academic_records ORDER BY id DESC;",
      "SELECT student_name, program_name FROM academic_records WHERE student_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT * FROM academic_records WHERE program_name LIKE '%Engineering%' AND diploma_status = TRUE;",
      "SELECT * FROM academic_records LIMIT 5;",
      "SELECT program_name, AVG(id) AS avg_id FROM academic_records GROUP BY program_name;",
      "SELECT * FROM academic_records WHERE transcript IS NOT NULL;",
      "SELECT program_name, COUNT(*) FROM academic_records WHERE diploma_status = TRUE GROUP BY program_name HAVING COUNT(*) > 1;",
      "SELECT * FROM academic_records WHERE id BETWEEN 50 AND 100;",
      "SELECT student_name, program_name, transcript FROM academic_records WHERE program_name = 'Mathematics' OR program_name = 'Physics';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transcripts;",
      "SELECT student_name, course_name FROM transcripts;",
      "SELECT student_name, grade FROM transcripts WHERE grade = 'A';",
      "SELECT student_name, course_name, grade FROM transcripts WHERE course_name = 'Math';",
      "SELECT student_id, student_name, course_name, grade FROM transcripts WHERE student_id = 101;",
      "SELECT student_name, grade FROM transcripts WHERE grade IN ('A', 'B');",
      "SELECT student_id, certificate_name FROM certificates;",
      "SELECT student_name, certificate_name FROM certificates JOIN transcripts ON certificates.student_id = transcripts.student_id;",
      "SELECT student_id, student_name, course_name, grade, certificate_name FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id;",
      "SELECT transcripts.student_name, certificates.certificate_name FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id WHERE transcripts.student_name LIKE 'J%';",
      "SELECT transcripts.student_name, certificates.certificate_name FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id WHERE transcripts.grade = 'A';",
      "SELECT COUNT(*) FROM transcripts;",
      "SELECT student_name, COUNT(*) FROM transcripts GROUP BY student_name;",
      "SELECT course_name, AVG(grade) FROM transcripts GROUP BY course_name;",
      "SELECT transcripts.student_name, COUNT(certificates.certificate_id) FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id GROUP BY transcripts.student_name;",
      "SELECT course_name, AVG(grade) FROM transcripts WHERE grade IN ('A', 'B') GROUP BY course_name;",
      "SELECT student_name, course_name, grade FROM transcripts ORDER BY student_name ASC;",
      "SELECT student_name, course_name, grade FROM transcripts ORDER BY course_name DESC;",
      "SELECT student_name, course_name, grade FROM transcripts ORDER BY grade ASC, student_name DESC;",
      "SELECT student_name, course_name, grade FROM transcripts LIMIT 5;",
      "SELECT student_name, course_name, grade FROM transcripts LIMIT 5 OFFSET 5;",
      "SELECT * FROM transcripts WHERE student_id = 1;",
      "SELECT student_name, course_name FROM transcripts WHERE grade = 'A';",
      "SELECT student_name, course_name, grade FROM transcripts WHERE grade = 'B' OR grade = 'C';",
      "SELECT student_name, course_name, grade FROM transcripts WHERE course_name LIKE '%Math%';",
      "SELECT student_id, student_name, certificate_name FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id;",
      "SELECT t.student_name, c.certificate_name FROM transcripts t JOIN certificates c ON t.student_id = c.student_id;",
      "SELECT t.student_name, t.course_name, c.certificate_name FROM transcripts t JOIN certificates c ON t.student_id = c.student_id WHERE t.grade = 'A';",
      "SELECT t.student_name, COUNT(c.certificate_id) as certificate_count FROM transcripts t JOIN certificates c ON t.student_id = c.student_id GROUP BY t.student_id;",
      "SELECT t.student_name, AVG(CAST(t.grade AS INT)) as average_grade FROM transcripts t GROUP BY t.student_id;",
      "SELECT student_name, MAX(grade) as highest_grade FROM transcripts GROUP BY student_id;",
      "SELECT student_name, MIN(grade) as lowest_grade FROM transcripts GROUP BY student_id;",
      "SELECT student_name, GROUP_CONCAT(course_name) as courses_completed FROM transcripts GROUP BY student_id;",
      "SELECT student_name, certificate_name, COUNT(*) as certificate_count FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id GROUP BY student_id, certificate_name;",
      "SELECT student_name, certificate_name, COUNT(*) as certificate_count FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id WHERE course_name = 'Computer Science' GROUP BY student_id, certificate_name;",
      "SELECT student_name, certificate_name, COUNT(*) as certificate_count FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id WHERE grade = 'A' GROUP BY student_id, certificate_name;",
      "SELECT student_name, certificate_name, COUNT(*) as certificate_count FROM transcripts JOIN certificates ON transcripts.student_id = certificates.student_id GROUP BY student_id, certificate_name HAVING COUNT(*) > 1;",
      "SELECT student_name, COALESCE(certificate_name, 'No Certificate') as certificate_name FROM transcripts LEFT JOIN certificates ON transcripts.student_id = certificates.student_id;",
      "SELECT student_name, COALESCE(certificate_name, 'No Certificate') as certificate_name FROM transcripts LEFT JOIN certificates ON transcripts.student_id = certificates.student_id WHERE course_name LIKE '%Physics%';",
      "SELECT student_name, certificate_name, COALESCE(GROUP_CONCAT(course_name), 'No Courses Completed') as courses_completed FROM transcripts LEFT JOIN certificates ON transcripts.student_id = certificates.student_id GROUP BY student_id, certificate_name;",
      "SELECT student_name, certificate_name, COALESCE(GROUP_CONCAT(course_name), 'No Courses Completed') as courses_completed FROM transcripts LEFT JOIN certificates ON transcripts.student_id = certificates.student_id WHERE grade = 'B' GROUP BY student_id, certificate_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM AcademicTranscripts;",
      "SELECT student_id, transcript FROM AcademicTranscripts;",
      "SELECT student_id, transcript FROM AcademicTranscripts WHERE student_id = 1;",
      "SELECT * FROM Diplomas;",
      "SELECT student_id, diploma, issuing_date FROM Diplomas;",
      "SELECT student_id, diploma, issuing_date FROM Diplomas WHERE student_id = 1;",
      "SELECT * FROM Certificates;",
      "SELECT student_id, certificate, expiration_date FROM Certificates;",
      "SELECT student_id, certificate, expiration_date FROM Certificates WHERE student_id = 1;",
      "SELECT student_id, transcript, issuing_date FROM AcademicTranscripts JOIN Diplomas ON AcademicTranscripts.student_id = Diplomas.student_id;",
      "SELECT student_id, diploma, expiration_date FROM Diplomas JOIN Certificates ON Diplomas.student_id = Certificates.student_id;",
      "SELECT student_id, transcript, certificate, expiration_date FROM AcademicTranscripts JOIN Certificates ON AcademicTranscripts.student_id = Certificates.student_id;",
      "SELECT * FROM AcademicTranscripts WHERE student_id = 1 OR student_id = 2;",
      "SELECT student_id, diploma FROM Diplomas WHERE issuing_date > '2022-01-01';",
      "SELECT student_id, certificate FROM Certificates WHERE expiration_date < '2023-01-01';",
      "SELECT student_id, transcript FROM AcademicTranscripts WHERE student_id > 2;",
      "SELECT student_id, diploma FROM Diplomas WHERE issuing_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT student_id, certificate FROM Certificates WHERE expiration_date BETWEEN '2023-01-01' AND '2023-12-31';",
      "SELECT student_id, transcript FROM AcademicTranscripts ORDER BY student_id ASC;",
      "SELECT student_id, diploma FROM Diplomas ORDER BY issuing_date DESC;",
      "SELECT * FROM AcademicTranscripts WHERE student_id = 1234",
      "SELECT transcript FROM AcademicTranscripts WHERE student_id = 5678",
      "SELECT * FROM Diplomas WHERE student_id = 4567",
      "SELECT diploma, issuing_date FROM Diplomas WHERE issuing_date BETWEEN '2021-01-01' AND '2021-12-31'",
      "SELECT * FROM Certificates WHERE student_id = 3456",
      "SELECT certificate, expiration_date FROM Certificates WHERE student_id = 7890",
      "SELECT * FROM AcademicTranscripts AS AT JOIN Diplomas AS D ON AT.student_id = D.student_id",
      "SELECT * FROM AcademicTranscripts AS AT JOIN Certificates AS C ON AT.student_id = C.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate FROM AcademicTranscripts AS AT JOIN Diplomas AS D ON AT.student_id = D.student_id JOIN Certificates AS C ON AT.student_id = C.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate, D.issuing_date, C.expiration_date FROM AcademicTranscripts AS AT JOIN Diplomas AS D ON AT.student_id = D.student_id JOIN Certificates AS C ON AT.student_id = C.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate, D.issuing_date, C.expiration_date FROM AcademicTranscripts AS AT LEFT JOIN Diplomas AS D ON AT.student_id = D.student_id LEFT JOIN Certificates AS C ON AT.student_id = C.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate FROM AcademicTranscripts AS AT LEFT JOIN Diplomas AS D ON AT.student_id = D.student_id JOIN Certificates AS C ON AT.student_id = C.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate FROM AcademicTranscripts AS AT JOIN Diplomas AS D ON AT.student_id = D.student_id LEFT JOIN Certificates AS C ON AT.student_id = C.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate FROM AcademicTranscripts AS AT JOIN Certificates AS C ON AT.student_id = C.student_id LEFT JOIN Diplomas AS D ON AT.student_id = D.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate FROM Diplomas AS D JOIN AcademicTranscripts AS AT ON AT.student_id = D.student_id JOIN Certificates AS C ON C.student_id = AT.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate FROM Certificates AS C JOIN AcademicTranscripts AS AT ON AT.student_id = C.student_id JOIN Diplomas AS D ON D.student_id = AT.student_id",
      "SELECT AT.transcript, D.diploma, C.certificate FROM Diplomas AS D JOIN Certificates AS C ON D.student_id = C.student_id JOIN AcademicTranscripts AS AT ON D.student_id = AT.student_id",
      "SELECT * FROM AcademicTranscripts WHERE student_id IN (SELECT student_id FROM Diplomas)",
      "SELECT * FROM Diplomas WHERE issuing_date < (SELECT MAX(issuing_date) FROM Diplomas)",
      "SELECT * FROM Certificates WHERE expiration_date > (SELECT MIN(expiration_date) FROM Certificates)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transcripts;",
      "SELECT student_id, grade, semester FROM transcripts;",
      "SELECT course_name, grade FROM transcripts WHERE student_id = 1;",
      "SELECT * FROM diplomas;",
      "SELECT student_id, date_of_issue FROM diplomas WHERE degree = 'Bachelor';",
      "SELECT diploma_id, student_id, degree FROM diplomas WHERE date_of_issue > '2020-01-01';",
      "SELECT * FROM certificates;",
      "SELECT student_id, certificate_name FROM certificates WHERE issue_date < '2022-01-01';",
      "SELECT certificate_id, student_id FROM certificates WHERE certificate_name = 'Java Developer';",
      "SELECT * FROM courses;",
      "SELECT course_id, course_name, credits FROM courses WHERE credits > 3;",
      "SELECT course_name FROM courses WHERE course_id = 5;",
      "SELECT student_id, course_name, grade FROM transcripts INNER JOIN courses ON transcripts.course_name = courses.course_name;",
      "SELECT student_id, course_name, credits FROM transcripts INNER JOIN courses ON transcripts.course_name = courses.course_name WHERE grade = 'A';",
      "SELECT student_id, degree, certificate_name FROM diplomas INNER JOIN certificates ON diplomas.student_id = certificates.student_id;",
      "SELECT course_id, course_name, credits FROM courses WHERE course_name IN ('Math', 'Physics', 'Chemistry');",
      "SELECT student_id, course_name, semester FROM transcripts WHERE semester = 2;",
      "SELECT course_name, degree FROM courses LEFT JOIN diplomas ON courses.course_name = diplomas.degree;",
      "SELECT student_id, AVG(credits) as avg_credits FROM transcripts INNER JOIN courses ON transcripts.course_name = courses.course_name GROUP BY student_id;",
      "SELECT AVG(credits) as avg_credits FROM courses;",
      "SELECT * FROM transcripts WHERE course_name = 'Math' AND semester = 1;",
      "SELECT student_id, course_name, grade FROM transcripts WHERE semester = 2;",
      "SELECT * FROM diplomas WHERE degree = 'Bachelor' AND date_of_issue BETWEEN '2020-01-01' AND '2021-01-01';",
      "SELECT * FROM certificates WHERE student_id = 1;",
      "SELECT student_id, certificate_name, issue_date FROM certificates WHERE issue_date > '2021-06-01';",
      "SELECT * FROM courses WHERE credits > 3;",
      "SELECT course_id, course_name FROM courses;",
      "SELECT * FROM transcripts t JOIN diplomas d ON t.student_id = d.student_id;",
      "SELECT * FROM transcripts t JOIN certificates c ON t.student_id = c.student_id;",
      "SELECT t.student_id, t.course_name, d.degree FROM transcripts t JOIN diplomas d ON t.student_id = d.student_id;",
      "SELECT t.student_id, t.grade, c.certificate_name FROM transcripts t JOIN certificates c ON t.student_id = c.student_id;",
      "SELECT * FROM transcripts JOIN courses ON transcripts.course_name = courses.course_name;",
      "SELECT t.student_id, t.course_name, SUM(c.credits) AS total_credits FROM transcripts t JOIN courses c ON t.course_name = c.course_name GROUP BY t.student_id;",
      "SELECT t.student_id, MAX(t.grade) AS highest_grade, MIN(t.grade) AS lowest_grade FROM transcripts t GROUP BY t.student_id;",
      "SELECT COUNT(DISTINCT t.student_id) AS total_students FROM transcripts t;",
      "SELECT course_name, COUNT(student_id) AS total_students FROM transcripts GROUP BY course_name;",
      "SELECT course_name, AVG(credits) AS avg_credits FROM courses GROUP BY course_name;",
      "SELECT course_name, COUNT(student_id) AS total_students, AVG(credits) AS avg_credits FROM transcripts t JOIN courses c ON t.course_name = c.course_name GROUP BY course_name;",
      "SELECT course_name, certificate_name, COUNT(student_id) AS total_students FROM transcripts t JOIN certificates c ON t.student_id = c.student_id GROUP BY course_name, certificate_name;",
      "SELECT t.student_id, t.course_name, CASE WHEN t.grade >= 'C' THEN 'Pass' ELSE 'Fail' END AS result FROM transcripts t;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transcripts WHERE student_id = 1;",
      "SELECT course_name, grade FROM transcripts WHERE semester = 'Fall';",
      "SELECT id, course_name, grade FROM transcripts WHERE student_id = 2;",
      "SELECT * FROM transcripts WHERE grade = 'A';",
      "SELECT * FROM diplomas WHERE student_id = 3;",
      "SELECT degree_name, conferred_date FROM diplomas WHERE student_id = 4;",
      "SELECT * FROM certificates WHERE student_id = 5;",
      "SELECT course_name, completion_date FROM certificates WHERE student_id = 6;",
      "SELECT * FROM students WHERE id = 7;",
      "SELECT name, email FROM students WHERE address = '123 Main St';",
      "SELECT * FROM courses WHERE instructor = 'John Doe';",
      "SELECT course_name, credits FROM courses WHERE credits > 3;",
      "SELECT * FROM transcripts WHERE course_name = 'Math 101';",
      "SELECT student_id, course_name FROM certificates WHERE issuer = 'ABC Institution';",
      "SELECT * FROM diplomas WHERE institution = 'XYZ University';",
      "SELECT id, birthdate FROM students WHERE email = 'john.doe@example.com';",
      "SELECT * FROM courses WHERE description LIKE '%programming%';",
      "SELECT student_id, course_name, grade FROM transcripts WHERE semester = 'Spring' AND grade = 'B';",
      "SELECT name, birthdate, email FROM students WHERE id = 8;",
      "SELECT * FROM certificates WHERE issuer = 'XYZ Corp';",
      "SELECT * FROM transcripts WHERE grade='A';",
      "SELECT student_id, course_name FROM transcripts WHERE semester='Spring';",
      "SELECT DISTINCT course_name FROM transcripts;",
      "SELECT * FROM diplomas WHERE conferred_date >= '2020-01-01';",
      "SELECT student_id, degree_name FROM diplomas WHERE institution='ABC University';",
      "SELECT * FROM certificates WHERE issuer='XYZ Institute';",
      "SELECT student_id, COUNT(*) AS total_certificates FROM certificates GROUP BY student_id;",
      "SELECT students.name, courses.course_name FROM students JOIN courses ON students.id = courses.id;",
      "SELECT max(credits) AS max_credits FROM courses;",
      "SELECT courses.instructor, COUNT(*) AS total_courses FROM courses GROUP BY courses.instructor HAVING total_courses > 2;",
      "SELECT transcripts.student_id, transcripts.course_name, diplomas.degree_name FROM transcripts JOIN diplomas ON transcripts.student_id = diplomas.student_id;",
      "SELECT student_id, name FROM students WHERE birthdate < '1995-01-01';",
      "SELECT course_name, COUNT(*) AS total_students FROM transcripts GROUP BY course_name;",
      "SELECT AVG(credits) AS avg_credits FROM courses;",
      "SELECT * FROM transcripts JOIN students ON transcripts.student_id = students.id;",
      "SELECT DISTINCT diploma.degree_name FROM diplomas diploma WHERE diploma.institution='DEF College';",
      "SELECT students.name, courses.course_name FROM students JOIN courses ON students.id = courses.id WHERE courses.instructor='John Doe';",
      "SELECT * FROM certificates WHERE completion_date BETWEEN '2020-01-01' AND '2021-01-01';",
      "SELECT courses.course_name, courses.description FROM courses WHERE credits > 3;",
      "SELECT student_id, COUNT(*) AS total_transcripts FROM transcripts GROUP BY student_id HAVING total_transcripts >= 5;"
    ]
  }
]