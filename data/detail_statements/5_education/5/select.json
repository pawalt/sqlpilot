[
  {
    "statements": [
      "SELECT * FROM class_schedule;",
      "SELECT class_id, course_id, program_id FROM class_schedule;",
      "SELECT * FROM class_schedule WHERE class_day = 'Monday';",
      "SELECT * FROM class_schedule WHERE class_time > '08:00:00' AND class_time < '12:00:00';",
      "SELECT class_id, class_day, class_time FROM class_schedule WHERE program_id = 101;",
      "SELECT class_id, course_id FROM class_schedule WHERE program_id = 201 AND class_day = 'Friday';",
      "SELECT * FROM class_schedule ORDER BY class_time ASC;",
      "SELECT * FROM class_schedule ORDER BY class_day DESC;",
      "SELECT DISTINCT program_id FROM class_schedule;",
      "SELECT MAX(class_id) AS max_class_id FROM class_schedule;",
      "SELECT COUNT(*) AS total_classes FROM class_schedule;",
      "SELECT AVG(class_id) AS avg_class_id FROM class_schedule;",
      "SELECT class_id, class_day, class_time FROM class_schedule LIMIT 5;",
      "SELECT * FROM class_schedule WHERE course_id IS NOT NULL;",
      "SELECT program_id, COUNT(*) AS total_classes FROM class_schedule GROUP BY program_id;",
      "SELECT class_id, class_day, class_time FROM class_schedule WHERE program_id = 301 OR program_id = 302;",
      "SELECT * FROM class_schedule WHERE program_id IN (101, 102, 103);",
      "SELECT * FROM class_schedule WHERE class_day LIKE 'T%';",
      "SELECT program_id, COUNT(*) AS total_classes FROM class_schedule HAVING total_classes > 1;",
      "SELECT * FROM class_schedule WHERE program_id = 201 UNION SELECT * FROM class_schedule WHERE program_id = 301;",
      "SELECT * FROM class_schedule WHERE program_id = 1 AND class_day = 'Monday';",
      "SELECT class_id, course_id FROM class_schedule WHERE class_time BETWEEN '08:00:00' AND '12:00:00';",
      "SELECT DISTINCT program_id FROM class_schedule WHERE course_id = 101 ORDER BY program_id ASC;",
      "SELECT COUNT(*) FROM class_schedule WHERE program_id = 2;",
      "SELECT * FROM class_schedule WHERE course_id IN (101, 102, 103);",
      "SELECT class_id, class_day, class_time FROM class_schedule WHERE program_id = 3 AND course_id = 102 ORDER BY class_day, class_time ASC;",
      "SELECT program_id, COUNT(*) AS total_classes FROM class_schedule GROUP BY program_id HAVING total_classes > 5;",
      "SELECT course_id, COUNT(*) AS total_classes FROM class_schedule GROUP BY course_id HAVING total_classes < 3;",
      "SELECT AVG(class_id) AS average_class_id FROM class_schedule;",
      "SELECT class_id, program_id, class_day FROM class_schedule WHERE class_day LIKE '%day';",
      "SELECT * FROM class_schedule WHERE class_time < '06:00:00';",
      "SELECT MIN(class_id) AS min_class_id FROM class_schedule;",
      "SELECT MAX(class_id) AS max_class_id FROM class_schedule;",
      "SELECT program_id, course_id, COUNT(*) AS total_classes FROM class_schedule GROUP BY program_id, course_id HAVING total_classes >= 2;",
      "SELECT class_id, course_id, program_id, class_day, class_time FROM class_schedule WHERE program_id = 1 OR program_id = 2 ORDER BY program_id, class_time DESC;",
      "SELECT * FROM class_schedule WHERE class_id NOT IN (1, 3, 5);",
      "SELECT program_id, COUNT(*) AS total_classes FROM class_schedule WHERE class_day = 'Wednesday' GROUP BY program_id;",
      "SELECT course_id, COUNT(*) AS total_classes FROM class_schedule WHERE program_id = 2 GROUP BY course_id HAVING total_classes > 3;",
      "SELECT class_id, course_id, program_id FROM class_schedule WHERE class_time >= '10:00:00' AND class_day IN ('Monday', 'Friday');",
      "SELECT * FROM class_schedule WHERE program_id BETWEEN 2 AND 4;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM course_schedule;",
      "SELECT course_name, schedule_time FROM course_schedule;",
      "SELECT course_id, course_name FROM course_schedule WHERE schedule_time > '12:00:00';",
      "SELECT * FROM academic_program;",
      "SELECT program_name FROM academic_program;",
      "SELECT program_id, program_duration FROM academic_program WHERE program_duration > 2;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule JOIN academic_program ON course_schedule.course_id = academic_program.program_id;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule JOIN academic_program ON course_schedule.course_id = academic_program.program_id WHERE program_duration > 2;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule LEFT JOIN academic_program ON course_schedule.course_id = academic_program.program_id;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule RIGHT JOIN academic_program ON course_schedule.course_id = academic_program.program_id;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule INNER JOIN academic_program ON course_schedule.course_id = academic_program.program_id;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule OUTER JOIN academic_program ON course_schedule.course_id = academic_program.program_id;",
      "SELECT course_id, COUNT(*) FROM course_schedule GROUP BY course_id;",
      "SELECT program_name, AVG(program_duration) FROM academic_program GROUP BY program_name;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule WHERE course_id = 1;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule WHERE course_name LIKE '%Math%';",
      "SELECT DISTINCT program_name FROM academic_program;",
      "SELECT course_name, schedule_time, program_name FROM course_schedule WHERE course_id IN (1, 2, 3);",
      "SELECT course_name, schedule_time, program_name FROM course_schedule WHERE course_id NOT IN (4, 5, 6);",
      "SELECT course_name, schedule_time, program_name FROM course_schedule WHERE course_name IS NOT NULL LIMIT 5;",
      "SELECT course_name, schedule_time FROM course_schedule;",
      "SELECT * FROM course_schedule WHERE schedule_time > '10:00:00';",
      "SELECT program_name FROM academic_program;",
      "SELECT course_name, program_name FROM course_schedule INNER JOIN academic_program ON course_schedule.course_id = academic_program.program_id;",
      "SELECT course_name FROM course_schedule WHERE schedule_time BETWEEN '08:00:00' AND '12:00:00';",
      "SELECT course_name, schedule_time FROM course_schedule WHERE course_id = 1;",
      "SELECT DISTINCT program_name FROM academic_program;",
      "SELECT program_name, program_duration FROM academic_program WHERE program_duration >= 4;",
      "SELECT COUNT(*) FROM course_schedule;",
      "SELECT MAX(program_duration) FROM academic_program;",
      "SELECT AVG(program_duration) FROM academic_program;",
      "SELECT MIN(schedule_time) FROM course_schedule;",
      "SELECT course_name, schedule_time FROM course_schedule ORDER BY schedule_time ASC;",
      "SELECT course_name, COUNT(*) AS total_courses FROM course_schedule GROUP BY course_name;",
      "SELECT course_name, schedule_time FROM course_schedule WHERE course_name LIKE '%math%';",
      "SELECT program_name, AVG(program_duration) AS avg_duration FROM academic_program GROUP BY program_name;",
      "SELECT course_name, schedule_time FROM course_schedule WHERE course_name IN ('Mathematics', 'Physics', 'Biology');",
      "SELECT course_name, schedule_time FROM course_schedule WHERE course_name LIKE 'A%' AND schedule_time < '09:00:00';",
      "SELECT program_name, program_duration FROM academic_program WHERE program_name LIKE '%engineering%';",
      "SELECT * FROM academic_program UNION SELECT * FROM course_schedule;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Course;",
      "SELECT course_name, course_description FROM Course;",
      "SELECT course_id, course_name FROM Course WHERE course_id = 1;",
      "SELECT * FROM Program;",
      "SELECT program_name FROM Program WHERE program_type = 'Online';",
      "SELECT * FROM ClassSchedule;",
      "SELECT schedule_date, schedule_time FROM ClassSchedule WHERE class_id = 1;",
      "SELECT Course.course_name, Program.program_name FROM Course INNER JOIN Program ON Course.course_id = Program.program_id;",
      "SELECT Course.course_name, Program.program_name FROM Course JOIN Program ON Course.course_id = Program.program_id;",
      "SELECT Course.course_name, Program.program_name FROM Course LEFT JOIN Program ON Course.course_id = Program.program_id;",
      "SELECT Course.course_name, Program.program_name FROM Course RIGHT JOIN Program ON Course.course_id = Program.program_id;",
      "SELECT Course.course_name, Program.program_name FROM Course FULL JOIN Program ON Course.course_id = Program.program_id;",
      "SELECT Course.course_name, Program.program_name FROM Course INNER JOIN Program ON Course.course_id = Program.program_id WHERE Course.course_id = 1;",
      "SELECT Course.course_name, Program.program_name FROM Course JOIN Program ON Course.course_id = Program.program_id WHERE Program.program_type = 'Online';",
      "SELECT Course.course_name, Program.program_name FROM Course LEFT JOIN Program ON Course.course_id = Program.program_id WHERE Course.course_id = 2;",
      "SELECT Course.course_name, Program.program_name FROM Course RIGHT JOIN Program ON Course.course_id = Program.program_id WHERE Program.program_type = 'Offline';",
      "SELECT Course.course_name, Program.program_name FROM Course FULL JOIN Program ON Course.course_id = Program.program_id WHERE Program.program_type = 'Blended';",
      "SELECT Course.course_name, Program.program_name FROM Course INNER JOIN Program ON Course.course_id = Program.program_id ORDER BY Course.course_name;",
      "SELECT Course.course_name, Program.program_name FROM Course JOIN Program ON Course.course_id = Program.program_id ORDER BY Program.program_name DESC;",
      "SELECT COUNT(*) AS total_courses FROM Course;",
      "SELECT AVG(course_id) AS average_course_id FROM Course;",
      "SELECT * FROM Course JOIN ClassSchedule ON Course.course_id = ClassSchedule.course_id JOIN Program ON ClassSchedule.program_id = Program.program_id WHERE Course.course_name LIKE '%Intro%' AND Program.program_type = 'Online'",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM Course, Program, ClassSchedule WHERE Course.course_id = ClassSchedule.course_id AND Program.program_id = ClassSchedule.program_id ORDER BY schedule_date DESC, schedule_time ASC",
      "SELECT program_id, program_name FROM Program WHERE program_type = 'Offline' AND program_name LIKE '%Engineering%'",
      "SELECT course_name, course_description FROM Course WHERE course_description IS NOT NULL",
      "SELECT course_name, COUNT(course_id) AS num_classes FROM Course, ClassSchedule WHERE Course.course_id = ClassSchedule.course_id GROUP BY course_name",
      "SELECT program_name, COUNT(schedule_id) AS num_schedules FROM Program, ClassSchedule WHERE Program.program_id = ClassSchedule.program_id GROUP BY program_name HAVING num_schedules > 5",
      "SELECT DISTINCT program_name FROM Program",
      "SELECT MAX(schedule_date) AS latest_date FROM ClassSchedule",
      "SELECT MIN(schedule_date) AS earliest_date FROM ClassSchedule",
      "SELECT AVG(schedule_time) AS avg_time FROM ClassSchedule",
      "SELECT SUM(program_id) AS total_programs FROM Program",
      "SELECT course_name, CONCAT(course_name, ': ', course_description) AS full_description FROM Course",
      "SELECT program_name, UPPER(program_type) AS uppercase_type FROM Program",
      "SELECT * FROM Course WHERE course_description LIKE '%advanced%' ORDER BY course_name ASC",
      "SELECT program_name, program_type, COUNT(schedule_id) AS num_schedules FROM Program, ClassSchedule WHERE Program.program_id = ClassSchedule.program_id GROUP BY program_name, program_type ORDER BY num_schedules DESC",
      "SELECT program_name, COUNT(schedule_id) AS num_schedules FROM Program, ClassSchedule WHERE Program.program_id = ClassSchedule.program_id GROUP BY program_name HAVING num_schedules < 5",
      "SELECT course_id, course_name, CONCAT(program_name, ': ', program_type) AS program_info FROM Course, Program, ClassSchedule WHERE Course.course_id = ClassSchedule.course_id AND Program.program_id = ClassSchedule.program_id ORDER BY course_id ASC",
      "SELECT course_name, LENGTH(course_name) AS name_length FROM Course ORDER BY name_length DESC",
      "SELECT program_name, MID(program_type, 1, 2) AS first_two_chars FROM Program",
      "SELECT program_name, RIGHT(program_type, 3) AS last_three_chars FROM Program ORDER BY program_name ASC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM courses;",
      "SELECT course_name, course_description FROM courses;",
      "SELECT course_name, course_description FROM courses WHERE course_id = 1;",
      "SELECT course_id, course_name FROM courses WHERE course_name LIKE '%Programming%';",
      "SELECT * FROM academic_programs;",
      "SELECT program_name FROM academic_programs;",
      "SELECT program_name, program_description FROM academic_programs WHERE program_id = 1;",
      "SELECT * FROM class_schedules;",
      "SELECT course_id, program_id, schedule_date FROM class_schedules;",
      "SELECT * FROM students;",
      "SELECT student_name, program_id FROM students;",
      "SELECT student_name FROM students WHERE program_id = 1;",
      "SELECT courses.course_name, students.student_name FROM courses JOIN students ON courses.course_id = students.program_id;",
      "SELECT course_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id;",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id;",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id WHERE schedule_date >= '2023-01-01';",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id WHERE program_name = 'Computer Science';",
      "SELECT student_name, program_name FROM students JOIN academic_programs ON students.program_id = academic_programs.program_id WHERE program_name = 'Computer Engineering';",
      "SELECT program_name, COUNT(student_id) AS total_students FROM academic_programs JOIN students ON academic_programs.program_id = students.program_id GROUP BY program_name;",
      "SELECT student_name, course_name, program_name FROM students JOIN academic_programs ON students.program_id = academic_programs.program_id JOIN courses ON academic_programs.program_id = courses.course_id;",
      "SELECT * FROM courses;",
      "SELECT course_name, course_description FROM courses WHERE course_id = 1;",
      "SELECT students.student_name, academic_programs.program_name FROM students JOIN academic_programs ON students.program_id = academic_programs.program_id;",
      "SELECT course_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id;",
      "SELECT student_name, program_name FROM students JOIN academic_programs ON students.program_id = academic_programs.program_id WHERE student_id = 1;",
      "SELECT * FROM class_schedules WHERE schedule_date = '2023-01-01';",
      "SELECT course_name, program_name FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id;",
      "SELECT DISTINCT program_name FROM academic_programs;",
      "SELECT course_description FROM courses WHERE course_name LIKE 'M%';",
      "SELECT COUNT(*) AS total_students FROM students;",
      "SELECT DISTINCT course_name, program_name FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id;",
      "SELECT student_name, course_name FROM students JOIN class_schedules ON students.program_id = class_schedules.program_id JOIN courses ON class_schedules.course_id = courses.course_id;",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id WHERE program_id = 1;",
      "SELECT student_name, program_name FROM students JOIN academic_programs ON students.program_id = academic_programs.program_id WHERE program_id != 2;",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id ORDER BY schedule_date DESC;",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id LIMIT 5;",
      "SELECT students.student_name, courses.course_name, class_schedules.schedule_date, class_schedules.schedule_time FROM students JOIN class_schedules ON students.program_id = class_schedules.program_id JOIN courses ON class_schedules.course_id = courses.course_id;",
      "SELECT program_name, COUNT(student_id) AS total_students FROM academic_programs JOIN students ON academic_programs.program_id = students.program_id GROUP BY program_name;",
      "SELECT program_name, AVG(class_schedules.schedule_time) AS avg_schedule_time FROM academic_programs JOIN class_schedules ON academic_programs.program_id = class_schedules.program_id GROUP BY program_name;",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id HAVING COUNT(*) > 1;",
      "SELECT course_name, program_name, schedule_date, schedule_time FROM courses JOIN class_schedules ON courses.course_id = class_schedules.course_id JOIN academic_programs ON class_schedules.program_id = academic_programs.program_id WHERE course_name = 'Mathematics' OR program_name = 'Computer Science';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Course;",
      "SELECT course_name, credit_hours FROM Course WHERE credit_hours > 3;",
      "SELECT * FROM AcademicProgram;",
      "SELECT program_name FROM AcademicProgram WHERE department='Computer Science';",
      "SELECT * FROM ClassSchedule;",
      "SELECT course_id, instructor, start_time, end_time FROM ClassSchedule WHERE program_id=101;",
      "SELECT * FROM Instructor;",
      "SELECT instructor_name FROM Instructor WHERE department='Mathematics';",
      "SELECT * FROM Department;",
      "SELECT department_name FROM Department;",
      "SELECT c.course_name, p.program_name FROM Course c JOIN ClassSchedule cs ON c.course_id=cs.course_id JOIN AcademicProgram p ON p.program_id=cs.program_id;",
      "SELECT department_name, count(*) as num_programs FROM Department JOIN AcademicProgram ON Department.department_id=AcademicProgram.department GROUP BY department_name;",
      "SELECT * FROM Course WHERE course_id IN (SELECT course_id FROM ClassSchedule WHERE instructor='John Doe');",
      "SELECT * FROM Course WHERE credit_hours BETWEEN 2 AND 4;",
      "SELECT * FROM ClassSchedule WHERE start_time < '12:00:00';",
      "SELECT * FROM Course ORDER BY credit_hours DESC;",
      "SELECT program_id, COUNT(*) as num_courses FROM ClassSchedule GROUP BY program_id HAVING COUNT(*) > 5;",
      "SELECT * FROM AcademicProgram WHERE program_id NOT IN (SELECT program_id FROM ClassSchedule);",
      "SELECT department_name, AVG(credit_hours) as avg_credit_hours FROM Course JOIN AcademicProgram ON Course.course_id=ClassSchedule.course_id JOIN Department ON Department.department_id=AcademicProgram.department GROUP BY department_name;",
      "SELECT department_name, MAX(credit_hours) as max_credit_hours FROM Course JOIN AcademicProgram ON Course.course_id=ClassSchedule.course_id JOIN Department ON Department.department_id=AcademicProgram.department GROUP BY department_name;",
      "SELECT * FROM Course;",
      "SELECT course_id, course_name FROM Course WHERE credit_hours > 3;",
      "SELECT program_name, department FROM AcademicProgram WHERE department = 'Computer Science';",
      "SELECT course_id, program_name, instructor FROM ClassSchedule WHERE start_time >= '09:00' AND instructor = 'John Doe';",
      "SELECT ClassSchedule.schedule_id, course_name, program_name, instructor_name FROM ClassSchedule INNER JOIN Course ON ClassSchedule.course_id = Course.course_id INNER JOIN AcademicProgram ON ClassSchedule.program_id = AcademicProgram.program_id INNER JOIN Instructor ON ClassSchedule.instructor = Instructor.instructor_name;",
      "SELECT * FROM ClassSchedule WHERE start_time BETWEEN '08:00' AND '12:00' AND instructor IN (SELECT instructor_name FROM Instructor WHERE department = 'Math');",
      "SELECT course_name, course_id, department_name FROM Course INNER JOIN AcademicProgram ON Course.credit_hours > 3 AND Course.course_id = AcademicProgram.program_id INNER JOIN Department ON AcademicProgram.department = Department.department_name WHERE Department.department_name = 'Engineering';",
      "SELECT COUNT(DISTINCT instructor_id) AS total_instructors FROM Instructor WHERE department = 'Computer Science';",
      "SELECT course_name, instructor_name, start_time, end_time FROM ClassSchedule INNER JOIN Instructor ON ClassSchedule.instructor = Instructor.instructor_name WHERE Instructor.department = 'Engineering';",
      "SELECT program_name, department, COUNT(*) AS total_courses FROM AcademicProgram LEFT JOIN Course ON AcademicProgram.program_id = Course.course_id GROUP BY AcademicProgram.program_id;",
      "SELECT department_name, AVG(credit_hours) AS avg_credit_hours FROM Course INNER JOIN AcademicProgram ON Course.course_id = AcademicProgram.program_id INNER JOIN Department ON AcademicProgram.department = Department.department_name GROUP BY Department.department_name;",
      "SELECT DISTINCT instructor_name, department FROM Instructor WHERE instructor_name LIKE '%Doe%';",
      "SELECT program_name, instructor_name, start_time, end_time FROM ClassSchedule INNER JOIN AcademicProgram ON ClassSchedule.program_id = AcademicProgram.program_id INNER JOIN Instructor ON ClassSchedule.instructor = Instructor.instructor_name WHERE AcademicProgram.department = 'Science' AND Instructor.department = 'Science';",
      "SELECT program_name, COUNT(DISTINCT course_id) AS total_courses FROM AcademicProgram LEFT JOIN ClassSchedule ON AcademicProgram.program_id = ClassSchedule.program_id GROUP BY AcademicProgram.program_id;",
      "SELECT instructor_name, COUNT(schedule_id) AS total_classes FROM ClassSchedule INNER JOIN Instructor ON ClassSchedule.instructor = Instructor.instructor_name GROUP BY instructor_name;",
      "SELECT course_name, department_name, start_time, end_time FROM Course INNER JOIN AcademicProgram ON Course.course_id = AcademicProgram.program_id INNER JOIN ClassSchedule ON Course.course_id = ClassSchedule.course_id INNER JOIN Department ON AcademicProgram.department = Department.department_name WHERE Department.department_name = 'Math';",
      "SELECT program_name, department, AVG(credit_hours) AS avg_credit_hours FROM AcademicProgram LEFT JOIN Course ON AcademicProgram.program_id = Course.course_id GROUP BY AcademicProgram.program_id, AcademicProgram.department;",
      "SELECT department_name, SUM(credit_hours) AS total_credit_hours FROM Course INNER JOIN AcademicProgram ON Course.course_id = AcademicProgram.program_id INNER JOIN Department ON AcademicProgram.department = Department.department_name GROUP BY Department.department_name;",
      "SELECT course_name, program_name, COUNT(schedule_id) AS total_classes FROM ClassSchedule INNER JOIN Course ON ClassSchedule.course_id = Course.course_id INNER JOIN AcademicProgram ON ClassSchedule.program_id = AcademicProgram.program_id GROUP BY Course.course_id, AcademicProgram.program_id;",
      "SELECT department_name, MAX(credit_hours) AS max_credit_hours FROM Course INNER JOIN AcademicProgram ON Course.course_id = AcademicProgram.program_id INNER JOIN Department ON AcademicProgram.department = Department.department_name GROUP BY Department.department_name;"
    ]
  }
]