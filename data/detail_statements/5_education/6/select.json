[
  {
    "statements": [
      "SELECT * FROM StudentTransactions;",
      "SELECT transaction_id, student_id, payment_amount FROM StudentTransactions;",
      "SELECT transaction_id, payment_amount FROM StudentTransactions WHERE student_id = 1;",
      "SELECT AVG(payment_amount) FROM StudentTransactions;",
      "SELECT COUNT(*) FROM StudentTransactions WHERE payment_amount > 1000;",
      "SELECT MAX(payment_amount) FROM StudentTransactions;",
      "SELECT MIN(payment_amount) FROM StudentTransactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT student_id, SUM(payment_amount) AS total_payments FROM StudentTransactions GROUP BY student_id;",
      "SELECT * FROM StudentTransactions ORDER BY transaction_date DESC;",
      "SELECT * FROM StudentTransactions WHERE transaction_date >= '2022-06-01' AND transaction_date <= '2022-06-30';",
      "SELECT DISTINCT(student_id) FROM StudentTransactions;",
      "SELECT student_id, COUNT(student_id) AS num_transactions FROM StudentTransactions GROUP BY student_id HAVING num_transactions > 3;",
      "SELECT payment_amount, fee_amount, financial_aid_amount FROM StudentTransactions WHERE payment_amount > fee_amount;",
      "SELECT AVG(payment_amount), SUM(fee_amount) FROM StudentTransactions GROUP BY student_id;",
      "SELECT * FROM StudentTransactions WHERE financial_aid_amount > payment_amount AND fee_amount > 0;",
      "SELECT AVG(payment_amount) AS avg_payment, MAX(payment_amount) AS max_payment, MIN(payment_amount) AS min_payment FROM StudentTransactions;",
      "SELECT student_id, COUNT(*) AS num_transactions, MAX(payment_amount) AS max_payment FROM StudentTransactions GROUP BY student_id;",
      "SELECT * FROM StudentTransactions WHERE transaction_id IN (1, 2, 3);",
      "SELECT * FROM StudentTransactions WHERE transaction_id BETWEEN 100 AND 200;",
      "SELECT * FROM StudentTransactions WHERE payment_amount >= 5000 AND (fee_amount = 0 OR financial_aid_amount > 0);",
      "SELECT * FROM StudentTransactions WHERE student_id = 100;",
      "SELECT transaction_id, payment_amount FROM StudentTransactions WHERE payment_amount > 1000;",
      "SELECT student_id, SUM(payment_amount) AS total_payments FROM StudentTransactions GROUP BY student_id;",
      "SELECT * FROM StudentTransactions WHERE payment_amount > fee_amount;",
      "SELECT * FROM StudentTransactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT student_id, payment_amount, fee_amount, financial_aid_amount FROM StudentTransactions WHERE student_id = 200 AND payment_amount > 500;",
      "SELECT AVG(payment_amount) AS avg_payment FROM StudentTransactions;",
      "SELECT student_id, COUNT(transaction_id) AS transaction_count FROM StudentTransactions GROUP BY student_id;",
      "SELECT MAX(payment_amount) AS max_payment, MIN(payment_amount) AS min_payment FROM StudentTransactions;",
      "SELECT * FROM StudentTransactions WHERE student_id IN (100, 200, 300);",
      "SELECT student_id, SUM(payment_amount) AS total_payments, SUM(fee_amount) AS total_fees FROM StudentTransactions GROUP BY student_id;",
      "SELECT transaction_id, payment_amount, fee_amount FROM StudentTransactions WHERE payment_amount + fee_amount > 1000;",
      "SELECT student_id, AVG(payment_amount) AS avg_payment FROM StudentTransactions GROUP BY student_id;",
      "SELECT * FROM StudentTransactions WHERE transaction_date >= '2022-01-01' AND transaction_date < '2022-02-01';",
      "SELECT * FROM StudentTransactions WHERE payment_amount > fee_amount AND financial_aid_amount = 0;",
      "SELECT student_id, MAX(payment_amount) AS max_payment FROM StudentTransactions GROUP BY student_id;",
      "SELECT COUNT(*) AS total_transactions FROM StudentTransactions;",
      "SELECT student_id, AVG(payment_amount) AS avg_payment, SUM(fee_amount) AS total_fees FROM StudentTransactions GROUP BY student_id;",
      "SELECT student_id, MIN(payment_amount) AS min_payment, MAX(payment_amount) AS max_payment FROM StudentTransactions GROUP BY student_id;",
      "SELECT * FROM StudentTransactions WHERE payment_amount >= 500 AND fee_amount >= 100;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM student_payments;",
      "SELECT student_id, payment_amount FROM student_payments;",
      "SELECT * FROM student_payments WHERE student_id = 'abc123';",
      "SELECT * FROM student_payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT student_id, SUM(payment_amount) AS total_payment FROM student_payments GROUP BY student_id;",
      "SELECT * FROM financial_transactions;",
      "SELECT transaction_id, transaction_amount, transaction_date FROM financial_transactions;",
      "SELECT * FROM financial_transactions WHERE student_id = 'xyz456';",
      "SELECT transaction_id, transaction_amount FROM financial_transactions WHERE transaction_date >= '2022-01-01';",
      "SELECT * FROM financial_transactions WHERE transaction_type = 'income';",
      "SELECT student_payments.student_id, student_payments.payment_amount, financial_transactions.transaction_amount FROM student_payments INNER JOIN financial_transactions ON student_payments.student_id = financial_transactions.student_id;",
      "SELECT student_id, COUNT(transaction_id) AS num_transactions FROM financial_transactions GROUP BY student_id;",
      "SELECT student_id, AVG(payment_amount) AS average_payment FROM student_payments GROUP BY student_id;",
      "SELECT * FROM student_payments ORDER BY payment_date DESC;",
      "SELECT * FROM financial_transactions ORDER BY transaction_date ASC;",
      "SELECT * FROM student_payments LIMIT 10;",
      "SELECT * FROM financial_transactions LIMIT 5 OFFSET 5;",
      "SELECT * FROM student_payments WHERE payment_amount > 100;",
      "SELECT * FROM financial_transactions WHERE transaction_amount < 0;",
      "SELECT * FROM student_payments WHERE payment_date = '2022-02-15';",
      "SELECT student_id, payment_amount FROM student_payments WHERE payment_amount > 100",
      "SELECT student_id, SUM(payment_amount) AS total_payments FROM student_payments GROUP BY student_id",
      "SELECT student_id, COUNT(*) AS payment_count FROM student_payments GROUP BY student_id HAVING payment_count > 3",
      "SELECT tp.student_id, tp.payment_amount, ft.transaction_amount FROM student_payments tp JOIN financial_transactions ft ON tp.student_id = ft.student_id",
      "SELECT tp.student_id, tp.payment_amount, ft.transaction_amount FROM student_payments tp LEFT JOIN financial_transactions ft ON tp.student_id = ft.student_id",
      "SELECT tp.student_id, tp.payment_amount, ft.transaction_amount FROM student_payments tp RIGHT JOIN financial_transactions ft ON tp.student_id = ft.student_id",
      "SELECT tp.student_id, tp.payment_amount, ft.transaction_amount FROM student_payments tp INNER JOIN financial_transactions ft ON tp.student_id = ft.student_id",
      "SELECT student_id, payment_amount FROM student_payments WHERE EXTRACT(MONTH FROM payment_date) = 10",
      "SELECT student_id, payment_amount FROM student_payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT student_id, payment_amount FROM student_payments WHERE payment_date >= '2022-01-01' AND payment_date <= '2022-06-30'",
      "SELECT student_id, AVG(payment_amount) AS avg_payment_amount FROM student_payments GROUP BY student_id",
      "SELECT student_id, payment_amount FROM student_payments ORDER BY payment_amount DESC",
      "SELECT student_id, payment_amount FROM student_payments ORDER BY payment_amount ASC",
      "SELECT student_id, payment_amount FROM student_payments LIMIT 10",
      "SELECT student_id, payment_amount FROM student_payments OFFSET 5",
      "SELECT student_id, payment_amount FROM student_payments ORDER BY payment_amount DESC LIMIT 5",
      "SELECT student_id, payment_amount FROM student_payments ORDER BY payment_amount ASC LIMIT 3",
      "SELECT student_id, payment_amount FROM student_payments WHERE student_id = '123e4567-e89b-12d3-a456-426614174000'",
      "SELECT student_id, payment_amount FROM student_payments WHERE payment_amount > 50 AND EXTRACT(YEAR FROM payment_date) = 2022",
      "SELECT ft.transaction_id, ft.transaction_amount, ft.transaction_date, ft.transaction_type, sp.student_id FROM financial_transactions ft JOIN student_payments sp ON ft.student_id = sp.student_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_id, student_name FROM Students;",
      "SELECT student_id, enrollment_date FROM Students WHERE enrollment_date >= '2022-01-01';",
      "SELECT DISTINCT enrollment_date FROM Students;",
      "SELECT student_id, student_name, payment_date, amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id;",
      "SELECT Students.student_name, Payments.amount FROM Students LEFT JOIN Payments ON Students.student_id = Payments.student_id;",
      "SELECT student_name, grant_amount FROM Students JOIN FinancialAid ON Students.student_id = FinancialAid.student_id;",
      "SELECT student_name, grant_amount FROM Students JOIN FinancialAid ON Students.student_id = FinancialAid.student_id WHERE grant_amount > 1000;",
      "SELECT student_id, student_name, payment_date, amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE amount >= 500;",
      "SELECT student_id, student_name, enrollment_date FROM Students WHERE student_id IN (SELECT student_id FROM FinancialAid);",
      "SELECT student_name, SUM(amount) AS total_payments FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_id;",
      "SELECT student_id, student_name, COUNT(payment_id) AS num_payments FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_id;",
      "SELECT student_name, AVG(grant_amount) AS avg_grant FROM Students JOIN FinancialAid ON Students.student_id = FinancialAid.student_id GROUP BY student_id;",
      "SELECT student_name, MAX(amount) AS max_payment FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_id;",
      "SELECT student_name, MIN(grant_amount) AS min_grant FROM Students JOIN FinancialAid ON Students.student_id = FinancialAid.student_id GROUP BY student_id;",
      "SELECT student_name, MAX(grant_amount) - MIN(grant_amount) AS grant_range FROM Students JOIN FinancialAid ON Students.student_id = FinancialAid.student_id GROUP BY student_id;",
      "SELECT student_name, MAX(amount) - MIN(amount) AS payment_range FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_id;",
      "SELECT student_name, COUNT(DISTINCT payment_date) AS num_payment_dates FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_id;",
      "SELECT student_name, AVG(amount) AS avg_payment FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_id HAVING AVG(amount) > 500;",
      "SELECT student_name, MAX(amount) AS max_payment FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_id HAVING MAX(amount) > 1000;",
      "SELECT student_name, enrollment_date FROM Students WHERE student_id = 1;",
      "SELECT student_name, payment_date, amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE Students.student_id = 1;",
      "SELECT student_name, grant_amount FROM Students JOIN FinancialAid ON Students.student_id = FinancialAid.student_id WHERE Students.student_id = 1;",
      "SELECT student_name, payment_date, amount, grant_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN FinancialAid ON Students.student_id = FinancialAid.student_id WHERE Students.student_id = 1;",
      "SELECT student_name, enrollment_date FROM Students WHERE enrollment_date >= '2022-01-01';",
      "SELECT student_name, payment_date, amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE Payments.amount > 1000;",
      "SELECT student_id, payment_date, amount FROM Payments WHERE payment_date < '2022-05-01';",
      "SELECT student_name, payment_date, amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE payment_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT student_name, payment_date, amount, grant_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN FinancialAid ON Students.student_id = FinancialAid.student_id WHERE Payments.amount > 1000 AND FinancialAid.grant_amount > 500;",
      "SELECT student_id, COUNT(payment_id) AS num_payments FROM Payments GROUP BY student_id HAVING num_payments > 3;",
      "SELECT student_name, SUM(amount) AS total_amount_paid FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY Students.student_id;",
      "SELECT student_name, AVG(amount) AS avg_payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY Students.student_id HAVING avg_payment_amount > 500;",
      "SELECT student_name, MAX(grant_amount) AS max_grant_amount FROM Students JOIN FinancialAid ON Students.student_id = FinancialAid.student_id;",
      "SELECT student_name, MIN(amount) AS min_payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id;",
      "SELECT student_name, MAX(amount) AS max_payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id;",
      "SELECT student_name, enrollment_date, payment_date, amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE enrollment_date >= '2022-01-01' AND payment_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT student_name, enrollment_date, payment_date, amount FROM Students LEFT JOIN Payments ON Students.student_id = Payments.student_id WHERE payment_id IS NULL;",
      "SELECT student_name, enrollment_date FROM Students WHERE student_name LIKE 'J%';",
      "SELECT student_name, enrollment_date FROM Students WHERE student_name NOT LIKE 'A%';",
      "SELECT student_id, SUM(amount) AS total_amount_paid FROM Payments GROUP BY student_id HAVING total_amount_paid > 2000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_name, student_email FROM Students;",
      "SELECT payment_amount, payment_date FROM Payments;",
      "SELECT fee_name, fee_amount FROM Fees;",
      "SELECT student_name, payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id;",
      "SELECT student_name, payment_amount, payment_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id;",
      "SELECT student_name, fee_amount FROM Students JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id;",
      "SELECT student_name, payment_amount, payment_date, fee_name, fee_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN Fees ON Fees.fee_id = 1;",
      "SELECT student_name, payment_amount, payment_date, fee_name, fee_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id LEFT JOIN Fees ON Payments.payment_amount = Fees.fee_amount;",
      "SELECT student_name, payment_amount, payment_date, fee_name, fee_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id RIGHT JOIN Fees ON Payments.payment_id = Fees.fee_id;",
      "SELECT student_name, payment_amount, payment_date, aid_amount, aid_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id;",
      "SELECT student_name, payment_amount, payment_date, aid_amount, aid_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id LEFT JOIN Financial_Aid ON Payments.payment_amount = Financial_Aid.aid_amount;",
      "SELECT student_name, payment_amount, payment_date, aid_amount, aid_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id RIGHT JOIN Financial_Aid ON Payments.payment_id = Financial_Aid.aid_id;",
      "SELECT student_name, SUM(payment_amount) AS total_payments FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY student_name;",
      "SELECT fee_name, MAX(fee_amount) AS max_fee FROM Fees GROUP BY fee_name;",
      "SELECT student_name, fee_name, fee_amount FROM Students CROSS JOIN Fees;",
      "SELECT student_name, payment_amount, payment_date, aid_amount, aid_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id WHERE payment_amount > 100;",
      "SELECT student_name, payment_amount, payment_date, aid_amount, aid_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id WHERE fee_name = 'Tuition Fees';",
      "SELECT student_name, payment_amount, payment_date, aid_amount, aid_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id WHERE aid_amount > 500;",
      "SELECT student_name, payment_amount, payment_date, aid_amount, aid_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id WHERE payment_date BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT * FROM Students;",
      "SELECT student_name, student_email FROM Students;",
      "SELECT * FROM Payments WHERE payment_amount > 100;",
      "SELECT fee_name, fee_amount FROM Fees WHERE fee_amount < 50;",
      "SELECT Students.student_name, Payments.payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id;",
      "SELECT Students.student_name, Financial_Aid.aid_amount FROM Students LEFT JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id;",
      "SELECT Students.student_name, SUM(Payments.payment_amount) AS total_payments FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY Students.student_name;",
      "SELECT Students.student_name, COUNT(Payments.payment_id) AS num_payments FROM Students LEFT JOIN Payments ON Students.student_id = Payments.student_id GROUP BY Students.student_name;",
      "SELECT Students.student_name, AVG(Payments.payment_amount) AS avg_payment FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY Students.student_name HAVING AVG(Payments.payment_amount) > 50;",
      "SELECT Students.student_name, MAX(Payments.payment_amount) AS max_payment FROM Students JOIN Payments ON Students.student_id = Payments.student_id GROUP BY Students.student_name;",
      "SELECT fee_name, sum(fee_amount) AS total_fees FROM Fees GROUP BY fee_name;",
      "SELECT Students.student_name, Payments.payment_date FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE Payments.payment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT fee_name, fee_amount FROM Fees WHERE fee_amount > (SELECT AVG(fee_amount) FROM Fees);",
      "SELECT Students.student_name, COUNT(Financial_Aid.aid_id) AS num_aid FROM Students LEFT JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id GROUP BY Students.student_name HAVING COUNT(Financial_Aid.aid_id) >= 2;",
      "SELECT Students.student_name, Payments.payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE Payments.payment_amount = (SELECT MAX(payment_amount) FROM Payments);",
      "SELECT Students.student_name, AVG(Financial_Aid.aid_amount) AS avg_aid FROM Students LEFT JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id GROUP BY Students.student_name;",
      "SELECT Students.student_name, SUM(Payments.payment_amount) AS total_payments, SUM(Financial_Aid.aid_amount) AS total_aid FROM Students LEFT JOIN Payments ON Students.student_id = Payments.student_id LEFT JOIN Financial_Aid ON Students.student_id = Financial_Aid.student_id GROUP BY Students.student_name;",
      "SELECT Students.student_name, Payments.payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id WHERE Payments.payment_date > (SELECT MAX(payment_date) FROM Payments);",
      "SELECT fee_name, fee_amount FROM Fees ORDER BY fee_amount DESC;",
      "SELECT Students.student_name, Payments.payment_amount FROM Students JOIN Payments ON Students.student_id = Payments.student_id ORDER BY Payments.payment_amount ASC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM student_payments;",
      "SELECT student_id, payment_amount, payment_date FROM student_payments WHERE payment_amount > 100;",
      "SELECT student_id, student_name FROM students;",
      "SELECT * FROM fees WHERE amount < 50;",
      "SELECT fee_type, amount FROM fees WHERE fee_type = 'Tuition';",
      "SELECT * FROM financial_aid WHERE aid_amount > 500;",
      "SELECT student_id, student_email FROM students WHERE student_email LIKE '%@example.com';",
      "SELECT transaction_id, transaction_type FROM transactions;",
      "SELECT * FROM student_payments ORDER BY payment_date DESC;",
      "SELECT transaction_id, amount FROM transactions WHERE transaction_date > '2022-01-01';",
      "SELECT fee_id, fee_type FROM fees ORDER BY fee_id DESC;",
      "SELECT aid_id, student_id, aid_amount FROM financial_aid WHERE aid_amount < 200;",
      "SELECT student_id, student_name FROM students WHERE student_name LIKE 'A%';",
      "SELECT * FROM transactions WHERE amount BETWEEN 100 AND 200;",
      "SELECT fee_id, amount FROM fees WHERE fee_type = 'Registration';",
      "SELECT * FROM student_payments WHERE payment_amount BETWEEN 50 AND 150;",
      "SELECT aid_id, student_id FROM financial_aid WHERE student_id = 5;",
      "SELECT student_name, student_email FROM students WHERE student_id = 3;",
      "SELECT COUNT(*) AS total_transactions FROM transactions;",
      "SELECT SUM(amount) AS total_payments FROM student_payments;",
      "SELECT * FROM student_payments WHERE payment_amount > 100;",
      "SELECT student_name, payment_amount FROM students JOIN student_payments ON students.student_id = student_payments.student_id;",
      "SELECT fee_type, amount FROM fees WHERE amount BETWEEN 50 AND 100;",
      "SELECT student_name, payment_date FROM students JOIN student_payments ON students.student_id = student_payments.student_id WHERE payment_amount > 200;",
      "SELECT student_name, transaction_type FROM students JOIN transactions ON students.student_id = transactions.transaction_id;",
      "SELECT SUM(payment_amount) AS total_payments FROM student_payments;",
      "SELECT student_name, SUM(payment_amount) AS total_payments FROM students JOIN student_payments ON students.student_id = student_payments.student_id GROUP BY student_name;",
      "SELECT student_name, payment_date FROM students JOIN student_payments ON students.student_id = student_payments.student_id WHERE payment_date > '2022-01-01';",
      "SELECT student_name, payment_amount, fee_type, amount FROM students JOIN student_payments ON students.student_id = student_payments.student_id JOIN fees ON fees.fee_id = student_payments.student_id;",
      "SELECT student_name, payment_date, transaction_date FROM students JOIN student_payments ON students.student_id = student_payments.student_id JOIN transactions ON student_payments.student_id = transactions.transaction_id;",
      "SELECT student_name, SUM(aid_amount) AS total_aid FROM students JOIN financial_aid ON students.student_id = financial_aid.student_id GROUP BY student_name;",
      "SELECT student_name, payment_amount, fee_type, amount, aid_amount FROM students JOIN student_payments ON students.student_id = student_payments.student_id JOIN fees ON fees.fee_id = student_payments.student_id JOIN financial_aid ON financial_aid.student_id = student_payments.student_id;",
      "SELECT student_name, payment_date, transaction_date FROM students JOIN student_payments ON students.student_id = student_payments.student_id JOIN transactions ON student_payments.student_id = transactions.transaction_id WHERE payment_amount > 150;",
      "SELECT student_name, fee_type, amount FROM students JOIN fees ON students.student_id = fees.fee_id ORDER BY amount DESC;",
      "SELECT student_name, payment_amount, fee_type, amount FROM students JOIN student_payments ON students.student_id = student_payments.student_id JOIN fees ON fees.fee_id = student_payments.student_id WHERE payment_amount > amount;",
      "SELECT student_name, payment_date FROM students JOIN student_payments ON students.student_id = student_payments.student_id WHERE payment_date > (SELECT MAX(transaction_date) FROM transactions);",
      "SELECT student_email, SUM(aid_amount) AS total_aid FROM students JOIN financial_aid ON students.student_id = financial_aid.student_id GROUP BY student_email;",
      "SELECT student_name, payment_amount, fee_type, amount FROM students LEFT JOIN student_payments ON students.student_id = student_payments.student_id LEFT JOIN fees ON fees.fee_id = student_payments.student_id;",
      "SELECT student_name, payment_amount, fee_type, amount, aid_amount FROM students LEFT JOIN student_payments ON students.student_id = student_payments.student_id LEFT JOIN fees ON fees.fee_id = student_payments.student_id LEFT JOIN financial_aid ON financial_aid.student_id = student_payments.student_id;",
      "SELECT student_name, payment_date, transaction_date FROM students LEFT JOIN student_payments ON students.student_id = student_payments.student_id LEFT JOIN transactions ON student_payments.student_id = transactions.transaction_id WHERE payment_date < '2022-01-01';"
    ]
  }
]