[
  {
    "statements": [
      "SELECT * FROM Events;",
      "SELECT event_name FROM Events;",
      "SELECT event_date, event_location FROM Events;",
      "SELECT event_name, event_date FROM Events WHERE event_id = 1;",
      "SELECT * FROM Events WHERE event_location = 'New York';",
      "SELECT COUNT(*) FROM Events;",
      "SELECT MAX(event_date) FROM Events;",
      "SELECT MIN(event_date) FROM Events;",
      "SELECT event_id, event_name FROM Events ORDER BY event_date DESC;",
      "SELECT event_name, event_location FROM Events ORDER BY event_name ASC;",
      "SELECT event_id, event_name, event_date FROM Events WHERE event_location LIKE '%Conference%';",
      "SELECT event_id, event_name, event_date FROM Events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT event_name, YEAR(event_date) AS event_year FROM Events;",
      "SELECT event_name, MONTH(event_date) AS event_month FROM Events;",
      "SELECT event_location, COUNT(*) AS total_events FROM Events GROUP BY event_location;",
      "SELECT event_date, COUNT(*) AS event_count FROM Events GROUP BY event_date HAVING COUNT(*) > 1;",
      "SELECT event_name, AVG(event_id) AS avg_id FROM Events GROUP BY event_name;",
      "SELECT DISTINCT event_location FROM Events;",
      "SELECT event_name, CONCAT(event_name, ' at ', event_location) AS event_info FROM Events;",
      "SELECT event_name, UPPER(event_name) AS uppercase_event_name FROM Events;",
      "SELECT event_name FROM Events WHERE event_date > '2021-01-01';",
      "SELECT event_name, event_location FROM Events WHERE event_location = 'New York';",
      "SELECT * FROM Events WHERE event_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT COUNT(*) FROM Events;",
      "SELECT event_id, event_name FROM Events WHERE event_id IN (1, 2, 3);",
      "SELECT event_name FROM Events WHERE event_name LIKE '%conference%';",
      "SELECT DISTINCT event_location FROM Events;",
      "SELECT event_name, event_location FROM Events ORDER BY event_date DESC;",
      "SELECT event_name, COUNT(*) AS num_events FROM Events GROUP BY event_name HAVING COUNT(*) > 1;",
      "SELECT event_name, event_date FROM Events WHERE event_date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY event_date ASC;",
      "SELECT event_name, event_location FROM Events WHERE event_location LIKE '%California%' AND event_name NOT LIKE '%party%';",
      "SELECT event_name, event_date FROM Events WHERE event_date < '2021-01-01' AND event_location = 'San Francisco';",
      "SELECT event_name, event_location FROM Events WHERE event_name IN ('Conference A', 'Conference B', 'Conference C');",
      "SELECT event_name, event_location FROM Events WHERE event_name REGEXP 'Conference [ABC]';",
      "SELECT event_name, event_location, event_date FROM Events WHERE event_date >= '2022-01-01' AND (event_location = 'Seattle' OR event_location = 'Portland');",
      "SELECT event_name FROM Events WHERE event_date < '2020-01-01' OR (event_location = 'Los Angeles' AND event_date > '2022-01-01');",
      "SELECT event_name, event_location FROM Events WHERE event_name IS NOT NULL AND event_location IS NULL;",
      "SELECT event_name, event_location FROM Events WHERE event_location = 'Seattle' AND event_date < '2022-01-01' ORDER BY event_date DESC;",
      "SELECT event_name, event_date FROM Events WHERE event_location IN ('New York', 'Chicago', 'Boston') AND event_date > '2021-01-01';",
      "SELECT event_name, event_location FROM Events WHERE event_id BETWEEN 5 AND 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events WHERE event_date > '2022-01-01';",
      "SELECT event_name, event_description FROM events WHERE event_description IS NOT NULL;",
      "SELECT event_name, event_date, event_location FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM events ORDER BY event_date DESC;",
      "SELECT COUNT(*) FROM events;",
      "SELECT event_name, event_location FROM events WHERE event_location LIKE '%hall%';",
      "SELECT event_id, event_name, event_date FROM events WHERE event_date = CURRENT_DATE;",
      "SELECT event_name, event_date FROM events WHERE event_name ILIKE '%conference%';",
      "SELECT event_name, event_location FROM events WHERE event_location IN ('Auditorium', 'Hall');",
      "SELECT * FROM academic_calendars;",
      "SELECT academic_year, start_date, end_date FROM academic_calendars WHERE academic_year = 2022;",
      "SELECT academic_year, COUNT(*) AS num_events FROM academic_calendars ac JOIN events e ON ac.academic_year = EXTRACT(YEAR FROM e.event_date) GROUP BY academic_year;",
      "SELECT academic_year, start_date, end_date FROM academic_calendars WHERE start_date <= CURRENT_DATE AND end_date >= CURRENT_DATE;",
      "SELECT MAX(academic_year) FROM academic_calendars;",
      "SELECT academic_year, COUNT(*) AS num_events FROM academic_calendars ac LEFT JOIN events e ON ac.academic_year = EXTRACT(YEAR FROM e.event_date) GROUP BY academic_year ORDER BY num_events DESC;",
      "SELECT event_name, event_date FROM events WHERE EXTRACT(MONTH FROM event_date) = 12;",
      "SELECT event_name, event_location FROM events WHERE event_location NOT LIKE '%Room%';",
      "SELECT event_id, event_name, event_date FROM events WHERE event_name ILIKE '%webinar%' OR event_name ILIKE '%workshop%';",
      "SELECT * FROM events WHERE event_date >= '2022-01-01' ORDER BY event_date DESC;",
      "SELECT event_id, event_name, event_location FROM events WHERE event_description IS NOT NULL;",
      "SELECT event_name, event_location FROM events WHERE event_date >= '2022-01-01' AND event_location LIKE '%Hall%';",
      "SELECT event_name, event_date FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT event_name, event_location FROM events WHERE event_location IN ('Hall A', 'Hall B');",
      "SELECT event_name, event_date FROM events WHERE event_name ILIKE '%conference%' AND event_location ILIKE '%center%';",
      "SELECT event_name, event_date FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY event_date DESC;",
      "SELECT * FROM events JOIN academic_calendars ON events.event_date = academic_calendars.start_date;",
      "SELECT event_name, event_date FROM events LEFT JOIN academic_calendars ON events.event_date = academic_calendars.start_date;",
      "SELECT event_name, event_date FROM events RIGHT JOIN academic_calendars ON events.event_date = academic_calendars.start_date;",
      "SELECT event_name, event_date FROM events INNER JOIN academic_calendars ON events.event_date = academic_calendars.start_date;",
      "SELECT event_name, event_date FROM events LEFT JOIN academic_calendars ON events.event_date = academic_calendars.start_date WHERE academic_calendars.end_date < '2022-12-31';",
      "SELECT event_name, event_date FROM events RIGHT JOIN academic_calendars ON events.event_date = academic_calendars.start_date WHERE academic_calendars.academic_year = 2022;",
      "SELECT event_name, event_date FROM events INNER JOIN academic_calendars ON events.event_date = academic_calendars.start_date WHERE events.event_location = 'Auditorium';",
      "SELECT DISTINCT event_location FROM events;",
      "SELECT COUNT(*) FROM events;",
      "SELECT event_location, COUNT(*) AS total_events FROM events GROUP BY event_location;",
      "SELECT academic_year, COUNT(*) AS total_events FROM academic_calendars JOIN events ON academic_calendars.start_date = events.event_date GROUP BY academic_year;",
      "SELECT event_name, event_date, ROW_NUMBER() OVER (ORDER BY event_date DESC) AS event_rank FROM events;",
      "SELECT event_name, event_date, event_location, DENSE_RANK() OVER (PARTITION BY event_location ORDER BY event_date) AS event_rank FROM events;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events WHERE event_id = 1;",
      "SELECT calendar_name FROM calendars WHERE calendar_type = 'public';",
      "SELECT * FROM academic_calendars WHERE academic_year = 2022;",
      "SELECT event_name, event_date FROM events WHERE event_date >= '2022-09-01';",
      "SELECT calendar_name, calendar_year FROM calendars WHERE calendar_name LIKE '%school%';",
      "SELECT * FROM academic_calendars WHERE start_date <= '2022-08-15' AND end_date >= '2022-12-31';",
      "SELECT event_name FROM events WHERE event_date BETWEEN '2022-09-01' AND '2022-12-31';",
      "SELECT calendar_name, calendar_year FROM calendars WHERE calendar_year = 2023;",
      "SELECT event_id, event_name, event_date FROM events ORDER BY event_date DESC;",
      "SELECT calendar_name, calendar_type FROM calendars WHERE calendar_type IN ('public', 'private');",
      "SELECT academic_year, start_date, end_date FROM academic_calendars WHERE end_date <= '2023-06-30';",
      "SELECT DISTINCT calendar_type FROM calendars;",
      "SELECT DISTINCT academic_year FROM academic_calendars;",
      "SELECT COUNT(*) AS event_count FROM events;",
      "SELECT MAX(calendar_year) AS max_calendar_year FROM calendars;",
      "SELECT MIN(academic_year) AS min_academic_year FROM academic_calendars;",
      "SELECT AVG(calendar_year) AS avg_calendar_year FROM calendars;",
      "SELECT SUM(calendar_year) AS total_calendar_year FROM calendars;",
      "SELECT event_name, event_date, calendar_name FROM events INNER JOIN calendars ON events.event_id = calendars.calendar_id;",
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events;",
      "SELECT event_name AS name, event_date AS date FROM events;",
      "SELECT event_name, event_date FROM events WHERE event_date > '2022-01-01';",
      "SELECT * FROM events WHERE event_name LIKE '%conference%';",
      "SELECT event_name, event_date FROM events ORDER BY event_date DESC;",
      "SELECT event_name, event_date FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT event_name, COUNT(*) AS total_events FROM events GROUP BY event_name;",
      "SELECT events.event_id, calendars.calendar_name FROM events JOIN calendars ON events.event_id = calendars.calendar_id;",
      "SELECT events.event_name, academic_calendars.start_date, academic_calendars.end_date FROM events JOIN academic_calendars ON events.event_id = academic_calendars.academic_calendar_id;",
      "SELECT events.event_id, events.event_name, calendars.calendar_name, academic_calendars.academic_year FROM events JOIN calendars ON events.event_id = calendars.calendar_id JOIN academic_calendars ON events.event_id = academic_calendars.academic_calendar_id;",
      "SELECT event_name, calendar_name FROM events LEFT JOIN calendars ON events.event_id = calendars.calendar_id;",
      "SELECT event_name, calendar_name FROM events RIGHT JOIN calendars ON events.event_id = calendars.calendar_id;",
      "SELECT event_name, calendar_name FROM events FULL JOIN calendars ON events.event_id = calendars.calendar_id;",
      "SELECT event_name, COUNT(*) AS total_events FROM events GROUP BY event_name HAVING COUNT(*) > 1;",
      "SELECT event_name, calendar_type, calendar_year FROM events CROSS JOIN calendars;",
      "SELECT event_name, calendar_year FROM events INNER JOIN calendars ON events.event_id = calendars.calendar_id WHERE calendar_year = 2020;",
      "SELECT e.event_name, c.calendar_name FROM events e, calendars c WHERE e.event_id = c.calendar_id;",
      "SELECT event_name, DATE_ADD(event_date, INTERVAL 7 DAY) AS new_date FROM events;",
      "SELECT event_name, IF(event_date > CURDATE(), 'Upcoming Event', 'Past Event') AS event_status FROM events;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events;",
      "SELECT event_id, event_name, event_date FROM events WHERE event_date > CURRENT_DATE;",
      "SELECT * FROM calendars;",
      "SELECT calendar_name, start_date FROM calendars;",
      "SELECT calendar_id, calendar_name, start_date, end_date FROM calendars WHERE end_date <= '2022-12-31';",
      "SELECT * FROM academic_calendars;",
      "SELECT academic_year, semester FROM academic_calendars;",
      "SELECT academic_calendar_id, academic_year, semester, start_date, end_date FROM academic_calendars WHERE start_date >= '2023-01-01';",
      "SELECT * FROM event_calendar_mapping;",
      "SELECT event_id, calendar_id FROM event_calendar_mapping;",
      "SELECT mapping_id, event_id, calendar_id FROM event_calendar_mapping WHERE event_id = 5;",
      "SELECT e.event_name, c.calendar_id FROM events e JOIN event_calendar_mapping m ON e.event_id = m.event_id JOIN calendars c ON m.calendar_id = c.calendar_id;",
      "SELECT a.academic_year, e.event_name, c.calendar_name FROM academic_calendars a JOIN event_calendar_mapping m ON a.academic_calendar_id = m.mapping_id JOIN events e ON m.event_id = e.event_id JOIN calendars c ON m.calendar_id = c.calendar_id;",
      "SELECT e.event_name, c.calendar_name, a.academic_year FROM events e JOIN event_calendar_mapping m ON e.event_id = m.event_id JOIN calendars c ON m.calendar_id = c.calendar_id JOIN academic_calendars a ON m.mapping_id = a.academic_calendar_id;",
      "SELECT e.event_name, e.event_date, c.calendar_name, c.start_date, a.academic_year, a.semester FROM events e JOIN event_calendar_mapping m ON e.event_id = m.event_id JOIN calendars c ON m.calendar_id = c.calendar_id JOIN academic_calendars a ON m.mapping_id = a.academic_calendar_id;",
      "SELECT e.event_id, e.event_name, c.calendar_name, a.academic_year FROM events e JOIN event_calendar_mapping m ON e.event_id = m.event_id JOIN calendars c ON m.calendar_id = c.calendar_id JOIN academic_calendars a ON m.mapping_id = a.academic_calendar_id WHERE a.semester = 'Fall';",
      "SELECT e.event_id, e.event_name, c.calendar_name, a.academic_year FROM events e JOIN event_calendar_mapping m ON e.event_id = m.event_id JOIN calendars c ON m.calendar_id = c.calendar_id JOIN academic_calendars a ON m.mapping_id = a.academic_calendar_id WHERE c.start_date >= '2022-01-01' AND a.semester = 'Spring';",
      "SELECT * FROM events;",
      "SELECT event_id, event_name, event_date FROM events WHERE location='New York';",
      "SELECT * FROM calendars WHERE start_date >= '2022-01-01' AND end_date <= '2022-12-31';",
      "SELECT event_id, event_name, location FROM events INNER JOIN event_calendar_mapping ON events.event_id = event_calendar_mapping.event_id WHERE calendar_id = 1;",
      "SELECT event_name, location FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT academic_year, semester FROM academic_calendars WHERE start_date <= '2022-01-01' AND end_date >= '2022-12-31';",
      "SELECT * FROM events WHERE event_name LIKE '%Conference%';",
      "SELECT event_id, event_name, location FROM events WHERE event_date > '2022-06-01' AND event_date < '2022-12-31';",
      "SELECT calendar_name, start_date, end_date FROM calendars WHERE start_date < end_date;",
      "SELECT event_id, event_name, event_date, location FROM events WHERE event_name IN ('Seminar', 'Workshop');",
      "SELECT event_id, event_name, event_date, location FROM events WHERE location IS NOT NULL;",
      "SELECT calendar_name, start_date, end_date FROM calendars ORDER BY start_date DESC;",
      "SELECT event_id, event_name, event_date, location FROM events LEFT JOIN event_calendar_mapping ON events.event_id = event_calendar_mapping.event_id;",
      "SELECT * FROM academic_calendars WHERE semester = 'Fall' AND academic_year = '2022';",
      "SELECT event_name FROM events WHERE event_date = (SELECT MAX(event_date) FROM events);",
      "SELECT calendar_id, calendar_name, start_date, end_date FROM calendars WHERE EXTRACT(DAY FROM start_date) = 1;",
      "SELECT event_name FROM events WHERE event_name LIKE 'S%' ORDER BY event_date ASC;",
      "SELECT event_id, event_name, location FROM events WHERE location LIKE '%Center%';",
      "SELECT event_name, location FROM events WHERE event_date BETWEEN '2023-01-01' AND '2023-06-30';",
      "SELECT calendar_name, start_date, end_date FROM calendars WHERE calendar_id IN (SELECT calendar_id FROM event_calendar_mapping WHERE event_id = 3);"
    ]
  },
  {
    "statements": [
      "SELECT event_name FROM events;",
      "SELECT event_name, event_date FROM events;",
      "SELECT * FROM events;",
      "SELECT event_name, event_location FROM events;",
      "SELECT calendar_name FROM calendars;",
      "SELECT * FROM calendars;",
      "SELECT event_id, calendar_id FROM event_calendars;",
      "SELECT academic_year, start_date FROM academic_calendars;",
      "SELECT * FROM academic_calendars;",
      "SELECT school_name FROM school_info;",
      "SELECT school_name, school_location FROM school_info;",
      "SELECT * FROM school_info;",
      "SELECT event_name, event_location FROM events WHERE event_date > '2023-01-01';",
      "SELECT calendar_name, calendar_id FROM calendars WHERE calendar_id = 1;",
      "SELECT event_name, event_date, event_location FROM events WHERE event_location = 'New York';",
      "SELECT academic_year, start_date, end_date FROM academic_calendars WHERE academic_year = '2023-2024';",
      "SELECT school_name, school_location FROM school_info WHERE school_location = 'California';",
      "SELECT event_name, event_location FROM events ORDER BY event_date ASC;",
      "SELECT event_name, event_location FROM events ORDER BY event_date DESC;",
      "SELECT event_name, event_location FROM events LIMIT 5;",
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events WHERE event_location = 'New York';",
      "SELECT calendar_name, event_name FROM calendars JOIN event_calendars ON calendars.calendar_id = event_calendars.calendar_id JOIN events ON event_calendars.event_id = events.event_id;",
      "SELECT event_name, academic_year FROM events JOIN event_calendars ON events.event_id = event_calendars.event_id JOIN academic_calendars ON event_calendars.calendar_id = academic_calendars.academic_calendar_id;",
      "SELECT * FROM events WHERE event_id IN (SELECT event_id FROM event_calendars WHERE calendar_id = 1);",
      "SELECT school_name, school_location FROM school_info WHERE school_id IN (SELECT calendar_id FROM event_calendars WHERE event_id IN (SELECT event_id FROM events WHERE event_location = 'California'));",
      "SELECT DISTINCT(event_location) FROM events;",
      "SELECT event_name, event_date FROM events WHERE event_date BETWEEN '2023-01-01' AND '2023-12-31';",
      "SELECT event_name, start_date, end_date FROM events JOIN academic_calendars ON events.event_id = academic_calendars.academic_calendar_id;",
      "SELECT calendar_name, COUNT(event_id) AS num_events FROM calendars JOIN event_calendars ON calendars.calendar_id = event_calendars.calendar_id GROUP BY calendar_name;",
      "SELECT event_name FROM events WHERE event_date >= CURDATE();",
      "SELECT event_name, school_name FROM events JOIN event_calendars ON events.event_id = event_calendars.event_id JOIN school_info ON event_calendars.calendar_id = school_info.school_id;",
      "SELECT event_name, calendar_name, start_date, end_date FROM events JOIN event_calendars ON events.event_id = event_calendars.event_id JOIN academic_calendars ON event_calendars.calendar_id = academic_calendars.academic_calendar_id;",
      "SELECT event_name, event_location FROM events WHERE event_date < '2022-06-30';",
      "SELECT calendar_name, start_date, end_date FROM calendars JOIN academic_calendars ON calendars.calendar_id = academic_calendars.academic_calendar_id;",
      "SELECT event_name, school_name FROM events JOIN event_calendars ON events.event_id = event_calendars.event_id JOIN school_info ON event_calendars.calendar_id = school_info.school_id WHERE school_location = 'Texas';",
      "SELECT COUNT(DISTINCT event_date) AS num_dates FROM events;",
      "SELECT event_name, event_location FROM events ORDER BY event_date DESC LIMIT 5;",
      "SELECT calendar_name, COUNT(DISTINCT event_id) AS num_events FROM calendars JOIN event_calendars ON calendars.calendar_id = event_calendars.calendar_id GROUP BY calendar_name HAVING num_events > 3;",
      "SELECT event_name, event_date FROM events WHERE event_date = (SELECT MAX(event_date) FROM events);"
    ]
  }
]