[
  {
    "statements": [
      "SELECT * FROM DemandForecastingData WHERE product_id = 1",
      "SELECT * FROM DemandForecastingData WHERE forecast_date = '2022-10-01'",
      "SELECT forecasted_demand FROM DemandForecastingData WHERE product_id = 3",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE production_schedule_id = 2",
      "SELECT COUNT(*) AS total_records FROM DemandForecastingData",
      "SELECT MAX(forecasted_demand) AS max_demand FROM DemandForecastingData",
      "SELECT product_id, forecast_date FROM DemandForecastingData WHERE production_schedule_id = 1 AND forecasted_demand > 100",
      "SELECT AVG(forecasted_demand) AS avg_demand FROM DemandForecastingData WHERE product_id = 4",
      "SELECT MIN(forecasted_demand) AS min_demand FROM DemandForecastingData WHERE forecast_date BETWEEN '2022-09-01' AND '2022-09-30'",
      "SELECT forecasted_demand FROM DemandForecastingData WHERE product_id = 5 AND forecast_date BETWEEN '2022-10-01' AND '2022-10-31'",
      "SELECT * FROM DemandForecastingData WHERE forecast_date > '2022-11-01'",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecast_date < '2022-08-01'",
      "SELECT SUM(forecasted_demand) AS total_demand FROM DemandForecastingData WHERE product_id = 6",
      "SELECT * FROM DemandForecastingData WHERE forecast_date >= '2022-09-01' AND forecast_date <= '2022-09-30'",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE product_id = 7 AND production_schedule_id = 3",
      "SELECT DISTINCT product_id FROM DemandForecastingData",
      "SELECT * FROM DemandForecastingData WHERE product_id IN (8, 9, 10)",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE production_schedule_id = 4",
      "SELECT * FROM DemandForecastingData WHERE forecast_date BETWEEN '2022-07-01' AND '2022-07-31'",
      "SELECT forecast_date, production_schedule_id FROM DemandForecastingData ORDER BY forecast_date ASC",
      "SELECT * FROM DemandForecastingData WHERE forecast_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE product_id = 123 AND forecast_date = '2022-06-15';",
      "SELECT MAX(forecasted_demand) AS max_demand FROM DemandForecastingData;",
      "SELECT product_id, SUM(forecasted_demand) AS total_demand FROM DemandForecastingData GROUP BY product_id;",
      "SELECT * FROM DemandForecastingData ORDER BY forecast_date DESC;",
      "SELECT AVG(forecasted_demand) AS avg_demand FROM DemandForecastingData;",
      "SELECT DISTINCT product_id FROM DemandForecastingData;",
      "SELECT product_id, COUNT(*) AS num_forecasts FROM DemandForecastingData GROUP BY product_id HAVING num_forecasts > 10;",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE production_schedule_id IN (SELECT production_schedule_id FROM ProductionSchedule WHERE status = 'completed');",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecasted_demand > (SELECT AVG(forecasted_demand) FROM DemandForecastingData);",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE product_id = 456 AND forecast_date > '2022-08-01' AND forecasted_demand > 100;",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecast_date IN ('2022-03-15', '2022-07-20', '2022-11-10');",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE product_id BETWEEN 100 AND 200;",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecast_date < '2022-05-01' OR forecasted_demand < 50;",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecast_date = (SELECT MIN(forecast_date) FROM DemandForecastingData);",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecast_date = (SELECT MAX(forecast_date) FROM DemandForecastingData);",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecasted_demand > 200 AND forecasted_demand < 300;",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE product_id = 789 AND (forecast_date < '2022-04-01' OR forecast_date > '2022-10-01');",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE product_id = 345 AND forecast_date = '2022-09-15' AND forecasted_demand >= 150;",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecast_date BETWEEN '2022-06-01' AND '2022-08-31' AND forecasted_demand < 50;",
      "SELECT product_id, forecast_date, forecasted_demand FROM DemandForecastingData WHERE forecasted_demand > ALL (SELECT forecasted_demand FROM DemandForecastingData WHERE product_id = 123);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM demand_forecasting_data;",
      "SELECT product_name, demand FROM demand_forecasting_data;",
      "SELECT forecast_date FROM demand_forecasting_data WHERE demand > 100;",
      "SELECT * FROM production_schedules;",
      "SELECT product_name, production_quantity FROM production_schedules;",
      "SELECT production_date FROM production_schedules WHERE production_quantity > 500;",
      "SELECT * FROM demand_forecasting_data JOIN production_schedules ON demand_forecasting_data.product_name = production_schedules.product_name;",
      "SELECT demand_forecasting_data.product_name, demand, production_date, production_quantity FROM demand_forecasting_data JOIN production_schedules ON demand_forecasting_data.product_name = production_schedules.product_name WHERE production_quantity > 500;",
      "SELECT * FROM demand_forecasting_data UNION SELECT * FROM production_schedules;",
      "SELECT * FROM demand_forecasting_data INTERSECT SELECT * FROM production_schedules;",
      "SELECT * FROM demand_forecasting_data WHERE forecast_date >= '2022-01-01';",
      "SELECT product_name, SUM(demand) AS total_demand FROM demand_forecasting_data GROUP BY product_name;",
      "SELECT product_name, AVG(demand) AS avg_demand FROM demand_forecasting_data GROUP BY product_name;",
      "SELECT product_name, MAX(demand) AS max_demand FROM demand_forecasting_data GROUP BY product_name;",
      "SELECT product_name, MIN(demand) AS min_demand FROM demand_forecasting_data GROUP BY product_name;",
      "SELECT forecast_date, SUM(production_quantity) AS total_production FROM production_schedules GROUP BY forecast_date;",
      "SELECT forecast_date, AVG(production_quantity) AS avg_production FROM production_schedules GROUP BY forecast_date;",
      "SELECT forecast_date, MAX(production_quantity) AS max_production FROM production_schedules GROUP BY forecast_date;",
      "SELECT forecast_date, MIN(production_quantity) AS min_production FROM production_schedules GROUP BY forecast_date;",
      "SELECT product_name, COUNT(*) AS total_records FROM demand_forecasting_data;",
      "SELECT product_name, COUNT(*) AS total_records FROM production_schedules;",
      "SELECT * FROM demand_forecasting_data WHERE demand > 100",
      "SELECT product_name, forecast_date FROM demand_forecasting_data WHERE demand > 150",
      "SELECT AVG(demand) FROM demand_forecasting_data",
      "SELECT COUNT(*) FROM demand_forecasting_data WHERE forecast_date >= '2022-12-01'",
      "SELECT product_name, SUM(demand) AS total_demand FROM demand_forecasting_data GROUP BY product_name",
      "SELECT product_name, production_quantity, production_date FROM production_schedules WHERE production_date > '2023-01-01'",
      "SELECT product_name, AVG(production_quantity) AS avg_production FROM production_schedules GROUP BY product_name",
      "SELECT product_name, MAX(production_quantity) AS max_production FROM production_schedules GROUP BY product_name",
      "SELECT * FROM demand_forecasting_data JOIN production_schedules ON demand_forecasting_data.product_name = production_schedules.product_name",
      "SELECT COUNT(DISTINCT product_name) FROM demand_forecasting_data",
      "SELECT product_name, demand, forecast_date FROM demand_forecasting_data WHERE product_name LIKE '%product%'",
      "SELECT product_name, production_date FROM production_schedules WHERE production_quantity < 500",
      "SELECT product_name, SUM(demand) AS total_demand FROM demand_forecasting_data WHERE forecast_date BETWEEN '2023-01-01' AND '2023-03-01' GROUP BY product_name",
      "SELECT product_name, COUNT(*) AS num_records FROM production_schedules GROUP BY product_name HAVING COUNT(*) > 1",
      "SELECT * FROM demand_forecasting_data WHERE demand IN (100, 200, 300)",
      "SELECT product_name, MAX(production_quantity) AS max_production FROM production_schedules WHERE product_name IN ('product1', 'product2')",
      "SELECT product_name, demand, forecast_date FROM demand_forecasting_data WHERE forecast_date >= '2022-06-01' AND demand < 100",
      "SELECT product_name, production_quantity, production_date FROM production_schedules ORDER BY production_quantity DESC",
      "SELECT DISTINCT product_name FROM demand_forecasting_data",
      "SELECT product_name, forecast_date FROM demand_forecasting_data WHERE forecast_date < NOW() ORDER BY forecast_date DESC LIMIT 5"
    ]
  },
  {
    "statements": [
      "SELECT * FROM demand_forecasting_data;",
      "SELECT product_id, demand_date FROM demand_forecasting_data;",
      "SELECT product_id, forecasted_demand FROM demand_forecasting_data;",
      "SELECT * FROM production_schedules;",
      "SELECT schedule_id, product_id, production_date FROM production_schedules;",
      "SELECT * FROM production_analysis;",
      "SELECT analysis_id, product_id, production_date FROM production_analysis;",
      "SELECT analysis_id, product_id, production_date, demand_met FROM production_analysis;",
      "SELECT demand_date, forecasted_demand FROM demand_forecasting_data WHERE product_id = 1;",
      "SELECT production_date, quantity_produced FROM production_schedules WHERE product_id = 1;",
      "SELECT product_id, production_date, demand_met FROM production_analysis WHERE product_id = 1;",
      "SELECT * FROM demand_forecasting_data WHERE demand_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM production_schedules WHERE production_date >= '2022-01-01';",
      "SELECT * FROM production_analysis WHERE demand_met = TRUE;",
      "SELECT product_id, forecasted_demand FROM demand_forecasting_data ORDER BY forecasted_demand DESC;",
      "SELECT product_id, production_date, quantity_produced FROM production_schedules ORDER BY quantity_produced DESC;",
      "SELECT product_id, production_date, demand_met FROM production_analysis ORDER BY production_date DESC;",
      "SELECT AVG(forecasted_demand) AS avg_demand FROM demand_forecasting_data;",
      "SELECT COUNT(*) AS total_schedules FROM production_schedules;",
      "SELECT MAX(quantity_produced) AS max_production FROM production_schedules;",
      "SELECT * FROM demand_forecasting_data",
      "SELECT * FROM production_schedules WHERE quantity_produced > 100",
      "SELECT product_id, sum(quantity_produced) FROM production_schedules GROUP BY product_id",
      "SELECT * FROM demand_forecasting_data JOIN production_schedules ON demand_forecasting_data.product_id = production_schedules.product_id",
      "SELECT * FROM demand_forecasting_data JOIN production_analysis ON demand_forecasting_data.product_id = production_analysis.product_id",
      "SELECT product_id, production_date, quantity_produced FROM production_schedules WHERE production_date BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT product_id, AVG(forecasted_demand) FROM demand_forecasting_data GROUP BY product_id HAVING AVG(forecasted_demand) > 50",
      "SELECT * FROM demand_forecasting_data WHERE forecasted_demand > (SELECT AVG(forecasted_demand) FROM demand_forecasting_data)",
      "SELECT product_id, AVG(quantity_produced) FROM production_schedules GROUP BY product_id HAVING AVG(quantity_produced) > 50",
      "SELECT product_id, production_date, demand_met FROM production_analysis WHERE production_date >= '2022-01-01' AND demand_met = TRUE"
    ]
  },
  {
    "statements": [
      "SELECT * FROM demand_forecasting_data;",
      "SELECT product_name, demand_quantity FROM demand_forecasting_data;",
      "SELECT forecasted_demand FROM demand_forecasting_data WHERE demand_quantity > 100;",
      "SELECT * FROM production_schedules;",
      "SELECT production_date, production_quantity FROM production_schedules WHERE product_id = 1;",
      "SELECT * FROM product_details;",
      "SELECT product_name, unit_price FROM product_details WHERE category = 'Electronics';",
      "SELECT * FROM production_costs;",
      "SELECT labor_cost, material_cost, total_cost FROM production_costs WHERE product_id = 2;",
      "SELECT product_name, category FROM product_details WHERE unit_price > 50;",
      "SELECT * FROM demand_forecasting_data WHERE forecasted_demand < demand_quantity;",
      "SELECT product_name, product_id FROM product_details WHERE unit_price BETWEEN 20 AND 50;",
      "SELECT * FROM production_schedules WHERE production_quantity > 1000;",
      "SELECT product_id, total_cost FROM production_costs WHERE labor_cost > material_cost;",
      "SELECT category, unit_price FROM product_details WHERE product_id = 3;",
      "SELECT * FROM demand_forecasting_data WHERE demand_quantity < forecasted_demand;",
      "SELECT product_name, unit_price FROM product_details WHERE category = 'Clothing';",
      "SELECT * FROM production_costs WHERE total_cost > 5000;",
      "SELECT product_name, category FROM product_details WHERE unit_price < 30;",
      "SELECT * FROM production_schedules WHERE production_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM demand_forecasting_data WHERE demand_quantity = forecasted_demand;",
      "SELECT * FROM demand_forecasting_data WHERE demand_quantity > 100 AND forecasted_demand < 150;",
      "SELECT product_name, SUM(demand_quantity) AS total_demand FROM demand_forecasting_data GROUP BY product_name ORDER BY total_demand DESC;",
      "SELECT product_name, category, unit_price FROM product_details WHERE unit_price > 10;",
      "SELECT product_name, demand_quantity, production_quantity FROM demand_forecasting_data INNER JOIN production_schedules ON demand_forecasting_data.id = production_schedules.product_id;",
      "SELECT product_name, labor_cost, material_cost, total_cost FROM product_details INNER JOIN production_costs ON product_details.product_id = production_costs.product_id;",
      "SELECT product_name, demand_quantity, forecasted_demand, category, unit_price FROM demand_forecasting_data INNER JOIN product_details ON demand_forecasting_data.product_name = product_details.product_name;",
      "SELECT production_date, production_quantity, labor_cost, material_cost FROM production_schedules INNER JOIN production_costs ON production_schedules.product_id = production_costs.product_id;",
      "SELECT product_name, demand_quantity * unit_price AS revenue FROM product_details INNER JOIN demand_forecasting_data ON product_details.product_name = demand_forecasting_data.product_name;",
      "SELECT product_name, category, SUM(demand_quantity) AS total_demand, MAX(unit_price) AS max_price FROM product_details INNER JOIN demand_forecasting_data ON product_details.product_name = demand_forecasting_data.product_name GROUP BY category;",
      "SELECT product_name, category, production_date, production_quantity, total_cost FROM production_schedules INNER JOIN production_costs ON production_schedules.product_id = production_costs.product_id INNER JOIN product_details ON production_schedules.product_id = product_details.product_id;",
      "SELECT product_name, category, production_date, production_quantity * unit_price AS total_revenue FROM production_schedules INNER JOIN product_details ON production_schedules.product_id = product_details.product_id;",
      "SELECT product_name, category, labor_cost, material_cost, total_cost FROM product_details INNER JOIN production_costs ON product_details.product_id = production_costs.product_id WHERE total_cost > 500;",
      "SELECT product_name, demand_quantity, forecasted_demand, production_date, production_quantity FROM demand_forecasting_data INNER JOIN production_schedules ON demand_forecasting_data.id = production_schedules.product_id;",
      "SELECT product_name, production_date, total_cost FROM product_details INNER JOIN production_costs ON product_details.product_id = production_costs.product_id INNER JOIN production_schedules ON product_details.product_id = production_schedules.product_id;",
      "SELECT product_name, category, demand_quantity, production_date, production_quantity, labor_cost, material_cost, total_cost FROM demand_forecasting_data INNER JOIN production_schedules ON demand_forecasting_data.id = production_schedules.product_id INNER JOIN product_details ON demand_forecasting_data.product_name = product_details.product_name INNER JOIN production_costs ON demand_forecasting_data.id = production_costs.product_id;",
      "SELECT product_name, category, production_date, production_quantity, labor_cost, material_cost, total_cost FROM product_details INNER JOIN production_costs ON product_details.product_id = production_costs.product_id INNER JOIN production_schedules ON product_details.product_id = production_schedules.product_id WHERE total_cost < 1000;",
      "SELECT product_details.product_name, production_date, production_quantity, total_cost FROM production_costs INNER JOIN production_schedules ON production_costs.product_id = production_schedules.product_id INNER JOIN product_details ON production_costs.product_id = product_details.product_id;",
      "SELECT product_name, demand_quantity, forecasted_demand, production_date, production_quantity, labor_cost, material_cost, total_cost FROM demand_forecasting_data INNER JOIN production_schedules ON demand_forecasting_data.id = production_schedules.product_id INNER JOIN production_costs ON demand_forecasting_data.id = production_costs.product_id;",
      "SELECT product_name, category, demand_quantity, forecasted_demand, production_date, production_quantity, labor_cost, material_cost, total_cost FROM demand_forecasting_data INNER JOIN production_schedules ON demand_forecasting_data.id = production_schedules.product_id INNER JOIN product_details ON demand_forecasting_data.product_name = product_details.product_name INNER JOIN production_costs ON demand_forecasting_data.id = production_costs.product_id WHERE total_cost > 1000;",
      "SELECT product_name, demand_quantity, forecasted_demand, production_date, production_quantity, labor_cost, material_cost, total_cost FROM demand_forecasting_data INNER JOIN production_schedules ON demand_forecasting_data.id = production_schedules.product_id INNER JOIN production_costs ON demand_forecasting_data.id = production_costs.product_id WHERE labor_cost > 200;",
      "SELECT product_name, category, SUM(demand_quantity) AS total_demand, MAX(unit_price) AS max_price FROM product_details INNER JOIN demand_forecasting_data ON product_details.product_name = demand_forecasting_data.product_name WHERE total_demand > 500;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM production_plan;",
      "SELECT product_name, forecasted_demand FROM production_plan WHERE forecasted_demand > 100;",
      "SELECT * FROM demand_forecasting;",
      "SELECT * FROM production_schedule WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT product_name, category FROM product WHERE unit_price > 50;",
      "SELECT * FROM production_capacity ORDER BY date DESC;",
      "SELECT product_name, quantity FROM production_schedule WHERE quantity < 100;",
      "SELECT * FROM product WHERE category = 'Electronics';",
      "SELECT id, product_name, demand FROM demand_forecasting WHERE date = '2022-02-15';",
      "SELECT * FROM production_plan WHERE id = 10;",
      "SELECT * FROM production_schedule WHERE quantity BETWEEN 50 AND 100;",
      "SELECT SUM(capacity) AS total_capacity FROM production_capacity;",
      "SELECT product_name, unit_price FROM product WHERE unit_price = (SELECT MAX(unit_price) FROM product);",
      "SELECT * FROM demand_forecasting WHERE prediction_model LIKE '%ARIMA%';",
      "SELECT MAX(demand) AS max_demand FROM demand_forecasting;",
      "SELECT product_name, SUM(quantity) AS total_production FROM production_schedule GROUP BY product_name;",
      "SELECT AVG(unit_price) AS avg_price FROM product;",
      "SELECT COUNT(id) AS total_products FROM product;",
      "SELECT * FROM production_capacity WHERE utilization > 0.8;",
      "SELECT * FROM production_plan WHERE forecasted_demand > 100;",
      "SELECT product_name, forecasted_demand FROM production_plan WHERE forecasted_demand > 200 AND product_name = 'Product A';",
      "SELECT * FROM demand_forecasting WHERE demand BETWEEN 100 AND 200;",
      "SELECT date, demand FROM demand_forecasting WHERE date = '2022-01-10';",
      "SELECT product_name, quantity FROM production_schedule WHERE date BETWEEN '2022-01-01' AND '2022-01-30';",
      "SELECT * FROM product WHERE category = 'Electronics' AND unit_price > 500;",
      "SELECT product_name, unit_price FROM product WHERE unit_price < 100 OR category = 'Clothing';",
      "SELECT * FROM production_capacity WHERE date = '2022-02-15' AND utilization < 0.5;",
      "SELECT product_name, category FROM product WHERE unit_price BETWEEN 50 AND 200;",
      "SELECT * FROM production_schedule WHERE quantity > 50 ORDER BY date DESC;",
      "SELECT * FROM demand_forecasting WHERE prediction_model LIKE '%Regression%';",
      "SELECT product_name, category FROM product WHERE category IN ('Electronics', 'Clothing');",
      "SELECT SUM(capacity) AS total_capacity FROM production_capacity WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT AVG(demand) AS average_demand FROM demand_forecasting WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT DISTINCT product_name FROM production_schedule WHERE date = '2022-03-20';",
      "SELECT product_name, SUM(quantity) AS total_quantity FROM production_schedule GROUP BY product_name;",
      "SELECT * FROM production_plan INNER JOIN demand_forecasting ON production_plan.id = demand_forecasting.id;",
      "SELECT COUNT(*) AS total_products FROM product;",
      "SELECT date, quantity, utilization FROM production_schedule LEFT JOIN production_capacity ON production_schedule.date = production_capacity.date;",
      "SELECT product_name, MAX(unit_price) AS highest_price FROM product GROUP BY category ORDER BY highest_price DESC;"
    ]
  }
]