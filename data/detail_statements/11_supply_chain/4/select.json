[
  {
    "statements": [
      "SELECT material_id, material_name FROM incoming_materials;",
      "SELECT material_id, supplier_id FROM incoming_materials;",
      "SELECT material_name, quantity FROM incoming_materials;",
      "SELECT supplier_id, purchase_date FROM incoming_materials;",
      "SELECT * FROM incoming_materials WHERE material_id = '12345678-1234-5678-1234-567812345678';",
      "SELECT * FROM incoming_materials WHERE material_name = 'Material1';",
      "SELECT * FROM incoming_materials WHERE supplier_id = '87654321-4321-8765-4321-876543218765';",
      "SELECT * FROM incoming_materials WHERE quantity > 100;",
      "SELECT * FROM incoming_materials WHERE purchase_date BETWEEN '2023-01-01' AND '2023-12-31';",
      "SELECT COUNT(*) FROM incoming_materials;",
      "SELECT AVG(quantity) FROM incoming_materials;",
      "SELECT MAX(quantity) FROM incoming_materials;",
      "SELECT MIN(quantity) FROM incoming_materials;",
      "SELECT SUM(quantity) FROM incoming_materials;",
      "SELECT material_id, material_name, supplier_id, quantity, purchase_date FROM incoming_materials;",
      "SELECT material_id, material_name, quantity FROM incoming_materials WHERE quantity < 50;",
      "SELECT supplier_id, purchase_date FROM incoming_materials WHERE purchase_date > '2023-06-01';",
      "SELECT material_name, quantity FROM incoming_materials WHERE supplier_id = '56781234-8765-1234-5678-123456781234';",
      "SELECT material_id, material_name, supplier_id, purchase_date FROM incoming_materials WHERE purchase_date < '2023-03-15';",
      "SELECT * FROM incoming_materials ORDER BY purchase_date DESC;",
      "SELECT * FROM incoming_materials WHERE quantity > 100 AND purchase_date >= '2021-01-01';",
      "SELECT material_name, quantity FROM incoming_materials WHERE supplier_id = '123456';",
      "SELECT material_id, material_name FROM incoming_materials WHERE purchase_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM incoming_materials ORDER BY purchase_date DESC;",
      "SELECT COUNT(*) FROM incoming_materials;",
      "SELECT AVG(quantity) FROM incoming_materials WHERE supplier_id = '789101';",
      "SELECT material_name, supplier_id FROM incoming_materials WHERE material_name LIKE '%steel%';",
      "SELECT SUM(quantity) FROM incoming_materials WHERE purchase_date = '2021-07-15';",
      "SELECT material_id, quantity FROM incoming_materials WHERE supplier_id IN ('111222', '333444');",
      "SELECT MIN(quantity), MAX(quantity) FROM incoming_materials;",
      "SELECT material_id, quantity FROM incoming_materials WHERE purchase_date < '2021-06-30' AND supplier_id = '555666';",
      "SELECT DISTINCT supplier_id FROM incoming_materials;",
      "SELECT material_id, purchase_date FROM incoming_materials WHERE material_name = 'wood' AND supplier_id = '777888';",
      "SELECT * FROM incoming_materials WHERE material_id = '999000';",
      "SELECT material_name, COUNT(*) FROM incoming_materials GROUP BY material_name;",
      "SELECT supplier_id, SUM(quantity) FROM incoming_materials GROUP BY supplier_id HAVING SUM(quantity) > 500;",
      "SELECT material_id, material_name, quantity FROM incoming_materials WHERE material_name = 'metal' AND quantity > 50 ORDER BY purchase_date;",
      "SELECT * FROM incoming_materials WHERE purchase_date = (SELECT MAX(purchase_date) FROM incoming_materials);",
      "SELECT material_id, supplier_id, quantity, purchase_date FROM incoming_materials WHERE material_name <> 'plastic' ORDER BY purchase_date ASC LIMIT 10;",
      "SELECT AVG(quantity), SUM(quantity) FROM incoming_materials GROUP BY supplier_id HAVING SUM(quantity) > 300;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM materials;",
      "SELECT material_id, material_name FROM materials;",
      "SELECT * FROM quality_control;",
      "SELECT qc_id, inspector_name FROM quality_control;",
      "SELECT material_name, quantity FROM materials;",
      "SELECT qc_id, result FROM quality_control;",
      "SELECT material_id, supplier_id FROM materials;",
      "SELECT material_name, quantity FROM materials WHERE quantity > 100;",
      "SELECT qc_id, inspector_name, date_inspected FROM quality_control WHERE result = 'Pass';",
      "SELECT * FROM materials WHERE date_received > '2022-01-01';",
      "SELECT qc_id, inspector_name FROM quality_control WHERE date_inspected < '2022-05-01';",
      "SELECT material_name, quantity FROM materials WHERE supplier_id = 1001;",
      "SELECT material_id, supplier_id FROM materials WHERE quantity < 50;",
      "SELECT qc_id, inspector_name FROM quality_control WHERE inspector_name LIKE '%Smith%';",
      "SELECT material_name, supplier_id FROM materials WHERE quantity IS NULL;",
      "SELECT material_id, quantity FROM materials WHERE date_received IS NOT NULL;",
      "SELECT qc_id, inspector_name, result FROM quality_control WHERE date_inspected BETWEEN '2022-01-01' AND '2022-06-01';",
      "SELECT material_name, quantity, date_received FROM materials ORDER BY date_received DESC;",
      "SELECT qc_id, inspector_name, date_inspected FROM quality_control ORDER BY date_inspected ASC;",
      "SELECT * FROM materials WHERE quantity > 100;",
      "SELECT material_name, supplier_id, quantity FROM materials WHERE supplier_id = 101;",
      "SELECT material_name, supplier_id, quantity FROM materials ORDER BY quantity DESC LIMIT 5;",
      "SELECT * FROM materials WHERE date_received BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT material_id, material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id;",
      "SELECT materials.material_name, QC.result FROM materials LEFT JOIN quality_control AS QC ON materials.material_id = QC.material_id;",
      "SELECT materials.material_name, QC.result FROM materials RIGHT JOIN quality_control AS QC ON materials.material_id = QC.material_id;",
      "SELECT materials.material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE QC.result = 'Pass';",
      "SELECT materials.material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE QC.result = 'Fail';",
      "SELECT materials.material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE QC.date_inspected > '2022-05-01';",
      "SELECT material_name, supplier_id FROM materials WHERE material_id IN (SELECT material_id FROM quality_control WHERE result = 'Fail');",
      "SELECT material_name, supplier_id FROM materials WHERE material_id NOT IN (SELECT material_id FROM quality_control WHERE result = 'Pass');",
      "SELECT material_name, supplier_id, AVG(quantity) AS avg_quantity FROM materials GROUP BY material_name, supplier_id;",
      "SELECT material_name, supplier_id, SUM(quantity) AS total_quantity FROM materials GROUP BY supplier_id;",
      "SELECT material_name, supplier_id, COUNT(*) AS total_materials FROM materials GROUP BY supplier_id;",
      "SELECT material_name, supplier_id, MAX(quantity) AS max_quantity FROM materials GROUP BY supplier_id;",
      "SELECT material_name, COUNT(*) AS total_records FROM materials UNION SELECT inspector_name, COUNT(*) AS total_records FROM quality_control;",
      "SELECT material_name, SUM(quantity) AS total_quantity FROM materials GROUP BY material_name HAVING SUM(quantity) > 500;",
      "SELECT material_name, AVG(quantity) AS avg_quantity FROM materials GROUP BY material_name HAVING AVG(quantity) < 100;",
      "SELECT material_id, material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE date_received > '2022-01-01' AND date_received < '2022-06-30';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM materials",
      "SELECT material_name, quantity FROM materials",
      "SELECT * FROM quality_checks",
      "SELECT inspector_name, department FROM inspectors",
      "SELECT material_id, material_name, supplier_id, quantity, date_received FROM materials",
      "SELECT check_id, material_id, inspector_id, check_result, check_date FROM quality_checks",
      "SELECT inspector_id, inspector_name, department FROM inspectors",
      "SELECT * FROM materials WHERE quantity > 50",
      "SELECT * FROM materials WHERE supplier_id = 100",
      "SELECT * FROM quality_checks WHERE check_result = 'Fail'",
      "SELECT material_name FROM materials WHERE material_id = 1",
      "SELECT inspector_name FROM inspectors WHERE department = 'Quality Control'",
      "SELECT * FROM materials ORDER BY material_name ASC",
      "SELECT * FROM quality_checks ORDER BY check_date DESC",
      "SELECT COUNT(*) FROM materials",
      "SELECT AVG(quantity) FROM materials",
      "SELECT MAX(quantity) FROM materials",
      "SELECT inspector_id, COUNT(*) FROM quality_checks GROUP BY inspector_id",
      "SELECT material_id, COUNT(*) FROM quality_checks GROUP BY material_id",
      "SELECT * FROM materials WHERE date_received BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT * FROM materials WHERE material_id = 1;",
      "SELECT material_name, quantity FROM materials WHERE supplier_id = 5;",
      "SELECT material_id, material_name, date_received FROM materials WHERE quantity > 100;",
      "SELECT * FROM materials WHERE date_received BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_result = 'Fail';",
      "SELECT m.material_name, qc.check_result FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date > NOW() - INTERVAL 1 DAY;",
      "SELECT m.material_id, COUNT(qc.check_id) AS num_checks FROM materials m LEFT JOIN quality_checks qc ON m.material_id = qc.material_id GROUP BY m.material_id;",
      "SELECT inspector_name, department FROM inspectors WHERE inspector_id = 3;",
      "SELECT * FROM materials WHERE supplier_id IN (SELECT supplier_id FROM materials WHERE material_name LIKE '%steel%');",
      "SELECT m.material_id, m.material_name, COUNT(qc.check_id) AS num_checks FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id GROUP BY m.material_id HAVING num_checks > 5;",
      "SELECT * FROM materials WHERE date_received >= '2022-01-01' AND date_received <= '2022-06-30' ORDER BY quantity DESC;",
      "SELECT inspector_name, COUNT(qc.check_id) AS num_checks FROM inspectors i LEFT JOIN quality_checks qc ON i.inspector_id = qc.inspector_id GROUP BY i.inspector_id;",
      "SELECT m.material_name, qc.check_result FROM materials m LEFT JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date > '2022-09-01' AND qc.check_result = 'Fail';",
      "SELECT * FROM materials m INNER JOIN quality_checks qc ON m.material_id = qc.material_id INNER JOIN inspectors i ON qc.inspector_id = i.inspector_id WHERE i.department = 'QA';",
      "SELECT m.material_id, m.material_name, qc.check_date FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date > '2022-11-15' ORDER BY qc.check_date DESC LIMIT 10;",
      "SELECT inspector_name, COUNT(check_id) AS num_checks FROM inspectors i JOIN quality_checks qc ON i.inspector_id = qc.inspector_id GROUP BY i.inspector_name HAVING num_checks > 10;",
      "SELECT material_name, SUM(quantity) AS total_quantity FROM materials GROUP BY material_name;",
      "SELECT m.material_name, qc.check_result FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date BETWEEN '2022-07-01' AND '2022-09-30';",
      "SELECT inspector_name, COUNT(DISTINCT material_id) AS num_materials_checked FROM inspectors i JOIN quality_checks qc ON i.inspector_id = qc.inspector_id GROUP BY i.inspector_id;",
      "SELECT m.material_name, qc.check_result FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id JOIN inspectors i ON qc.inspector_id = i.inspector_id WHERE i.department = 'Production';",
      "SELECT material_id, material_name, quantity FROM materials WHERE date_received > '2022-10-01' ORDER BY date_received ASC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM materials;",
      "SELECT material_name, supplier_id FROM materials;",
      "SELECT * FROM quality_checks;",
      "SELECT material_id, check_date FROM quality_checks;",
      "SELECT * FROM suppliers;",
      "SELECT supplier_name, address FROM suppliers;",
      "SELECT * FROM employees;",
      "SELECT employee_name, department FROM employees;",
      "SELECT material_name, supplier_name, received_date FROM materials JOIN suppliers ON materials.supplier_id = suppliers.supplier_id;",
      "SELECT material_name, check_date, check_result FROM materials JOIN quality_checks ON materials.material_id = quality_checks.material_id;",
      "SELECT supplier_name, address, phone_number FROM suppliers WHERE supplier_id = 1;",
      "SELECT material_name, supplier_name, received_date FROM materials JOIN suppliers ON materials.supplier_id = suppliers.supplier_id WHERE received_date > '2021-01-01';",
      "SELECT employee_name, department FROM employees WHERE hire_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT material_name, check_date, check_result FROM materials JOIN quality_checks ON materials.material_id = quality_checks.material_id WHERE check_result = TRUE;",
      "SELECT supplier_name, address FROM suppliers WHERE supplier_name LIKE '%Supply%';",
      "SELECT employee_name, department FROM employees WHERE department = 'Production';",
      "SELECT material_name, received_date FROM materials WHERE supplier_id IS NULL;",
      "SELECT supplier_name, phone_number FROM suppliers WHERE address IS NULL;",
      "SELECT material_name, check_date FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id;",
      "SELECT employee_name, hire_date FROM employees ORDER BY hire_date DESC LIMIT 5;",
      "SELECT * FROM materials INNER JOIN suppliers ON materials.supplier_id = suppliers.supplier_id",
      "SELECT material_name, received_date, supplier_name FROM materials INNER JOIN suppliers ON materials.supplier_id = suppliers.supplier_id",
      "SELECT material_name, check_result FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id",
      "SELECT material_name, supplier_name, check_date FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id LEFT JOIN suppliers ON materials.supplier_id = suppliers.supplier_id",
      "SELECT supplier_name, address FROM suppliers WHERE supplier_name LIKE 'A%'",
      "SELECT material_name, received_date FROM materials WHERE received_date >= '2021-01-01'",
      "SELECT material_name, count(check_id) AS num_checks FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id GROUP BY material_name",
      "SELECT supplier_name, AVG(check_result) AS avg_check_result FROM suppliers INNER JOIN materials ON suppliers.supplier_id = materials.supplier_id INNER JOIN quality_checks ON materials.material_id = quality_checks.material_id GROUP BY supplier_name",
      "SELECT material_name, employee_name, department FROM materials INNER JOIN employees ON materials.material_id = employees.employee_id",
      "SELECT supplier_name, COUNT(DISTINCT material_id) AS num_materials FROM suppliers INNER JOIN materials ON suppliers.supplier_id = materials.supplier_id GROUP BY supplier_name",
      "SELECT employee_name, hire_date FROM employees",
      "SELECT * FROM employees WHERE hire_date BETWEEN '2019-01-01' AND '2020-01-01'",
      "SELECT supplier_id, supplier_name, address FROM suppliers ORDER BY supplier_id DESC",
      "SELECT COUNT(DISTINCT supplier_id) AS num_suppliers FROM suppliers",
      "SELECT employee_name, department, COUNT(material_id) AS num_materials FROM employees LEFT JOIN materials ON employees.employee_id = materials.material_id GROUP BY employee_name, department",
      "SELECT COUNT(check_id) AS num_checks FROM quality_checks WHERE check_result = true",
      "SELECT material_name, received_date FROM materials WHERE supplier_id IS NULL",
      "SELECT employee_name, hire_date FROM employees WHERE department = 'Engineering'",
      "SELECT supplier_name, address FROM suppliers WHERE phone_number IS NOT NULL",
      "SELECT material_name, supplier_name, check_result FROM materials INNER JOIN quality_checks ON materials.material_id = quality_checks.material_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM incoming_materials;",
      "SELECT material_name, supplier_name FROM incoming_materials;",
      "SELECT material_id, material_name, received_date FROM incoming_materials;",
      "SELECT * FROM material_properties;",
      "SELECT property_name, property_value FROM material_properties;",
      "SELECT property_id, material_id, property_name, property_value FROM material_properties;",
      "SELECT * FROM material_tests;",
      "SELECT test_date, test_result FROM material_tests;",
      "SELECT test_id, material_id, test_date, test_result FROM material_tests;",
      "SELECT * FROM test_parameters;",
      "SELECT parameter_name, parameter_value FROM test_parameters;",
      "SELECT parameter_id, test_id, parameter_name, parameter_value FROM test_parameters;",
      "SELECT * FROM test_observations;",
      "SELECT observation_date, observation_text FROM test_observations;",
      "SELECT observation_id, test_id, observation_date, observation_text FROM test_observations;",
      "SELECT m.material_name, mp.property_name, t.test_date, tp.parameter_name, to.observation_text FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id JOIN test_observations to ON t.test_id = to.test_id;",
      "SELECT m.material_name, mp.property_name, t.test_date, t.test_result, to.observation_text FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
      "SELECT m.material_name, t.test_date, t.test_result, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
      "SELECT m.material_name, mp.property_name, tp.parameter_name FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN test_parameters tp ON mp.property_id = tp.test_id;",
      "SELECT m.material_name, mp.property_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
      "SELECT * FROM incoming_materials WHERE material_quality = 'High';",
      "SELECT material_name, supplier_name, received_date FROM incoming_materials WHERE material_quality = 'Low';",
      "SELECT m.material_name, t.test_date, t.test_result FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id;",
      "SELECT m.material_name, mp.property_name, mp.property_value FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id;",
      "SELECT * FROM material_tests WHERE test_result = 'Pass';",
      "SELECT to.observation_date, to.observation_text FROM material_tests t JOIN test_observations to ON t.test_id = to.test_id;",
      "SELECT m.material_name, t.test_result, tp.parameter_name, tp.parameter_value FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id;",
      "SELECT * FROM incoming_materials WHERE received_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT m.material_name, t.test_result FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id WHERE t.test_result = 'Fail';",
      "SELECT m.material_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
      "SELECT * FROM incoming_materials WHERE supplier_name LIKE '%Corp%';",
      "SELECT m.material_name, mp.property_value FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id WHERE mp.property_name = 'Color';",
      "SELECT m.material_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE to.observation_text LIKE '%defect%';",
      "SELECT * FROM incoming_materials WHERE material_quality IN ('High', 'Medium');",
      "SELECT m.material_name, t.test_result, tp.parameter_name FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id WHERE m.supplier_name = 'Supplier A';",
      "SELECT m.material_name, t.test_result, to.observation_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE t.test_result = 'Fail';",
      "SELECT * FROM incoming_materials WHERE material_id = 1001;",
      "SELECT DISTINCT supplier_name FROM incoming_materials;",
      "SELECT m.material_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE m.material_quality = 'High';",
      "SELECT m.material_name, t.test_result, tp.parameter_name, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id JOIN test_observations to ON t.test_id = to.test_id WHERE m.supplier_name IN ('Supplier A', 'Supplier B');",
      "SELECT m.material_name, t.test_result, to.observation_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE t.test_result = 'Pass';"
    ]
  }
]