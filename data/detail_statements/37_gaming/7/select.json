[
  {
    "statements": [
      "SELECT * FROM in_game_transactions WHERE player_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT transaction_id, transaction_amount FROM in_game_transactions WHERE player_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM in_game_transactions WHERE product_id = 100;",
      "SELECT transaction_id, transaction_timestamp FROM in_game_transactions WHERE product_id = 100;",
      "SELECT * FROM in_game_transactions WHERE transaction_timestamp >= '2022-01-01 00:00:00';",
      "SELECT player_id, product_id, transaction_amount FROM in_game_transactions;",
      "SELECT DISTINCT player_id FROM in_game_transactions;",
      "SELECT SUM(transaction_amount) AS total_amount FROM in_game_transactions;",
      "SELECT AVG(transaction_amount) AS average_amount FROM in_game_transactions;",
      "SELECT MAX(transaction_amount) AS max_amount FROM in_game_transactions;",
      "SELECT MIN(transaction_amount) AS min_amount FROM in_game_transactions;",
      "SELECT COUNT(*) AS total_transactions FROM in_game_transactions;",
      "SELECT * FROM in_game_transactions ORDER BY transaction_timestamp DESC;",
      "SELECT * FROM in_game_transactions ORDER BY transaction_amount ASC LIMIT 10;",
      "SELECT * FROM in_game_transactions WHERE transaction_amount > 50;",
      "SELECT * FROM in_game_transactions WHERE transaction_amount BETWEEN 20 AND 30;",
      "SELECT * FROM in_game_transactions WHERE player_id IN ('123e4567-e89b-12d3-a456-426614174000', 'a23e4567-e89b-12d3-a456-426614174001');",
      "SELECT * FROM in_game_transactions WHERE product_id NOT IN (100, 200);",
      "SELECT * FROM in_game_transactions WHERE player_id = '123e4567-e89b-12d3-a456-426614174000' AND product_id = 100;",
      "SELECT * FROM in_game_transactions WHERE player_id = '123e4567-e89b-12d3-a456-426614174000' OR product_id = 100;",
      "SELECT * FROM in_game_transactions WHERE player_id = '123e4567-e89b-12d3-a456-426614174000' AND transaction_timestamp > '2022-01-01';",
      "SELECT transaction_id, player_id FROM in_game_transactions WHERE product_id IN (1, 2, 3) ORDER BY transaction_timestamp DESC LIMIT 10;",
      "SELECT AVG(transaction_amount) AS avg_amount FROM in_game_transactions WHERE transaction_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT DISTINCT player_id FROM in_game_transactions WHERE transaction_amount > 1000;",
      "SELECT * FROM in_game_transactions WHERE transaction_amount >= 50 AND product_id = 3 ORDER BY transaction_timestamp ASC LIMIT 5;",
      "SELECT COUNT(*) AS total_transactions FROM in_game_transactions WHERE transaction_timestamp <= '2022-02-28';",
      "SELECT AVG(transaction_amount) AS avg_amount_per_product, product_id FROM in_game_transactions GROUP BY product_id HAVING COUNT(*) >= 5;",
      "SELECT SUM(transaction_amount) AS total_amount FROM in_game_transactions WHERE player_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT player_id, SUM(transaction_amount) AS total_amount FROM in_game_transactions GROUP BY player_id HAVING SUM(transaction_amount) > 5000;",
      "SELECT P.player_id, COUNT(T.transaction_id) AS total_transactions FROM in_game_transactions T JOIN players P ON T.player_id = P.player_id GROUP BY P.player_id HAVING COUNT(T.transaction_id) > 10;",
      "SELECT P.player_id, MAX(T.transaction_amount) AS max_amount FROM in_game_transactions T JOIN players P ON T.player_id = P.player_id GROUP BY P.player_id;",
      "SELECT SUM(T.transaction_amount) AS total_amount, EXTRACT(MONTH FROM T.transaction_timestamp) AS month FROM in_game_transactions T GROUP BY EXTRACT(MONTH FROM T.transaction_timestamp) ORDER BY month ASC;",
      "SELECT T.player_id, MONTH(T.transaction_timestamp) AS month, SUM(T.transaction_amount) AS total_amount FROM in_game_transactions T JOIN players P ON T.player_id = P.player_id WHERE P.country = 'US' GROUP BY T.player_id, month;",
      "SELECT P.player_id, COUNT(T.transaction_id) AS total_transactions FROM in_game_transactions T JOIN players P ON T.player_id = P.player_id GROUP BY P.player_id ORDER BY total_transactions DESC LIMIT 10;",
      "SELECT T.player_id, COUNT(T.transaction_id) AS total_transactions, SUM(T.transaction_amount) AS total_amount FROM in_game_transactions T JOIN players P ON T.player_id = P.player_id WHERE P.country = 'CA' GROUP BY T.player_id ORDER BY total_amount DESC LIMIT 5;",
      "SELECT P.player_id, AVG(T.transaction_amount) AS avg_amount FROM in_game_transactions T JOIN players P ON T.player_id = P.player_id GROUP BY P.player_id ORDER BY avg_amount DESC LIMIT 5;",
      "SELECT T.transaction_id, T.player_id, P.country FROM in_game_transactions T JOIN players P ON T.player_id = P.player_id WHERE P.country = 'UK';",
      "SELECT * FROM in_game_transactions T1 JOIN in_game_transactions T2 ON T1.player_id = T2.player_id AND T1.transaction_timestamp < T2.transaction_timestamp;",
      "SELECT * FROM in_game_transactions T1 JOIN in_game_transactions T2 ON T1.product_id = T2.product_id AND T1.transaction_amount > T2.transaction_amount ORDER BY T1.transaction_amount DESC;",
      "SELECT P.player_id, COUNT(T1.transaction_id) AS total_transactions FROM in_game_transactions T1 JOIN in_game_transactions T2 ON T1.player_id = T2.player_id JOIN players P ON T1.player_id = P.player_id GROUP BY P.player_id HAVING COUNT(T1.transaction_id) > 20;",
      "SELECT T1.transaction_id, T1.player_id, T1.transaction_amount, T2.product_id FROM in_game_transactions T1 LEFT JOIN in_game_transactions T2 ON T1.player_id = T2.player_id AND T1.transaction_amount = T2.transaction_amount;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM virtual_goods WHERE id = 1;",
      "SELECT name, price FROM virtual_goods WHERE price < 100;",
      "SELECT * FROM upgrades WHERE id = 100;",
      "SELECT name, description FROM upgrades WHERE cost > 50;",
      "SELECT id, name, price FROM virtual_goods WHERE price BETWEEN 10 AND 50;",
      "SELECT name FROM upgrades WHERE id = 5 OR id = 10;",
      "SELECT id, name, cost FROM upgrades WHERE cost > 30 AND cost < 100;",
      "SELECT * FROM virtual_goods WHERE name LIKE '%premium%';",
      "SELECT * FROM upgrades WHERE name IN ('Upgrade1', 'Upgrade2', 'Upgrade3');",
      "SELECT id, name, cost FROM upgrades WHERE description IS NOT NULL;",
      "SELECT * FROM virtual_goods WHERE id < 10;",
      "SELECT name, price FROM virtual_goods WHERE price = 20;",
      "SELECT * FROM upgrades WHERE cost < 50;",
      "SELECT id, name, description FROM upgrades WHERE name LIKE '%power%';",
      "SELECT * FROM virtual_goods WHERE name = 'GoldCoins';",
      "SELECT * FROM upgrades WHERE id = 3 OR id = 7 OR id = 9;",
      "SELECT id, name, price FROM virtual_goods WHERE name = 'Diamonds';",
      "SELECT * FROM upgrades WHERE cost BETWEEN 20 AND 50;",
      "SELECT * FROM virtual_goods WHERE price > 50;",
      "SELECT * FROM upgrades WHERE description LIKE '%boost%';",
      "SELECT * FROM virtual_goods WHERE price > 100",
      "SELECT id, name FROM virtual_goods WHERE id IN (1, 3, 5, 7)",
      "SELECT name, price FROM virtual_goods WHERE name LIKE '%Sword%'",
      "SELECT * FROM virtual_goods JOIN upgrades ON virtual_goods.id = upgrades.id",
      "SELECT virtual_goods.id, upgrades.name FROM virtual_goods JOIN upgrades ON virtual_goods.id = upgrades.id",
      "SELECT * FROM virtual_goods WHERE price BETWEEN 50 AND 100",
      "SELECT id, description FROM upgrades WHERE cost < 50",
      "SELECT * FROM virtual_goods WHERE name = 'Helmet'",
      "SELECT id, name, price FROM virtual_goods ORDER BY price DESC",
      "SELECT COUNT(*) AS total_upgrades FROM upgrades",
      "SELECT AVG(price) AS avg_price FROM virtual_goods",
      "SELECT DISTINCT name FROM upgrades",
      "SELECT COUNT(*) AS total_goods FROM virtual_goods WHERE price > 200",
      "SELECT id, name FROM virtual_goods WHERE price > (SELECT AVG(price) FROM virtual_goods)",
      "SELECT * FROM upgrades WHERE description IS NULL",
      "SELECT id, name FROM virtual_goods WHERE name IN ('Sword', 'Shield', 'Bow')",
      "SELECT SUM(price) AS total_price FROM virtual_goods",
      "SELECT id, name FROM virtual_goods WHERE price = (SELECT MAX(price) FROM virtual_goods)",
      "SELECT * FROM upgrades WHERE name NOT LIKE '%Discount%'",
      "SELECT * FROM virtual_goods WHERE id = (SELECT MAX(id) FROM virtual_goods)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transactions;",
      "SELECT user_id, username FROM users;",
      "SELECT item_id, item_name, item_price FROM items;",
      "SELECT transaction_id, user_id, item_id, transaction_amount, transaction_date FROM transactions WHERE user_id = 1;",
      "SELECT user_id, username, email FROM users WHERE user_id = 2;",
      "SELECT item_id, item_name, item_price, item_type FROM items WHERE item_id = 3;",
      "SELECT user_id, balance FROM users WHERE username = 'john_doe';",
      "SELECT item_id, item_name, item_type FROM items WHERE item_type = 'electronic';",
      "SELECT transaction_id, user_id, transaction_amount FROM transactions WHERE transaction_date >= '2022-01-01';",
      "SELECT user_id, username, email, balance FROM users WHERE email LIKE '%example.com%';",
      "SELECT item_id, item_name, item_price FROM items WHERE item_price > 100;",
      "SELECT user_id, username, balance FROM users WHERE balance < 0;",
      "SELECT item_id, item_name, item_type FROM items WHERE item_name LIKE '%phone%';",
      "SELECT transaction_id, user_id, transaction_amount, transaction_date FROM transactions WHERE user_id = 4 AND transaction_amount > 50;",
      "SELECT user_id, username, balance FROM users WHERE balance BETWEEN 100 AND 500;",
      "SELECT item_id, item_name, item_type FROM items WHERE item_type IN ('electronics', 'clothing');",
      "SELECT transaction_id, user_id, transaction_amount FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT user_id, username, email FROM users ORDER BY username ASC;",
      "SELECT item_id, item_name, item_price FROM items ORDER BY item_price DESC;",
      "SELECT user_id, SUM(transaction_amount) AS total_spent FROM transactions WHERE user_id = 5 GROUP BY user_id;",
      "SELECT * FROM transactions WHERE transaction_amount > 1000;",
      "SELECT user_id, COUNT(*) AS num_transactions FROM transactions GROUP BY user_id HAVING COUNT(*) > 5;",
      "SELECT t.transaction_id, t.transaction_amount, u.username, i.item_name FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id;",
      "SELECT u.username, SUM(t.transaction_amount) AS total_spent FROM transactions t JOIN users u ON t.user_id = u.user_id GROUP BY u.username;",
      "SELECT u.username, i.item_name, i.item_price FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id WHERE t.transaction_amount > 500;",
      "SELECT t.transaction_date, COUNT(*) AS num_transactions FROM transactions t WHERE t.transaction_date >= '2022-01-01' GROUP BY t.transaction_date;",
      "SELECT u.username, i.item_type, SUM(t.transaction_amount) AS total_spent FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id GROUP BY u.username, i.item_type;",
      "SELECT user_id, COUNT(*) AS num_transactions FROM transactions GROUP BY user_id HAVING SUM(transaction_amount) > 5000;",
      "SELECT u.username, i.item_name, t.transaction_amount FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id WHERE u.balance < 0;",
      "SELECT user_id, MIN(transaction_amount) AS min_transaction_amount, MAX(transaction_amount) AS max_transaction_amount FROM transactions GROUP BY user_id;",
      "SELECT u.username, MAX(t.transaction_amount) AS max_transaction_amount FROM transactions t JOIN users u ON t.user_id = u.user_id WHERE t.transaction_date >= '2022-01-01' GROUP BY u.username;",
      "SELECT u.username, AVG(t.transaction_amount) AS avg_transaction_amount FROM transactions t JOIN users u ON t.user_id = u.user_id GROUP BY u.username HAVING AVG(t.transaction_amount) > 100;",
      "SELECT u.username, i.item_name, MIN(t.transaction_amount) AS min_transaction_amount FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id GROUP BY u.username, i.item_name;",
      "SELECT u.username, i.item_type, COUNT(*) AS num_transactions FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id GROUP BY u.username, i.item_type HAVING COUNT(*) > 3;",
      "SELECT u.username, i.item_name, t.transaction_date FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id ORDER BY t.transaction_date DESC;",
      "SELECT t.transaction_id, u.username, i.item_name, t.transaction_amount FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id WHERE u.balance < 0;",
      "SELECT u.username, i.item_type, AVG(t.transaction_amount) AS avg_transaction_amount FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id GROUP BY u.username, i.item_type HAVING AVG(t.transaction_amount) > 500;",
      "SELECT u.username, COUNT(*) AS num_transactions FROM transactions t JOIN users u ON t.user_id = u.user_id WHERE EXTRACT(MONTH FROM t.transaction_date) = 12 AND EXTRACT(YEAR FROM t.transaction_date) = 2022 GROUP BY u.username;",
      "SELECT u.username, i.item_name, SUM(t.transaction_amount) AS total_spent FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id WHERE EXTRACT(MONTH FROM t.transaction_date) = 1 AND EXTRACT(YEAR FROM t.transaction_date) = 2022 GROUP BY u.username, i.item_name;",
      "SELECT u.username, i.item_name, COUNT(*) AS num_transactions FROM transactions t JOIN users u ON t.user_id = u.user_id JOIN items i ON t.item_id = i.item_id WHERE t.transaction_amount > u.balance;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transactions;",
      "SELECT transaction_id, purchase_amount FROM transactions;",
      "SELECT player_id, purchase_date FROM transactions;",
      "SELECT player_name, email FROM players;",
      "SELECT * FROM players;",
      "SELECT good_id, good_name FROM virtual_goods;",
      "SELECT upgrade_name, upgrade_cost FROM upgrades;",
      "SELECT * FROM virtual_goods;",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id;",
      "SELECT player_name, email FROM players WHERE player_id = 1;",
      "SELECT good_name, price FROM virtual_goods WHERE price < 10.00;",
      "SELECT player_name, purchase_amount, purchase_date FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_date > '2022-01-01';",
      "SELECT player_name, email, purchase_amount, purchase_date FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_amount > 50.00;",
      "SELECT player_name, email, good_name, price FROM players JOIN transactions ON players.player_id = transactions.player_id JOIN virtual_goods ON transactions.purchase_amount = virtual_goods.price;",
      "SELECT player_name, email, upgrade_name, upgrade_cost FROM players JOIN transactions ON players.player_id = transactions.player_id JOIN upgrades ON transactions.purchase_amount = upgrades.upgrade_cost;",
      "SELECT player_name, email, good_name, price FROM players JOIN transactions ON players.player_id = transactions.player_id JOIN virtual_goods ON transactions.purchase_amount = virtual_goods.price WHERE price < 20.00;",
      "SELECT player_name, email, upgrade_name, upgrade_cost FROM players JOIN transactions ON players.player_id = transactions.player_id JOIN upgrades ON transactions.purchase_amount = upgrades.upgrade_cost WHERE upgrade_cost > 25.00;",
      "SELECT player_name, email, purchase_amount, purchase_date FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_date < '2022-06-01';",
      "SELECT player_name, email, purchase_amount, purchase_date FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_amount > 100.00;",
      "SELECT * FROM transactions JOIN players ON transactions.player_id = players.player_id",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_amount > 50",
      "SELECT player_name, email, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_amount BETWEEN 50 AND 100",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id ORDER BY purchase_amount DESC",
      "SELECT player_name, SUM(purchase_amount) AS total_purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id GROUP BY player_name",
      "SELECT player_name, COUNT(transaction_id) AS total_transactions FROM players JOIN transactions ON players.player_id = transactions.player_id GROUP BY player_name",
      "SELECT player_name, AVG(purchase_amount) AS avg_purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id GROUP BY player_name",
      "SELECT player_name, MAX(purchase_amount) AS max_purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id GROUP BY player_name",
      "SELECT player_name, email, purchase_date FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_date >= '2022-01-01'",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE player_name LIKE '%John%'",
      "SELECT player_name, email, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE email LIKE '%gmail.com'",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_date BETWEEN '2022-01-01' AND '2022-01-30'",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE purchase_amount > (SELECT AVG(purchase_amount) FROM transactions)",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id WHERE player_id IN (SELECT player_id FROM transactions WHERE purchase_amount > 50)",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id INNER JOIN virtual_goods ON transactions.transaction_id = virtual_goods.good_id",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id LEFT JOIN virtual_goods ON transactions.transaction_id = virtual_goods.good_id WHERE virtual_goods.price > purchase_amount",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id RIGHT JOIN virtual_goods ON transactions.transaction_id = virtual_goods.good_id WHERE virtual_goods.price > purchase_amount",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id LEFT JOIN upgrades ON transactions.transaction_id = upgrades.upgrade_id WHERE upgrades.upgrade_cost > purchase_amount",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id RIGHT JOIN upgrades ON transactions.transaction_id = upgrades.upgrade_id WHERE upgrades.upgrade_cost > purchase_amount",
      "SELECT player_name, purchase_amount FROM players JOIN transactions ON players.player_id = transactions.player_id CROSS JOIN virtual_goods WHERE virtual_goods.price < purchase_amount"
    ]
  },
  {
    "statements": [
      "SELECT * FROM transactions WHERE transaction_id = '12345678-1234-5678-1234-567812345678'",
      "SELECT goods_name, price FROM virtual_goods",
      "SELECT player_id, goods_id, quantity FROM player_inventory",
      "SELECT upgrade_name, price FROM upgrades",
      "SELECT player_id, upgrade_id, purchase_date FROM player_upgrades",
      "SELECT * FROM transactions WHERE player_id = '87654321-4321-8765-4321-876543218765'",
      "SELECT goods_name FROM virtual_goods WHERE price > 10",
      "SELECT * FROM player_inventory WHERE player_id = '98765432-9876-5432-9876-543298765432'",
      "SELECT upgrade_name, effect_description FROM upgrades",
      "SELECT * FROM player_upgrades WHERE player_id = '54321678-5432-1678-5432-167854321678'",
      "SELECT goods_name, price FROM virtual_goods WHERE price < 5",
      "SELECT transaction_id, player_id, amount FROM transactions",
      "SELECT goods_name, description FROM virtual_goods",
      "SELECT player_id, goods_id FROM player_inventory WHERE quantity > 5",
      "SELECT upgrade_name, effect_description FROM upgrades WHERE price > 100",
      "SELECT * FROM player_upgrades WHERE player_id = '87654321-1234-8765-1234-876543218765'",
      "SELECT goods_name, price FROM virtual_goods WHERE price = 10",
      "SELECT * FROM player_inventory WHERE player_id = '98765432-5432-9876-5432-987654329876'",
      "SELECT upgrade_name FROM upgrades",
      "SELECT * FROM player_upgrades WHERE player_id = '54321678-1234-5432-1234-543216785432'",
      "SELECT * FROM transactions WHERE amount > 1000",
      "SELECT player_id, SUM(amount) AS total_amount FROM transactions GROUP BY player_id HAVING total_amount > 5000",
      "SELECT player_id, COUNT(*) AS total_transactions FROM transactions GROUP BY player_id ORDER BY total_transactions DESC",
      "SELECT transactions.transaction_id, virtual_goods.goods_name, transactions.amount FROM transactions JOIN virtual_goods ON transactions.amount = virtual_goods.price",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT player_id, SUM(price) AS total_price FROM virtual_goods JOIN player_inventory ON virtual_goods.goods_id = player_inventory.goods_id GROUP BY player_id",
      "SELECT player_id, COUNT(*) AS total_items FROM player_inventory GROUP BY player_id HAVING total_items > 5",
      "SELECT player_id, COUNT(*) AS total_upgrades FROM player_upgrades GROUP BY player_id ORDER BY total_upgrades DESC",
      "SELECT player_id, upgrade_name FROM player_upgrades JOIN upgrades ON player_upgrades.upgrade_id = upgrades.upgrade_id",
      "SELECT player_id, SUM(price) AS total_spent FROM player_upgrades JOIN upgrades ON player_upgrades.upgrade_id = upgrades.upgrade_id GROUP BY player_id",
      "SELECT player_id, COUNT(*) AS total_upgrades FROM player_upgrades JOIN upgrades ON player_upgrades.upgrade_id = upgrades.upgrade_id GROUP BY player_id HAVING total_upgrades > 3",
      "SELECT * FROM player_inventory WHERE quantity > 10",
      "SELECT player_id, goods_name, quantity FROM player_inventory JOIN virtual_goods ON player_inventory.goods_id = virtual_goods.goods_id",
      "SELECT player_id, upgrade_name, purchase_date FROM player_upgrades JOIN upgrades ON player_upgrades.upgrade_id = upgrades.upgrade_id",
      "SELECT player_id, transaction_date, amount FROM transactions JOIN player_inventory ON transactions.player_id = player_inventory.player_id",
      "SELECT player_id, MAX(quantity) AS max_quantity FROM player_inventory GROUP BY player_id",
      "SELECT player_id, AVG(amount) AS avg_amount FROM transactions GROUP BY player_id",
      "SELECT player_id, MAX(price) AS max_price FROM virtual_goods GROUP BY player_id",
      "SELECT player_id, MIN(price) AS min_price FROM virtual_goods GROUP BY player_id",
      "SELECT player_id, SUM(price) AS total_price FROM virtual_goods GROUP BY player_id HAVING total_price > 1000"
    ]
  }
]