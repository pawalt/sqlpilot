[
  {
    "statements": [
      "SELECT * FROM support_tickets;",
      "SELECT ticket_id, customer_name, create_date FROM support_tickets;",
      "SELECT customer_name, status FROM support_tickets;",
      "SELECT * FROM support_tickets WHERE ticket_id = 1;",
      "SELECT customer_name FROM support_tickets WHERE status = 'Open';",
      "SELECT * FROM support_tickets ORDER BY create_date DESC;",
      "SELECT * FROM support_tickets WHERE create_date > '2022-01-01';",
      "SELECT COUNT(*) AS total_tickets FROM support_tickets;",
      "SELECT customer_name, COUNT(*) AS ticket_count FROM support_tickets GROUP BY customer_name;",
      "SELECT AVG(DATEDIFF(NOW(), create_date)) AS avg_days_open FROM support_tickets WHERE status = 'Open';",
      "SELECT customer_name, status FROM support_tickets WHERE issue_description LIKE '%network%';",
      "SELECT customer_name, create_date FROM support_tickets WHERE DATE(create_date) = CURDATE();",
      "SELECT customer_name, status FROM support_tickets WHERE MONTH(create_date) = 10;",
      "SELECT STATUS, COUNT(*) AS ticket_count FROM support_tickets GROUP BY status HAVING COUNT(*) > 5;",
      "SELECT * FROM support_tickets LIMIT 10 OFFSET 5;",
      "SELECT customer_name, create_date FROM support_tickets WHERE create_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_name, status FROM support_tickets WHERE create_date BETWEEN '2022-01-01' AND '2022-03-31' AND status = 'Open';",
      "SELECT customer_name, issue_description FROM support_tickets WHERE status = 'Pending' ORDER BY create_date ASC;",
      "SELECT customer_name, create_date FROM support_tickets WHERE YEAR(create_date) = 2022;",
      "SELECT customer_name, status FROM support_tickets WHERE DATE(create_date) = '2022-05-15' AND status = 'Closed';",
      "SELECT * FROM support_tickets WHERE ticket_id = 100;",
      "SELECT customer_name, issue_description FROM support_tickets WHERE status = 'Open';",
      "SELECT ticket_id, customer_name, status FROM support_tickets WHERE create_date >= '2022-01-01';",
      "SELECT * FROM support_tickets WHERE status != 'Resolved' ORDER BY create_date DESC;",
      "SELECT customer_name, COUNT(*) AS total_tickets FROM support_tickets GROUP BY customer_name HAVING total_tickets > 3;",
      "SELECT DISTINCT customer_name FROM support_tickets WHERE status = 'Pending';",
      "SELECT ticket_id, customer_name, issue_description FROM support_tickets WHERE issue_description LIKE '%urgent%';",
      "SELECT COUNT(*) AS total_tickets FROM support_tickets WHERE status = 'Open';",
      "SELECT ticket_id, customer_name, create_date FROM support_tickets WHERE customer_name LIKE 'John%';",
      "SELECT customer_name, MAX(create_date) AS last_ticket_date FROM support_tickets GROUP BY customer_name;",
      "SELECT ticket_id, customer_name, status FROM support_tickets WHERE create_date BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT customer_name, AVG(DATEDIFF(NOW(), create_date)) AS avg_days_to_resolve FROM support_tickets WHERE status = 'Resolved' GROUP BY customer_name;",
      "SELECT ticket_id, customer_name, status FROM support_tickets WHERE status IN ('Open', 'In Progress', 'On Hold');",
      "SELECT ticket_id, customer_name, issue_description FROM support_tickets WHERE LENGTH(issue_description) > 200;",
      "SELECT customer_name, COUNT(*) AS total_tickets FROM support_tickets WHERE create_date >= '2022-01-01' GROUP BY customer_name;",
      "SELECT customer_name, MIN(create_date) AS first_ticket_date FROM support_tickets GROUP BY customer_name;",
      "SELECT DISTINCT customer_name, issue_description FROM support_tickets WHERE status = 'Resolved';",
      "SELECT ticket_id, customer_name, status FROM support_tickets WHERE status LIKE 'O%';",
      "SELECT ticket_id, customer_name, status FROM support_tickets WHERE YEAR(create_date) = 2022;",
      "SELECT customer_name, DATEDIFF(NOW(), create_date) AS days_open FROM support_tickets WHERE status = 'Open';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM tickets;",
      "SELECT description, status FROM tickets WHERE customer_id = 1;",
      "SELECT * FROM inquiries;",
      "SELECT question, response FROM inquiries WHERE customer_id = 1;",
      "SELECT * FROM tickets WHERE created_at >= '2021-01-01';",
      "SELECT description FROM tickets WHERE status = 'Open';",
      "SELECT * FROM inquiries WHERE resolved = FALSE;",
      "SELECT ticket_id, description FROM tickets WHERE customer_id = 2;",
      "SELECT * FROM inquiries WHERE customer_id = 3 AND resolved = FALSE;",
      "SELECT COUNT(*) FROM tickets;",
      "SELECT MAX(created_at), MIN(created_at) FROM tickets;",
      "SELECT AVG(customer_id) FROM tickets;",
      "SELECT COUNT(*) FROM inquiries WHERE created_at >= '2021-06-01';",
      "SELECT status, COUNT(*) FROM tickets GROUP BY status;",
      "SELECT customer_id, AVG(question) FROM inquiries GROUP BY customer_id;",
      "SELECT ticket_id, description, resolved FROM tickets WHERE customer_id = 4 AND status = 'In Progress';",
      "SELECT MIN(created_at) FROM tickets WHERE customer_id = 5 AND status <> 'Resolved';",
      "SELECT * FROM inquiries WHERE customer_id = 6 AND response IS NOT NULL;",
      "SELECT * FROM tickets WHERE description LIKE '%urgent%';",
      "SELECT description FROM tickets WHERE status IN ('In Progress', 'Open');",
      "SELECT * FROM tickets WHERE customer_id = 123;",
      "SELECT ticket_id, description, created_at FROM tickets WHERE status = 'open';",
      "SELECT customer_id, COUNT(*) AS total_tickets FROM tickets GROUP BY customer_id;",
      "SELECT * FROM tickets JOIN inquiries ON tickets.customer_id = inquiries.customer_id;",
      "SELECT t.ticket_id, t.description, i.question FROM tickets t JOIN inquiries i ON t.customer_id = i.customer_id;",
      "SELECT * FROM tickets WHERE created_at > '2022-01-01';",
      "SELECT COUNT(*) AS total_open_tickets FROM tickets WHERE status = 'open';",
      "SELECT AVG(customer_id) AS avg_customer_id FROM tickets;",
      "SELECT ticket_id, description, COUNT(*) AS total_inquiries FROM tickets LEFT JOIN inquiries ON tickets.customer_id = inquiries.customer_id GROUP BY ticket_id;",
      "SELECT * FROM inquiries WHERE resolved = True AND created_at > '2022-01-01';",
      "SELECT t.customer_id, COUNT(*) AS total_inquiries FROM tickets t JOIN inquiries i ON t.customer_id = i.customer_id GROUP BY t.customer_id;",
      "SELECT ticket_id, description, response FROM tickets LEFT JOIN inquiries ON tickets.customer_id = inquiries.customer_id WHERE resolved = False;",
      "SELECT customer_id, SUM(CASE WHEN status = 'open' THEN 1 ELSE 0 END) AS total_open_tickets FROM tickets GROUP BY customer_id;",
      "SELECT MAX(created_at) AS latest_created_at FROM tickets;",
      "SELECT t.ticket_id, t.description, i.response FROM tickets t LEFT JOIN inquiries i ON t.customer_id = i.customer_id WHERE t.status = 'closed';",
      "SELECT customer_id, AVG(CAST(customer_id AS INT)) AS avg_customer_id FROM tickets;",
      "SELECT ticket_id, description, COUNT(*) AS total_inquiries FROM tickets LEFT JOIN inquiries ON tickets.customer_id = inquiries.customer_id WHERE tickets.created_at > '2022-01-01' AND resolved = True GROUP BY ticket_id;",
      "SELECT * FROM tickets WHERE status IN ('open', 'pending');",
      "SELECT t.customer_id, COUNT(*) AS total_resolved_inquiries FROM tickets t JOIN inquiries i ON t.customer_id = i.customer_id WHERE i.resolved = True GROUP BY t.customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM support_tickets;",
      "SELECT ticket_id, customer_name, status FROM support_tickets;",
      "SELECT issue_description FROM support_tickets WHERE status = 'Open';",
      "SELECT ticket_id, customer_name, created_at FROM support_tickets WHERE status = 'Closed';",
      "SELECT * FROM ticket_comments;",
      "SELECT comment_author, comment_text FROM ticket_comments WHERE ticket_id = 1;",
      "SELECT * FROM ticket_assignments;",
      "SELECT ticket_id, assigned_to, status FROM ticket_assignments WHERE assigned_at > '2022-01-01 00:00:00';",
      "SELECT ticket_id, assigned_to FROM ticket_assignments WHERE status = 'Pending';",
      "SELECT ticket_id, assigned_to, assigned_at FROM ticket_assignments WHERE status = 'Resolved';",
      "SELECT customer_name, status FROM support_tickets WHERE created_at < '2022-01-01 00:00:00';",
      "SELECT ticket_id, customer_name, issue_description FROM support_tickets WHERE status = 'In Progress';",
      "SELECT comment_author, comment_text FROM ticket_comments WHERE created_at >= '2022-01-01 00:00:00';",
      "SELECT ticket_id, assigned_to, status FROM ticket_assignments WHERE assigned_at < '2022-01-01 00:00:00';",
      "SELECT customer_name, created_at FROM support_tickets WHERE status = 'Closed';",
      "SELECT * FROM support_tickets ORDER BY created_at DESC;",
      "SELECT ticket_id, customer_name, status FROM support_tickets ORDER BY ticket_id ASC;",
      "SELECT ticket_id, assigned_to, status FROM ticket_assignments ORDER BY ticket_id DESC;",
      "SELECT DISTINCT status FROM support_tickets;",
      "SELECT customer_name, status, COUNT(*) FROM support_tickets GROUP BY status;",
      "SELECT * FROM support_tickets;",
      "SELECT ticket_id, customer_name, status FROM support_tickets;",
      "SELECT ticket_id, customer_name, status FROM support_tickets WHERE status = 'Open';",
      "SELECT ticket_id, customer_name, issue_description FROM support_tickets WHERE customer_name LIKE 'John%';",
      "SELECT * FROM ticket_comments;",
      "SELECT * FROM ticket_assignments;",
      "SELECT * FROM support_tickets INNER JOIN ticket_comments ON support_tickets.ticket_id = ticket_comments.ticket_id;",
      "SELECT support_tickets.customer_name, ticket_comments.comment_text FROM support_tickets INNER JOIN ticket_comments ON support_tickets.ticket_id = ticket_comments.ticket_id;",
      "SELECT support_tickets.customer_name, ticket_comments.comment_text, ticket_assignments.assigned_to FROM support_tickets INNER JOIN ticket_comments ON support_tickets.ticket_id = ticket_comments.ticket_id INNER JOIN ticket_assignments ON support_tickets.ticket_id = ticket_assignments.ticket_id;",
      "SELECT customer_name, COUNT(*) AS num_tickets FROM support_tickets GROUP BY customer_name;",
      "SELECT customer_name, status, COUNT(*) AS num_tickets FROM support_tickets GROUP BY customer_name, status ORDER BY customer_name ASC;",
      "SELECT customer_name, COUNT(*) AS num_comments FROM support_tickets LEFT JOIN ticket_comments ON support_tickets.ticket_id = ticket_comments.ticket_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(DATEDIFF(NOW(), created_at)) AS avg_days_since_created FROM support_tickets GROUP BY customer_name;",
      "SELECT status, COUNT(*) AS num_tickets FROM support_tickets WHERE status = 'Open' GROUP BY status;",
      "SELECT customer_name, MAX(created_at) AS latest_ticket_date FROM support_tickets GROUP BY customer_name;",
      "SELECT customer_name, MIN(created_at) AS oldest_ticket_date FROM support_tickets GROUP BY customer_name;",
      "SELECT customer_name, status, MAX(created_at) AS latest_ticket_date FROM support_tickets GROUP BY customer_name, status;",
      "SELECT customer_name, AVG(DATEDIFF(NOW(), created_at)) AS avg_days_since_created FROM support_tickets WHERE status = 'Open' GROUP BY customer_name;",
      "SELECT customer_name, AVG(DATEDIFF(NOW(), created_at)) AS avg_days_since_created FROM support_tickets WHERE status = 'Closed' GROUP BY customer_name;",
      "SELECT customer_name, AVG(DATEDIFF(NOW(), created_at)) AS avg_days_since_created FROM support_tickets WHERE status = 'In Progress' GROUP BY customer_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM tickets;",
      "SELECT title, description FROM tickets;",
      "SELECT ticket_id, title, status FROM tickets;",
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers;",
      "SELECT customer_id, name, phone_number FROM customers;",
      "SELECT * FROM agents;",
      "SELECT name, department FROM agents;",
      "SELECT agent_id, name FROM agents;",
      "SELECT * FROM interactions;",
      "SELECT ticket_id, customer_id, agent_id FROM interactions;",
      "SELECT interaction_id, interaction_text, interaction_timestamp FROM interactions;",
      "SELECT tickets.ticket_id, customers.name, agents.name FROM tickets JOIN customers ON tickets.ticket_id = customers.customer_id JOIN agents ON tickets.ticket_id = agents.agent_id;",
      "SELECT tickets.title, customers.email, interactions.interaction_text FROM tickets JOIN customers ON tickets.ticket_id = customers.customer_id JOIN interactions ON tickets.ticket_id = interactions.ticket_id;",
      "SELECT customers.name, agents.department, interactions.interaction_timestamp FROM customers JOIN agents ON customers.customer_id = agents.agent_id JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT tickets.*, interactions.* FROM tickets JOIN interactions ON tickets.ticket_id = interactions.ticket_id;",
      "SELECT customers.*, agents.* FROM customers JOIN agents ON customers.customer_id = agents.agent_id;",
      "SELECT agents.*, tickets.* FROM agents JOIN tickets ON agents.agent_id = tickets.ticket_id;",
      "SELECT interactions.*, customers.*, agents.* FROM interactions JOIN customers ON interactions.customer_id = customers.customer_id JOIN agents ON interactions.agent_id = agents.agent_id;",
      "SELECT * FROM tickets;",
      "SELECT title, description FROM tickets WHERE status='Open';",
      "SELECT customers.name, tickets.title FROM customers JOIN tickets ON customers.customer_id = tickets.ticket_id;",
      "SELECT agents.name, interactions.interaction_text FROM agents JOIN interactions ON agents.agent_id = interactions.agent_id;",
      "SELECT tickets.title, interactions.interaction_text FROM tickets JOIN interactions ON tickets.ticket_id = interactions.ticket_id;",
      "SELECT customers.name, interactions.interaction_text FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT agents.name, tickets.title, interactions.interaction_timestamp FROM agents JOIN interactions ON agents.agent_id = interactions.agent_id JOIN tickets ON interactions.ticket_id = tickets.ticket_id;",
      "SELECT COUNT(*) AS total_tickets FROM tickets;",
      "SELECT AVG(interaction_timestamp) AS avg_response_time FROM interactions;",
      "SELECT customers.name, COUNT(interactions.interaction_id) AS total_interactions FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customers.name;",
      "SELECT agents.name, COUNT(interactions.interaction_id) AS total_interactions FROM agents JOIN interactions ON agents.agent_id = interactions.agent_id GROUP BY agents.name;",
      "SELECT DISTINCT title FROM tickets;",
      "SELECT * FROM tickets WHERE ticket_id IN (SELECT ticket_id FROM interactions);",
      "SELECT * FROM tickets WHERE ticket_id NOT IN (SELECT ticket_id FROM interactions);",
      "SELECT ticket_id, COUNT(*) AS total_interactions FROM interactions GROUP BY ticket_id;",
      "SELECT agent_id, COUNT(*) AS total_interactions FROM interactions GROUP BY agent_id;",
      "SELECT ticket_id, DATEDIFF(CURRENT_TIMESTAMP, interaction_timestamp) AS days_since_last_interaction FROM interactions ORDER BY days_since_last_interaction DESC;",
      "SELECT agent_id, AVG(DATEDIFF(interaction_timestamp, (SELECT MIN(interaction_timestamp) FROM interactions))) AS avg_response_speed FROM interactions GROUP BY agent_id;",
      "SELECT ticket_id, MAX(DATEDIFF(interaction_timestamp, (SELECT MIN(interaction_timestamp) FROM interactions))) AS days_to_resolve FROM interactions GROUP BY ticket_id HAVING days_to_resolve IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Tickets;",
      "SELECT ticket_id, customer_id, ticket_description, status, created_at FROM Tickets;",
      "SELECT ticket_id, customer_id, ticket_description FROM Tickets WHERE status='open';",
      "SELECT DISTINCT status FROM Tickets;",
      "SELECT ticket_id, customer_id FROM Tickets WHERE created_at >= '2022-01-01';",
      "SELECT customer_name, customer_email FROM Customers;",
      "SELECT customer_id, phone_number FROM Customers WHERE customer_name LIKE 'A%';",
      "SELECT agent_name, agent_email FROM Agents;",
      "SELECT agent_name, agent_phone FROM Agents WHERE agent_id = 1;",
      "SELECT department_name FROM Departments;",
      "SELECT department_id FROM Departments WHERE department_name = 'Support';",
      "SELECT ticket_id, event_description FROM TicketHistory;",
      "SELECT ticket_id, event_timestamp FROM TicketHistory WHERE event_description LIKE '%closed%';",
      "SELECT ticket_id, MAX(event_timestamp) FROM TicketHistory GROUP BY ticket_id;",
      "SELECT ticket_description, ticket_id FROM Tickets ORDER BY ticket_id DESC;",
      "SELECT customer_name, COUNT(ticket_id) FROM Tickets t JOIN Customers c ON t.customer_id = c.customer_id GROUP BY customer_name ORDER BY COUNT(ticket_id) DESC;",
      "SELECT agent_name, COUNT(ticket_id) AS total_tickets FROM Tickets t JOIN Agents a ON t.agent_id = a.agent_id GROUP BY agent_name ORDER BY total_tickets DESC;",
      "SELECT ticket_id, customer_id, ticket_description, status, created_at FROM Tickets LIMIT 10 OFFSET 5;",
      "SELECT agent_name, department_name FROM Agents a JOIN Departments d ON a.department_id = d.department_id;",
      "SELECT customer_name, phone_number, status FROM Customers c JOIN Tickets t ON c.customer_id = t.customer_id WHERE status = 'pending';",
      "SELECT TicketHistory.event_description, Tickets.ticket_description, Customers.customer_name FROM TicketHistory JOIN Tickets ON TicketHistory.ticket_id = Tickets.ticket_id JOIN Customers ON Tickets.customer_id = Customers.customer_id",
      "SELECT Tickets.ticket_id, Tickets.ticket_description, Tickets.status, Customers.customer_name FROM Tickets JOIN Customers ON Tickets.customer_id = Customers.customer_id WHERE Tickets.status = 'Open'",
      "SELECT Tickets.ticket_id, Tickets.ticket_description, Tickets.created_at, Departments.department_name FROM Tickets JOIN Departments ON Tickets.department_id = Departments.department_id",
      "SELECT TicketHistory.event_description, TicketHistory.event_timestamp, Tickets.ticket_description, Agents.agent_name FROM TicketHistory JOIN Tickets ON TicketHistory.ticket_id = Tickets.ticket_id JOIN Agents ON Tickets.customer_id = Agents.agent_id",
      "SELECT Tickets.ticket_id, Tickets.ticket_description, Tickets.status, Agents.agent_name FROM Tickets JOIN Agents ON Tickets.customer_id = Agents.agent_id WHERE Tickets.status = 'Open'",
      "SELECT Tickets.ticket_id, Tickets.ticket_description, Tickets.created_at, Departments.department_name FROM Tickets JOIN Departments ON Tickets.department_id = Departments.department_id",
      "SELECT Tickets.ticket_id, Tickets.ticket_description, Tickets.status, Departments.department_name FROM Tickets JOIN Departments ON..."
    ]
  }
]