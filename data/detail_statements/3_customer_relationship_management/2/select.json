[
  {
    "statements": [
      "SELECT * FROM CustomerData;",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE purchase_amount > 1000;",
      "SELECT customer_name FROM CustomerData WHERE purchase_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_email FROM CustomerData WHERE customer_id = 12345;",
      "SELECT * FROM CustomerData ORDER BY purchase_amount DESC;",
      "SELECT customer_name, purchase_date FROM CustomerData WHERE customer_name LIKE 'John%';",
      "SELECT DISTINCT customer_name FROM CustomerData;",
      "SELECT customer_name, customer_email FROM CustomerData WHERE purchase_amount < 500;",
      "SELECT customer_id, customer_name FROM CustomerData WHERE purchase_date = '2022-02-14';",
      "SELECT AVG(purchase_amount) AS avg_purchase_amount FROM CustomerData;",
      "SELECT SUM(purchase_amount) AS total_purchase_amount FROM CustomerData;",
      "SELECT customer_name FROM CustomerData WHERE purchase_date < '2022-04-01' AND purchase_amount > 2000;",
      "SELECT MIN(purchase_amount) AS min_purchase_amount FROM CustomerData;",
      "SELECT MAX(purchase_amount) AS max_purchase_amount FROM CustomerData;",
      "SELECT COUNT(*) AS total_customers FROM CustomerData;",
      "SELECT * FROM CustomerData WHERE customer_id IN (123, 456, 789);",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE purchase_date = '2022-01-15';",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE purchase_amount BETWEEN 500 AND 1000;",
      "SELECT customer_id, purchase_date FROM CustomerData WHERE customer_name = 'Alice';",
      "SELECT customer_name, purchase_date FROM CustomerData WHERE customer_id = 56789;",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE purchase_amount > 1000",
      "SELECT customer_id, customer_email FROM CustomerData WHERE purchase_date >= '2022-01-01' AND purchase_date <= '2022-12-31'",
      "SELECT customer_name, customer_email, purchase_amount FROM CustomerData WHERE customer_name LIKE '%Smith%'",
      "SELECT * FROM CustomerData WHERE customer_id IN (1001, 1003, 1005)",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE purchase_date BETWEEN '2022-03-01' AND '2022-03-31'",
      "SELECT customer_id, customer_name, customer_email, purchase_amount FROM CustomerData WHERE purchase_amount >= 500 AND purchase_amount <= 1000",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE purchase_date < '2022-04-15'",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE customer_name IN ('Alice', 'Bob', 'Charlie')",
      "SELECT AVG(purchase_amount) AS average_purchase_amount FROM CustomerData",
      "SELECT COUNT(customer_id) AS total_customers FROM CustomerData",
      "SELECT customer_name, SUM(purchase_amount) AS total_purchase_amount FROM CustomerData GROUP BY customer_name",
      "SELECT DISTINCT customer_name FROM CustomerData",
      "SELECT customer_name, customer_email FROM CustomerData ORDER BY customer_name ASC",
      "SELECT customer_name, purchase_amount FROM CustomerData ORDER BY purchase_amount DESC",
      "SELECT customer_name, COUNT(*) AS total_purchases FROM CustomerData GROUP BY customer_name",
      "SELECT DISTINCT YEAR(purchase_date) AS purchase_year FROM CustomerData",
      "SELECT customer_name, purchase_amount FROM CustomerData WHERE customer_name = 'John' AND purchase_amount > 2000",
      "SELECT customer_id, customer_name, customer_email FROM CustomerData WHERE purchase_date = '2022-06-15'",
      "SELECT customer_name, AVG(purchase_amount) AS avg_purchase_amount FROM CustomerData GROUP BY customer_name HAVING AVG(purchase_amount) > 1000",
      "SELECT customer_name, MAX(purchase_amount) AS max_purchase_amount FROM CustomerData",
      "SELECT customer_name, MIN(purchase_amount) AS min_purchase_amount FROM CustomerData"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_data;",
      "SELECT customer_name, email FROM customer_data;",
      "SELECT customer_id, email, phone_number FROM customer_data WHERE customer_name LIKE 'A%';",
      "SELECT * FROM purchase_data;",
      "SELECT purchase_amount, purchase_date FROM purchase_data;",
      "SELECT customer_name, purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id;",
      "SELECT customer_name, SUM(purchase_amount) AS total_purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(purchase_amount) AS avg_purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(purchase_id) AS total_purchases FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name;",
      "SELECT customer_id, customer_name FROM customer_data ORDER BY customer_name ASC;",
      "SELECT customer_id, customer_name FROM customer_data ORDER BY customer_id DESC;",
      "SELECT * FROM purchase_data WHERE purchase_date >= '2022-01-01' AND purchase_date <= '2022-12-31';",
      "SELECT customer_name, purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id WHERE purchase_amount > 100;",
      "SELECT customer_name, email FROM customer_data WHERE email LIKE '%gmail.com';",
      "SELECT customer_name, phone_number FROM customer_data WHERE phone_number LIKE '%555%';",
      "SELECT DISTINCT customer_name FROM customer_data;",
      "SELECT COUNT(*) AS total_customers FROM customer_data;",
      "SELECT * FROM customer_data WHERE customer_id = 1;",
      "SELECT customer_name, MAX(purchase_amount) AS max_purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name;",
      "SELECT customer_name, MIN(purchase_amount) AS min_purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name;",
      "SELECT * FROM customer_data WHERE customer_id = 1;",
      "SELECT customer_name, email FROM customer_data WHERE phone_number LIKE '%123%';",
      "SELECT customer_name, purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id;",
      "SELECT customer_name, purchase_amount FROM customer_data INNER JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id WHERE purchase_amount > 1000;",
      "SELECT customer_name, purchase_amount, purchase_date FROM customer_data LEFT JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id;",
      "SELECT customer_data.customer_id, SUM(purchase_amount) AS total_purchase_amount FROM customer_data INNER JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_data.customer_id;",
      "SELECT customer_name, MAX(purchase_amount) AS max_amount FROM customer_data LEFT JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(purchase_id) AS purchase_count FROM customer_data LEFT JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name HAVING purchase_count > 2;",
      "SELECT customer_name, AVG(purchase_amount) AS avg_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name;",
      "SELECT customer_name, purchase_amount FROM customer_data INNER JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, COUNT(purchase_id) AS purchase_count FROM customer_data LEFT JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id GROUP BY customer_name ORDER BY purchase_count DESC;",
      "SELECT customer_name, purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id ORDER BY purchase_amount DESC LIMIT 5;",
      "SELECT customer_name, purchase_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id WHERE customer_name LIKE '%John%' AND purchase_date >= '2022-06-01' ORDER BY purchase_amount DESC;",
      "SELECT customer_name, SUM(purchase_amount) AS total_purchase FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id WHERE purchase_date >= '2022-01-01' GROUP BY customer_name HAVING total_purchase > 5000;",
      "SELECT customer_name, email FROM customer_data WHERE customer_id IN (SELECT customer_id FROM purchase_data WHERE purchase_amount > 1000);",
      "SELECT customer_name, AVG(purchase_amount) AS avg_amount FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id WHERE purchase_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY customer_name HAVING avg_amount > 500;",
      "SELECT customer_name, email, phone_number FROM customer_data WHERE email LIKE '%gmail.com%' OR phone_number LIKE '%555%';",
      "SELECT customer_name, purchase_date, DATEDIFF(CURDATE(), purchase_date) AS days_since_purchase FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id;",
      "SELECT customer_name, purchase_amount FROM customer_data JOIN (SELECT customer_id, MAX(purchase_amount) AS max_amount FROM purchase_data GROUP BY customer_id) AS max_amount_table ON customer_data.customer_id = max_amount_table.customer_id WHERE purchase_amount = max_amount_table.max_amount;",
      "SELECT customer_name, purchase_date, TIMESTAMPDIFF(MONTH, purchase_date, CURDATE()) AS months_since_purchase FROM customer_data JOIN purchase_data ON customer_data.customer_id = purchase_data.customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_age FROM customers WHERE customer_location = 'New York';",
      "SELECT * FROM orders;",
      "SELECT order_id, total_amount FROM orders WHERE order_date >= '2022-01-01';",
      "SELECT * FROM products;",
      "SELECT product_name, product_price FROM products WHERE product_category = 'Electronics';",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id;",
      "SELECT customer_name, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT product_category, AVG(product_price) AS avg_price FROM products GROUP BY product_category;",
      "SELECT customer_name, COUNT(order_id) AS num_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, order_date, total_amount, product_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id;",
      "SELECT customer_name, MAX(customer_age) AS oldest_age FROM customers;",
      "SELECT customer_name, MIN(customer_age) AS youngest_age FROM customers;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_age >= 30;",
      "SELECT product_category, SUM(product_price) AS total_revenue FROM products GROUP BY product_category;",
      "SELECT customer_name, COUNT(*) AS num_products FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(customer_age) AS avg_age FROM customers GROUP BY customer_name;",
      "SELECT customer_name, MAX(total_amount) AS highest_purchase FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT * FROM customers WHERE customer_age > 30 AND customer_location = 'New York';",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_age BETWEEN 25 AND 40;",
      "SELECT customer_name, customer_email, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT orders.order_id, orders.order_date, products.product_name, products.product_price FROM orders JOIN products ON orders.product_id = products.product_id;",
      "SELECT customer_name, customer_email, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.total_amount > 1000;",
      "SELECT customer_name, customer_age, SUM(orders.total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, customer_age;",
      "SELECT customers.customer_name, products.product_name, products.product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON ..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers",
      "SELECT name, email FROM customers",
      "SELECT phone, address FROM customers",
      "SELECT * FROM orders",
      "SELECT customer_id, order_date FROM orders",
      "SELECT total_amount FROM orders",
      "SELECT * FROM products",
      "SELECT name, category FROM products",
      "SELECT price FROM products",
      "SELECT * FROM transactions",
      "SELECT order_id, product_id FROM transactions",
      "SELECT quantity, total_price FROM transactions",
      "SELECT customers.name, orders.order_date, products.price FROM customers, orders, products",
      "SELECT customers.name, orders.order_date, products.price, transactions.quantity FROM customers, orders, products, transactions",
      "SELECT customers.name, orders.order_date, products.name, transactions.quantity, transactions.total_price FROM customers, orders, products, transactions",
      "SELECT * FROM customers WHERE customer_id = 1",
      "SELECT * FROM orders WHERE total_amount > 100",
      "SELECT * FROM products WHERE category = 'Electronics'",
      "SELECT * FROM transactions WHERE quantity >= 5 AND total_price <= 500",
      "SELECT customers.name, orders.order_date, transactions.quantity, products.name FROM customers, orders, transactions, products",
      "SELECT * FROM customers",
      "SELECT name, email FROM customers WHERE customer_id = 1",
      "SELECT * FROM orders JOIN customers ON orders.customer_id = customers.customer_id",
      "SELECT products.name, products.price FROM products WHERE products.category = 'Electronics'",
      "SELECT customers.name, orders.order_date, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id",
      "SELECT orders.order_id, products.name, transactions.quantity, transactions.total_price FROM orders JOIN transactions ON orders.order_id = transactions.order_id JOIN products ON transactions.product_id = products.product_id",
      "SELECT customers.name, customers.email, products.name, products.price, transactions.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id JOIN products ON transactions.product_id = products.product_id",
      "SELECT * FROM customers WHERE phone LIKE '%123%'",
      "SELECT customers.name, orders.order_date, products.name, transactions.quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id JOIN products ON transactions.product_id = products.product_id",
      "SELECT orders.order_date, SUM(transactions.total_price) AS total_sales FROM orders JOIN transactions ON orders.order_id = transactions.order_id GROUP BY orders.order_date HAVING total_sales > 1000",
      "SELECT customers.name, customers.address, COUNT(orders.order_id) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name, customers.address HAVING total_orders > 5",
      "SELECT customers.name, SUM(transactions.quantity) AS total_quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customers.name ORDER BY total_quantity DESC",
      "SELECT orders.order_date, AVG(transactions.quantity) AS average_quantity FROM orders JOIN transactions ON orders.order_id = transactions.order_id GROUP BY orders.order_date ORDER BY average_quantity DESC",
      "SELECT products.category, AVG(products.price) AS average_price FROM products GROUP BY products.category",
      "SELECT customers.name, COUNT(orders.order_id) AS total_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.name ORDER BY total_orders DESC",
      "SELECT products.category, COUNT(products.product_id) AS total_products FROM products GROUP BY products.category ORDER BY total_products ASC",
      "SELECT customers.name, MAX(transactions.total_price) AS max_transaction FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customers.name",
      "SELECT customers.name, MIN(transactions.total_price) AS min_transaction FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customers.name",
      "SELECT customers.name, AVG(transactions.total_price) AS avg_transaction FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id GROUP BY customers.name ORDER BY avg_transaction DESC",
      "SELECT orders.order_date, SUM(transactions.total_price) AS total_revenue FROM orders JOIN transactions ON orders.order_id = transactions.order_id GROUP BY orders.order_date ORDER BY total_revenue DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT customer_id, customer_name FROM Customers;",
      "SELECT customer_id, email_address FROM Customers WHERE address LIKE '%Street%';",
      "SELECT order_id, order_date FROM Orders WHERE total_amount > 1000;",
      "SELECT product_id, product_name, category, unit_price FROM Products;",
      "SELECT product_id, product_name FROM Products WHERE unit_price < 50;",
      "SELECT order_id, product_id, quantity, total_price FROM Order_Details WHERE order_id = 1001;",
      "SELECT review_id, customer_id, product_id, rating FROM Reviews WHERE rating >= 4;",
      "SELECT customer_name, email_address, phone_number FROM Customers WHERE customer_id = 200;",
      "SELECT order_id, total_amount FROM Orders WHERE customer_id = 100;",
      "SELECT product_id, category FROM Products WHERE category = 'Electronics';",
      "SELECT customer_id, customer_name, email_address FROM Customers WHERE email_address LIKE '%gmail.com';",
      "SELECT order_id, customer_id, order_date FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT product_id, product_name, unit_price FROM Products ORDER BY unit_price DESC;",
      "SELECT order_id, product_id, total_price FROM Order_Details WHERE total_price IN (100, 200, 300);",
      "SELECT review_id, customer_id, product_id FROM Reviews WHERE review_text IS NOT NULL;",
      "SELECT customer_id, customer_name, phone_number FROM Customers WHERE phone_number LIKE '%555%';",
      "SELECT order_id, customer_id, total_amount FROM Orders WHERE total_amount > 500 AND total_amount < 1000;",
      "SELECT product_id, product_name, unit_price FROM Products WHERE unit_price BETWEEN 10 AND 50;",
      "SELECT customer_id, customer_name, email_address FROM Customers WHERE customer_id IN (100, 200, 300);",
      "SELECT * FROM Customers;",
      "SELECT customer_name, email_address FROM Customers WHERE customer_id = 1;",
      "SELECT customer_name, phone_number, address FROM Customers WHERE email_address LIKE '%gmail.com';",
      "SELECT customer_name, email_address, phone_number, address FROM Customers WHERE phone_number LIKE '123%';",
      "SELECT customer_name, email_address, phone_number FROM Customers WHERE address LIKE '%Street%' ORDER BY customer_name ASC;",
      "SELECT customer_name, email_address, phone_number FROM Customers WHERE address LIKE '%Lane%' ORDER BY customer_name DESC;",
      "SELECT customer_name, email_address, phone_number, address FROM Customers WHERE email_address LIKE '%yahoo.com' ORDER BY customer_name ASC, email_address DESC;",
      "SELECT customer_name, email_address, phone_number FROM Customers WHERE address LIKE '%Avenue%' AND phone_number LIKE '555%' ORDER BY customer_name ASC;",
      "SELECT c.customer_name, o.order_id, o.order_date FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id ORDER BY c.customer_name ASC, o.order_date DESC;",
      "SELECT c.customer_name, p.product_name, od.quantity FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id INNER JOIN Order_Details od ON o.order_id = od.order_id INNER JOIN Products p ON od.product_id = p.product_id;",
      "SELECT c.customer_name, p.product_name, r.rating FROM Customers c INNER JOIN Reviews r ON c.customer_id = r.customer_id INNER JOIN Products p ON r.product_id = p.product_id WHERE r.rating >= 4 ORDER BY c.customer_name ASC, r.rating DESC;",
      "SELECT p.product_name, p.unit_price, COUNT(od.product_id) AS total_quantity FROM Products p INNER JOIN Order_Details od ON p.product_id = od.product_id GROUP BY p.product_name, p.unit_price HAVING COUNT(od.product_id) >= 5;",
      "SELECT c.customer_name, o.total_amount, r.rating FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id INNER JOIN Reviews r ON c.customer_id = r.customer_id WHERE o.total_amount > 1000 AND r.rating >= 4 ORDER BY c.customer_name ASC, r.rating DESC;",
      "SELECT c.customer_name, SUM(o.total_amount) AS total_spent FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name HAVING SUM(o.total_amount) > 5000;",
      "SELECT p.category, AVG(r.rating) AS average_rating FROM Products p INNER JOIN Reviews r ON p.product_id = r.product_id GROUP BY p.category HAVING AVG(r.rating) >= 3.5;",
      "SELECT customer_name, order_date, total_amount FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id WHERE total_amount > (SELECT AVG(total_amount) FROM Orders) ORDER BY total_amount DESC;",
      "SELECT c.customer_name, p.product_name, CASE WHEN r.rating >= 4 THEN 'Good' ELSE 'Average' END AS review_quality FROM Customers c INNER JOIN Reviews r ON c.customer_id = r.customer_id INNER JOIN Products p ON r.product_id = p.product_id;",
      "SELECT p.product_name, AVG(r.rating) AS average_rating FROM Products p LEFT JOIN Reviews r ON p.product_id = r.product_id GROUP BY p.product_name HAVING AVG(r.rating) IS NULL OR AVG(r.rating) < 3;",
      "SELECT c.customer_name, CASE WHEN EXISTS (SELECT * FROM Orders o WHERE o.customer_id = c.customer_id) THEN 'Has Orders' ELSE 'No Orders' END AS order_status FROM Customers c;",
      "SELECT customer_name, total_amount FROM (SELECT c.customer_name, SUM(o.total_amount) AS total_amount FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name) AS customer_totals ORDER BY total_amount DESC;",
      "SELECT customer_name, product_name, total_price FROM Customers c, Products p, Order_Details od WHERE c.customer_id = od.order_id AND p.product_id = od.product_id ORDER BY total_price ASC;"
    ]
  }
]