[
  {
    "statements": [
      "SELECT * FROM customer_feedback;",
      "SELECT feedback_id, customer_id, survey_id FROM customer_feedback;",
      "SELECT review_text, rating FROM customer_feedback;",
      "SELECT * FROM customer_feedback WHERE rating > 3;",
      "SELECT customer_id, survey_id, rating FROM customer_feedback WHERE customer_id = '123456789';",
      "SELECT * FROM customer_feedback WHERE survey_id = '987654321';",
      "SELECT feedback_id, review_text FROM customer_feedback WHERE rating >= 4;",
      "SELECT customer_id, survey_id, rating FROM customer_feedback WHERE customer_id = '987654321' AND rating < 3;",
      "SELECT * FROM customer_feedback WHERE review_text LIKE '%great%';",
      "SELECT feedback_id, customer_id, survey_id FROM customer_feedback WHERE rating = 5;",
      "SELECT * FROM customer_feedback WHERE customer_id = '123456789' AND survey_id = '987654321';",
      "SELECT customer_id, rating FROM customer_feedback WHERE survey_id = '789012345';",
      "SELECT feedback_id, review_text FROM customer_feedback WHERE rating <= 2;",
      "SELECT * FROM customer_feedback WHERE customer_id = '123456789' OR survey_id = '987654321';",
      "SELECT customer_id, survey_id, rating FROM customer_feedback WHERE review_text IS NOT NULL;",
      "SELECT feedback_id, customer_id, survey_id FROM customer_feedback WHERE rating < 5;",
      "SELECT * FROM customer_feedback WHERE feedback_id = '456789012';",
      "SELECT customer_id, survey_id, review_text FROM customer_feedback WHERE feedback_id = '345678901';",
      "SELECT * FROM customer_feedback WHERE rating = 1;",
      "SELECT feedback_id, customer_id, survey_id FROM customer_feedback WHERE review_text IS NULL;",
      "SELECT * FROM customer_feedback WHERE rating > 4;",
      "SELECT review_text, rating FROM customer_feedback WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT COUNT(feedback_id) AS total_feedback FROM customer_feedback WHERE survey_id = '123e4567-e89b-12d3-a456-426614174001';",
      "SELECT AVG(rating) AS avg_rating FROM customer_feedback WHERE customer_id = '123e4567-e89b-12d3-a456-426614174002';",
      "SELECT customer_id, survey_id, AVG(rating) AS avg_rating FROM customer_feedback GROUP BY customer_id, survey_id;",
      "SELECT customer_id, survey_id, COUNT(feedback_id) AS total_feedback FROM customer_feedback GROUP BY customer_id, survey_id HAVING total_feedback > 5;",
      "SELECT customer_id, COUNT(DISTINCT survey_id) AS unique_surveys FROM customer_feedback GROUP BY customer_id HAVING unique_surveys > 3;",
      "SELECT survey_id, AVG(rating) AS avg_rating FROM customer_feedback WHERE review_text LIKE '%good%' GROUP BY survey_id HAVING avg_rating > 4;",
      "SELECT customer_id, COUNT(feedback_id) AS total_feedback FROM customer_feedback WHERE customer_id IN ('123e4567-e89b-12d3-a456-426614174003', '123e4567-e89b-12d3-a456-426614174004') GROUP BY customer_id;",
      "SELECT customer_id, survey_id, MAX(rating) AS max_rating FROM customer_feedback GROUP BY customer_id, survey_id;",
      "SELECT customer_id, survey_id, MIN(rating) AS min_rating FROM customer_feedback GROUP BY customer_id, survey_id;",
      "SELECT customer_id, survey_id, COUNT(feedback_id) AS total_feedback, AVG(rating) AS avg_rating FROM customer_feedback GROUP BY customer_id, survey_id ORDER BY avg_rating DESC;",
      "SELECT DISTINCT customer_id FROM customer_feedback;",
      "SELECT customer_id, survey_id FROM customer_feedback ORDER BY rating DESC;",
      "SELECT customer_id, survey_id, rating FROM customer_feedback ORDER BY rating ASC;",
      "SELECT customer_id, COUNT(feedback_id) AS total_feedback, SUM(rating) AS total_rating FROM customer_feedback GROUP BY customer_id;",
      "SELECT customer_id, survey_id, review_text, rating FROM customer_feedback WHERE customer_id = '123e4567-e89b-12d3-a456-426614174005' AND survey_id = '123e4567-e89b-12d3-a456-426614174006';",
      "SELECT customer_id, survey_id, review_text, rating FROM customer_feedback WHERE rating BETWEEN 2 AND 4;",
      "SELECT customer_id, survey_id, review_text, rating FROM customer_feedback WHERE review_text IS NULL;",
      "SELECT customer_id, survey_id, review_text, rating FROM customer_feedback WHERE customer_id = '123e4567-e89b-12d3-a456-426614174007' OR customer_id = '123e4567-e89b-12d3-a456-426614174008';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM surveys;",
      "SELECT survey_id, survey_date FROM surveys;",
      "SELECT * FROM reviews;",
      "SELECT review_id, review_date FROM reviews;",
      "SELECT customer_id, satisfaction_score FROM surveys;",
      "SELECT customer_id, review_text FROM reviews;",
      "SELECT survey_id, survey_date, customer_id, satisfaction_score FROM surveys;",
      "SELECT review_id, review_date, customer_id, review_text FROM reviews;",
      "SELECT survey_id, survey_date, satisfaction_score FROM surveys;",
      "SELECT review_id, review_date, review_text FROM reviews;",
      "SELECT survey_id, customer_id, satisfaction_score FROM surveys;",
      "SELECT review_id, customer_id, review_text FROM reviews;",
      "SELECT survey_id, satisfaction_score FROM surveys;",
      "SELECT review_id, review_text FROM reviews;",
      "SELECT survey_date, customer_id FROM surveys;",
      "SELECT review_date, customer_id FROM reviews;",
      "SELECT survey_date, satisfaction_score FROM surveys;",
      "SELECT review_date, review_text FROM reviews;",
      "SELECT customer_id, satisfaction_score FROM surveys;",
      "SELECT customer_id, review_text FROM reviews;",
      "SELECT * FROM surveys WHERE satisfaction_score > 5;",
      "SELECT survey_id, survey_date, satisfaction_score FROM surveys WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT r.review_id, r.review_date, r.review_text, s.survey_date FROM reviews r JOIN surveys s ON r.customer_id = s.customer_id;",
      "SELECT AVG(satisfaction_score) FROM surveys;",
      "SELECT survey_date, COUNT(*) FROM surveys GROUP BY survey_date;",
      "SELECT customer_id, MAX(satisfaction_score) FROM surveys GROUP BY customer_id;",
      "SELECT AVG(satisfaction_score) AS average_score, COUNT(*) AS total_surveys FROM surveys WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM surveys WHERE survey_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT DISTINCT customer_id FROM surveys;",
      "SELECT customer_id, COUNT(*) FROM surveys GROUP BY customer_id HAVING COUNT(*) > 1;",
      "SELECT survey_date, satisfaction_score FROM surveys WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000' AND survey_date >= '2022-06-01';",
      "SELECT customer_id, AVG(satisfaction_score) FROM surveys GROUP BY customer_id ORDER BY AVG(satisfaction_score) DESC;",
      "SELECT * FROM surveys WHERE customer_id IN ('123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174001');",
      "SELECT customer_id, SUM(satisfaction_score) AS total_score FROM surveys GROUP BY customer_id;",
      "SELECT customer_id, survey_date FROM surveys WHERE survey_date = (SELECT MAX(survey_date) FROM surveys WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000');",
      "SELECT RANK() OVER(ORDER BY satisfaction_score DESC) AS rank, customer_id, satisfaction_score FROM surveys;",
      "SELECT survey_id, survey_date, satisfaction_score, review_text FROM surveys LEFT JOIN reviews ON surveys.customer_id = reviews.customer_id;",
      "SELECT customer_id, LAG(satisfaction_score) OVER(ORDER BY survey_date) AS previous_score FROM surveys;",
      "SELECT customer_id, satisfaction_score, LAG(satisfaction_score) OVER(PARTITION BY customer_id ORDER BY survey_date) AS previous_score FROM surveys;",
      "SELECT customer_id, survey_date, LAG(survey_date) OVER(PARTITION BY customer_id ORDER BY survey_date) AS previous_survey_date FROM surveys;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Survey;",
      "SELECT survey_id, customer_id, survey_date, satisfaction_rating FROM Survey;",
      "SELECT * FROM Review;",
      "SELECT review_id, customer_id, review_date, review_text FROM Review;",
      "SELECT * FROM Analysis;",
      "SELECT analysis_id, survey_id, review_id, analysis_date, analysis_result FROM Analysis;",
      "SELECT survey_id, AVG(satisfaction_rating) AS avg_rating FROM Survey GROUP BY survey_id;",
      "SELECT review_id, customer_id, review_date FROM Review WHERE customer_id = 1;",
      "SELECT analysis_id, analysis_date, analysis_result FROM Analysis WHERE analysis_date > '2022-01-01';",
      "SELECT * FROM Survey WHERE satisfaction_rating > 3;",
      "SELECT customer_id, COUNT(review_id) AS total_reviews FROM Review GROUP BY customer_id;",
      "SELECT survey_id, review_id, analysis_result FROM Analysis WHERE analysis_result LIKE '%positive%';",
      "SELECT customer_id, COUNT(survey_id) AS total_surveys FROM Survey GROUP BY customer_id;",
      "SELECT analysis_id, analysis_date, analysis_result FROM Analysis ORDER BY analysis_date DESC;",
      "SELECT COUNT(*) AS total_surveys FROM Survey;",
      "SELECT customer_id, review_date, review_text FROM Review WHERE review_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT survey_id, customer_id, survey_date FROM Survey WHERE survey_date >= '2022-01-01';",
      "SELECT MAX(satisfaction_rating) AS max_rating FROM Survey;",
      "SELECT MIN(review_date) AS earliest_review_date FROM Review;",
      "SELECT customer_id, survey_date, satisfaction_rating FROM Survey ORDER BY satisfaction_rating DESC LIMIT 5;",
      "SELECT * FROM Survey INNER JOIN Review ON Survey.customer_id = Review.customer_id WHERE Survey.satisfaction_rating > 3;",
      "SELECT Survey.survey_id, Survey.survey_date, Review.review_text FROM Survey LEFT JOIN Review ON Survey.customer_id = Review.customer_id;",
      "SELECT Analysis.analysis_id, Survey.survey_id, Review.review_id FROM Analysis INNER JOIN Survey ON Analysis.survey_id = Survey.survey_id INNER JOIN Review ON Analysis.review_id = Review.review_id;",
      "SELECT AVG(Survey.satisfaction_rating) AS avg_rating, COUNT(Review.review_id) AS review_count FROM Survey INNER JOIN Review ON Survey.customer_id = Review.customer_id;",
      "SELECT Analysis.analysis_id, Survey.survey_id, Review.review_text, Analysis.analysis_result FROM Analysis INNER JOIN Survey ON Analysis.survey_id = Survey.survey_id INNER JOIN Review ON Analysis.review_id = Review.review_id WHERE Analysis.analysis_date >= '2022-01-01';",
      "SELECT Survey.survey_id, Survey.survey_date, Review.review_date, Analysis.analysis_date FROM Survey LEFT JOIN Review ON Survey.customer_id = Review.customer_id LEFT JOIN Analysis ON Survey.survey_id = Analysis.survey_id AND Review.review_id = Analysis.review_id;",
      "SELECT DISTINCT Survey.customer_id, Survey.survey_date, Analysis.analysis_result FROM Survey INNER JOIN Analysis ON Survey.survey_id = Analysis.survey_id WHERE Analysis.analysis_result LIKE '%positive%';",
      "SELECT Survey.customer_id, Survey.survey_date, Analysis.analysis_date FROM Survey INNER JOIN Analysis ON Survey.survey_id = Analysis.survey_id WHERE Analysis.analysis_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT Review.review_id, Review.review_date, Analysis.analysis_id, Analysis.analysis_result FROM Review INNER JOIN Analysis ON Review.review_id = Analysis.review_id WHERE Review.customer_id = 123;",
      "SELECT Survey.customer_id, Survey.satisfaction_rating, Review.review_text, Analysis.analysis_result FROM Survey INNER JOIN Review ON Survey.customer_id = Review.customer_id LEFT JOIN Analysis ON Survey.survey_id = Analysis.survey_id AND Review.review_id = Analysis.review_id;",
      "SELECT AVG(Survey.satisfaction_rating) AS avg_rating, COUNT(*) AS total_surveys FROM Survey;",
      "SELECT MAX(Review.review_date) AS latest_review_date FROM Review WHERE Review.customer_id = 456;",
      "SELECT MIN(Analysis.analysis_date) AS earliest_analysis_date FROM Analysis WHERE Analysis.analysis_result LIKE '%negative%';",
      "SELECT Survey.survey_id, Survey.survey_date, Review.review_text, Analysis.analysis_result FROM Survey LEFT JOIN Review ON Survey.customer_id = Review.customer_id LEFT JOIN Analysis ON Survey.survey_id = Analysis.survey_id AND Review.review_id = Analysis.review_id WHERE Survey.satisfaction_rating < 3;",
      "SELECT Survey.survey_id, Survey.survey_date, Analysis.analysis_result FROM Survey INNER JOIN Analysis ON Survey.survey_id = Analysis.survey_id WHERE Analysis.analysis_date BETWEEN '2022-05-01' AND '2022-12-31';",
      "SELECT  Survey.customer_id, AVG(Survey.satisfaction_rating) AS avg_rating FROM Survey GROUP BY Survey.customer_id HAVING AVG(Survey.satisfaction_rating) > 4;",
      "SELECT COUNT(DISTINCT Survey.customer_id) AS total_customers, COUNT(DISTINCT Review.review_id) AS total_reviews FROM Survey INNER JOIN Review ON Survey.customer_id = Review.customer_id;",
      "SELECT Survey.customer_id, MAX(Survey.survey_date) AS latest_survey_date, MAX(Review.review_date) AS latest_review_date, MAX(Analysis.analysis_date) AS latest_analysis_date FROM Survey LEFT JOIN Review ON Survey.customer_id = Review.customer_id LEFT JOIN Analysis ON Survey.survey_id = Analysis.survey_id AND Review.review_id = Analysis.review_id GROUP BY Survey.customer_id;",
      "SELECT Survey.customer_id, MAX(Survey.satisfaction_rating) AS max_rating, MIN(Survey.satisfaction_rating) AS min_rating, AVG(Survey.satisfaction_rating) AS avg_rating FROM Survey GROUP BY Survey.customer_id;",
      "SELECT Survey.survey_id, Survey.survey_date, Review.review_text, Analysis.analysis_result FROM Survey LEFT JOIN Review ON Survey.customer_id = Review.customer_id LEFT JOIN Analysis ON Survey.survey_id = Analysis.survey_id AND Review.review_id = Analysis.review_id WHERE Survey.survey_date >= '2022-01-01';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM surveys;",
      "SELECT survey_id, customer_id, survey_date FROM surveys;",
      "SELECT survey_id, satisfaction_score FROM surveys WHERE survey_date = '2022-01-01';",
      "SELECT * FROM reviews;",
      "SELECT customer_id, review_rating FROM reviews WHERE review_rating > 3;",
      "SELECT * FROM customers;",
      "SELECT customer_id, customer_name FROM customers WHERE customer_email LIKE '%@example.com%';",
      "SELECT * FROM analysis_results;",
      "SELECT result_id, survey_id, review_id, analysis_date FROM analysis_results;",
      "SELECT result_id, sentiment_score FROM analysis_results WHERE sentiment_score > 0.5;",
      "SELECT survey_id, satisfaction_score FROM surveys WHERE survey_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT review_id, review_rating FROM reviews WHERE review_date > '2022-01-01';",
      "SELECT customer_id, customer_name, customer_phone FROM customers WHERE customer_name LIKE '%John%';",
      "SELECT analysis_date, AVG(sentiment_score) AS average_score FROM analysis_results GROUP BY analysis_date;",
      "SELECT survey_id, satisfaction_score, feedback FROM surveys WHERE satisfaction_score < 3;",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_email NOT LIKE '%@example.com%';",
      "SELECT review_id, review_rating, review_comment FROM reviews WHERE review_rating < 3;",
      "SELECT survey_id, MAX(satisfaction_score) AS max_satisfaction_score FROM surveys;",
      "SELECT COUNT(*) AS total_surveys FROM surveys;",
      "SELECT AVG(review_rating) AS average_rating FROM reviews;",
      "SELECT * FROM surveys WHERE satisfaction_score > 4;",
      "SELECT customer_id, survey_date FROM surveys WHERE survey_id = 1;",
      "SELECT survey_id, feedback FROM surveys WHERE LENGTH(feedback) > 50;",
      "SELECT * FROM reviews WHERE review_rating < 3;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 5;",
      "SELECT * FROM analysis_results WHERE sentiment_score > 0.5;",
      "SELECT COUNT(*) FROM surveys WHERE survey_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_id, COUNT(*) as survey_count FROM surveys GROUP BY customer_id HAVING COUNT(*) > 2;",
      "SELECT customer_name, review_rating FROM customers LEFT JOIN reviews ON customers.customer_id = reviews.customer_id;",
      "SELECT review_id, customer_name, review_comment FROM reviews INNER JOIN customers ON reviews.customer_id = customers.customer_id;",
      "SELECT * FROM analysis_results WHERE survey_id IN (SELECT survey_id FROM surveys WHERE satisfaction_score < 3);",
      "SELECT customer_name, review_date FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id ORDER BY review_date DESC;",
      "SELECT AVG(satisfaction_score) as avg_score FROM surveys WHERE survey_date >= '2022-01-01';",
      "SELECT customer_name, review_rating FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id ORDER BY review_rating DESC LIMIT 5;",
      "SELECT customer_name, COUNT(*) as survey_count FROM customers LEFT JOIN surveys ON customers.customer_id = surveys.customer_id GROUP BY customer_name;",
      "SELECT MAX(sentiment_score) as max_score FROM analysis_results;",
      "SELECT customer_name, review_rating, analysis_date FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id JOIN analysis_results ON reviews.review_id = analysis_results.review_id;",
      "SELECT customer_name, AVG(review_rating) as avg_rating, MAX(review_rating) as max_rating FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id GROUP BY customer_name;",
      "SELECT customer_name, SUM(sentiment_score) as total_sentiment FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id JOIN analysis_results ON reviews.review_id = analysis_results.review_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(satisfaction_score) as avg_score FROM customers JOIN surveys ON customers.customer_id = surveys.customer_id GROUP BY customer_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM surveys",
      "SELECT survey_id, customer_id, survey_date FROM surveys",
      "SELECT customer_name, customer_email FROM customers",
      "SELECT segment_name FROM customer_segments",
      "SELECT review_text, review_date FROM reviews",
      "SELECT survey_id, review_id, analysis_result FROM analysis_data",
      "SELECT customer_id, customer_name, customer_email, customer_phone FROM customers",
      "SELECT review_text, review_rating FROM reviews",
      "SELECT * FROM customer_segments",
      "SELECT survey_id, customer_id, satisfaction_rating FROM surveys",
      "SELECT review_id, customer_id, review_rating FROM reviews",
      "SELECT * FROM analysis_data",
      "SELECT analysis_id, analysis_date, analysis_result FROM analysis_data",
      "SELECT customer_id, segment_name FROM customer_segments",
      "SELECT survey_id, satisfaction_rating, feedback FROM surveys",
      "SELECT * FROM reviews",
      "SELECT customer_id, customer_name FROM customers",
      "SELECT analysis_id, analysis_result FROM analysis_data",
      "SELECT review_id, review_rating, review_text FROM reviews",
      "SELECT * FROM customer_segments",
      "SELECT * FROM surveys WHERE satisfaction_rating > 3",
      "SELECT survey_id, customer_id, survey_date FROM surveys WHERE survey_date >= '2022-01-01'",
      "SELECT AVG(satisfaction_rating) AS avg_rating FROM surveys",
      "SELECT survey_id, feedback FROM surveys WHERE feedback LIKE '%improve%'",
      "SELECT customer_name, customer_email, customer_phone FROM customers",
      "SELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_name LIKE 'J%'",
      "SELECT review_text FROM reviews WHERE review_rating = 5",
      "SELECT survey_id, review_id, analysis_date FROM analysis_data ORDER BY analysis_date DESC",
      "SELECT customer_id, segment_name FROM customer_segments WHERE segment_name = 'VIP'",
      "SELECT customer_name, customer_email FROM customers JOIN customer_segments ON customers.customer_id = customer_segments.customer_id",
      "SELECT customer_name, customer_email FROM customers LEFT JOIN customer_segments ON customers.customer_id = customer_segments.customer_id",
      "SELECT count(customer_id) AS customers_count FROM customers",
      "SELECT DISTINCT segment_name FROM customer_segments",
      "SELECT review_text, review_date FROM reviews WHERE review_date BETWEEN '2022-01-01' AND '2022-03-31'",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id IN (SELECT customer_id FROM customer_segments WHERE segment_name = 'Premium')",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_segments)",
      "SELECT customer_name, customer_email, review_text FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id",
      "SELECT segment_name, count(customer_id) FROM customer_segments GROUP BY segment_name",
      "SELECT MAX(satisfaction_rating) AS max_rating FROM surveys",
      "SELECT MIN(satisfaction_rating) AS min_rating FROM surveys"
    ]
  }
]