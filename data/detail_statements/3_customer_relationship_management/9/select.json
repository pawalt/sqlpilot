[
  {
    "statements": [
      "SELECT * FROM customer_engagement_reports;",
      "SELECT customer_id, acquisition_date FROM customer_engagement_reports;",
      "SELECT * FROM customer_engagement_reports WHERE customer_id = 123;",
      "SELECT engagement_score FROM customer_engagement_reports WHERE retention_status = TRUE;",
      "SELECT customer_id, retention_status FROM customer_engagement_reports WHERE acquisition_date >= '2022-01-01';",
      "SELECT * FROM customer_engagement_reports ORDER BY acquisition_date DESC;",
      "SELECT AVG(engagement_score) FROM customer_engagement_reports;",
      "SELECT MAX(engagement_score) FROM customer_engagement_reports;",
      "SELECT MIN(engagement_score) FROM customer_engagement_reports;",
      "SELECT COUNT(*) FROM customer_engagement_reports;",
      "SELECT COUNT(*) AS total_customers FROM customer_engagement_reports WHERE retention_status = FALSE;",
      "SELECT customer_id, COUNT(*) AS total_reports FROM customer_engagement_reports GROUP BY customer_id;",
      "SELECT customer_id, AVG(engagement_score) AS avg_score FROM customer_engagement_reports GROUP BY customer_id;",
      "SELECT * FROM customer_engagement_reports WHERE engagement_score > 8.0;",
      "SELECT * FROM customer_engagement_reports WHERE acquisition_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT * FROM customer_engagement_reports WHERE retention_status IS NULL;",
      "SELECT * FROM customer_engagement_reports WHERE customer_id IN (1, 2, 3);",
      "SELECT * FROM customer_engagement_reports WHERE engagement_score > 7.0 AND retention_status = TRUE;",
      "SELECT customer_id, MAX(engagement_score) AS max_score FROM customer_engagement_reports GROUP BY customer_id;",
      "SELECT AVG(engagement_score) AS avg_score, MAX(engagement_score) AS max_score, MIN(engagement_score) AS min_score FROM customer_engagement_reports;",
      "SELECT * FROM customer_engagement_reports WHERE retention_status = true;",
      "SELECT customer_id, acquisition_date FROM customer_engagement_reports WHERE engagement_score > 80;",
      "SELECT customer_id, retention_status FROM customer_engagement_reports WHERE acquisition_date >= '2021-01-01';",
      "SELECT * FROM customer_engagement_reports WHERE acquisition_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT customer_id, retention_status FROM customer_engagement_reports WHERE engagement_score < 50;",
      "SELECT AVG(engagement_score) FROM customer_engagement_reports WHERE retention_status = false;",
      "SELECT MAX(engagement_score) FROM customer_engagement_reports;",
      "SELECT customer_id, acquisition_date, engagement_score FROM customer_engagement_reports WHERE retention_status = true AND acquisition_date >= '2021-06-01';",
      "SELECT COUNT(*) AS total_engagements FROM customer_engagement_reports WHERE acquisition_date < '2022-01-01';",
      "SELECT MIN(engagement_score) FROM customer_engagement_reports WHERE retention_status = false;",
      "SELECT AVG(engagement_score) FROM custo... (76 characters truncated) ...ore FROM customer_engagement_reports WHERE retention_status = true AND acquisition_date BETWEEN '2021-01-01' AND '2021-06-30';",
      "SELECT customer_id, engagement_score FROM customer_engagement_reports WHERE retention_status = false AND engagement_score > 60;",
      "SELECT retention_status, COUNT(*) AS total_customers FROM customer_engagement_reports GROUP BY retention_status HAVING COUNT(*) > 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_acquisition;",
      "SELECT customer_id, acquisition_date FROM customer_acquisition;",
      "SELECT customer_id, acquisition_date, acquisition_channel FROM customer_acquisition;",
      "SELECT customer_id, acquisition_date, first_purchase_amount FROM customer_acquisition;",
      "SELECT * FROM customer_engagement;",
      "SELECT customer_id, engagement_date FROM customer_engagement;",
      "SELECT customer_id, engagement_date, engagement_type FROM customer_engagement;",
      "SELECT customer_id, engagement_date, interaction_count FROM customer_engagement;",
      "SELECT customer_id, acquisition_date, engagement_date FROM customer_acquisition, customer_engagement;",
      "SELECT ca.customer_id, ce.customer_id, ca.acquisition_date, ce.engagement_date FROM customer_acquisition ca, customer_engagement ce;",
      "SELECT ca.customer_id, ca.acquisition_date, ca.acquisition_channel, ce.engagement_date, ce.engagement_type FROM customer_acquisition ca, customer_engagement ce;",
      "SELECT ca.customer_id, ca.acquisition_date, ca.first_purchase_amount, ce.engagement_date, ce.interaction_count FROM customer_acquisition ca, customer_engagement ce;",
      "SELECT ca.customer_id, ca.acquisition_date, ca.acquisition_channel, ca.first_purchase_amount, ce.engagement_date, ce.engagement_type, ce.interaction_count FROM customer_acquisition ca, customer_engagement ce;",
      "SELECT COUNT(*) FROM customer_acquisition;",
      "SELECT COUNT(*) FROM customer_engagement;",
      "SELECT AVG(first_purchase_amount) FROM customer_acquisition;",
      "SELECT MAX(interaction_count) FROM customer_engagement;",
      "SELECT MIN(first_purchase_amount) FROM customer_acquisition;",
      "SELECT DISTINCT acquisition_channel FROM customer_acquisition;",
      "SELECT DISTINCT engagement_type FROM customer_engagement;",
      "SELECT * FROM customer_acquisition WHERE acquisition_date = '2021-01-01';",
      "SELECT customer_id, acquisition_channel FROM customer_acquisition WHERE first_purchase_amount > 1000;",
      "SELECT customer_id, acquisition_channel FROM customer_acquisition WHERE acquisition_channel = 'Online' AND first_purchase_amount > 500;",
      "SELECT customer_id, acquisition_channel, year(acquisition_date) AS acquisition_year FROM customer_acquisition WHERE year(acquisition_date) = 2021;",
      "SELECT customer_id, COUNT(*) AS engagement_count FROM customer_engagement GROUP BY customer_id;",
      "SELECT customer_id, sum(interaction_count) AS total_interactions FROM customer_engagement GROUP BY customer_id;",
      "SELECT c.customer_id, c.acquisition_channel, e.engagement_type FROM customer_acquisition c JOIN customer_engagement e ON c.customer_id = e.customer_id;",
      "SELECT c.customer_id, c.acquisition_channel, e.engagement_type FROM..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM Reports;",
      "SELECT report_id, report_name FROM Reports;",
      "SELECT report_name, report_date FROM Reports;",
      "SELECT * FROM CustomerAcquisition;",
      "SELECT acquisition_id, customer_id FROM CustomerAcquisition;",
      "SELECT customer_id, acquisition_channel FROM CustomerAcquisition;",
      "SELECT * FROM EngagementMetrics;",
      "SELECT engagement_id, customer_id FROM EngagementMetrics;",
      "SELECT customer_id, page_views FROM EngagementMetrics;",
      "SELECT engagement_id, engagement_date FROM EngagementMetrics;",
      "SELECT report_name, engagement_date FROM Reports JOIN EngagementMetrics ON Reports.report_id = EngagementMetrics.engagement_id;",
      "SELECT report_name, acquisition_date FROM Reports JOIN CustomerAcquisition ON Reports.report_id = CustomerAcquisition.acquisition_id;",
      "SELECT customer_id, page_views FROM EngagementMetrics WHERE page_views > 100;",
      "SELECT report_name, report_date FROM Reports WHERE report_date > '2022-01-01';",
      "SELECT * FROM CustomerAcquisition WHERE acquisition_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT report_name, engagement_date FROM Reports JOIN EngagementMetrics ON Reports.report_id = EngagementMetrics.engagement_id WHERE page_views > 100;",
      "SELECT report_name, acquisition_channel FROM Reports JOIN CustomerAcquisition ON Reports.report_id = CustomerAcquisition.acquisition_id WHERE acquisition_channel = 'Organic';",
      "SELECT customer_id, interactions FROM EngagementMetrics WHERE interactions >= 10;",
      "SELECT report_name, report_date, engagement_date FROM Reports JOIN EngagementMetrics ON Reports.report_id = EngagementMetrics.engagement_id;",
      "SELECT report_name, customer_id, acquisition_date FROM Reports JOIN CustomerAcquisition ON Reports.report_id = CustomerAcquisition.acquisition_id;",
      "SELECT customer_id, page_views, interactions FROM EngagementMetrics WHERE page_views > 50 AND interactions < 5;",
      "SELECT * FROM Reports WHERE report_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT report_name FROM Reports WHERE report_date > '2022-06-30';",
      "SELECT report_name, report_date FROM Reports WHERE report_id = 10;",
      "SELECT * FROM CustomerAcquisition WHERE acquisition_channel = 'Online';",
      "SELECT customer_id, acquisition_date FROM CustomerAcquisition WHERE acquisition_date < '2022-09-01';",
      "SELECT * FROM EngagementMetrics WHERE page_views > 100 AND interactions > 50;",
      "SELECT engagement_id, customer_id, engagement_date FROM EngagementMetrics WHERE interactions >= 100;",
      "SELECT report_id, report_name FROM Reports WHERE report_id IN (1, 3, 5);",
      "SELECT * FROM Reports r JOIN CustomerAcquisition c ON r.report_id = c.acquisition_id;",
      "SELECT r.report_id, c.customer_id, e.engagement_date FROM Reports r JOIN CustomerAcquisition c ON r.report_id = c.acquisition_id JOIN EngagementMetrics e ON c.customer_id = e.customer_id;",
      "SELECT * FROM Reports WHERE report_date > (SELECT MAX(acquisition_date) FROM CustomerAcquisition);",
      "SELECT * FROM CustomerAcquisition WHERE acquisition_date = (SELECT MIN(acquisition_date) FROM CustomerAcquisition);",
      "SELECT * FROM EngagementMetrics WHERE customer_id IN (SELECT customer_id FROM CustomerAcquisition WHERE acquisition_channel = 'Online');",
      "SELECT report_id, report_name FROM Reports WHERE report_date BETWEEN (SELECT MIN(acquisition_date) FROM CustomerAcquisition) AND (SELECT MAX(acquisition_date) FROM CustomerAcquisition);",
      "SELECT r.report_name, e.page_views, e.interactions FROM Reports r JOIN EngagementMetrics e ON r.report_id = e.engagement_id WHERE e.page_views > 50 AND e.interactions < 20;",
      "SELECT DISTINCT customer_id FROM CustomerAcquisition WHERE acquisition_channel = 'Offline';",
      "SELECT AVG(page_views) AS average_page_views FROM EngagementMetrics;",
      "SELECT COUNT(DISTINCT customer_id) AS total_customers FROM CustomerAcquisition;",
      "SELECT MAX(page_views) AS max_page_views, MIN(page_views) AS min_page_views FROM EngagementMetrics;",
      "SELECT report_name, COUNT(*) AS total_reports FROM Reports GROUP BY report_name HAVING COUNT(*) > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_acquisition",
      "SELECT customer_id, acquisition_date FROM customer_acquisition",
      "SELECT acquisition_channel FROM customer_acquisition WHERE customer_id = 1",
      "SELECT * FROM customer_retention",
      "SELECT customer_id, subscription_start_date FROM customer_retention",
      "SELECT subscription_end_date FROM customer_retention WHERE customer_id = 1",
      "SELECT * FROM engagement_metrics",
      "SELECT customer_id, page_views FROM engagement_metrics",
      "SELECT interactions FROM engagement_metrics WHERE customer_id = 1",
      "SELECT * FROM reports",
      "SELECT report_id, report_name FROM reports",
      "SELECT report_date FROM reports WHERE report_id = 1",
      "SELECT * FROM customer_acquisition JOIN customer_retention ON customer_acquisition.customer_id = customer_retention.customer_id",
      "SELECT * FROM customer_acquisition JOIN engagement_metrics ON customer_acquisition.customer_id = engagement_metrics.customer_id",
      "SELECT * FROM customer_acquisition JOIN reports ON customer_acquisition.customer_id = reports.report_id",
      "SELECT * FROM customer_retention JOIN engagement_metrics ON customer_retention.customer_id = engagement_metrics.customer_id",
      "SELECT * FROM customer_retention JOIN reports ON customer_retention.customer_id = reports.report_id",
      "SELECT * FROM customer_acquisition WHERE acquisition_channel = 'Online' AND acquisition_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT customer_id, acquisition_channel, acquisition_date FROM customer_acquisition WHERE acquisition_date >= '2022-01-01'",
      "SELECT customer_id, subscription_start_date FROM customer_retention WHERE subscription_end_date IS NULL",
      "SELECT customer_id, page_views, interactions FROM engagement_metrics WHERE page_views > 100",
      "SELECT customer_id, page_views, interactions FROM engagement_metrics WHERE interactions = 0",
      "SELECT COUNT(*) AS total_customers FROM customer_acquisition",
      "SELECT report_id, report_name, report_date FROM reports WHERE report_date >= '2022-01-01'",
      "SELECT customer_id FROM customer_acquisition JOIN customer_retention USING(customer_id)",
      "SELECT customer_id FROM customer_acquisition LEFT JOIN customer_retention ON customer_acquisition.customer_id = customer_retention.customer_id",
      "SELECT * FROM customer_acquisition CROSS JOIN engagement_metrics",
      "SELECT DISTINCT acquisition_channel FROM customer_acquisition",
      "SELECT customer_id, subscription_start_date FROM customer_retention WHERE YEAR(subscription_start_date) = 2022",
      "SELECT report_name, COUNT(report_id) AS total_reports FROM reports GROUP BY report_name",
      "SELECT customer_id, SUM(page_views) AS total_page_views FROM engagement_metrics GROUP BY customer_id",
      "SELECT customer_id, AVG(interactions) AS avg_interactions FROM engagement_metrics WHERE page_views > 50 GROUP BY customer_id HAVING avg_interactions > 2",
      "SELECT MAX(page_views) AS max_page_views FROM engagement_metrics",
      "SELECT customer_id, COUNT(*) AS total_reports FROM reports JOIN customer_acquisition ON reports.report_id = customer_acquisition.customer_id GROUP BY customer_id",
      "SELECT customer_id, report_id FROM reports WHERE report_id IN (SELECT customer_id FROM customer_acquisition)",
      "SELECT * FROM customer_acquisition UNION SELECT * FROM customer_retention",
      "SELECT * FROM customer_acquisition WHERE acquisition_channel LIKE '%social%'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CustomerAcquisition;",
      "SELECT customer_id, acquisition_date FROM CustomerAcquisition;",
      "SELECT channel FROM CustomerAcquisition WHERE customer_id = 1;",
      "SELECT * FROM CustomerRetention;",
      "SELECT customer_id, retention_date FROM CustomerRetention;",
      "SELECT retention_rate FROM CustomerRetention WHERE customer_id = 1;",
      "SELECT * FROM CustomerEngagement;",
      "SELECT engagement_id, customer_id FROM CustomerEngagement;",
      "SELECT interaction_type FROM CustomerEngagement WHERE customer_id = 1;",
      "SELECT * FROM ReportGeneration;",
      "SELECT report_id, report_date FROM ReportGeneration;",
      "SELECT report_type FROM ReportGeneration WHERE report_id = 1;",
      "SELECT * FROM DashboardVisualization;",
      "SELECT dashboard_id, dashboard_name FROM DashboardVisualization;",
      "SELECT visualization_type FROM DashboardVisualization WHERE dashboard_id = 1;",
      "SELECT * FROM CustomerAcquisition WHERE acquisition_date >= '2022-01-01';",
      "SELECT * FROM CustomerRetention WHERE retention_rate > 0.5;",
      "SELECT * FROM CustomerEngagement WHERE interaction_type = 'Email';",
      "SELECT * FROM ReportGeneration WHERE report_type = 'Sales';",
      "SELECT * FROM DashboardVisualization WHERE visualization_type = 'Pie Chart';",
      "SELECT * FROM CustomerAcquisition WHERE acquisition_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM CustomerRetention WHERE retention_rate > 0.8;",
      "SELECT COUNT(*) FROM CustomerEngagement WHERE interaction_type = 'click';",
      "SELECT customer_id, acquisition_date FROM CustomerAcquisition WHERE channel = 'Online';",
      "SELECT * FROM ReportGeneration WHERE report_type = 'Financial';",
      "SELECT customer_id, retention_date FROM CustomerRetention WHERE retention_date > '2022-06-30';",
      "SELECT engagement_id, interaction_type FROM CustomerEngagement WHERE customer_id = 123;",
      "SELECT * FROM DashboardVisualization WHERE visualization_type = 'Chart';",
      "SELECT MAX(retention_rate) FROM CustomerRetention;",
      "SELECT MIN(report_date) FROM ReportGeneration;",
      "SELECT customer_id, acquisition_date FROM CustomerAcquisition WHERE channel = 'Offline';",
      "SELECT COUNT(*) FROM CustomerRetention WHERE retention_rate < 0.5;",
      "SELECT AVG(engagement_date) FROM CustomerEngagement;",
      "SELECT DISTINCT(report_type) FROM ReportGeneration;",
      "SELECT * FROM CustomerAcquisition JOIN CustomerRetention ON CustomerAcquisition.customer_id = CustomerRetention.customer_id;",
      "SELECT * FROM CustomerEngagement JOIN DashboardVisualization ON CustomerEngagement.engagement_id = DashboardVisualization.dashboard_id;",
      "SELECT * FROM ReportGeneration WHERE report_content->'$.sales' > 100000;",
      "SELECT customer_id, acquisition_date, retention_rate FROM CustomerAcquisition JOIN CustomerRetention ON CustomerAcquisition.customer_id = CustomerRetention.customer_id;",
      "SELECT engagement_id, interaction_type, visualization_data FROM CustomerEngagement JOIN DashboardVisualization ON CustomerEngagement.engagement_id = DashboardVisualization.dashboard_id;",
      "SELECT * FROM CustomerRetention WHERE retention_date < (SELECT MIN(acquisition_date) FROM CustomerAcquisition);"
    ]
  }
]