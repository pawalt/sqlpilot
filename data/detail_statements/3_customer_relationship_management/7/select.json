[
  {
    "statements": [
      "SELECT * FROM customer_profiles",
      "SELECT customer_id, first_name, last_name FROM customer_profiles",
      "SELECT email FROM customer_profiles",
      "SELECT phone_number FROM customer_profiles",
      "SELECT address FROM customer_profiles",
      "SELECT first_name, last_name FROM customer_profiles WHERE customer_id = 1",
      "SELECT * FROM customer_profiles WHERE email LIKE '%gmail.com'",
      "SELECT * FROM customer_profiles WHERE phone_number LIKE '555%'",
      "SELECT first_name, email FROM customer_profiles WHERE customer_id > 10",
      "SELECT * FROM customer_profiles ORDER BY last_name ASC",
      "SELECT * FROM customer_profiles ORDER BY customer_id DESC",
      "SELECT * FROM customer_profiles LIMIT 5",
      "SELECT COUNT(*) FROM customer_profiles",
      "SELECT MAX(customer_id) FROM customer_profiles",
      "SELECT MIN(customer_id) FROM customer_profiles",
      "SELECT AVG(customer_id) FROM customer_profiles",
      "SELECT SUM(customer_id) FROM customer_profiles",
      "SELECT * FROM customer_profiles WHERE address IS NULL",
      "SELECT * FROM customer_profiles WHERE address IS NOT NULL",
      "SELECT * FROM customer_profiles WHERE first_name = 'John'",
      "SELECT * FROM customer_profiles WHERE last_name = 'Doe'",
      "SELECT * FROM customer_profiles;",
      "SELECT first_name, last_name, email FROM customer_profiles WHERE customer_id = 101;",
      "SELECT first_name AS 'First Name', last_name AS 'Last Name' FROM customer_profiles WHERE last_name LIKE 'S%';",
      "SELECT * FROM customer_profiles ORDER BY last_name ASC;",
      "SELECT customer_id, first_name, address FROM customer_profiles WHERE last_name LIKE 'D%';",
      "SELECT customer_id, email FROM customer_profiles WHERE address LIKE '%Street';",
      "SELECT * FROM customer_profiles WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT * FROM customer_profiles WHERE email = 'john.doe@example.com';",
      "SELECT COUNT(*) AS 'Total Customers' FROM customer_profiles;",
      "SELECT customer_id, phone_number FROM customer_profiles WHERE phone_number IS NOT NULL;",
      "SELECT first_name, last_name, address FROM customer_profiles WHERE address IS NULL;",
      "SELECT COUNT(*) AS 'Total Customers', phone_number FROM customer_profiles WHERE email LIKE '%gmail.com';",
      "SELECT DISTINCT email FROM customer_profiles;",
      "SELECT first_name, last_name, address FROM customer_profiles WHERE last_name IN ('Smith', 'Johnson', 'Williams');",
      "SELECT first_name, last_name, email FROM customer_profiles WHERE email LIKE '%@yahoo.com';",
      "SELECT * FROM customer_profiles WHERE first_name = 'Alice' OR last_name = 'Smith';",
      "SELECT first_name, last_name, address FROM customer_profiles WHERE address NOT LIKE '%Avenue';",
      "SELECT AVG(customer_id) AS 'Average Customer ID' FROM customer_profiles;",
      "SELECT * FROM customer_profiles WHERE customer_id BETWEEN 100 AND 200;",
      "SELECT customer_id, first_name, email FROM customer_profiles WHERE address LIKE '%Lane';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CustomerProfile;",
      "SELECT customer_id, name, email FROM CustomerProfile;",
      "SELECT name, address FROM CustomerProfile WHERE customer_id = 1;",
      "SELECT * FROM PurchaseHistory;",
      "SELECT purchase_id, product_name, purchase_date FROM PurchaseHistory;",
      "SELECT customer_id, SUM(quantity) AS total_quantity FROM PurchaseHistory GROUP BY customer_id;",
      "SELECT customer_id, AVG(total_price) AS average_price FROM PurchaseHistory GROUP BY customer_id;",
      "SELECT * FROM CustomerProfile JOIN PurchaseHistory ON CustomerProfile.customer_id = PurchaseHistory.customer_id;",
      "SELECT cp.name AS customer_name, ph.product_name, ph.purchase_date FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
      "SELECT cp.customer_id, cp.name, ph.product_name, ph.quantity FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
      "SELECT cp.customer_id, cp.name, ph.product_name, ph.quantity, ph.total_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
      "SELECT cp.customer_id, cp.name, ph.product_name, ph.purchase_date, ph.quantity, ph.total_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
      "SELECT cp.name AS customer_name, COUNT(ph.purchase_id) AS total_purchases FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id GROUP BY cp.customer_id;",
      "SELECT cp.name AS customer_name, SUM(ph.quantity) AS total_quantity FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id GROUP BY cp.name;",
      "SELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id = 1;",
      "SELECT name, email, total_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id WHERE purchase_date > '2022-01-01';",
      "SELECT cp.name AS customer_name, AVG(ph.total_price) AS average_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id GROUP BY cp.name HAVING AVG(ph.total_price) > 100;",
      "SELECT cp.customer_id, cp.name, ph.product_name, ph.purchase_date, ph.quantity, ph.total_price FROM CustomerProfile cp LEFT JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
      "SELECT cp.customer_id, cp.name, ph.product_name, ph.purchase_date, ph.quantity, ph.total_price FROM CustomerProfile cp RIGHT JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
      "SELECT * FROM CustomerProfile;",
      "SELECT name, email, address FROM CustomerProfile WHERE customer_id = 5;",
      "SELECT customer_id, name, email, address FROM CustomerProfile WHERE name LIKE 'A%';",
      "SELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE email LIKE '%@gmail.com';",
      "SELECT customer_id, COUNT(*) AS total_purchases FROM PurchaseHistory GROUP BY customer_id;",
      "SELECT customer_id, SUM(total_price) AS total_spent FROM PurchaseHistory GROUP BY customer_id HAVING total_spent > 1000;",
      "SELECT customer_id, AVG(quantity) AS average_quantity FROM PurchaseHistory GROUP BY customer_id HAVING average_quantity > 5;",
      "SELECT customer_id, product_name, purchase_date FROM PurchaseHistory WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_id, product_name, purchase_date, quantity, total_price FROM PurchaseHistory WHERE product_name LIKE '%Shoes%' ORDER BY total_price DESC;",
      "SELECT c.customer_id, c.name, c.email, p.purchase_id, p.product_name FROM CustomerProfile c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
      "SELECT c.customer_id, c.name, p.purchase_id, p.product_name, p.quantity, p.total_price FROM CustomerProfile c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
      "SELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE address IS NOT NULL AND phone_number IS NOT NULL;",
      "SELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE address IS NULL OR phone_number IS NULL;",
      "SELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id = (SELECT MAX(customer_id) FROM CustomerProfile);",
      "SELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id IN (SELECT customer_id FROM PurchaseHistory WHERE total_price > 100);",
      "SELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id NOT IN (SELECT customer_id FROM PurchaseHistory);",
      "SELECT customer_id, name, SUM(total_price) AS total_spent FROM CustomerProfile LEFT JOIN PurchaseHistory ON CustomerProfile.customer_id = PurchaseHistory.customer_id GROUP BY customer_id HAVING total_spent > 5000;",
      "SELECT customer_id, name, COUNT(*) AS total_purchases FROM CustomerProfile LEFT JOIN PurchaseHistory ON CustomerProfile.customer_id = PurchaseHistory.customer_id GROUP BY customer_id;",
      "SELECT c.customer_id, c.name, MAX(p.total_price) AS highest_purchase FROM CustomerProfile c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.customer_id;",
      "SELECT c.customer_id, c.name, p.purchase_date FROM CustomerProfile c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id ORDER BY p.purchase_date DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_information;",
      "SELECT customer_id, first_name, last_name FROM customer_information;",
      "SELECT customer_id, age FROM customer_information;",
      "SELECT * FROM purchase_history;",
      "SELECT purchase_id, product_name, price FROM purchase_history;",
      "SELECT customer_id, purchase_date FROM purchase_history;",
      "SELECT * FROM website_activity;",
      "SELECT session_id, page_visited, duration_seconds FROM website_activity;",
      "SELECT customer_id, ip_address FROM website_activity;",
      "SELECT first_name, last_name, email FROM customer_information WHERE age > 30;",
      "SELECT product_name, price FROM purchase_history WHERE price > 100;",
      "SELECT page_visited, duration_seconds FROM website_activity WHERE duration_seconds < 60;",
      "SELECT first_name, last_name, email, phone_number FROM customer_information WHERE customer_id = 1;",
      "SELECT product_name, price, purchase_date FROM purchase_history WHERE customer_id = 2;",
      "SELECT page_visited, duration_seconds, ip_address FROM website_activity WHERE customer_id = 3;",
      "SELECT * FROM customer_information WHERE age BETWEEN 25 AND 40;",
      "SELECT * FROM purchase_history WHERE price BETWEEN 50 AND 200;",
      "SELECT * FROM website_activity WHERE duration_seconds > 120;",
      "SELECT first_name, last_name, email, phone_number FROM customer_information WHERE first_name LIKE 'J%';",
      "SELECT product_name, price FROM purchase_history WHERE product_name LIKE '%shirt%';",
      "SELECT * FROM customer_information;",
      "SELECT first_name, last_name FROM customer_information WHERE age > 30;",
      "SELECT customer_id, first_name, last_name, email FROM customer_information WHERE customer_id = 123;",
      "SELECT DISTINCT first_name, last_name FROM customer_information;",
      "SELECT first_name, last_name, age FROM customer_information ORDER BY age DESC;",
      "SELECT * FROM purchase_history WHERE purchase_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT product_name, price FROM purchase_history WHERE price > 100;",
      "SELECT * FROM purchase_history WHERE customer_id IN (SELECT customer_id FROM customer_information WHERE age < 25);",
      "SELECT page_visited, duration_seconds FROM website_activity WHERE session_id = 456;",
      "SELECT COUNT(DISTINCT customer_id) AS total_customers FROM purchase_history;",
      "SELECT first_name, last_name FROM customer_information WHERE age BETWEEN 25 AND 40;",
      "SELECT customer_id, first_name, last_name, email, phone_number FROM customer_information WHERE email LIKE '%gmail.com';",
      "SELECT customer_id, COUNT(purchase_id) AS total_purchases FROM purchase_history GROUP BY customer_id;",
      "SELECT customer_id, first_name, last_name, page_visited FROM customer_information JOIN website_activity ON customer_information.customer_id = website_activity.customer_id;",
      "SELECT customer_id, AVG(duration_seconds) AS avg_duration FROM website_activity GROUP BY customer_id HAVING avg_duration > 60;",
      "SELECT customer_id, MIN(price) AS min_price, MAX(price) AS max_price FROM purchase_history GROUP BY customer_id;",
      "SELECT customer_id, COUNT(DISTINCT product_name) AS num_products FROM purchase_history GROUP BY customer_id;",
      "SELECT first_name, last_name, email FROM customer_information WHERE customer_id = ANY (SELECT customer_id FROM purchase_history);",
      "SELECT product_name, SUM(price) AS total_spent FROM purchase_history GROUP BY product_name;",
      "SELECT customer_id, COUNT(session_id) AS num_sessions FROM website_activity GROUP BY customer_id HAVING num_sessions > 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers;",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date FROM orders;",
      "SELECT customer_id, total_amount FROM orders;",
      "SELECT * FROM addresses;",
      "SELECT street_address, city, state FROM addresses;",
      "SELECT customer_id, zip_code FROM addresses;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, transaction_date FROM transactions;",
      "SELECT customer_id, order_id, amount FROM transactions;",
      "SELECT c.first_name, c.last_name, o.total_amount FROM customers c, orders o WHERE c.customer_id = o.customer_id;",
      "SELECT c.first_name, a.city, t.transaction_date FROM customers c, addresses a, transactions t WHERE c.customer_id = a.customer_id AND c.customer_id = t.customer_id;",
      "SELECT o.order_id, o.total_amount, c.first_name, c.last_name, t.amount FROM orders o, customers c, transactions t WHERE o.customer_id = c.customer_id AND o.order_id = t.order_id;",
      "SELECT c.first_name, a.street_address, t.transaction_date, o.total_amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN transactions t ON c.customer_id = t.customer_id JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT c.first_name, a.city, o.order_date, t.amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN transactions t ON c.customer_id = t.customer_id;",
      "SELECT c.first_name, c.email, a.city, a.state, t.transaction_date, o.total_amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN transactions t ON c.customer_id = t.customer_id JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT o.order_id, o.total_amount, a.street_address, a.city, a.state, t.transaction_date, t.amount FROM orders o JOIN addresses a ON o.customer_id = a.customer_id JOIN transactions t ON o.order_id = t.order_id;",
      "SELECT c.first_name, c.last_name, a.city, a.state, o.order_date, t.amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN transactions t ON c.customer_id = t.customer_id;",
      "SELECT * FROM customers WHERE first_name = 'John';",
      "SELECT first_name, last_name, email FROM customers WHERE customer_id = 1001;",
      "SELECT customer_id, phone_number FROM customers WHERE last_name LIKE 'Smith%';",
      "SELECT * FROM orders WHERE total_amount > 1000;",
      "SELECT order_id, order_date, total_amount FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT * FROM addresses WHERE city = 'New York';",
      "SELECT customer_id, street_address, city, state, zip_code FROM addresses WHERE state = 'California';",
      "SELECT * FROM transactions WHERE amount < 500;",
      "SELECT customer_id, order_id, transaction_date, amount FROM transactions WHERE customer_id = 2002;",
      "SELECT * FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.first_name, orders.order_date, transactions.amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id WHERE customers.customer_id = 3003;",
      "SELECT customers.first_name, addresses.city, transactions.amount FROM customers INNER JOIN addresses ON customers.customer_id = addresses.customer_id INNER JOIN transactions ON customers.customer_id = transactions.customer_id WHERE addresses.state = 'Texas';",
      "SELECT customers.first_name, orders.order_date, addresses.street_address, transactions.amount FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN addresses ON customers.customer_id = addresses.customer_id LEFT JOIN transactions ON orders.order_id = transactions.order_id WHERE customers.customer_id = 4004;",
      "SELECT DISTINCT city FROM addresses;",
      "SELECT SUM(total_amount) AS total_sales FROM orders;",
      "SELECT AVG(amount) AS average_transaction_amount FROM transactions;",
      "SELECT COUNT(customer_id) AS total_customers FROM customers;",
      "SELECT MAX(total_amount) AS highest_order_amount FROM orders;",
      "SELECT MIN(amount) AS lowest_transaction_amount FROM transactions;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(order_id) >= 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date FROM orders WHERE total_price > 100;",
      "SELECT product_name, price FROM products;",
      "SELECT product_id, category FROM products WHERE price < 50;",
      "SELECT * FROM addresses;",
      "SELECT customer_id, street_address, city, state FROM addresses;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, transaction_date, amount FROM transactions WHERE amount > 500;",
      "SELECT first_name, last_name, email, phone_number FROM customers WHERE first_name LIKE 'A%';",
      "SELECT order_id, order_date, total_price FROM orders WHERE total_price BETWEEN 100 AND 500;",
      "SELECT product_name, price, category FROM products WHERE category = 'Electronics';",
      "SELECT customer_id, street_address, city, state, zip_code FROM addresses WHERE zip_code LIKE '1%';",
      "SELECT transaction_id, transaction_date, amount FROM transactions WHERE amount < 1000;",
      "SELECT * FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT order_id, total_price FROM orders WHERE order_date = '2022-01-01';",
      "SELECT product_name, price FROM products WHERE price = (SELECT MAX(price) FROM products);",
      "SELECT customer_id, first_name, last_name, email, phone_number FROM customers WHERE customer_id = (SELECT customer_id FROM addresses WHERE city = 'New York');",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT first_name, last_name, email FROM customers WHERE last_name LIKE 'Smith%';",
      "SELECT customer_id, email, phone_number FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT customer_id, first_name, last_name, phone_number FROM customers WHERE phone_number LIKE '%555%';",
      "SELECT * FROM orders WHERE order_date >= '2022-01-01';",
      "SELECT order_id, total_price FROM orders WHERE total_price > 1000;",
      "SELECT * FROM products WHERE price BETWEEN 50 AND 100;",
      "SELECT product_id, product_name, category FROM products WHERE category = 'Electronics';",
      "SELECT * FROM addresses WHERE city = 'New York' AND state = 'NY';",
      "SELECT address_id, street_address, zip_code FROM addresses WHERE zip_code LIKE '1%';",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_id, transaction_date, amount FROM transactions WHERE amount >= 500;",
      "SELECT customers.customer_id, customers.first_name, customers.last_name, orders.order_date FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.first_name AS customer_first_name, orders.total_price AS order_total_price FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.first_name AS customer_name, products.product_name, products.price FROM customers INNER JOIN transactions ON customers.customer_id = transactions.customer_id INNER JOIN products ON transactions.order_id = products.product_id;",
      "SELECT customers.first_name, addresses.street_address, addresses.city, addresses.state FROM customers INNER JOIN addresses ON customers.customer_id = addresses.customer_id WHERE addresses.state <> 'CA';",
      "SELECT customers.customer_id, MIN(transactions.amount) AS min_transaction_amount FROM customers INNER JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_id;",
      "SELECT COUNT(DISTINCT customer_id) FROM orders WHERE total_price > 500;",
      "SELECT AVG(price) AS avg_price, MAX(price) AS max_price, MIN(price) AS min_price FROM products WHERE category = 'Clothing';",
      "SELECT customer_id, SUM(total_price) AS total_spent FROM orders GROUP BY customer_id HAVING total_spent > 1000;",
      "SELECT customer_id, DATE(transaction_date) AS transaction_date_only FROM transactions;"
    ]
  }
]