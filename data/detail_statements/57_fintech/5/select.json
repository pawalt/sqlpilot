[
  {
    "statements": [
      "SELECT * FROM credit_and_loan_management WHERE customer_id = 1",
      "SELECT customer_name, credit_score FROM credit_and_loan_management",
      "SELECT * FROM credit_and_loan_management WHERE credit_score > 700",
      "SELECT * FROM credit_and_loan_management WHERE loan_eligibility = TRUE",
      "SELECT customer_name FROM credit_and_loan_management WHERE credit_score < 500",
      "SELECT * FROM credit_and_loan_management WHERE customer_id BETWEEN 1 AND 10",
      "SELECT * FROM credit_and_loan_management WHERE customer_name LIKE 'John%'",
      "SELECT * FROM credit_and_loan_management WHERE customer_name = 'Alice'",
      "SELECT customer_name, loan_eligibility FROM credit_and_loan_management",
      "SELECT * FROM credit_and_loan_management WHERE credit_score >= 600",
      "SELECT * FROM credit_and_loan_management WHERE loan_eligibility = FALSE",
      "SELECT customer_id FROM credit_and_loan_management WHERE customer_name = 'Bob'",
      "SELECT * FROM credit_and_loan_management WHERE loan_eligibility = TRUE AND credit_score > 650",
      "SELECT * FROM credit_and_loan_management WHERE customer_name = 'Mary' OR customer_name = 'Jane'",
      "SELECT * FROM credit_and_loan_management WHERE credit_score <= 550",
      "SELECT count(*) FROM credit_and_loan_management WHERE credit_score > 600",
      "SELECT MAX(credit_score) FROM credit_and_loan_management",
      "SELECT MIN(credit_score) FROM credit_and_loan_management",
      "SELECT AVG(credit_score) FROM credit_and_loan_management",
      "SELECT SUM(credit_score) FROM credit_and_loan_management",
      "SELECT customer_id, customer_name FROM credit_and_loan_management;",
      "SELECT * FROM credit_and_loan_management WHERE credit_score > 700;",
      "SELECT customer_name, loan_eligibility FROM credit_and_loan_management WHERE customer_id = 100;",
      "SELECT AVG(credit_score) AS avg_credit_score FROM credit_and_loan_management;",
      "SELECT customer_name, CASE WHEN credit_score < 600 THEN 'Not Eligible' ELSE 'Eligible' END AS eligibility_status FROM credit_and_loan_management;",
      "SELECT SUM(CASE WHEN loan_eligibility = TRUE THEN 1 ELSE 0 END) AS approved_loans FROM credit_and_loan_management;",
      "SELECT customer_name, loan_eligibility FROM credit_and_loan_management ORDER BY credit_score DESC;",
      "SELECT COUNT(*) AS total_customers FROM credit_and_loan_management WHERE loan_eligibility = TRUE;",
      "SELECT DISTINCT credit_score FROM credit_and_loan_management;",
      "SELECT customer_id, CASE WHEN credit_score > 700 THEN 'High' WHEN credit_score > 600 THEN 'Medium' ELSE 'Low' END AS credit_rating FROM credit_and_loan_management;",
      "SELECT customer_name, loan_eligibility FROM credit_and_loan_management WHERE credit_score BETWEEN 600 AND 800;",
      "SELECT customer_id, customer_name, credit_score, CASE WHEN credit_score > 700 THEN 'Excellent' ELSE 'Good' END AS credit_rating FROM credit_and_loan_management;",
      "SELECT customer_name, credit_score, loan_eligibility FROM credit_and_loan_management WHERE loan_eligibility IS NOT NULL;",
      "SELECT customer_id, credit_score, loan_eligibility FROM credit_and_loan_management WHERE customer_name LIKE 'J%';",
      "SELECT customer_name, credit_score FROM credit_and_loan_management WHERE credit_score NOT IN (600, 700, 800);",
      "SELECT customer_id, customer_name, loan_eligibility FROM credit_and_loan_management WHERE loan_eligibility = FALSE;",
      "SELECT customer_name, loan_eligibility FROM credit_and_loan_management WHERE customer_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT customer_id, SUM(credit_score) AS total_credit_score FROM credit_and_loan_management GROUP BY customer_id;",
      "SELECT customer_name, loan_eligibility FROM credit_and_loan_management WHERE credit_score = (SELECT MAX(credit_score) FROM credit_and_loan_management);",
      "SELECT customer_name, AVG(credit_score) AS avg_credit_score FROM credit_and_loan_management GROUP BY customer_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CreditScores;",
      "SELECT id, customer_name FROM CreditScores;",
      "SELECT customer_name, credit_score FROM CreditScores;",
      "SELECT id, customer_name, credit_score FROM CreditScores WHERE credit_score > 700;",
      "SELECT * FROM LoanEligibility;",
      "SELECT id, customer_name FROM LoanEligibility;",
      "SELECT customer_name, loan_amount FROM LoanEligibility;",
      "SELECT id, customer_name, eligibility_status FROM LoanEligibility WHERE eligibility_status = TRUE;",
      "SELECT id, customer_name, loan_amount FROM LoanEligibility WHERE loan_amount > 5000;",
      "SELECT customer_name, loan_amount, eligibility_status FROM LoanEligibility WHERE eligibility_status = FALSE;",
      "SELECT customer_name, loan_amount FROM LoanEligibility WHERE loan_amount BETWEEN 1000 AND 5000;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c JOIN LoanEligibility l ON c.customer_name = l.customer_name;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c LEFT JOIN LoanEligibility l ON c.customer_name = l.customer_name;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c RIGHT JOIN LoanEligibility l ON c.customer_name = l.customer_name;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c INNER JOIN LoanEligibility l ON c.customer_name = l.customer_name;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c JOIN LoanEligibility l ON c.id = l.id;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c LEFT JOIN LoanEligibility l ON c.id = l.id;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c RIGHT JOIN LoanEligibility l ON c.id = l.id;",
      "SELECT c.customer_name, c.credit_score, l.loan_amount FROM CreditScores c INNER JOIN LoanEligibility l ON c.id = l.id;",
      "SELECT customer_name, credit_score FROM CreditScores WHERE credit_score > 700;",
      "SELECT customer_name, loan_amount FROM LoanEligibility WHERE eligibility_status = true;",
      "SELECT cs.customer_name, ce.loan_amount FROM CreditScores cs INNER JOIN LoanEligibility ce ON cs.customer_name = ce.customer_name;",
      "SELECT cs.customer_name, cs.credit_score, le.loan_amount FROM CreditScores cs LEFT JOIN LoanEligibility le ON cs.customer_name = le.customer_name;",
      "SELECT customer_name, credit_score FROM CreditScores WHERE customer_name LIKE 'A%';",
      "SELECT customer_name, credit_score FROM CreditScores WHERE credit_score BETWEEN 600 AND 800;",
      "SELECT cs.customer_name, ls.eligibility_status FROM CreditScores cs LEFT JOIN LoanEligibility ls ON cs.customer_name = ls.customer_name WHERE ls.eligibility_status = true;",
      "SELECT customer_name, loan_amount FROM LoanEligibility WHERE loan_amount > 5000;",
      "SELECT COUNT(*) AS total_credit_scores FROM CreditScores;",
      "SELECT AVG(credit_score) AS avg_credit_score FROM CreditScores;",
      "SELECT MIN(loan_amount) AS min_loan_amount, MAX(loan_amount) AS max_loan_amount FROM LoanEligibility;",
      "SELECT customer_name, SUM(loan_amount) AS total_loan_amount FROM LoanEligibility GROUP BY customer_name;",
      "SELECT customer_name, MAX(credit_score) AS highest_credit_score FROM CreditScores;",
      "SELECT customer_name, AVG(loan_amount) AS avg_loan_amount FROM LoanEligibility GROUP BY customer_name;",
      "SELECT customer_name, credit_score, loan_amount FROM CreditScores cs, LoanEligibility le WHERE cs.customer_name = le.customer_name;",
      "SELECT DISTINCT customer_name FROM CreditScores;",
      "SELECT customer_name, credit_score FROM CreditScores ORDER BY credit_score DESC;",
      "SELECT customer_name, credit_score FROM CreditScores ORDER BY credit_score ASC;",
      "SELECT customer_name, loan_amount FROM LoanEligibility WHERE customer_name IN (SELECT customer_name FROM CreditScores WHERE credit_score > 800);",
      "SELECT customer_name, credit_score FROM CreditScores WHERE customer_name = 'John Doe';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CreditScores;",
      "SELECT customer_name, credit_score FROM CreditScores;",
      "SELECT customer_name FROM CreditScores WHERE credit_score > 700;",
      "SELECT * FROM Loans;",
      "SELECT customer_id, loan_amount FROM Loans;",
      "SELECT loan_id, loan_amount FROM Loans WHERE loan_amount > 10000;",
      "SELECT * FROM LoanEligibility;",
      "SELECT customer_id, loan_id, is_eligible FROM LoanEligibility;",
      "SELECT * FROM CreditScores INNER JOIN Loans ON CreditScores.id = Loans.customer_id;",
      "SELECT * FROM CreditScores LEFT JOIN Loans ON CreditScores.id = Loans.customer_id;",
      "SELECT * FROM Loans RIGHT JOIN LoanEligibility ON Loans.loan_id = LoanEligibility.loan_id;",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON CreditScores.id = Loans.customer_id;",
      "SELECT customer_name, loan_type FROM CreditScores JOIN Loans ON CreditScores.id = Loans.customer_id WHERE Loans.loan_amount > 5000;",
      "SELECT customer_name, loan_amount, is_eligible FROM CreditScores JOIN Loans ON CreditScores.id = Loans.customer_id JOIN LoanEligibility ON Loans.loan_id = LoanEligibility.loan_id;",
      "SELECT customer_name, loan_amount, approval_date FROM CreditScores JOIN Loans ON CreditScores.id = Loans.customer_id WHERE Loans.approval_date > '2021-01-01';",
      "SELECT * FROM CreditScores WHERE assessment_date > '2022-01-01';",
      "SELECT customer_name, loan_type, is_eligible FROM CreditScores JOIN Loans ON CreditScores.id = Loans.customer_id JOIN LoanEligibility ON Loans.loan_id = LoanEligibility.loan_id WHERE is_eligible = TRUE;",
      "SELECT customer_name, credit_score, reason FROM CreditScores JOIN LoanEligibility ON CreditScores.id = LoanEligibility.customer_id WHERE LoanEligibility.is_eligible = FALSE;",
      "SELECT COUNT(*) AS total_approved_loans FROM Loans WHERE Loans.approval_date IS NOT NULL;",
      "SELECT AVG(loan_amount) AS avg_loan_amount FROM Loans;",
      "SELECT customer_name, MIN(loan_amount) AS min_loan_amount, MAX(loan_amount) AS max_loan_amount FROM CreditScores JOIN Loans ON CreditScores.id = Loans.customer_id GROUP BY customer_name;",
      "SELECT customer_name, credit_score FROM CreditScores WHERE credit_score > 750",
      "SELECT customer_name, credit_score, assessment_date FROM CreditScores WHERE assessment_date = '2022-10-01'",
      "SELECT customer_name, credit_score, approval_date FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id WHERE loan_amount > 10000",
      "SELECT customer_name, loan_amount, approval_date FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id WHERE loan_type = 'Car Loan'",
      "SELECT customer_name, loan_type, reason FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id JOIN LoanEligibility ON LoanEligibility.customer_id = CreditScores.id AND LoanEligibility.loan_id = Loans.loan_id AND LoanEligibility.is_eligible = TRUE",
      "SELECT COUNT(*) FROM CreditScores",
      "SELECT AVG(loan_amount) FROM Loans",
      "SELECT MIN(credit_score), MAX(credit_score) FROM CreditScores",
      "SELECT customer_name, loan_amount FROM CreditScores LEFT JOIN Loans ON Loans.customer_id = CreditScores.id",
      "SELECT * FROM Loans WHERE approval_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id WHERE loan_amount < (SELECT AVG(loan_amount) FROM Loans)",
      "SELECT customer_name, loan_type FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id WHERE loan_type LIKE '%Personal%'",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id WHERE loan_type IN ('Home Loan', 'Car Loan')",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id WHERE loan_type NOT IN ('Personal Loan')",
      "SELECT customer_name, credit_score FROM CreditScores WHERE customer_name LIKE 'A%'",
      "SELECT customer_name, credit_score FROM CreditScores WHERE customer_name NOT LIKE 'A%'",
      "SELECT customer_name, loan_type FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id WHERE customer_name LIKE '%son%'",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id ORDER BY loan_amount DESC",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id ORDER BY loan_amount ASC",
      "SELECT customer_name, loan_amount FROM CreditScores JOIN Loans ON Loans.customer_id = CreditScores.id GROUP BY customer_name HAVING SUM(loan_amount) > 50000"
    ]
  },
  {
    "statements": [
      "SELECT * FROM credit_scores;",
      "SELECT user_id, credit_score FROM credit_scores WHERE user_id = 1;",
      "SELECT application_id, user_id, application_date, loan_amount FROM loan_applications;",
      "SELECT * FROM loan_applications WHERE status = 'approved';",
      "SELECT * FROM loan_eligibility;",
      "SELECT user_id, is_eligible FROM loan_eligibility WHERE is_eligible = TRUE;",
      "SELECT application_id, assessment_date, risk_level FROM risk_assessment;",
      "SELECT * FROM risk_assessment WHERE risk_level = 'high';",
      "SELECT credit_score, loan_amount FROM credit_scores JOIN loan_applications ON credit_scores.user_id = loan_applications.user_id;",
      "SELECT loan_applications.*, loan_eligibility.is_eligible FROM loan_applications LEFT JOIN loan_eligibility ON loan_applications.user_id = loan_eligibility.user_id;",
      "SELECT credit_score, loan_amount, is_eligible FROM credit_scores JOIN loan_applications ON credit_scores.user_id = loan_applications.user_id JOIN loan_eligibility ON loan_applications.user_id = loan_eligibility.user_id;",
      "SELECT credit_score, loan_amount FROM credit_scores WHERE credit_score > 700;",
      "SELECT application_id, assessment_date, risk_level FROM risk_assessment WHERE risk_level IN ('high', 'medium');",
      "SELECT user_id, credit_score FROM credit_scores ORDER BY credit_score DESC;",
      "SELECT user_id, credit_score FROM credit_scores ORDER BY credit_score ASC;",
      "SELECT user_id, credit_score FROM credit_scores LIMIT 5;",
      "SELECT user_id, credit_score FROM credit_scores OFFSET 10;",
      "SELECT user_id, credit_score FROM credit_scores WHERE credit_score BETWEEN 600 AND 800;",
      "SELECT application_id, user_id, application_date FROM loan_applications WHERE application_date >= '2022-01-01';",
      "SELECT user_id, credit_score FROM credit_scores UNION SELECT user_id, credit_score FROM credit_scores;",
      "SELECT user_id, credit_score FROM credit_scores WHERE credit_score > 700",
      "SELECT user_id, MAX(credit_score) AS max_credit_score FROM credit_scores GROUP BY user_id",
      "SELECT user_id, AVG(credit_score) AS avg_credit_score FROM credit_scores GROUP BY user_id HAVING avg_credit_score > 600",
      "SELECT user_id, loan_amount FROM loan_applications WHERE status = 'approved'",
      "SELECT user_id, COUNT(application_id) AS num_of_applications FROM loan_applications GROUP BY user_id",
      "SELECT application_id, application_date FROM loan_applications ORDER BY application_date DESC LIMIT 5",
      "SELECT user_id, is_eligible FROM loan_eligibility WHERE is_eligible = TRUE",
      "SELECT user_id, COUNT(application_id) AS num_of_applications FROM loan_applications WHERE status = 'pending' GROUP BY user_id HAVING num_of_applications > 2",
      "SELECT application_id, assessment_date FROM risk_assessment WHERE risk_level = 'high'",
      "SELECT user_id, MAX(credit_score) AS max_credit_score FROM credit_scores WHERE user_id = 1",
      "SELECT user_id, loan_amount, status FROM loan_applications WHERE loan_amount > 10000 AND status = 'approved'",
      "SELECT user_id, MIN(credit_score) AS min_credit_score FROM credit_scores GROUP BY user_id HAVING min_credit_score < 500",
      "SELECT application_id, reason FROM risk_assessment WHERE risk_level = 'low' OR risk_level = 'medium'",
      "SELECT user_id, SUM(loan_amount) AS total_loan_amount FROM loan_applications GROUP BY user_id HAVING total_loan_amount > 50000",
      "SELECT user_id, credit_score FROM credit_scores ORDER BY credit_score DESC LIMIT 10",
      "SELECT user_id, AVG(loan_amount) AS avg_loan_amount FROM loan_applications GROUP BY user_id HAVING avg_loan_amount < 20000",
      "SELECT application_id, reason FROM risk_assessment WHERE assessment_date >= '2022-01-01' AND assessment_date <= '2022-06-30'",
      "SELECT user_id, COUNT(application_id) AS num_of_applications FROM loan_applications WHERE loan_amount > 20000 GROUP BY user_id",
      "SELECT user_id, credit_score FROM credit_scores WHERE user_id IN (SELECT user_id FROM loan_eligibility WHERE is_eligible = TRUE)",
      "SELECT user_id, loan_amount, status FROM loan_applications WHERE application_date BETWEEN '2022-01-01' AND '2022-12-31'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CreditScores;",
      "SELECT user_id, credit_score FROM CreditScores WHERE credit_score > 700;",
      "SELECT * FROM LoanApplications;",
      "SELECT application_id, user_id FROM LoanApplications WHERE loan_amount > 10000;",
      "SELECT * FROM LoanEligibility;",
      "SELECT user_id, eligible FROM LoanEligibility WHERE eligible = true;",
      "SELECT * FROM RiskAssessment;",
      "SELECT assessment_id, user_id, risk_score FROM RiskAssessment WHERE risk_score < 50;",
      "SELECT * FROM UserInformation;",
      "SELECT user_id, first_name, last_name FROM UserInformation WHERE last_name LIKE 'S%';",
      "SELECT user_id, email FROM UserInformation WHERE email LIKE '%@gmail.com';",
      "SELECT user_id, phone_number FROM UserInformation WHERE phone_number LIKE '555%';",
      "SELECT user_id, address FROM UserInformation WHERE address LIKE '%Street';",
      "SELECT user_id, first_name, last_name, email FROM UserInformation WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT user_id, first_name, email FROM UserInformation WHERE first_name LIKE 'A%' OR email LIKE '%yahoo.com';",
      "SELECT user_id, first_name, last_name, phone_number FROM UserInformation WHERE phone_number IS NOT NULL;",
      "SELECT user_id, first_name, last_name, address FROM UserInformation WHERE address IS NULL;",
      "SELECT LoanApplications.user_id, loan_amount, application_date, credit_score FROM LoanApplications INNER JOIN CreditScores ON LoanApplications.user_id = CreditScores.user_id;",
      "SELECT UserInformation.user_id, first_name, last_name, email, risk_score FROM UserInformation INNER JOIN RiskAssessment ON UserInformation.user_id = RiskAssessment.user_id WHERE risk_score > 70;",
      "SELECT UserInformation.user_id, first_name, last_name, eligible FROM UserInformation LEFT JOIN LoanEligibility ON UserInformation.user_id = LoanEligibility.user_id WHERE LoanEligibility.user_id IS NULL;",
      "SELECT user_id, MAX(loan_amount) AS max_loan_amount FROM LoanApplications GROUP BY user_id HAVING max_loan_amount > 20000;",
      "SELECT * FROM CreditScores WHERE credit_score > 700;",
      "SELECT first_name, last_name, email FROM UserInformation WHERE address LIKE '%Street%';",
      "SELECT user_id, loan_amount FROM LoanApplications WHERE application_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM LoanEligibility WHERE eligible = true AND approval_date IS NOT NULL;",
      "SELECT user_id, risk_score FROM RiskAssessment WHERE assessment_date > '2022-01-01';",
      "SELECT u.first_name, l.loan_amount FROM UserInformation u JOIN LoanApplications l ON u.user_id = l.user_id;",
      "SELECT u.first_name, u.last_name, l.loan_amount FROM UserInformation u JOIN LoanApplications l ON u.user_id = l.user_id WHERE l.loan_amount > 10000;",
      "SELECT u.first_name, u.last_name, r.risk_score FROM UserInformation u JOIN RiskAssessment r ON u.user_id = r.user_id WHERE r.risk_score > 80;",
      "SELECT u.first_name, u.last_name, l.loan_amount FROM UserInformation u LEFT JOIN LoanApplications l ON u.user_id = l.user_id;",
      "SELECT u.first_name, u.last_name, l.loan_amount, e.eligible FROM UserInformation u LEFT JOIN LoanApplications l ON u.user_id = l.user_id LEFT JOIN LoanEligibility e ON u.user_id = e.user_id WHERE e.eligible = true;",
      "SELECT u.first_name, u.last_name, l.loan_amount, r.risk_score FROM UserInformation u LEFT JOIN LoanApplications l ON u.user_id = l.user_id LEFT JOIN RiskAssessment r ON u.user_id = r.user_id WHERE r.risk_score > 70;",
      "SELECT u.first_name, u.last_name, l.loan_amount, e.eligible, r.risk_score FROM UserInformation u LEFT JOIN LoanApplications l ON u.user_id = l.user_id LEFT JOIN LoanEligibility e ON u.user_id = e.user_id LEFT JOIN RiskAssessment r ON u.user_id = r.user_id WHERE e.eligible = true AND r.risk_score > 80;",
      "SELECT u.first_name, u.last_name, l.loan_amount, r.risk_score FROM UserInformation u RIGHT JOIN RiskAssessment r ON u.user_id = r.user_id;",
      "SELECT u.first_name, u.last_name, l.loan_amount, e.eligible FROM UserInformation u RIGHT JOIN LoanEligibility e ON u.user_id = e.user_id;",
      "SELECT u.first_name, u.last_name, l.loan_amount, r.risk_score FROM UserInformation u FULL JOIN RiskAssessment r ON u.user_id = r.user_id;",
      "SELECT u.first_name, u.last_name, l.loan_amount, e.eligible FROM UserInformation u FULL JOIN LoanEligibility e ON u.user_id = e.user_id;",
      "SELECT u.first_name, u.last_name, l.loan_amount, e.eligible, r.risk_score FROM UserInformation u FULL JOIN LoanEligibility e ON u.user_id = e.user_id FULL JOIN RiskAssessment r ON u.user_id = r.user_id WHERE e.eligible = true AND r.risk_score > 80;",
      "SELECT u.first_name, u.last_name, SUM(l.loan_amount) AS total_loan_amount FROM UserInformation u JOIN LoanApplications l ON u.user_id = l.user_id GROUP BY u.user_id;",
      "SELECT u.first_name, u.last_name, AVG(r.risk_score) AS avg_risk_score FROM UserInformation u JOIN RiskAssessment r ON u.user_id = r.user_id GROUP BY u.user_id;",
      "SELECT u.first_name, u.last_name, COUNT(e.eligible) AS total_eligible_loans FROM UserInformation u JOIN LoanEligibility e ON u.user_id = e.user_id WHERE e.eligible = true GROUP BY u.user_id;"
    ]
  }
]