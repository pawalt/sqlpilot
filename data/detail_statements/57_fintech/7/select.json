[
  {
    "statements": [
      "SELECT * FROM Financial_Statements;",
      "SELECT id, statement_date, amount FROM Financial_Statements WHERE reconciled = TRUE;",
      "SELECT * FROM Financial_Statements WHERE statement_type = 'Income Statement';",
      "SELECT id, statement_date, amount FROM Financial_Statements WHERE amount > 1000;",
      "SELECT id, statement_date, statement_type FROM Financial_Statements WHERE statement_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM Financial_Statements WHERE amount BETWEEN 500 AND 1000;",
      "SELECT id, amount FROM Financial_Statements WHERE reconciled = FALSE;",
      "SELECT statement_date, statement_type FROM Financial_Statements WHERE reconciled = TRUE;",
      "SELECT * FROM Financial_Statements WHERE statement_type = 'Balance Sheet';",
      "SELECT id, statement_date, amount FROM Financial_Statements WHERE amount < 0;",
      "SELECT * FROM Financial_Statements WHERE statement_type = 'Cash Flow Statement';",
      "SELECT id, statement_date, reconciled FROM Financial_Statements WHERE reconciled = TRUE;",
      "SELECT * FROM Financial_Statements WHERE statement_date < '2022-03-15';",
      "SELECT id, statement_type, reconciled FROM Financial_Statements WHERE reconciled = FALSE;",
      "SELECT * FROM Financial_Statements WHERE statement_type = 'Profit and Loss Statement';",
      "SELECT id, statement_date, amount FROM Financial_Statements WHERE amount = 0;",
      "SELECT * FROM Financial_Statements WHERE statement_type = 'General Ledger';",
      "SELECT id, statement_date, reconciled FROM Financial_Statements WHERE statement_date >= '2022-01-01';",
      "SELECT * FROM Financial_Statements WHERE reconciled = FALSE;",
      "SELECT id, statement_date, amount FROM Financial_Statements WHERE amount = 0;",
      "SELECT * FROM Financial_Statements WHERE statement_type = 'Income Statement' AND reconciled = TRUE;",
      "SELECT id, statement_date, amount FROM Financial_Statements WHERE statement_date BETWEEN '2022-01-01' AND '2022-03-31' ORDER BY amount DESC;",
      "SELECT statement_type, AVG(amount) AS avg_amount FROM Financial_Statements GROUP BY statement_type;",
      "SELECT COUNT(*) AS total_statements FROM Financial_Statements WHERE reconciled = FALSE;",
      "SELECT statement_type, SUM(amount) AS total_amount FROM Financial_Statements WHERE statement_date = '2022-01-31' GROUP BY statement_type;",
      "SELECT * FROM Financial_Statements WHERE statement_type LIKE '%Statement%';",
      "SELECT statement_date, SUM(amount) AS total_amount FROM Financial_Statements GROUP BY statement_date HAVING SUM(amount) > 10000;",
      "SELECT statement_date, statement_type, amount FROM Financial_Statements WHERE amount > (SELECT AVG(amount) FROM Financial_Statements);",
      "SELECT statement_type, MAX(amount) AS max_amount FROM Financial_Statements WHERE reconciled = TRUE GROUP BY statement_type;",
      "SELECT statement_date, statement_type, amount FROM Financial_Statements WHERE amount BETWEEN 5000 AND 10000;",
      "SELECT statement_date, statement_type, amount FROM Financial_Statements WHERE statement_type IN ('Income Statement', 'Balance Sheet');",
      "SELECT statement_type, MIN(amount) AS min_amount FROM Financial_Statements GROUP BY statement_type HAVING MIN(amount) < 0;",
      "SELECT statement_date, statement_type, amount FROM Financial_Statements WHERE statement_type = 'Cash Flow Statement' ORDER BY statement_date ASC;",
      "SELECT AVG(amount) AS avg_amount FROM Financial_Statements WHERE statement_date >= '2022-04-01' AND statement_date <= '2022-06-30';",
      "SELECT * FROM Financial_Statements WHERE amount = (SELECT MAX(amount) FROM Financial_Statements);",
      "SELECT statement_date, SUM(amount) AS total_amount FROM Financial_Statements WHERE statement_type = 'Income Statement' GROUP BY statement_date;",
      "SELECT statement_type, COUNT(*) AS num_statements FROM Financial_Statements GROUP BY statement_type HAVING COUNT(*) > 1;",
      "SELECT statement_type, SUM(amount) AS total_amount FROM Financial_Statements WHERE reconciled = TRUE GROUP BY statement_type HAVING SUM(amount) > 50000;",
      "SELECT statement_date, statement_type, amount FROM Financial_Statements WHERE statement_date >= '2022-01-01' AND statement_date <= '2022-12-31';",
      "SELECT statement_date, statement_type, amount FROM Financial_Statements WHERE reconciled = FALSE ORDER BY statement_date ASC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM financial_statements;",
      "SELECT statement_id, statement_date FROM financial_statements;",
      "SELECT statement_id, statement_amount FROM financial_statements;",
      "SELECT * FROM audit_logs;",
      "SELECT log_id, statement_id FROM audit_logs;",
      "SELECT statement_id, action_performed FROM audit_logs;",
      "SELECT statement_date, statement_amount FROM financial_statements;",
      "SELECT statement_date, SUM(statement_amount) AS total_amount FROM financial_statements GROUP BY statement_date;",
      "SELECT AVG(statement_amount) AS avg_amount FROM financial_statements;",
      "SELECT MAX(statement_amount) AS max_amount FROM financial_statements;",
      "SELECT MIN(statement_amount) AS min_amount FROM financial_statements;",
      "SELECT statement_id, statement_date FROM financial_statements WHERE statement_amount > 1000;",
      "SELECT * FROM financial_statements WHERE statement_date >= '2022-01-01';",
      "SELECT * FROM financial_statements ORDER BY statement_amount DESC;",
      "SELECT * FROM financial_statements LIMIT 10;",
      "SELECT * FROM financial_statements OFFSET 5;",
      "SELECT * FROM financial_statements WHERE statement_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT statement_id, logged_timestamp FROM audit_logs WHERE action_performed = 'UPDATE';",
      "SELECT statement_id, COUNT(*) AS num_logs FROM audit_logs GROUP BY statement_id;",
      "SELECT AVG(statement_amount) AS avg_amount FROM financial_statements WHERE statement_date > '2022-01-01';",
      "SELECT * FROM financial_statements WHERE statement_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT statement_id, statement_amount FROM financial_statements WHERE statement_amount > 1000;",
      "SELECT COUNT(statement_id) FROM financial_statements;",
      "SELECT statement_id, MAX(statement_amount) AS max_amount FROM financial_statements GROUP BY statement_id;",
      "SELECT statement_id, SUM(statement_amount) AS total_amount FROM financial_statements GROUP BY statement_id;",
      "SELECT f.statement_id, f.statement_date, a.action_performed FROM financial_statements f JOIN audit_logs a ON f.statement_id = a.statement_id;",
      "SELECT f.statement_id, f.statement_amount, a.log_id, a.action_performed FROM financial_statements f LEFT JOIN audit_logs a ON f.statement_id = a.statement_id;",
      "SELECT statement_id, statement_amount FROM financial_statements WHERE statement_date >= '2021-01-01' AND statement_date <= '2021-06-30';",
      "SELECT statement_id, AVG(statement_amount) AS avg_amount FROM financial_statements GROUP BY statement_id;",
      "SELECT statement_id, statement_amount FROM financial_statements WHERE statement_amount BETWEEN 500 AND 1000;",
      "SELECT AVG(statement_amount) FROM financial_statements;",
      "SELECT MIN(statement_amount) FROM financial_statements;",
      "SELECT MAX(statement_amount) FROM financial_statements;",
      "SELECT statement_id, statement_date, statement_amount FROM financial_statements ORDER BY statement_date DESC;",
      "SELECT statement_id, statement_date, statement_amount FROM financial_statements ORDER BY statement_amount DESC;",
      "SELECT statement_id, statement_date, statement_amount FROM financial_statements ORDER BY statement_amount ASC;",
      "SELECT statement_id, EXTRACT(YEAR FROM statement_date) AS statement_year FROM financial_statements;",
      "SELECT statement_id, DAYOFWEEK(statement_date) AS day_of_week FROM financial_statements;",
      "SELECT YEAR(statement_date) AS statement_year, MONTH(statement_date) AS statement_month, SUM(statement_amount) AS total_amount FROM financial_statements GROUP BY statement_year, statement_month;",
      "SELECT statement_id, statement_amount FROM financial_statements WHERE statement_date = '2021-09-30';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM financial_statements;",
      "SELECT statement_name, statement_date FROM financial_statements;",
      "SELECT * FROM audit_logs;",
      "SELECT statement_id, action FROM audit_logs;",
      "SELECT * FROM reconciliation_records;",
      "SELECT statement_id, reconciled_amount FROM reconciliation_records;",
      "SELECT financial_statements.id, statement_name, total_amount, action, action_date FROM financial_statements JOIN audit_logs ON financial_statements.id = audit_logs.statement_id;",
      "SELECT financial_statements.id, statement_name, total_amount, status, reconciled_amount FROM financial_statements JOIN reconciliation_records ON financial_statements.id = reconciliation_records.statement_id;",
      "SELECT financial_statements.id, statement_name, total_amount, action, action_date, status, reconciled_amount FROM financial_statements JOIN audit_logs ON financial_statements.id = audit_logs.statement_id JOIN reconciliation_records ON financial_statements.id = reconciliation_records.statement_id;",
      "SELECT * FROM financial_statements WHERE statement_date >= '2022-01-01';",
      "SELECT * FROM audit_logs WHERE action = 'approved';",
      "SELECT * FROM reconciliation_records WHERE status = 'completed';",
      "SELECT statement_name, total_amount FROM financial_statements WHERE total_amount > 10000;",
      "SELECT statement_id, action_date FROM audit_logs WHERE action_date >= '2022-05-01';",
      "SELECT statement_id, reconciled_amount FROM reconciliation_records WHERE reconciled_amount < 5000;",
      "SELECT statement_name, total_amount FROM financial_statements WHERE statement_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT COUNT(*) FROM financial_statements;",
      "SELECT MAX(total_amount) FROM financial_statements;",
      "SELECT MIN(reconciled_amount) FROM reconciliation_records;",
      "SELECT AVG(total_amount) FROM financial_statements;",
      "SELECT SUM(reconciled_amount) FROM reconciliation_records;",
      "SELECT id, statement_name, statement_date, total_amount FROM financial_statements;",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE total_amount > 100000;",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE statement_date >= '2022-01-01';",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements ORDER BY statement_date DESC;",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE statement_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE statement_name LIKE '%Income%';",
      "SELECT log_id, statement_id, action, action_date FROM audit_logs;",
      "SELECT statement_name, action, action_date FROM audit_logs JOIN financial_statements ON audit_logs.statement_id = financial_statements.id;",
      "SELECT statement_id, status, reconciled_amount FROM reconciliation_records WHERE status = 'Unreconciled';",
      "SELECT statement_id, status, reconciled_amount FROM reconciliation_records WHERE reconciled_amount < 0;",
      "SELECT * FROM financial_statements JOIN audit_logs ON financial_statements.id = audit_logs.statement_id;",
      "SELECT * FROM financial_statements JOIN reconciliation_records ON financial_statements.id = reconciliation_records.statement_id;",
      "SELECT statement_name, statement_date, total_amount, action, action_date FROM financial_statements JOIN audit_logs ON financial_statements.id = audit_logs.statement_id;",
      "SELECT statement_name, statement_date, total_amount, status, reconciled_amount FROM financial_statements JOIN reconciliation_records ON financial_statements.id = reconciliation_records.statement_id;",
      "SELECT statement_name, statement_date, total_amount, action, action_date, status, reconciled_amount FROM financial_statements JOIN audit_logs ON financial_statements.id = audit_logs.statement_id JOIN reconciliation_records ON financial_statements.id = reconciliation_records.statement_id;",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE id IN (SELECT statement_id FROM audit_logs WHERE action = 'Approved');",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE id IN (SELECT statement_id FROM reconciliation_records WHERE status = 'Reconciled');",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE id NOT IN (SELECT statement_id FROM reconciliation_records WHERE status = 'Unreconciled');",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE id IN (SELECT statement_id FROM reconciliation_records WHERE reconciled_amount > 5000);",
      "SELECT statement_name, statement_date, total_amount FROM financial_statements WHERE id NOT IN (SELECT statement_id FROM reconciliation_records WHERE status = 'Reconciled' AND reconciled_amount = 0);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM financial_statement;",
      "SELECT id, statement_date FROM financial_statement;",
      "SELECT * FROM auditor;",
      "SELECT name, email FROM auditor;",
      "SELECT * FROM audit_log;",
      "SELECT audit_date, action FROM audit_log;",
      "SELECT * FROM reconciliation;",
      "SELECT start_date, end_date FROM reconciliation;",
      "SELECT financial_statement.id, financial_statement.amount, audit_log.audit_date FROM financial_statement JOIN audit_log ON financial_statement.id = audit_log.auditor_id;",
      "SELECT financial_statement.id, financial_statement.statement_date, auditor.name, auditor.email FROM financial_statement JOIN auditor ON financial_statement.id = auditor.id;",
      "SELECT audit_log.audit_date, audit_log.action, reconciliation.status FROM audit_log JOIN reconciliation ON audit_log.id = reconciliation.id;",
      "SELECT financial_statement.id, financial_statement.amount, auditor.name, audit_log.action, reconciliation.status FROM financial_statement JOIN auditor ON financial_statement.id = auditor.id JOIN audit_log ON financial_statement.id = audit_log.auditor_id JOIN reconciliation ON audit_log.id = reconciliation.id;",
      "SELECT * FROM financial_statement WHERE amount > 1000;",
      "SELECT * FROM financial_statement WHERE statement_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM auditor WHERE name LIKE 'A%';",
      "SELECT * FROM auditor WHERE email LIKE '%@example.com';",
      "SELECT * FROM audit_log WHERE action = 'Approved';",
      "SELECT * FROM audit_log WHERE audit_date > '2022-06-15';",
      "SELECT * FROM reconciliation WHERE status = 'Completed';",
      "SELECT * FROM reconciliation WHERE start_date < '2022-01-01' AND end_date > '2022-12-31';",
      "SELECT financial_statement.id, financial_statement.amount, audit_log.audit_date, auditor.name, reconciliation.status FROM financial_statement JOIN audit_log ON financial_statement.id = audit_log.auditor_id JOIN auditor ON financial_statement.id = auditor.id JOIN reconciliation ON audit_log.id = reconciliation.id WHERE amount > 5000 AND status = 'Pending';",
      "SELECT * FROM financial_statement WHERE amount > 10000;",
      "SELECT id, statement_date FROM financial_statement WHERE statement_date >= '2022-01-01' AND statement_date <= '2022-12-31';",
      "SELECT auditor.name, audit_log.action FROM auditor INNER JOIN audit_log ON auditor.id = audit_log.auditor_id;",
      "SELECT * FROM financial_statement WHERE statement_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT SUM(amount) FROM financial_statement WHERE statement_date >= '2022-01-01';",
      "SELECT * FROM auditor WHERE name LIKE 'A%';",
      "SELECT COUNT(*) FROM financial_statement WHERE amount < 5000;",
      "SELECT auditor.name, audit_log.audit_date FROM auditor JOIN audit_log ON auditor.id = audit_log.auditor_id GROUP BY auditor.name;",
      "SELECT * FROM financial_statement WHERE amount NOT BETWEEN 5000 AND 10000;",
      "SELECT AVG(amount) FROM financial_statement WHERE statement_date >= '2022-01-01';",
      "SELECT auditor.name, COUNT(audit_log.id) AS num_actions FROM auditor LEFT JOIN audit_log ON auditor.id = audit_log.auditor_id GROUP BY auditor.name;",
      "SELECT MIN(amount) FROM financial_statement WHERE statement_date >= '2022-01-01';",
      "SELECT * FROM financial_statement WHERE amount = (SELECT MAX(amount) FROM financial_statement);",
      "SELECT * FROM audit_log WHERE action IN ('approved', 'rejected');",
      "SELECT auditor.name, COUNT(audit_log.id) AS num_actions FROM auditor LEFT JOIN audit_log ON auditor.id = audit_log.auditor_id WHERE action = 'approved' GROUP BY auditor.name;",
      "SELECT * FROM reconciliation WHERE status = 'pending' AND end_date < NOW();",
      "SELECT DISTINCT auditor.name FROM auditor JOIN audit_log ON auditor.id = audit_log.auditor_id WHERE audit_log.action = 'updated';",
      "SELECT * FROM financial_statement ORDER BY statement_date DESC LIMIT 10;",
      "SELECT AVG(amount) FROM financial_statement WHERE statement_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT auditor.name, audit_log.action, audit_log.audit_date FROM auditor JOIN audit_log ON auditor.id = audit_log.auditor_id WHERE audit_log.audit_date >= '2022-01-01' ORDER BY audit_log.audit_date DESC;",
      "SELECT * FROM financial_statement WHERE amount > (SELECT AVG(amount) FROM financial_statement);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM financial_statements;",
      "SELECT statement_date, statement_details FROM financial_statements;",
      "SELECT * FROM auditors;",
      "SELECT auditor_name, audit_hours FROM auditors;",
      "SELECT * FROM clients;",
      "SELECT client_name, client_contact FROM clients;",
      "SELECT * FROM reconciliations;",
      "SELECT statement_id, auditor_id, reconciliation_status FROM reconciliations;",
      "SELECT * FROM payments;",
      "SELECT client_id, payment_amount, payment_date FROM payments;",
      "SELECT financial_statements.id, statement_date, statement_details, auditors.auditor_name, audit_hours, clients.client_name, client_contact, reconciliation_status, payment_amount, payment_date FROM financial_statements, auditors, clients, reconciliations, payments WHERE financial_statements.id = reconciliations.statement_id AND auditors.auditor_id = reconciliations.auditor_id AND clients.client_id = payments.client_id;",
      "SELECT * FROM financial_statements JOIN reconciliations ON financial_statements.id = reconciliations.statement_id",
      "SELECT financial_statements.statement_date, reconciliations.reconciliation_status FROM financial_statements JOIN reconciliations ON financial_statements.id = reconciliations.statement_id",
      "SELECT clients.client_name, payments.payment_amount FROM clients JOIN payments ON clients.client_id = payments.client_id",
      "SELECT financial_statements.statement_date, auditors.auditor_name FROM financial_statements JOIN reconciliations ON financial_statements.id = reconciliations.statement_id JOIN auditors ON reconciliations.auditor_id = auditors.auditor_id",
      "SELECT clients.client_name, auditors.auditor_name FROM clients JOIN reconciliations ON clients.client_id = reconciliations.statement_id JOIN auditors ON reconciliations.auditor_id = auditors.auditor_id"
    ]
  }
]