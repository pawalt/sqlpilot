[
  {
    "statements": [
      "SELECT * FROM QuantumApplications;",
      "SELECT id, application_name FROM QuantumApplications;",
      "SELECT id, application_name, data_security_level FROM QuantumApplications;",
      "SELECT application_name, encryption_key FROM QuantumApplications;",
      "SELECT * FROM QuantumApplications WHERE data_security_level > 5;",
      "SELECT * FROM QuantumApplications WHERE encryption_key IS NOT NULL;",
      "SELECT * FROM QuantumApplications WHERE quantum_compatible = true;",
      "SELECT * FROM QuantumApplications WHERE encryption_key LIKE 'ABC%';",
      "SELECT id, application_name FROM QuantumApplications WHERE data_security_level >= 3;",
      "SELECT id, application_name FROM QuantumApplications ORDER BY data_security_level DESC;",
      "SELECT application_name, encryption_key FROM QuantumApplications WHERE data_security_level < 5;",
      "SELECT * FROM QuantumApplications WHERE quantum_compatible = false AND data_security_level < 5;",
      "SELECT * FROM QuantumApplications WHERE encryption_key IN ('key1', 'key2', 'key3');",
      "SELECT * FROM QuantumApplications WHERE application_name LIKE '%quantum%';",
      "SELECT * FROM QuantumApplications WHERE application_name = 'QuantumApp1';",
      "SELECT * FROM QuantumApplications WHERE data_security_level BETWEEN 4 AND 7;",
      "SELECT id, application_name FROM QuantumApplications WHERE data_security_level IS NULL;",
      "SELECT COUNT(id) AS TotalApps FROM QuantumApplications;",
      "SELECT MAX(data_security_level) AS MaxSecurityLevel FROM QuantumApplications;",
      "SELECT AVG(data_security_level) AS AvgSecurityLevel FROM QuantumApplications;",
      "SELECT * FROM QuantumApplications WHERE data_security_level > 5",
      "SELECT application_name, data_security_level FROM QuantumApplications WHERE encryption_key IS NOT NULL",
      "SELECT DISTINCT encryption_key FROM QuantumApplications",
      "SELECT * FROM QuantumApplications WHERE id BETWEEN 100 AND 200",
      "SELECT * FROM QuantumApplications WHERE application_name LIKE 'Q%'",
      "SELECT * FROM QuantumApplications WHERE encryption_key LIKE '%123%'",
      "SELECT * FROM QuantumApplications WHERE quantum_compatible = TRUE",
      "SELECT AVG(data_security_level) AS avg_security_level FROM QuantumApplications",
      "SELECT application_name, COUNT(*) AS num_of_apps FROM QuantumApplications GROUP BY application_name",
      "SELECT * FROM QuantumApplications WHERE data_security_level BETWEEN 5 AND 10 ORDER BY data_security_level DESC",
      "SELECT application_name, SUM(data_security_level) AS total_security FROM QuantumApplications GROUP BY application_name",
      "SELECT * FROM QuantumApplications WHERE quantum_compatible = TRUE AND data_security_level > 7",
      "SELECT application_name, MIN(data_security_level) AS min_security_level FROM QuantumApplications GROUP BY application_name",
      "SELECT * FROM QuantumApplications WHERE encryption_key IS NOT NULL AND LENGTH(encryption_key) > 50",
      "SELECT COUNT(*) AS num_of_apps FROM QuantumApplications WHERE quantum_compatible = TRUE",
      "SELECT application_name, AVG(data_security_level) AS avg_security_level FROM QuantumApplications GROUP BY application_name HAVING avg_security_level > 6",
      "SELECT * FROM QuantumApplications WHERE data_security_level <= 3 OR encryption_key = 'abc123'",
      "SELECT application_name, MAX(data_security_level) AS max_security_level FROM QuantumApplications GROUP BY application_name",
      "SELECT * FROM QuantumApplications WHERE data_security_level IN (3, 6, 9)",
      "SELECT * FROM QuantumApplications WHERE encryption_key IN ('key123', 'key456')"
    ]
  },
  {
    "statements": [
      "SELECT * FROM quantum_data;",
      "SELECT id, sensitive_data FROM quantum_data WHERE encryption_key = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM quantum_users;",
      "SELECT username, email FROM quantum_users WHERE user_id = '123e4567-e89b-12d3-a456-426614174001';",
      "SELECT id, sensitive_data, encryption_key FROM quantum_data WHERE encryption_key IS NOT NULL;",
      "SELECT * FROM quantum_data WHERE sensitive_data LIKE '%keyword%';",
      "SELECT * FROM quantum_users WHERE username = 'alice';",
      "SELECT username, email FROM quantum_users WHERE email LIKE '%@example.com%';",
      "SELECT * FROM quantum_data WHERE id = '123e4567-e89b-12d3-a456-426614174002';",
      "SELECT * FROM quantum_data WHERE encryption_key IS NULL;",
      "SELECT username, password_hash FROM quantum_users WHERE user_id = '123e4567-e89b-12d3-a456-426614174003';",
      "SELECT id, sensitive_data FROM quantum_data WHERE sensitive_data IS NOT NULL;",
      "SELECT * FROM quantum_users WHERE username = 'bob';",
      "SELECT * FROM quantum_users WHERE email = 'alice@example.com';",
      "SELECT * FROM quantum_data WHERE encryption_key = '123e4567-e89b-12d3-a456-426614174004';",
      "SELECT * FROM quantum_users WHERE password_hash = 'hashedpassword';",
      "SELECT id, sensitive_data, encryption_key FROM quantum_data WHERE id = '123e4567-e89b-12d3-a456-426614174005';",
      "SELECT * FROM quantum_users WHERE username = 'charlie';",
      "SELECT username, email FROM quantum_users WHERE email IN ('alice@example.com', 'bob@example.com');",
      "SELECT * FROM quantum_data WHERE sensitive_data = 'sensitive';",
      "SELECT * FROM quantum_data WHERE sensitive_data LIKE '%credit card%'",
      "SELECT user_id, username, email FROM quantum_users WHERE username = 'admin'",
      "SELECT * FROM quantum_data WHERE encryption_key = 'abcd-1234'",
      "SELECT user_id, username FROM quantum_users WHERE email LIKE '%@gmail.com%'",
      "SELECT * FROM quantum_data WHERE encryption_key IS NOT NULL",
      "SELECT user_id, username FROM quantum_users WHERE password_hash = 'hashedPassword123'",
      "SELECT * FROM quantum_data WHERE id IN (SELECT id FROM quantum_users WHERE username = 'john_doe')",
      "SELECT * FROM quantum_data WHERE sensitive_data = 'confidential' AND encryption_key = 'xyz-5678'",
      "SELECT * FROM quantum_data d JOIN quantum_users u ON d.id = u.user_id",
      "SELECT * FROM quantum_data d LEFT JOIN quantum_users u ON d.id = u.user_id",
      "SELECT * FROM quantum_users u RIGHT JOIN quantum_data d ON u.user_id = d.id",
      "SELECT * FROM quantum_data d INNER JOIN quantum_users u ON d.id = u.user_id",
      "SELECT d.id, u.username, d.sensitive_data FROM quantum_data d INNER JOIN quantum_users u ON d.id = u.user_id WHERE u.email = 'example@email.com'",
      "SELECT d.id, u.username, d.sensitive_data FROM quantum_data d INNER JOIN quantum_users u ON d.id = u.user_id WHERE u.username = 'admin'",
      "SELECT AVG(LENGTH(sensitive_data)) AS avg_length FROM quantum_data",
      "SELECT COUNT(*) AS total_records FROM quantum_data",
      "SELECT MIN(LENGTH(sensitive_data)) AS min_length FROM quantum_data",
      "SELECT MAX(LENGTH(sensitive_data)) AS max_length FROM quantum_data",
      "SELECT SUM(LENGTH(sensitive_data)) AS total_length FROM quantum_data"
    ]
  },
  {
    "statements": [
      "SELECT * FROM quantum_users;",
      "SELECT username, security_level FROM quantum_users;",
      "SELECT user_id FROM quantum_users WHERE security_level > 2;",
      "SELECT * FROM quantum_data;",
      "SELECT data_id, encryption_key FROM quantum_data;",
      "SELECT * FROM quantum_logs;",
      "SELECT user_id, log_time FROM quantum_logs WHERE log_time > '2022-01-01';",
      "SELECT username, log_details FROM quantum_users JOIN quantum_logs ON quantum_users.user_id = quantum_logs.user_id;",
      "SELECT * FROM quantum_users WHERE username = 'alice';",
      "SELECT * FROM quantum_data WHERE user_id = 1;",
      "SELECT user_id, log_details FROM quantum_logs JOIN quantum_users ON quantum_users.user_id = quantum_logs.user_id;",
      "SELECT * FROM quantum_users WHERE security_level = 3;",
      "SELECT user_id, data_id FROM quantum_data WHERE user_id = 2;",
      "SELECT * FROM quantum_logs WHERE user_id = 3;",
      "SELECT username, log_time FROM quantum_users JOIN quantum_logs ON quantum_users.user_id = quantum_logs.user_id;",
      "SELECT * FROM quantum_users WHERE username LIKE '%smith%';",
      "SELECT user_id, log_time FROM quantum_logs WHERE log_time BETWEEN '2022-01-01' AND '2022-03-01';",
      "SELECT username, log_details FROM quantum_users JOIN quantum_logs ON quantum_users.user_id = quantum_logs.user_id WHERE quantum_logs.log_time > '2022-01-01';",
      "SELECT * FROM quantum_data WHERE encryption_key = 'securekey';",
      "SELECT user_id, log_details FROM quantum_logs JOIN quantum_users ON quantum_users.user_id = quantum_logs.user_id WHERE quantum_logs.log_time < '2022-01-01';",
      "SELECT * FROM quantum_users",
      "SELECT user_id, username FROM quantum_users",
      "SELECT user_id, password, security_level FROM quantum_users WHERE security_level > 3",
      "SELECT * FROM quantum_users WHERE username LIKE 'A%'",
      "SELECT * FROM quantum_users WHERE security_level BETWEEN 2 AND 5",
      "SELECT * FROM quantum_users ORDER BY username ASC",
      "SELECT * FROM quantum_users ORDER BY user_id DESC",
      "SELECT q.user_id, q.username, q.security_level, d.data_id, d.data_blob FROM quantum_users q INNER JOIN quantum_data d ON q.user_id = d.user_id",
      "SELECT q.username, d.data_blob FROM quantum_users q INNER JOIN quantum_data d ON q.user_id = d.user_id WHERE q.security_level > 3",
      "SELECT q.username, l.log_details FROM quantum_users q LEFT JOIN quantum_logs l ON q.user_id = l.user_id",
      "SELECT q.username, l.log_details FROM quantum_users q RIGHT JOIN quantum_logs l ON q.user_id = l.user_id",
      "SELECT q.username, SUM(d.data_id) AS total_data FROM quantum_users q INNER JOIN quantum_data d ON q.user_id = d.user_id GROUP BY q.username",
      "SELECT q.username, AVG(d.data_id) AS avg_data FROM quantum_users q INNER JOIN quantum_data d ON q.user_id = d.user_id GROUP BY q.username",
      "SELECT username, COUNT(*) AS log_count FROM quantum_users u INNER JOIN quantum_logs l ON u.user_id = l.user_id GROUP BY username HAVING COUNT(*) > 2",
      "SELECT username, MAX(log_time) AS latest_log FROM quantum_users u INNER JOIN quantum_logs l ON u.user_id = l.user_id GROUP BY username",
      "SELECT q.username, l.log_details FROM quantum_users q, quantum_logs l WHERE q.user_id = l.user_id",
      "SELECT q.username, l.log_details FROM quantum_users q JOIN quantum_logs l USING(user_id)",
      "SELECT q.username, d.data_blob, l.log_time FROM quantum_users q JOIN quantum_data d ON q.user_id = d.user_id JOIN quantum_logs l ON q.user_id = l.user_id",
      "SELECT q.username, d.data_blob, l.log_time FROM quantum_users q JOIN quantum_data d ON q.user_id = d.user_id JOIN quantum_logs l ON q.user_id = l.user_id WHERE q.security_level > 1",
      "SELECT q.username, COUNT(l.log_id) AS log_count FROM quantum_users q LEFT JOIN quantum_logs l ON q.user_id = l.user_id GROUP BY q.username HAVING COUNT(l.log_id) > 0"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users;",
      "SELECT user_id, email FROM users WHERE username = 'john_doe';",
      "SELECT * FROM files;",
      "SELECT file_name, file_type FROM files WHERE file_size > 1000;",
      "SELECT * FROM access_logs;",
      "SELECT user_id, file_id, access_date FROM access_logs WHERE access_type = 'read';",
      "SELECT * FROM encryption_keys;",
      "SELECT key_id, encryption_key FROM encryption_keys WHERE user_id = 123;",
      "SELECT u.username, f.file_name, a.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs a ON u.user_id = a.user_id;",
      "SELECT DISTINCT f.file_type FROM files f JOIN access_logs a ON f.file_id = a.file_id WHERE a.user_id = 456;",
      "SELECT u.username, a.access_date FROM users u JOIN access_logs a ON u.user_id = a.user_id WHERE a.access_type = 'write';",
      "SELECT f.file_name, e.encryption_key FROM files f JOIN encryption_keys e ON f.user_id = e.user_id;",
      "SELECT u.username, e.encryption_key FROM users u JOIN encryption_keys e ON u.user_id = e.user_id;",
      "SELECT u.username, f.file_name, a.access_type, e.encryption_key FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs a ON f.file_id = a.file_id JOIN encryption_keys e ON u.user_id = e.user_id;",
      "SELECT * FROM users WHERE user_id IN (SELECT user_id FROM access_logs WHERE access_type = 'read');",
      "SELECT COUNT(*) AS total_files FROM files;",
      "SELECT AVG(file_size) AS average_file_size FROM files;",
      "SELECT u.username, COUNT(a.log_id) AS total_access_logs FROM users u LEFT JOIN access_logs a ON u.user_id = a.user_id GROUP BY u.user_id;",
      "SELECT u.username, MAX(f.file_size) AS largest_file_size FROM users u JOIN files f ON u.user_id = f.user_id GROUP BY u.user_id;",
      "SELECT u.username, MIN(f.file_size) AS smallest_file_size FROM users u JOIN files f ON u.user_id = f.user_id GROUP BY u.user_id;",
      "SELECT * FROM users WHERE user_id = 1;",
      "SELECT username, email FROM users WHERE username LIKE 'a%';",
      "SELECT file_name, file_size FROM files WHERE file_size > 1000;",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id;",
      "SELECT u.username, f.file_name, l.access_date FROM users u LEFT JOIN files f ON u.user_id = f.user_id LEFT JOIN access_logs l ON u.user_id = l.user_id;",
      "SELECT u.username, f.file_name, l.access_date FROM users u RIGHT JOIN files f ON u.user_id = f.user_id RIGHT JOIN access_logs l ON u.user_id = l.user_id;",
      "SELECT u.username, f.file_name, l.access_date FROM users u INNER JOIN files f ON u.user_id = f.user_id INNER JOIN access_logs l ON u.user_id = l.user_id;",
      "SELECT u.username, f.file_name, l.access_date FROM users u CROSS JOIN files f JOIN access_logs l ON u.user_id = l.user_id;",
      "SELECT u.username, COUNT(l.log_id) as num_logs FROM users u LEFT JOIN access_logs l ON u.user_id = l.user_id GROUP BY u.username;",
      "SELECT u.username, MIN(f.file_size) as min_size, MAX(f.file_size) as max_size FROM users u JOIN files f ON u.user_id = f.user_id GROUP BY u.username;",
      "SELECT u.username, AVG(f.file_size) as avg_size FROM users u JOIN files f ON u.user_id = f.user_id GROUP BY u.username HAVING AVG(f.file_size) > 5000;",
      "SELECT u.username, COUNT(*) as num_files FROM users u LEFT JOIN files f ON u.user_id = f.user_id GROUP BY u.username HAVING COUNT(*) < 5;",
      "SELECT e.key_id, u.username, e.encryption_key FROM encryption_keys e JOIN users u ON e.user_id = u.user_id;",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id WHERE f.file_type = 'pdf';",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id WHERE l.access_type = 'read';",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id ORDER BY l.access_date DESC;",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id LIMIT 10;",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id OFFSET 5;",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id WHERE u.email = 'example@example.com';",
      "SELECT u.username, f.file_name, l.access_date FROM users u JOIN files f ON u.user_id = f.user_id JOIN access_logs l ON u.user_id = l.user_id WHERE u.username = 'john_doe' AND f.file_size > 2000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Quantum_Users;",
      "SELECT username, email FROM Quantum_Users WHERE user_id = 1;",
      "SELECT * FROM Quantum_Data WHERE encrypted = TRUE;",
      "SELECT user_id, data_content FROM Quantum_Data WHERE data_id = 10;",
      "SELECT * FROM Quantum_Keys WHERE user_id = 5;",
      "SELECT encryption_key FROM Quantum_Keys WHERE user_id = 3;",
      "SELECT * FROM Quantum_Logs WHERE user_id = 2;",
      "SELECT log_content, timestamp FROM Quantum_Logs WHERE user_id = 4;",
      "SELECT * FROM Quantum_Settings WHERE user_id = 1;",
      "SELECT setting_name, setting_value FROM Quantum_Settings WHERE setting_id = 7;",
      "SELECT username, email FROM Quantum_Users WHERE username = 'alice';",
      "SELECT user_id, data_content, encrypted FROM Quantum_Data WHERE user_id = 3 AND encrypted = FALSE;",
      "SELECT setting_value FROM Quantum_Settings WHERE user_id = 2 AND setting_name = 'theme';",
      "SELECT log_id, log_content FROM Quantum_Logs WHERE timestamp >= '2022-01-01';",
      "SELECT * FROM Quantum_Users ORDER BY username DESC;",
      "SELECT * FROM Quantum_Data ORDER BY data_id ASC LIMIT 5;",
      "SELECT * FROM Quantum_Keys WHERE encryption_key IS NOT NULL;",
      "SELECT * FROM Quantum_Logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT * FROM Quantum_Settings WHERE setting_value LIKE '%dark%';",
      "SELECT user_id, username, email FROM Quantum_Users WHERE email LIKE '%@example.com%';",
      "SELECT * FROM Quantum_Users;",
      "SELECT user_id, username FROM Quantum_Users WHERE email LIKE '%@example.com';",
      "SELECT * FROM Quantum_Data WHERE encrypted = true;",
      "SELECT log_id, log_content, timestamp FROM Quantum_Logs WHERE user_id = 123;",
      "SELECT user_id, setting_name, setting_value FROM Quantum_Settings ORDER BY setting_name DESC;",
      "SELECT username, email FROM Quantum_Users WHERE username LIKE 'J%';",
      "SELECT * FROM Quantum_Keys WHERE user_id = (SELECT user_id FROM Quantum_Users WHERE username = 'john_doe');",
      "SELECT user_id, data_content FROM Quantum_Data WHERE user_id = (SELECT user_id FROM Quantum_Users WHERE username = 'alice');",
      "SELECT DISTINCT user_id FROM Quantum_Keys;",
      "SELECT * FROM Quantum_Logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM Quantum_Settings WHERE setting_value IN ('enabled', 'disabled');",
      "SELECT username, email FROM Quantum_Users WHERE username = 'admin' AND email = 'admin@example.com';",
      "SELECT * FROM Quantum_Data WHERE data_content LIKE '%important%' AND encrypted = false;",
      "SELECT COUNT(*) FROM Quantum_Users;",
      "SELECT MAX(user_id) FROM Quantum_Users;",
      "SELECT AVG(user_id) FROM Quantum_Users;",
      "SELECT SUM(user_id) FROM Quantum_Users;",
      "SELECT DISTINCT user_id, encryption_key FROM Quantum_Keys WHERE user_id IN (SELECT DISTINCT user_id FROM Quantum_Data);",
      "SELECT log_id, user_id, log_content, timestamp FROM Quantum_Logs INNER JOIN Quantum_Users ON Quantum_Logs.user_id = Quantum_Users.user_id;",
      "SELECT * FROM Quantum_Data WHERE user_id = ANY (SELECT user_id FROM Quantum_Users WHERE email LIKE '%@example.com');"
    ]
  }
]