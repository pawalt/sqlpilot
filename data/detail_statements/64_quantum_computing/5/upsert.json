[
  {
    "statements": [
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (1, 'Shor', 'Shor's algorithm for factorization', 0.01) ON DUPLICATE KEY UPDATE algorithm_name = 'Shor', description = 'Updated Shor''s algorithm', error_threshold = 0.1",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (2, 'Grover', 'Grover's search algorithm', 0.05) ON DUPLICATE KEY UPDATE algorithm_name = 'Grover', description = 'Updated Grover''s search algorithm', error_threshold = 0.15",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (3, 'QEC', 'Quantum Error Correction code', 0.02) ON DUPLICATE KEY UPDATE algorithm_name = 'QEC', description = 'Updated Quantum Error Correction code', error_threshold = 0.2",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (4, 'BB84', 'BB84 Quantum Key Distribution', 0.03) ON DUPLICATE KEY UPDATE algorithm_name = 'BB84', description = 'Updated BB84 Quantum Key Distribution', error_threshold = 0.3",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (5, 'Surface-17', 'Surface code for error correction', 0.04) ON DUPLICATE KEY UPDATE algorithm_name = 'Surface-17', description = 'Updated Surface code for error correction', error_threshold = 0.4",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (6, 'Steane', 'Steane code for quantum error correction', 0.06) ON DUPLICATE KEY UPDATE algorithm_name = 'Steane', description = 'Updated Steane code for quantum error correction', error_threshold = 0.6",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (7, 'Reed-Solomon', 'Reed-Solomon code for error correction', 0.07) ON DUPLICATE KEY UPDATE algorithm_name = 'Reed-Solomon', description = 'Updated Reed-Solomon code for error correction', error_threshold = 0.7",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (8, 'Surface-49', 'Improved Surface code for error correction', 0.08) ON DUPLICATE KEY UPDATE algorithm_name = 'Surface-49', description = 'Updated Improved Surface code for error correction', error_threshold = 0.8",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (9, 'Hadamard', 'Error correction using Hadamard code', 0.02) ON DUPLICATE KEY UPDATE algorithm_name = 'Hadamard', description = 'Updated Error correction using Hadamard code', error_threshold = 0.9",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (10, 'CSS', 'Calderbank-Shor-Steane code for QEC', 0.03) ON DUPLICATE KEY UPDATE algorithm_name = 'CSS', description = 'Updated Calderbank-Shor-Steane code for QEC', error_threshold = 1.0",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (11, 'Toric', 'Toric code for error correction in topological quantum computing', 0.04) ON DUPLICATE KEY UPDATE algorithm_name = 'Toric', description = 'Updated Toric code for error correction in topological quantum computing', error_threshold = 1.1",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (12, 'ION-QC', 'Ion-trap based quantum error correction', 0.02) ON DUPLICATE KEY UPDATE algorithm_name = 'ION-QC', description = 'Updated Ion-trap based quantum error correction', error_threshold = 1.2",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (13, 'Molmer-Sorensen', 'Error correction using Molmer-Sorensen gates', 0.03) ON DUPLICATE KEY UPDATE algorithm_name = 'Molmer-Sorensen', description = 'Updated Error correction using Molmer-Sorensen gates', error_threshold = 1.3",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (14, 'SQEC', 'Stabilizer quantum error correction', 0.04) ON DUPLICATE KEY UPDATE algorithm_name = 'SQEC', description = 'Updated Stabilizer quantum error correction', error_threshold = 1.4",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (15, 'FTQC', 'Fault-tolerant quantum computing', 0.05) ON DUPLICATE KEY UPDATE algorithm_name = 'FTQC', description = 'Updated Fault-tolerant quantum computing', error_threshold = 1.5",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (16, 'Greene-TC', 'Greene's topological color code', 0.06) ON DUPLICATE KEY UPDATE algorithm_name = 'Greene-TC', description = 'Updated Greene's topological color code', error_threshold = 1.6",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (17, 'Bacon-Shor', 'Error correction using Bacon-Shor code', 0.07) ON DUPLICATE KEY UPDATE algorithm_name = 'Bacon-Shor', description = 'Updated Error correction using Bacon-Shor code', error_threshold = 1.7",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (18, 'Raluca-QEC', 'Raluca's Quantum Error Correction code', 0.08) ON DUPLICATE KEY UPDATE algorithm_name = 'Raluca-QEC', description = 'Updated Raluca's Quantum Error Correction code', error_threshold = 1.8",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (19, 'Repeater', 'Error correction using quantum repeaters', 0.09) ON DUPLICATE KEY UPDATE algorithm_name = 'Repeater', description = 'Updated Error correction using quantum repeaters', error_threshold = 1.9",
      "INSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (20, 'Coset', 'Coset error correction code', 0.1) ON DUPLICATE KEY UPDATE algorithm_name = 'Coset', description = 'Updated Coset error correction code', error_threshold = 2.0",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (1, 'Shor', 'Shor's algorithm for factorization', 0.01);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (2, 'Grover', 'Grover's algorithm for search', 0.005);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (3, 'Surface Code', 'Error correction using surface code', 0.02);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (4, 'Repetition Code', 'Error correction using repetition code', 0.03);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (5, 'Topological Code', 'Error correction using topological code', 0.015);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (6, 'Stabilizer Code', 'Error correction using stabilizer code', 0.025);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (7, 'Fault-Tolerant Quantum Computing', 'Error correction in fault-tolerant quantum computing', 0.03);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (8, 'Steane Code', 'Error correction using Steane code', 0.02);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (9, 'Bacon-Shor Code', 'Error correction using Bacon-Shor code', 0.03);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (10, 'Color Code', 'Error correction using color code', 0.01);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (11, 'Reed-Muller Code', 'Error correction using Reed-Muller code', 0.02);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (12, 'Five-Qubit Code', 'Error correction using five-qubit code', 0.015);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (13, 'Steiner Code', 'Error correction using Steiner code', 0.03);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (14, 'Majorana Code', 'Error correction using Majorana code', 0.02);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (15, 'Surface-17 Code', 'Error correction using surface-17 code', 0.025);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (16, 'Bacon-Shor-Harrington Code', 'Error correction using Bacon-Shor-Harrington code', 0.03);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (17, 'Dorai-Mazumdar Code', 'Error correction using Dorai-Mazumdar code', 0.01);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (18, 'Kitaev Code', 'Error correction using Kitaev code', 0.02);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (19, 'CSS Code', 'Error correction using CSS code', 0.015);",
      "UPSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (20, 'Parity Code', 'Error correction using parity code', 0.02);"
    ]
  },
  {
    "statements": [
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (1, 'Shor Algorithm', 'Factorization algorithm using quantum computer') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Shor Algorithm', algorithm_description = 'Factorization algorithm using quantum computer';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (2, 'Repetition Code', 'Simplest error correction code') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Repetition Code', algorithm_description = 'Simplest error correction code';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (1, 'Hamming Code', 'Linear error-detecting and error-correcting code') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Hamming Code', code_properties = 'Linear error-detecting and error-correcting code';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (3, 'Surface Code', 'Topological quantum error-correcting code') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Surface Code', algorithm_description = 'Topological quantum error-correcting code';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (2, 'Reed-Solomon Code', 'Error-correcting code used for data transmission') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Reed-Solomon Code', code_properties = 'Error-correcting code used for data transmission';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (4, 'Stabilizer Codes', 'Quantum error-correcting code based on stabilizer formalism') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Stabilizer Codes', algorithm_description = 'Quantum error-correcting code based on stabilizer formalism';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (3, 'LDPC Code', 'Low-density parity-check code for error correction in communication systems') ON CONFLICT (code_id) DO UPDATE SET code_type = 'LDPC Code', code_properties = 'Low-density parity-check code for error correction in communication systems';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (5, 'Steane Code', '7-qubit quantum error-correcting code') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Steane Code', algorithm_description = '7-qubit quantum error-correcting code';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (4, 'Turbo Code', 'Iterative error correction code for noisy communication channels') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Turbo Code', code_properties = 'Iterative error correction code for noisy communication channels';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (6, 'Polar Codes', 'Capacity-achieving error correction codes') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Polar Codes', algorithm_description = 'Capacity-achieving error correction codes';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (5, 'BCH Code', 'Bose\u2013Chaudhuri\u2013Hocquenghem error-correcting code') ON CONFLICT (code_id) DO UPDATE SET code_type = 'BCH Code', code_properties = 'Bose\u2013Chaudhuri\u2013Hocquenghem error-correcting code';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (7, 'Color Code', 'Topological quantum error-correcting code on a 2D lattice') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Color Code', algorithm_description = 'Topological quantum error-correcting code on a 2D lattice';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (6, 'Convolutional Code', 'Error-correction code for continuous data streams') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Convolutional Code', code_properties = 'Error-correction code for continuous data streams';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (8, 'Reed-Muller Codes', 'Error-correcting codes based on the Reed\u2013Muller transform') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Reed-Muller Codes', algorithm_description = 'Error-correcting codes based on the Reed\u2013Muller transform';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (7, 'Fountain Code', 'Rateless erasure code for reliable data transfer') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Fountain Code', code_properties = 'Rateless erasure code for reliable data transfer';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (9, 'Resilient Error Correction', 'Algorithm for fault-tolerant quantum computation') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Resilient Error Correction', algorithm_description = 'Algorithm for fault-tolerant quantum computation';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (8, 'DVB-S2X', 'Error correction standard for digital video broadcasting') ON CONFLICT (code_id) DO UPDATE SET code_type = 'DVB-S2X', code_properties = 'Error correction standard for digital video broadcasting';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (10, 'Concatenated Codes', 'Multiple layers of error correction codes for enhanced reliability') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Concatenated Codes', algorithm_description = 'Multiple layers of error correction codes for enhanced reliability';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (9, 'Punctured Convolutional Code', 'Convolutional code with punctured bits for higher data rates') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Punctured Convolutional Code', code_properties = 'Convolutional code with punctured bits for higher data rates';",
      "INSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (11, 'Goppa Codes', 'Algebraic error-correcting codes based on algebraic curves') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Goppa Codes', algorithm_description = 'Algebraic error-correcting codes based on algebraic curves';",
      "INSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (10, 'Reed-Solomon Erasure Code', 'Error-correcting code for erasures in data storage systems') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Reed-Solomon Erasure Code', code_properties = 'Error-correcting code for erasures in data storage systems';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (1, 'Shor', 'Shor''s algorithm for factoring integers') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Modified Shor', algorithm_description = 'Modified version of Shor''s algorithm';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (1, 'Reed-Solomon', 'Error detection and correction code based on polynomials') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Modified Reed-Solomon', code_properties = 'Enhanced error detection and correction properties';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (2, 'Steane', 'Steane code for quantum error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Modified Steane', algorithm_description = 'Enhanced version of Steane code';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (2, 'Hamming', 'Error correction code based on parity bits') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Modified Hamming', code_properties = 'Improved error correction properties';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (3, 'Surface', 'Surface code for quantum error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Surface Code', algorithm_description = 'Advanced surface code algorithm';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (3, 'Cyclic Redundancy Check (CRC)', 'Checksum code for error detection') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Modified CRC', code_properties = 'Enhanced error detection using CRC';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (4, 'Bacon-Shor', 'Bacon-Shor code for quantum error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Bacon-Shor Code', algorithm_description = 'Combined Bacon and Shor codes';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (4, 'BCH', 'Bose-Chaudhuri-Hocquenghem code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'BCH Code', code_properties = 'Enhanced BCH error correction';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (5, 'Repetition', 'Repetition code for quantum error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Repetition Code', algorithm_description = 'Repetition-based error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (5, 'Convolutional', 'Error correction code based on convolutional encoding') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Modified Convolutional', code_properties = 'Enhanced convolutional error correction';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (6, 'Surrounding', 'Surrounding code for quantum error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Surrounding Code', algorithm_description = 'Error correction using surrounding code technique';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (6, 'Turbo', 'Error correction code using turbo codes') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Modified Turbo', code_properties = 'Improved error correction with turbo codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (7, 'Stabilizer', 'Stabilizer code for quantum error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Stabilizer Code', algorithm_description = 'Advanced stabilizer code technique';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (7, 'LDPC', 'Low Density Parity Check code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Modified LDPC', code_properties = 'Enhanced error correction with LDPC codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (8, 'Color', 'Color code for quantum error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Color Code', algorithm_description = 'Color-based error correction technique';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (8, 'Repeat', 'Repeat code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Repeat Code', code_properties = 'Improved error correction with repeat codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (9, 'Boltzmann', 'Boltzmann machine for error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Boltzmann Machine', algorithm_description = 'Utilizing Boltzmann machine for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (9, 'Turbo Interleaved', 'Interleaved turbo code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Turbo Interleaved', code_properties = 'Enhanced error correction with interleaved turbo codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (10, 'Topological', 'Topological error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Topological Error Correction', algorithm_description = 'Achieving error correction through topological properties';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (10, 'LDGM', 'Low Density Generator Matrix code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'LDGM Code', code_properties = 'Enhanced error correction with LDGM codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (11, 'Stabilized', 'Stabilized error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Stabilized Error Correction', algorithm_description = 'Stabilize error correction process';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (11, 'Distributed', 'Distributed error correction code') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Distributed Code', code_properties = 'Enhanced error correction with distributed codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (12, 'Entanglement', 'Entanglement-based error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Entanglement Error Correction', algorithm_description = 'Utilizing entanglement for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (12, 'LDPC-BCH', 'Combined LDPC-BCH code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'LDPC-BCH Code', code_properties = 'Enhanced error correction with combined LDPC-BCH codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (13, 'Graph', 'Graph-based quantum error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Graph-Based Error Correction', algorithm_description = 'Utilizing graphs for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (13, 'Reed-Muller', 'Reed-Muller code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Modified Reed-Muller', code_properties = 'Enhanced error correction with Reed-Muller codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (14, 'Daguerre', 'Daguerreotype-based error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Daguerre Error Correction', algorithm_description = 'Inspired by daguerreotype for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (14, 'Viterbi', 'Viterbi algorithm for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'Viterbi Code', code_properties = 'Improved error correction using Viterbi algorithm';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (15, 'Fourier', 'Fourier transform-based error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Fourier Error Correction', algorithm_description = 'Utilizing Fourier transform for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (15, 'Reed-Solomon Interleaved', 'Interleaved Reed-Solomon code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'RS Interleaved Code', code_properties = 'Enhanced error correction with interleaved Reed-Solomon codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (16, 'Harmonic', 'Harmonic oscillator-based error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Harmonic Error Correction', algorithm_description = 'Utilizing harmonic oscillators for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (16, 'Convolutional Interleaved', 'Interleaved convolutional code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'CI Interleaved Code', code_properties = 'Enhanced error correction with interleaved convolutional codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (17, 'Gauss', 'Gaussian distribution-based error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Gauss Error Correction', algorithm_description = 'Utilizing Gaussian distribution for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (17, 'Reed-Muller Interleaved', 'Interleaved Reed-Muller code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'RM Interleaved Code', code_properties = 'Enhanced error correction with interleaved Reed-Muller codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (18, 'Phase', 'Phase error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Phase Error Correction', algorithm_description = 'Correcting errors based on phase properties';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (18, 'Turbo Interleaved BCH', 'Interleaved turbo BCH code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'TI-BCH Code', code_properties = 'Enhanced error correction with interleaved turbo BCH codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (19, 'Neural', 'Neural network-based error correction algorithm') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Neural Error Correction', algorithm_description = 'Utilizing neural networks for error correction';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (19, 'LDPC-Convolutional', 'Combined LDPC and Convolutional code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'LDPC-Convolutional Code', code_properties = 'Enhanced error correction with combined LDPC and Convolutional codes';",
      "UPSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (20, 'Neumann', 'Neumann code for error correction') ON CONFLICT (algorithm_id) DO UPDATE SET algorithm_name = 'Neumann Error Correction', algorithm_description = 'Error correction based on Neumann code';",
      "UPSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (20, 'Turbo Interleaved Reed-Solomon', 'Interleaved turbo RS code for error correction') ON CONFLICT (code_id) DO UPDATE SET code_type = 'TI-RS Code', code_properties = 'Enhanced error correction with interleaved turbo RS codes';"
    ]
  },
  {
    "statements": [
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode1', 'Type1') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode1', error_type = 'Type1';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode2', 'Type2') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode2', error_type = 'Type2';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode3', 'Type3') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode3', error_type = 'Type3';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode4', 'Type4') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode4', error_type = 'Type4';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode5', 'Type5') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode5', error_type = 'Type5';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode6', 'Type6') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode6', error_type = 'Type6';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode7', 'Type7') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode7', error_type = 'Type7';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode8', 'Type8') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode8', error_type = 'Type8';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode9', 'Type9') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode9', error_type = 'Type9';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode10', 'Type10') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode10', error_type = 'Type10';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode11', 'Type11') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode11', error_type = 'Type11';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode12', 'Type12') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode12', error_type = 'Type12';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode13', 'Type13') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode13', error_type = 'Type13';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode14', 'Type14') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode14', error_type = 'Type14';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode15', 'Type15') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode15', error_type = 'Type15';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode16', 'Type16') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode16', error_type = 'Type16';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode17', 'Type17') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode17', error_type = 'Type17';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode18', 'Type18') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode18', error_type = 'Type18';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode19', 'Type19') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode19', error_type = 'Type19';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('QCode20', 'Type20') ON CONFLICT (code_id) DO UPDATE SET code_name = 'QCode20', error_type = 'Type20';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('Code1', 'TypeA') ON CONFLICT (code_id) DO NOTHING;",
      "INSERT INTO qubit (qubit_value, code_id) VALUES (0.5, 1) ON CONFLICT (qubit_id) DO UPDATE SET qubit_value = 0.7;",
      "INSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome1', 1, 1) ON CONFLICT (syndrome_id) DO UPDATE SET syndrome_info = 'Updated Syndrome1';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('Code2', 'TypeB') ON CONFLICT (code_id) DO NOTHING;",
      "INSERT INTO qubit (qubit_value, code_id) VALUES (0.3, 2) ON CONFLICT (qubit_id) DO UPDATE SET qubit_value = 0.2;",
      "INSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome2', 2, 2) ON CONFLICT (syndrome_id) DO UPDATE SET syndrome_info = 'Updated Syndrome2';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('Code3', 'TypeC') ON CONFLICT (code_id) DO NOTHING;",
      "INSERT INTO qubit (qubit_value, code_id) VALUES (0.8, 3) ON CONFLICT (qubit_id) DO UPDATE SET qubit_value = 0.6;",
      "INSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome3', 3, 3) ON CONFLICT (syndrome_id) DO UPDATE SET syndrome_info = 'Updated Syndrome3';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('Code4', 'TypeB') ON CONFLICT (code_id) DO NOTHING;",
      "INSERT INTO qubit (qubit_value, code_id) VALUES (0.6, 4) ON CONFLICT (qubit_id) DO UPDATE SET qubit_value = 0.4;",
      "INSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome4', 4, 4) ON CONFLICT (syndrome_id) DO UPDATE SET syndrome_info = 'Updated Syndrome4';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('Code5', 'TypeA') ON CONFLICT (code_id) DO NOTHING;",
      "INSERT INTO qubit (qubit_value, code_id) VALUES (0.4, 5) ON CONFLICT (qubit_id) DO UPDATE SET qubit_value = 0.9;",
      "INSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome5', 5, 5) ON CONFLICT (syndrome_id) DO UPDATE SET syndrome_info = 'Updated Syndrome5';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('Code6', 'TypeC') ON CONFLICT (code_id) DO NOTHING;",
      "INSERT INTO qubit (qubit_value, code_id) VALUES (0.2, 6) ON CONFLICT (qubit_id) DO UPDATE SET qubit_value = 0.1;",
      "INSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome6', 6, 6) ON CONFLICT (syndrome_id) DO UPDATE SET syndrome_info = 'Updated Syndrome6';",
      "INSERT INTO quantum_code (code_name, error_type) VALUES ('Code7', 'TypeB') ON CONFLICT (code_id) DO NOTHING;",
      "INSERT INTO qubit (qubit_value, code_id) VALUES (0.7, 7) ON CONFLICT (qubit_id) DO UPDATE SET qubit_value = 0.3;",
      "INSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome7', 7, 7) ON CONFLICT (syndrome_id) DO UPDATE SET syndrome_info = 'Updated Syndrome7';"
    ]
  },
  {
    "statements": [
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (1, 'CodeWord1') ON DUPLICATE KEY UPDATE code_word='CodeWord1'",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (1, 'Syndrome1') ON DUPLICATE KEY UPDATE syndrome_code='Syndrome1'",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (1, 'Type1', 'Description1') ON DUPLICATE KEY UPDATE error_type='Type1', error_description='Description1'",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (1, 'Type1', 'Rule1') ON DUPLICATE KEY UPDATE correction_type='Type1', correction_rule='Rule1'",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (2, 'CodeWord2') ON DUPLICATE KEY UPDATE code_word='CodeWord2'",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (2, 'Syndrome2') ON DUPLICATE KEY UPDATE syndrome_code='Syndrome2'",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (2, 'Type2', 'Description2') ON DUPLICATE KEY UPDATE error_type='Type2', error_description='Description2'",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (2, 'Type2', 'Rule2') ON DUPLICATE KEY UPDATE correction_type='Type2', correction_rule='Rule2'",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (3, 'CodeWord3') ON DUPLICATE KEY UPDATE code_word='CodeWord3'",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (3, 'Syndrome3') ON DUPLICATE KEY UPDATE syndrome_code='Syndrome3'",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (3, 'Type3', 'Description3') ON DUPLICATE KEY UPDATE error_type='Type3', error_description='Description3'",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (3, 'Type3', 'Rule3') ON DUPLICATE KEY UPDATE correction_type='Type3', correction_rule='Rule3'",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (4, 'CodeWord4') ON DUPLICATE KEY UPDATE code_word='CodeWord4'",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (4, 'Syndrome4') ON DUPLICATE KEY UPDATE syndrome_code='Syndrome4'",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (4, 'Type4', 'Description4') ON DUPLICATE KEY UPDATE error_type='Type4', error_description='Description4'",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (4, 'Type4', 'Rule4') ON DUPLICATE KEY UPDATE correction_type='Type4', correction_rule='Rule4'",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (5, 'CodeWord5') ON DUPLICATE KEY UPDATE code_word='CodeWord5'",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (5, 'Syndrome5') ON DUPLICATE KEY UPDATE syndrome_code='Syndrome5'",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (5, 'Type5', 'Description5') ON DUPLICATE KEY UPDATE error_type='Type5', error_description='Description5'",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (5, 'Type5', 'Rule5') ON DUPLICATE KEY UPDATE correction_type='Type5', correction_rule='Rule5'",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (1, '0000') ON DUPLICATE KEY UPDATE code_word = VALUES(code_word);",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (1, 's1') ON DUPLICATE KEY UPDATE syndrome_code = VALUES(syndrome_code);",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (1, 'Type1', 'Description1') ON DUPLICATE KEY UPDATE error_type = VALUES(error_type), error_description = VALUES(error_description);",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (1, 'Type1', 'Rule1') ON DUPLICATE KEY UPDATE correction_type = VALUES(correction_type), correction_rule = VALUES(correction_rule);",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (2, '1111') ON DUPLICATE KEY UPDATE code_word = VALUES(code_word);",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (2, 's2') ON DUPLICATE KEY UPDATE syndrome_code = VALUES(syndrome_code);",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (2, 'Type2', 'Description2') ON DUPLICATE KEY UPDATE error_type = VALUES(error_type), error_description = VALUES(error_description);",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (2, 'Type2', 'Rule2') ON DUPLICATE KEY UPDATE correction_type = VALUES(correction_type), correction_rule = VALUES(correction_rule);",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (3, '0101') ON DUPLICATE KEY UPDATE code_word = VALUES(code_word);",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (3, 's3') ON DUPLICATE KEY UPDATE syndrome_code = VALUES(syndrome_code);",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (3, 'Type3', 'Description3') ON DUPLICATE KEY UPDATE error_type = VALUES(error_type), error_description = VALUES(error_description);",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (3, 'Type3', 'Rule3') ON DUPLICATE KEY UPDATE correction_type = VALUES(correction_type), correction_rule = VALUES(correction_rule);",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (4, '1010') ON DUPLICATE KEY UPDATE code_word = VALUES(code_word);",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (4, 's4') ON DUPLICATE KEY UPDATE syndrome_code = VALUES(syndrome_code);",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (4, 'Type4', 'Description4') ON DUPLICATE KEY UPDATE error_type = VALUES(error_type), error_description = VALUES(error_description);",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (4, 'Type4', 'Rule4') ON DUPLICATE KEY UPDATE correction_type = VALUES(correction_type), correction_rule = VALUES(correction_rule);",
      "INSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (5, '1100') ON DUPLICATE KEY UPDATE code_word = VALUES(code_word);",
      "INSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (5, 's5') ON DUPLICATE KEY UPDATE syndrome_code = VALUES(syndrome_code);",
      "INSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (5, 'Type5', 'Description5') ON DUPLICATE KEY UPDATE error_type = VALUES(error_type), error_description = VALUES(error_description);",
      "INSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (5, 'Type5', 'Rule5') ON DUPLICATE KEY UPDATE correction_type = VALUES(correction_type), correction_rule = VALUES(correction_rule);"
    ]
  },
  {
    "statements": [
      "INSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Algorithm 1', 'Description 1') ON CONFLICT (algorithm_name) DO UPDATE SET description = 'Updated Description 1';",
      "INSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Algorithm 2', 'Description 2') ON CONFLICT (algorithm_name) DO UPDATE SET description = 'Updated Description 2';",
      "INSERT INTO qubits (qubit_value, is_entangled) VALUES (5, true) ON CONFLICT (qubit_value) DO UPDATE SET is_entangled = true;",
      "INSERT INTO qubits (qubit_value, is_entangled) VALUES (8, false) ON CONFLICT (qubit_value) DO UPDATE SET is_entangled = false;",
      "INSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Code 1', 'Generator Matrix 1') ON CONFLICT (code_name) DO UPDATE SET generator_matrix = 'Updated Generator Matrix 1';",
      "INSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Code 2', 'Generator Matrix 2') ON CONFLICT (code_name) DO UPDATE SET generator_matrix = 'Updated Generator Matrix 2';",
      "INSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (10, true) ON CONFLICT (logical_qubit_value) DO UPDATE SET has_error_correction = true;",
      "INSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (15, false) ON CONFLICT (logical_qubit_value) DO UPDATE SET has_error_correction = false;",
      "INSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Syndrome 1', 'Syndrome Description 1') ON CONFLICT (syndrome_name) DO UPDATE SET syndrome_description = 'Updated Syndrome Description 1';",
      "INSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Syndrome 2', 'Syndrome Description 2') ON CONFLICT (syndrome_name) DO UPDATE SET syndrome_description = 'Updated Syndrome Description 2';",
      "INSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Shor Code', 'Error correction algorithm based on Shor code') ON CONFLICT (algorithm_name) DO UPDATE SET description=EXCLUDED.description;",
      "INSERT INTO qubits (qubit_value, is_entangled) VALUES (0, true) ON CONFLICT (qubit_value) DO UPDATE SET is_entangled=EXCLUDED.is_entangled;",
      "INSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Repetition Code', '1 1 1; 0 1 0') ON CONFLICT (code_name) DO UPDATE SET generator_matrix=EXCLUDED.generator_matrix;",
      "INSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (1, true) ON CONFLICT (logical_qubit_value) DO UPDATE SET has_error_correction=EXCLUDED.has_error_correction;",
      "INSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Bit Flip', 'Syndrome for bit flip error') ON CONFLICT (syndrome_name) DO UPDATE SET syndrome_description=EXCLUDED.syndrome_description;",
      "INSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Surface Code', 'Error correction algorithm based on Surface code') ON CONFLICT (algorithm_name) DO UPDATE SET description=EXCLUDED.description;",
      "INSERT INTO qubits (qubit_value, is_entangled) VALUES (1, false) ON CONFLICT (qubit_value) DO UPDATE SET is_entangled=EXCLUDED.is_entangled;",
      "INSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('CSS Code', '1 0; 0 1') ON CONFLICT (code_name) DO UPDATE SET generator_matrix=EXCLUDED.generator_matrix;",
      "INSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (2, true) ON CONFLICT (logical_qubit_value) DO UPDATE SET has_error_correction=EXCLUDED.has_error_correction;",
      "INSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Phase Flip', 'Syndrome for phase flip error') ON CONFLICT (syndrome_name) DO UPDATE SET syndrome_description=EXCLUDED.syndrome_description;",
      "INSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Reed-Solomon Code', 'Error correction algorithm based on Reed-Solomon code') ON CONFLICT (algorithm_name) DO UPDATE SET description=EXCLUDED.description;",
      "INSERT INTO qubits (qubit_value, is_entangled) VALUES (2, true) ON CONFLICT (qubit_value) DO UPDATE SET is_entangled=EXCLUDED.is_entangled;",
      "INSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Gottesman-Knill Code', '1 1 0; 0 1 1') ON CONFLICT (code_name) DO UPDATE SET generator_matrix=EXCLUDED.generator_matrix;",
      "INSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (3, false) ON CONFLICT (logical_qubit_value) DO UPDATE SET has_error_correction=EXCLUDED.has_error_correction;",
      "INSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Bit-Phase Flip', 'Syndrome for combined bit and phase flip error') ON CONFLICT (syndrome_name) DO UPDATE SET syndrome_description=EXCLUDED.syndrome_description;",
      "INSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Steane Code', 'Error correction algorithm based on Steane code') ON CONFLICT (algorithm_name) DO UPDATE SET description=EXCLUDED.description;",
      "INSERT INTO qubits (qubit_value, is_entangled) VALUES (3, false) ON CONFLICT (qubit_value) DO UPDATE SET is_entangled=EXCLUDED.is_entangled;",
      "INSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Bacon-Shor Code', '1 0 0; 0 1 0') ON CONFLICT (code_name) DO UPDATE SET generator_matrix=EXCLUDED.generator_matrix;",
      "INSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (4, true) ON CONFLICT (logical_qubit_value) DO UPDATE SET has_error_correction=EXCLUDED.has_error_correction;",
      "INSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Phase Damping', 'Syndrome for phase damping error') ON CONFLICT (syndrome_name) DO UPDATE SET syndrome_description=EXCLUDED.syndrome_description;",
      "INSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Polar Code', 'Error correction algorithm based on Polar code') ON CONFLICT (algorithm_name) DO UPDATE SET description=EXCLUDED.description;"
    ]
  }
]