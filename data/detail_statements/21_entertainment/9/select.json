[
  {
    "statements": [
      "SELECT * FROM UserInteractions;",
      "SELECT user_id, interaction_time, interaction_type FROM UserInteractions;",
      "SELECT user_id, interaction_time, interaction_type, interaction_data FROM UserInteractions;",
      "SELECT * FROM UserInteractions WHERE user_id = 1;",
      "SELECT * FROM UserInteractions WHERE interaction_time > '2022-01-01';",
      "SELECT * FROM UserInteractions WHERE interaction_type = 'click';",
      "SELECT * FROM UserInteractions WHERE interaction_data->'$.button_id' = 'submit';",
      "SELECT DISTINCT user_id FROM UserInteractions;",
      "SELECT user_id, COUNT(*) FROM UserInteractions GROUP BY user_id;",
      "SELECT user_id, MAX(interaction_time) FROM UserInteractions GROUP BY user_id;",
      "SELECT user_id, AVG(interaction_time) FROM UserInteractions GROUP BY user_id;",
      "SELECT * FROM UserInteractions ORDER BY interaction_time DESC;",
      "SELECT * FROM UserInteractions LIMIT 10;",
      "SELECT * FROM UserInteractions OFFSET 5;",
      "SELECT * FROM UserInteractions WHERE interaction_time BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT user_id, COUNT(*) FROM UserInteractions WHERE interaction_type = 'click' GROUP BY user_id;",
      "SELECT user_id, interaction_data->'$.email' FROM UserInteractions;",
      "SELECT user_id, interaction_type, COUNT(*) FROM UserInteractions GROUP BY user_id, interaction_type;",
      "SELECT user_id, interaction_type, interaction_data->'$.button_text' FROM UserInteractions;",
      "SELECT * FROM UserInteractions WHERE interaction_data->'$.payment_success' = 'true';",
      "SELECT * FROM UserInteractions WHERE user_id = 1 AND interaction_type = 'click'",
      "SELECT interaction_type, interaction_data FROM UserInteractions WHERE user_id = 2",
      "SELECT COUNT(*) FROM UserInteractions WHERE interaction_type = 'view'",
      "SELECT MAX(interaction_time) FROM UserInteractions",
      "SELECT user_id, interaction_time FROM UserInteractions WHERE interaction_type = 'scroll'",
      "SELECT interaction_type, COUNT(*) FROM UserInteractions GROUP BY interaction_type",
      "SELECT AVG(interaction_time) FROM UserInteractions WHERE interaction_type = 'click'",
      "SELECT DISTINCT user_id FROM UserInteractions",
      "SELECT * FROM UserInteractions WHERE interaction_data->'$.event' = 'login'",
      "SELECT user_id, interaction_type, interaction_time FROM UserInteractions WHERE interaction_time BETWEEN '2022-01-01' AND '2022-06-30'",
      "SELECT interaction_type, interaction_data->'$.product_id' FROM UserInteractions WHERE interaction_type = 'purchase'",
      "SELECT COUNT(DISTINCT user_id) FROM UserInteractions",
      "SELECT interaction_data->'$.page' AS page FROM UserInteractions WHERE interaction_type = 'click' ORDER BY interaction_time DESC",
      "SELECT AVG(TIMESTAMPDIFF(SECOND, interaction_time, NOW())) FROM UserInteractions",
      "SELECT user_id, interaction_type, SUM(JSON_EXTRACT(interaction_data, '$.quantity')) AS total_quantity FROM UserInteractions GROUP BY user_id, interaction_type",
      "SELECT user_id, MAX(interaction_time) - MIN(interaction_time) AS time_diff FROM UserInteractions GROUP BY user_id HAVING time_diff > 3600",
      "SELECT user_id, DATE(interaction_time) AS interaction_date, COUNT(*) AS total_interactions FROM UserInteractions GROUP BY user_id, interaction_date",
      "SELECT user_id, interaction_type, interaction_data FROM UserInteractions WHERE interaction_type IN ('click', 'hover')",
      "SELECT user_id, interaction_type, JSON_EXTRACT(interaction_data, '$.action') AS action FROM UserInteractions WHERE action = 'share'",
      "SELECT user_id, interaction_type, DATE(interaction_time) AS date_day FROM UserInteractions GROUP BY user_id, date_day HAVING COUNT(*) > 3"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_interactions;",
      "SELECT user_id, interaction_timestamp FROM user_interactions;",
      "SELECT user_id, interaction_type, interaction_details FROM user_interactions;",
      "SELECT user_id, interaction_timestamp, interaction_type FROM user_interactions WHERE user_id = 1;",
      "SELECT user_id, interaction_type FROM user_interactions WHERE interaction_timestamp > '2022-01-01';",
      "SELECT * FROM user_preferences;",
      "SELECT user_id, vr_experience_preference FROM user_preferences;",
      "SELECT user_id, vr_genre_preference FROM user_preferences;",
      "SELECT user_id, vr_experience_preference, vr_genre_preference FROM user_preferences WHERE user_id = 1;",
      "SELECT user_id, vr_experience_preference FROM user_preferences WHERE vr_experience_preference = 'Adventure';",
      "SELECT user_id, vr_genre_preference FROM user_preferences WHERE vr_genre_preference = 'Action';",
      "SELECT * FROM user_interactions LIMIT 5;",
      "SELECT * FROM user_preferences LIMIT 5;",
      "SELECT user_id, interaction_timestamp, interaction_type, interaction_details FROM user_interactions WHERE user_id = 2;",
      "SELECT user_id, interaction_type, interaction_details FROM user_interactions WHERE interaction_timestamp > '2022-02-01';",
      "SELECT user_id, vr_genre_preference FROM user_preferences WHERE vr_experience_preference = 'Horror';",
      "SELECT user_id, vr_experience_preference FROM user_preferences WHERE vr_genre_preference = 'Adventure';",
      "SELECT user_id, vr_experience_preference FROM user_preferences WHERE vr_experience_preference = 'Action' AND vr_genre_preference = 'Adventure';",
      "SELECT user_id, vr_genre_preference FROM user_preferences WHERE vr_experience_preference = 'Simulation';",
      "SELECT user_id, vr_genre_preference FROM user_preferences WHERE vr_experience_preference = 'Sports';",
      "SELECT * FROM user_interactions WHERE user_id = 123;",
      "SELECT user_id, interaction_timestamp FROM user_interactions WHERE interaction_type = 'click';",
      "SELECT user_id, interaction_type, interaction_details->>'event' FROM user_interactions WHERE interaction_timestamp >= '2022-01-01';",
      "SELECT user_id, interaction_type, interaction_details->>'product_id' FROM user_interactions WHERE interaction_details->>'action' = 'purchase';",
      "SELECT user_id, COUNT(*) AS total_interactions FROM user_interactions GROUP BY user_id;",
      "SELECT ui.user_id, COUNT(*) AS total_interactions FROM user_interactions ui JOIN user_preferences up ON ui.user_id = up.user_id WHERE up.vr_experience_preference = 'high';",
      "SELECT ui.user_id, MAX(interaction_timestamp) AS last_interaction FROM user_interactions ui JOIN user_preferences up ON ui.user_id = up.user_id WHERE up.vr_genre_preference = 'action' GROUP BY ui.user_id;",
      "SELECT ui.user_id, COUNT(*) AS total_interactions FROM user_interactions ui LEFT JOIN user_preferences up ON ui.user_id = up.user_id WHERE up.vr_experience_preference IS NULL GROUP BY ui.user_id;",
      "SELECT ui.user_id, AVG(interaction_details->>'duration') AS avg_duration FROM user_interactions ui WHERE interaction_details->>'event' = 'watch_video' GROUP BY ui.user_id;",
      "SELECT ui.user_id, COUNT(DISTINCT vr_genre_preference) AS unique_genres FROM user_preferences up JOIN user_interactions ui ON up.user_id = ui.user_id WHERE interaction_timestamp >= '2022-01-01' GROUP BY ui.user_id;",
      "SELECT ui.user_id, SUM(CASE WHEN vr_experience_preference = 'high' THEN 1 ELSE 0 END) AS high_experience_count, SUM(CASE WHEN vr_experience_preference = 'medium' THEN 1 ELSE 0 END) AS medium_experience_count FROM user_preferences up JOIN user_interactions ui ON up.user_id = ui.user_id GROUP BY ui.user_id;",
      "SELECT ui.user_id, interaction_type, COUNT(*) AS interaction_count FROM user_interactions ui GROUP BY ui.user_id, interaction_type ORDER BY ui.user_id, interaction_count DESC;",
      "SELECT ui.user_id, interaction_timestamp, interaction_type FROM user_interactions ui WHERE interaction_type IN ('view', 'click') ORDER BY user_id, interaction_timestamp DESC;",
      "SELECT ui.user_id, interaction_timestamp, interaction_type FROM user_interactions ui WHERE interaction_timestamp >= '2022-01-01' AND interaction_details @> '{\"platform\": \"mobile\"}' ORDER BY interaction_timestamp ASC;",
      "SELECT DISTINCT ui.user_id, interaction_type FROM user_interactions ui WHERE interaction_details->>'source' = 'website' ORDER BY ui.user_id;",
      "SELECT ui.user_id, AVG(EXTRACT(EPOCH FROM interaction_timestamp)) AS avg_timestamp FROM user_interactions ui GROUP BY ui.user_id;",
      "SELECT ui.user_id, jsonb_array_elements_text(interaction_details->'products') AS product_id FROM user_interactions ui WHERE interaction_details->'action' = 'purchase';",
      "SELECT ui.user_id, interaction_type, COUNT(DISTINCT interaction_details->>'product_id') AS unique_products FROM user_interactions ui GROUP BY ui.user_id, interaction_type HAVING COUNT(DISTINCT interaction_details->>'product_id') > 1;",
      "SELECT ui.user_id, interaction_type, SUM((interaction_details->>'quantity')::int) AS total_quantity FROM user_interactions ui WHERE interaction_details->>'action' = 'purchase' GROUP BY ui.user_id, interaction_type;",
      "SELECT up.user_id, COUNT(*) AS total_preferences FROM user_preferences up LEFT JOIN user_interactions ui ON up.user_id = ui.user_id WHERE ui.user_id IS NULL GROUP BY up.user_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, age FROM users;",
      "SELECT email FROM users WHERE age > 30;",
      "SELECT * FROM experiences;",
      "SELECT experience_name, price FROM experiences;",
      "SELECT description FROM experiences WHERE release_date < '2022-01-01';",
      "SELECT * FROM user_interactions;",
      "SELECT user_id, experience_id, interaction_type FROM user_interactions;",
      "SELECT interaction_date FROM user_interactions WHERE interaction_type = 'like';",
      "SELECT u.username, e.experience_name, ui.interaction_type FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON e.experience_id = ui.experience_id;",
      "SELECT u.username, e.experience_name, ui.interaction_type FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON e.experience_id = ui.experience_id WHERE ui.interaction_date > '2022-01-01';",
      "SELECT u.username, e.experience_name, ui.interaction_type FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON e.experience_id = ui.experience_id WHERE ui.interaction_type = 'view';",
      "SELECT u.username, e.description, ui.interaction_type FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON e.experience_id = ui.experience_id WHERE u.age < 25;",
      "SELECT username, COUNT(experience_id) AS num_interactions FROM users JOIN user_interactions ON users.user_id = user_interactions.user_id GROUP BY username;",
      "SELECT username, AVG(age) AS avg_age FROM users GROUP BY username HAVING AVG(age) > 30;",
      "SELECT username, MAX(age) AS max_age FROM users GROUP BY username;",
      "SELECT gender, SUM(price) AS total_price FROM users JOIN user_interactions ON users.user_id = user_interactions.user_id JOIN experiences ON user_interactions.experience_id = experiences.experience_id GROUP BY gender;",
      "SELECT username, description FROM users CROSS JOIN experiences;",
      "SELECT username, AVG(price) AS avg_price FROM users JOIN user_interactions ON users.user_id = user_interactions.user_id JOIN experiences ON user_interactions.experience_id = experiences.experience_id GROUP BY username;",
      "SELECT COUNT(*) AS total_interactions FROM user_interactions;",
      "SELECT DISTINCT gender FROM users;",
      "SELECT * FROM users WHERE age > 30;",
      "SELECT username, email FROM users WHERE gender = 'Female';",
      "SELECT username, email, age FROM users WHERE gender = 'Male' AND age < 40;",
      "SELECT DISTINCT gender FROM users;",
      "SELECT user_id, experience_id, interaction_type FROM user_interactions WHERE interaction_date > '2022-01-01';",
      "SELECT u.username, e.experience_name FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON ui.experience_id = e.experience_id;",
      "SELECT u.username, e.experience_name FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON ui.experience_id = e.experience_id WHERE u.age BETWEEN 20 AND 30;",
      "SELECT AVG(age) as avg_age, gender FROM users GROUP BY gender;",
      "SELECT COUNT(*) as total_users FROM users;",
      "SELECT MAX(age) as max_age, MIN(age) as min_age FROM users WHERE gender = 'Female';",
      "SELECT username, COUNT(*) as total_interactions FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id GROUP BY u.username;",
      "SELECT username, SUM(price) as total_spent FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON ui.experience_id = e.experience_id GROUP BY u.username;",
      "SELECT experience_name, COUNT(*) as total_interactions FROM user_interactions ui JOIN experiences e ON ui.experience_id = e.experience_id GROUP BY experience_name ORDER BY total_interactions DESC;",
      "SELECT username, experience_name, interaction_date FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON ui.experience_id = e.experience_id WHERE u.username LIKE '%john%' ORDER BY interaction_date DESC;",
      "SELECT username, COUNT(*) as total_interactions FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id WHERE gender = 'Male' GROUP BY u.username HAVING COUNT(*) > 5;",
      "SELECT username, MAX(interaction_date) as last_interaction FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id GROUP BY u.username;",
      "SELECT e.experience_name, AVG(price) as avg_price FROM experiences e JOIN user_interactions ui ON e.experience_id = ui.experience_id GROUP BY e.experience_name;",
      "SELECT user_id, experience_id, DATEDIFF(NOW(), interaction_date) as days_since_interaction FROM user_interactions WHERE DATEDIFF(NOW(), interaction_date) > 30;",
      "SELECT u.username, e.experience_name, interaction_date FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON ui.experience_id = e.experience_id ORDER BY interaction_date DESC LIMIT 10;",
      "SELECT u.username AS user, e.experience_name AS experience, interaction_type, interaction_date FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id JOIN experiences e ON ui.experience_id = e.experience_id WHERE u.age > 25 AND e.price > 50 ORDER BY interaction_date ASC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_interactions;",
      "SELECT user_id, interaction_type FROM user_interactions;",
      "SELECT * FROM user_preferences;",
      "SELECT user_id, preference_category FROM user_preferences;",
      "SELECT * FROM virtual_reality_content;",
      "SELECT content_id, content_name FROM virtual_reality_content;",
      "SELECT * FROM user_ratings;",
      "SELECT user_id, content_id, rating_value FROM user_ratings;",
      "SELECT user_id, interaction_timestamp FROM user_interactions;",
      "SELECT user_id, preference_category, preference_value FROM user_preferences;",
      "SELECT content_id, content_type, content_rating FROM virtual_reality_content;",
      "SELECT user_id, rating_value, rated_timestamp FROM user_ratings;",
      "SELECT interaction_type, interaction_timestamp FROM user_interactions;",
      "SELECT preference_category, preference_value FROM user_preferences;",
      "SELECT content_type, content_rating FROM virtual_reality_content;",
      "SELECT rating_value, rated_timestamp FROM user_ratings;",
      "SELECT user_id, interaction_type, interaction_timestamp FROM user_interactions;",
      "SELECT user_id, preference_category, preference_value FROM user_preferences;",
      "SELECT content_id, content_name, content_type FROM virtual_reality_content;",
      "SELECT user_id, content_id, rating_value, rated_timestamp FROM user_ratings;",
      "SELECT * FROM user_interactions WHERE user_id = 1;",
      "SELECT user_id, interaction_type, interaction_timestamp FROM user_interactions WHERE user_id = 1 AND interaction_type = 'like';",
      "SELECT * FROM user_interactions WHERE interaction_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT ui.user_id, ui.interaction_type, ur.rating_value FROM user_interactions ui JOIN user_ratings ur ON ui.user_id = ur.user_id;",
      "SELECT u.user_id, u.interaction_type, r.rating_value FROM user_interactions u LEFT JOIN user_ratings r ON u.user_id = r.user_id;",
      "SELECT ui.user_id, vp.preference_category, vp.preference_value FROM user_interactions ui JOIN user_preferences vp ON ui.user_id = vp.user_id;",
      "SELECT u.user_id, u.interaction_type, p.preference_value FROM user_interactions u LEFT JOIN user_preferences p ON u.user_id = p.user_id;",
      "SELECT * FROM user_preferences WHERE preference_category = 'genre';",
      "SELECT * FROM virtual_reality_content WHERE content_rating > 5;",
      "SELECT content_id, content_name, content_rating FROM virtual_reality_content WHERE content_type = 'game';",
      "SELECT * FROM virtual_reality_content ORDER BY content_rating DESC;",
      "SELECT vr.content_id, vr.content_name, COUNT(ur.user_id) AS total_ratings FROM virtual_reality_content vr LEFT JOIN user_ratings ur ON vr.content_id = ur.content_id GROUP BY vr.content_id;",
      "SELECT ui.user_id, ui.interaction_type, vr.content_name FROM user_interactions ui JOIN virtual_reality_content vr ON ui.user_id = vr.content_id;",
      "SELECT ui.user_id, ui.interaction_type, vr.content_name FROM user_interactions ui JOIN virtual_reality_content vr ON ui.user_id = vr.content_id WHERE ui.interaction_type = 'visit';",
      "SELECT ui.user_id, ui.interaction_type, vr.content_name FROM user_interactions ui JOIN virtual_reality_content vr ON ui.user_id = vr.content_id WHERE ui.interaction_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT ui.user_id, SUM(ur.rating_value) AS total_ratings FROM user_interactions ui JOIN user_ratings ur ON ui.user_id = ur.user_id GROUP BY ui.user_id;",
      "SELECT ui.user_id, COUNT(ui.interaction_type) AS total_interactions FROM user_interactions ui GROUP BY ui.user_id;",
      "SELECT u.user_id, u.interaction_type, AVG(r.rating_value) AS average_rating FROM user_interactions u JOIN user_ratings r ON u.user_id = r.user_id GROUP BY u.user_id;",
      "SELECT ui.user_id, vp.preference_category, MAX(ur.rating_value) AS max_rating FROM user_interactions ui JOIN user_preferences vp JOIN user_ratings ur ON ui.user_id = vp.user_id AND ui.user_id = ur.user_id GROUP BY ui.user_id;",
      "SELECT ui.user_id, ui.interaction_type, vp.preference_category, vr.content_name FROM user_interactions ui JOIN user_preferences vp JOIN virtual_reality_content vr ON ui.user_id = vp.user_id AND ui.user_id = vr.content_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username, email FROM users WHERE age > 30;",
      "SELECT user_id, username, email FROM users WHERE gender = 'Female';",
      "SELECT * FROM experiences;",
      "SELECT experience_name, duration, price FROM experiences WHERE price > 100.00;",
      "SELECT * FROM interactions;",
      "SELECT user_id, interaction_type, interaction_time FROM interactions WHERE interaction_type = 'Like';",
      "SELECT * FROM preferences;",
      "SELECT user_id, rating FROM preferences WHERE rating >= 4;",
      "SELECT * FROM bookings;",
      "SELECT user_id, experience_id, booking_date FROM bookings WHERE booking_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT user_id, experience_id, booking_date FROM bookings WHERE user_id = 1001;",
      "SELECT username, experience_name, rating FROM users JOIN preferences ON users.user_id = preferences.user_id;",
      "SELECT experience_id, experience_name, SUM(price) AS total_revenue FROM experiences JOIN bookings ON experiences.experience_id = bookings.experience_id GROUP BY experience_id;",
      "SELECT user_id, COUNT(booking_id) AS total_bookings FROM bookings GROUP BY user_id;",
      "SELECT user_id, COUNT(interaction_id) AS total_interactions FROM interactions GROUP BY user_id;",
      "SELECT user_id, AVG(rating) AS avg_rating FROM preferences GROUP BY user_id;",
      "SELECT user_id, MAX(age) AS max_age FROM users GROUP BY user_id;",
      "SELECT user_id, MIN(duration) AS min_duration FROM experiences JOIN preferences ON experiences.experience_id = preferences.experience_id GROUP BY user_id;",
      "SELECT user_id, AVG(price) AS avg_price FROM experiences JOIN bookings ON experiences.experience_id = bookings.experience_id GROUP BY user_id;",
      "SELECT * FROM users;",
      "SELECT user_id, username, email FROM users WHERE age > 30;",
      "SELECT users.username, experiences.experience_name FROM users JOIN bookings ON users.user_id = bookings.user_id JOIN experiences ON bookings.experience_id = experiences.experience_id;",
      "SELECT users.username, experiences.experience_name FROM users INNER JOIN bookings ON users.user_id = bookings.user_id INNER JOIN experiences ON bookings.experience_id = experiences.experience_id WHERE bookings.booking_date > '2022-01-01';",
      "SELECT AVG(price) AS avg_price, MIN(price) AS min_price, MAX(price) AS max_price FROM experiences;",
      "SELECT user_id, COUNT(*) AS booking_count FROM bookings GROUP BY user_id;",
      "SELECT user_id, COUNT(*) AS total_interactions FROM interactions WHERE interaction_time > '2022-01-01' GROUP BY user_id;",
      "SELECT user_id, AVG(rating) AS avg_rating FROM preferences GROUP BY user_id HAVING AVG(rating) > 4;",
      "SELECT user_id, experience_id, AVG(rating) AS avg_rating FROM preferences GROUP BY user_id, experience_id ORDER BY avg_rating DESC;",
      "SELECT users.username, preferences.rating FROM users LEFT JOIN preferences ON users.user_id = preferences.user_id;",
      "SELECT count(*) AS total_bookings FROM bookings WHERE booking_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT users.username, COUNT(*) AS total_bookings FROM users JOIN bookings ON users.user_id = bookings.user_id WHERE bookings.booking_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY users.username;",
      "SELECT user_id, experience_id, SUM(price) AS total_price FROM experiences JOIN bookings ON experiences.experience_id = bookings.experience_id GROUP BY user_id, experience_id;",
      "SELECT user_id, experience_id, description FROM experiences JOIN interactions ON experiences.experience_id = interactions.experience_id WHERE interaction_type = 'like';",
      "SELECT user_id, experience_id, AVG(rating) AS avg_rating FROM preferences GROUP BY user_id, experience_id HAVING AVG(rating) > 4;",
      "SELECT user_id, experience_id, COUNT(*) AS total_interactions FROM interactions WHERE interaction_time > '2022-01-01' GROUP BY user_id, experience_id;",
      "SELECT user_id, experience_id, COUNT(*) AS total_reviews FROM preferences WHERE feedback IS NOT NULL GROUP BY user_id, experience_id;",
      "SELECT user_id, experience_id, MAX(rating) AS highest_rating FROM preferences GROUP BY user_id, experience_id;",
      "SELECT user_id, COUNT(*) AS total_preferences FROM (SELECT DISTINCT user_id, experience_id FROM preferences);",
      "SELECT user_id, SUM(duration) AS total_duration FROM experiences JOIN bookings ON experiences.experience_id = bookings.experience_id GROUP BY user_id;",
      "SELECT user_id, AVG(price) AS avg_price FROM experiences JOIN bookings ON experiences.experience_id = bookings.experience_id GROUP BY user_id;"
    ]
  }
]