[
  {
    "statements": [
      "SELECT * FROM events WHERE event_id = 1;",
      "SELECT event_name, event_date FROM events WHERE event_id = 2;",
      "SELECT * FROM events WHERE event_date > '2023-01-01';",
      "SELECT event_name, ticket_price FROM events WHERE ticket_price < 50.00;",
      "SELECT event_id, available_tickets FROM events WHERE available_tickets > 0;",
      "SELECT COUNT(*) FROM events;",
      "SELECT MAX(ticket_price) FROM events;",
      "SELECT MIN(available_tickets) FROM events;",
      "SELECT event_id, event_name, event_date FROM events WHERE available_tickets <= 100;",
      "SELECT * FROM events WHERE event_date BETWEEN '2023-01-01' AND '2023-12-31';",
      "SELECT AVG(ticket_price) FROM events;",
      "SELECT event_name, available_tickets FROM events WHERE event_name LIKE '%concert%';",
      "SELECT event_id, event_date FROM events WHERE event_date >= '2023-06-01' ORDER BY event_date ASC;",
      "SELECT DISTINCT event_name FROM events;",
      "SELECT event_name, SUM(available_tickets) FROM events GROUP BY event_name;",
      "SELECT event_name, event_date FROM events WHERE ticket_price BETWEEN 50.00 AND 100.00;",
      "SELECT event_id, event_name FROM events WHERE ticket_price = (SELECT MAX(ticket_price) FROM events);",
      "SELECT event_name, COUNT(*) FROM events GROUP BY event_name HAVING COUNT(*) > 1;",
      "SELECT event_id, available_tickets FROM events ORDER BY available_tickets DESC;",
      "SELECT event_id, event_name, ticket_price FROM events WHERE ticket_price > (SELECT AVG(ticket_price) FROM events);",
      "SELECT * FROM events WHERE event_date > '2022-01-01';",
      "SELECT event_name, ticket_price FROM events WHERE available_tickets > 0 ORDER BY ticket_price DESC;",
      "SELECT event_name, event_date FROM events WHERE ticket_price < 50 AND available_tickets > 10;",
      "SELECT COUNT(*) AS total_events FROM events;",
      "SELECT MAX(ticket_price) AS max_ticket_price FROM events;",
      "SELECT event_name, AVG(ticket_price) AS avg_ticket_price FROM events GROUP BY event_name;",
      "SELECT * FROM events WHERE event_name LIKE '%Concert%';",
      "SELECT event_id, event_name, ticket_price FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT event_name, SUM(available_tickets) AS total_tickets FROM events GROUP BY event_name HAVING SUM(available_tickets) > 50;",
      "SELECT event_name, event_date, ticket_price FROM events WHERE ticket_price > 100 AND available_tickets < 20;",
      "SELECT * FROM events WHERE ticket_price > 50 OR available_tickets < 10;",
      "SELECT event_name, event_date FROM events WHERE available_tickets < 5 UNION SELECT event_name, event_date FROM events WHERE ticket_price < 20;",
      "SELECT event_name, ticket_price, available_tickets FROM events WHERE event_name IN ('Music Festival', 'Comedy Show', 'Theater Play');",
      "SELECT COUNT(*) AS total_events, SUM(ticket_price) AS total_revenue FROM events;",
      "SELECT event_id, event_name, ticket_price FROM events ORDER BY event_date ASC, ticket_price DESC;",
      "SELECT event_name, MAX(event_date) AS latest_event_date FROM events GROUP BY event_name;",
      "SELECT AVG(ticket_price) AS avg_ticket_price, MAX(available_tickets) AS max_available_tickets FROM events;",
      "SELECT event_id, event_name, event_date, ticket_price, available_tickets FROM events WHERE event_id > 100 ORDER BY event_id DESC;",
      "SELECT COUNT(DISTINCT event_name) AS unique_events FROM events;",
      "SELECT event_name, event_date, ticket_price FROM events WHERE ticket_price = (SELECT MAX(ticket_price) FROM events);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM events;",
      "SELECT event_name, event_date, event_location FROM events;",
      "SELECT event_name, event_location FROM events WHERE event_date > '2022-01-01';",
      "SELECT * FROM tickets;",
      "SELECT ticket_price, ticket_quantity FROM tickets WHERE ticket_status = 'Available';",
      "SELECT event_name, ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT event_name, ticket_quantity FROM events LEFT JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT event_name, ticket_quantity FROM events RIGHT JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT event_name, ticket_quantity FROM events INNER JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_status = 'Sold';",
      "SELECT event_name, SUM(ticket_quantity) AS total_tickets_sold FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, AVG(ticket_price) AS avg_ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name HAVING avg_ticket_price > 50;",
      "SELECT event_name, MIN(ticket_price) AS min_ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name ORDER BY min_ticket_price ASC;",
      "SELECT event_name, MAX(ticket_price) AS max_ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name ORDER BY max_ticket_price DESC;",
      "SELECT event_name, COUNT(*) AS total_tickets FROM events LEFT JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, ticket_quantity FROM events WHERE event_id IN (SELECT event_id FROM tickets WHERE ticket_price > 100);",
      "SELECT event_name, ticket_quantity FROM events WHERE event_id NOT IN (SELECT event_id FROM tickets WHERE ticket_status = 'Available');",
      "SELECT event_name, event_date, event_location FROM events WHERE event_id = (SELECT event_id FROM tickets WHERE ticket_quantity = (SELECT MAX(ticket_quantity) FROM tickets));",
      "SELECT event_name, ticket_price FROM tickets WHERE event_id IN (SELECT event_id FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31');",
      "SELECT event_name, SUM(ticket_quantity) AS total_tickets_sold FROM events INNER JOIN tickets ON events.event_id = tickets.event_id WHERE event_date > '2022-06-30' GROUP BY event_name HAVING total_tickets_sold > 50;",
      "SELECT event_name, (ticket_price * ticket_quantity) AS total_revenue FROM events INNER JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT * FROM events WHERE event_date > '2022-01-01' AND event_location = 'New York';",
      "SELECT event_name, event_date, COUNT(*) AS total_tickets_sold FROM events JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_status = 'sold' GROUP BY event_name, event_date;",
      "SELECT event_name, SUM(ticket_price * ticket_quantity) AS revenue FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, event_date, ticket_price * ticket_quantity AS total_revenue FROM events JOIN tickets ON events.event_id = tickets.event_id WHERE event_date BETWEEN '2022-06-01' AND '2022-12-31';",
      "SELECT event_name, AVG(ticket_price) AS avg_ticket_price FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, MIN(ticket_price) AS min_ticket_price FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, MAX(ticket_price) AS max_ticket_price FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, COUNT(DISTINCT ticket_status) AS unique_ticket_statuses FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, event_date, ticket_price * ticket_quantity AS revenue, ticket_status FROM events JOIN tickets ON events.event_id = tickets.event_id WHERE revenue > 1000;",
      "SELECT event_name, event_date, ticket_price * ticket_quantity AS revenue, ticket_status FROM events JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_status = 'sold' AND revenue > 1000;",
      "SELECT DISTINCT event_location FROM events JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT event_name, SUM(ticket_quantity) AS total_tickets_available FROM events JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_status = 'available' GROUP BY event_name;",
      "SELECT event_location, COUNT(*) AS total_events FROM events GROUP BY event_location HAVING total_events > 5;",
      "SELECT event_name, MAX(ticket_quantity) AS max_ticket_quantity FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, event_date, ticket_price * ticket_quantity AS revenue FROM events LEFT JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT event_name, AVG(ticket_quantity) AS avg_ticket_quantity FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, event_date, AVG(ticket_quantity) AS avg_ticket_quantity FROM events JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_status = 'sold' GROUP BY event_name, event_date;",
      "SELECT event_name, MIN(ticket_quantity) AS min_ticket_quantity FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_location, event_date, COUNT(ticket_id) AS total_tickets_sold FROM events JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_status = 'sold' GROUP BY event_location, event_date;",
      "SELECT event_name, DATE_FORMAT(event_date, '%M %e, %Y') AS formatted_date FROM events;",
      "SELECT event_name, ticket_price, ticket_quantity, ticket_price * ticket_quantity AS total_cost FROM events JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT event_id, event_name, ticket_price, ticket_quantity, ticket_price * ticket_quantity AS cost_per_ticket FROM events JOIN tickets ON events.event_id = tickets.event_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events;",
      "SELECT event_id, event_name, event_date FROM events WHERE event_location = 'New York';",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT event_name, ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id;",
      "SELECT * FROM events WHERE event_date >= '2022-01-01';",
      "SELECT * FROM tickets WHERE ticket_status = 'Available';",
      "SELECT customer_name, event_name FROM customers INNER JOIN events ON customers.customer_id = events.event_id;",
      "SELECT COUNT(*) FROM events;",
      "SELECT MIN(ticket_price), MAX(ticket_price) FROM tickets;",
      "SELECT event_name, COUNT(*) AS ticket_count FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT DISTINCT event_name FROM events;",
      "SELECT AVG(ticket_price) AS avg_ticket_price FROM tickets;",
      "SELECT event_name, event_date, ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_price > 100;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_phone LIKE '%123%';",
      "SELECT event_name, event_date FROM events WHERE event_date < '2022-12-31';",
      "SELECT event_name, ticket_status FROM events INNER JOIN tickets ON events.event_id = tickets.event_id WHERE ticket_status = 'Sold';",
      "SELECT customer_name, COUNT(*) AS num_tickets FROM customers INNER JOIN tickets ON customers.customer_id = tickets.event_id GROUP BY customer_name;",
      "SELECT event_name, event_location FROM events ORDER BY event_name ASC;",
      "SELECT customer_name, customer_email FROM customers ORDER BY customer_name DESC;",
      "SELECT event_name, SUM(ticket_price) AS total_revenue FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT DISTINCT event_location FROM events;",
      "SELECT * FROM events;",
      "SELECT event_id, event_name, event_date FROM events WHERE event_date > '2022-01-01';",
      "SELECT customers.customer_name, events.event_name FROM customers INNER JOIN tickets ON customers.customer_id = tickets.customer_id INNER JOIN events ON tickets.event_id = events.event_id WHERE tickets.ticket_status = 'SOLD OUT';",
      "SELECT DISTINCT event_location FROM events;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_phone LIKE '%555%';",
      "SELECT events.event_name, tickets.ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id WHERE tickets.ticket_price > 100;",
      "SELECT event_name, YEAR(event_date) AS event_year FROM events;",
      "SELECT * FROM events WHERE event_location = 'New York' ORDER BY event_date DESC LIMIT 5;",
      "SELECT MAX(ticket_price) AS max_price FROM tickets;",
      "SELECT customer_name, COUNT(*) AS num_tickets_purchased FROM customers INNER JOIN tickets ON customers.customer_id = tickets.customer_id GROUP BY customer_name;",
      "SELECT events.event_name, AVG(ticket_price) AS avg_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY events.event_name;",
      "SELECT * FROM tickets WHERE ticket_price BETWEEN 50 AND 100;",
      "SELECT COUNT(*) AS total_events FROM events;",
      "SELECT customers.customer_name, COUNT(*) AS num_tickets FROM customers INNER JOIN tickets ON customers.customer_id = tickets.customer_id GROUP BY customers.customer_name ORDER BY num_tickets DESC;",
      "SELECT event_name, COUNT(*) AS num_tickets_sold FROM events INNER JOIN tickets ON events.event_id = tickets.event_id WHERE tickets.ticket_status = 'SOLD' GROUP BY event_name ORDER BY num_tickets_sold DESC;",
      "SELECT customer_name, SUM(ticket_price) AS total_spent FROM customers INNER JOIN tickets ON customers.customer_id = tickets.customer_id GROUP BY customer_name ORDER BY total_spent DESC;",
      "SELECT event_name, MIN(ticket_price) AS min_price, MAX(ticket_price) AS max_price, AVG(ticket_price) AS avg_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT event_name, event_date, event_location FROM events WHERE event_date > CURDATE();",
      "SELECT event_name, COUNT(*) AS num_tickets_available FROM events INNER JOIN tickets ON events.event_id = tickets.event_id WHERE tickets.ticket_status = 'AVAILABLE' GROUP BY event_name;",
      "SELECT customer_name, customer_email, events.event_name FROM customers INNER JOIN tickets ON customers.customer_id = tickets.customer_id INNER JOIN events ON tickets.event_id = events.event_id ORDER BY events.event_date DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events;",
      "SELECT venue_name, venue_location FROM venues;",
      "SELECT * FROM tickets;",
      "SELECT ticket_price, ticket_quantity FROM tickets;",
      "SELECT booking_id, booking_date FROM bookings;",
      "SELECT * FROM events WHERE event_date = '2022-12-25';",
      "SELECT event_name, event_time FROM events WHERE event_id = 1;",
      "SELECT venue_name FROM venues WHERE venue_location = 'New York';",
      "SELECT * FROM tickets WHERE ticket_quantity > 10;",
      "SELECT SUM(ticket_quantity) AS total_quantity_sold FROM tickets;",
      "SELECT AVG(ticket_price) AS average_ticket_price FROM tickets;",
      "SELECT booking_id, booking_date, booking_time FROM bookings WHERE booking_date BETWEEN '2023-01-01' AND '2023-01-31';",
      "SELECT event_name, event_date, venue_name, venue_location FROM events INNER JOIN venues ON events.event_id = venues.venue_id;",
      "SELECT event_name, ticket_price, booking_date FROM events INNER JOIN tickets ON events.event_id = tickets.event_id INNER JOIN bookings ON tickets.ticket_id = bookings.ticket_id;",
      "SELECT event_name, COUNT(ticket_id) AS total_tickets_sold FROM events LEFT JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT venue_name, AVG(ticket_quantity) AS average_tickets_per_event FROM venues LEFT JOIN tickets ON venues.venue_id = tickets.venue_id GROUP BY venue_name;",
      "SELECT event_name, SUM(ticket_price) AS total_revenue FROM events LEFT JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT venue_name, MAX(ticket_price) AS highest_ticket_price FROM venues LEFT JOIN tickets ON venues.venue_id = tickets.venue_id GROUP BY venue_name;",
      "SELECT * FROM bookings ORDER BY booking_date DESC, booking_time ASC;",
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events WHERE event_date >= '2022-01-01';",
      "SELECT event_name, venue_name FROM events JOIN venues ON events.event_id = venues.venue_id;",
      "SELECT booking_id, event_name, ticket_price FROM bookings JOIN tickets ON bookings.ticket_id = tickets.ticket_id JOIN events ON tickets.event_id = events.event_id;",
      "SELECT venue_name, COUNT(ticket_id) AS total_tickets FROM venues JOIN tickets ON venues.venue_id = tickets.venue_id GROUP BY venue_name;",
      "SELECT events.event_name, venues.venue_location, bookings.booking_date FROM events JOIN tickets ON events.event_id = tickets.event_id JOIN bookings ON tickets.ticket_id = bookings.ticket_id JOIN venues ON tickets.venue_id = venues.venue_id WHERE booking_date = '2022-06-15';",
      "SELECT event_name, SUM(ticket_price) AS total_revenue FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name;",
      "SELECT venue_location, AVG(ticket_price) AS average_price FROM venues JOIN tickets ON venues.venue_id = tickets.venue_id GROUP BY venue_location;",
      "SELECT booking_id, booking_date, booking_time FROM bookings WHERE booking_date >= '2022-07-01' AND booking_time >= '15:00:00';",
      "SELECT event_name, booking_date, booking_time FROM events JOIN tickets ON events.event_id = tickets.event_id JOIN bookings ON tickets.ticket_id = bookings.ticket_id WHERE booking_date = '2022-08-20' AND event_name = 'Concert';",
      "SELECT booking_id, event_name, venue_location FROM bookings JOIN tickets ON bookings.ticket_id = tickets.ticket_id JOIN events ON tickets.event_id = events.event_id JOIN venues ON tickets.venue_id = venues.venue_id WHERE event_name LIKE '%Festival%' AND venue_location = 'City Center';",
      "SELECT event_name, venue_name, COUNT(ticket_id) AS total_tickets_sold FROM events JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name, venue_name;",
      "SELECT booking_id, booking_date, booking_time FROM bookings WHERE EXTRACT(MONTH FROM booking_date) = 9;",
      "SELECT event_name, booking_date, booking_time FROM events JOIN tickets ON events.event_id = tickets.event_id JOIN bookings ON tickets.ticket_id = bookings.ticket_id WHERE EXTRACT(YEAR FROM booking_date) = 2022;",
      "SELECT event_name, venue_location, booking_date FROM events JOIN tickets ON events.event_id = tickets.event_id JOIN bookings ON tickets.ticket_id = bookings.ticket_id JOIN venues ON tickets.venue_id = venues.venue_id WHERE booking_date BETWEEN '2022-09-01' AND '2022-09-30';",
      "SELECT booking_id, booking_date, booking_time FROM bookings WHERE booking_date BETWEEN '2022-10-01' AND '2022-10-31';",
      "SELECT event_name, venue_location, booking_date FROM events JOIN tickets ON events.event_id = tickets.event_id JOIN bookings ON tickets.ticket_id = bookings.ticket_id JOIN venues ON tickets.venue_id = venues.venue_id WHERE booking_date >= '2022-11-01' AND venue_location NOT LIKE '%Center%';",
      "SELECT venue_name, SUM(ticket_quantity) AS total_tickets_sold FROM venues JOIN tickets ON venues.venue_id = tickets.venue_id GROUP BY venue_name;",
      "SELECT event_name, booking_date, booking_time FROM events JOIN tickets ON events.event_id = tickets.event_id JOIN bookings ON tickets.ticket_id = bookings.ticket_id WHERE booking_date <= '2022-12-31' AND booking_time <= '21:00:00';",
      "SELECT event_name, venue_location, booking_date FROM events JOIN tickets ON events.event_id = tickets.event_id JOIN bookings ON tickets.ticket_id = bookings.ticket_id JOIN venues ON tickets.venue_id = venues.venue_id WHERE booking_date = '2022-12-25';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Events;",
      "SELECT event_name, event_date FROM Events;",
      "SELECT event_name, event_location FROM Events WHERE event_date = '2022-12-31';",
      "SELECT venue_name, venue_location FROM Venues;",
      "SELECT ticket_id, event_id, seat_number FROM Tickets WHERE ticket_price < 50.00;",
      "SELECT user_name, user_email FROM Users;",
      "SELECT user_name FROM Users WHERE user_id = 1;",
      "SELECT event_id, user_id, booking_date FROM Bookings WHERE user_id = 3;",
      "SELECT event_name, event_date, event_location FROM Events WHERE event_location = 'New York';",
      "SELECT venue_name, venue_location FROM Venues WHERE venue_location = 'Los Angeles';",
      "SELECT * FROM Tickets;",
      "SELECT venue_name, event_name FROM Venues INNER JOIN Events ON Venues.venue_id = Events.event_id;",
      "SELECT user_name, event_name FROM Users INNER JOIN Bookings ON Users.user_id = Bookings.user_id INNER JOIN Events ON Bookings.event_id = Events.event_id;",
      "SELECT user_name, event_name, booking_date FROM Users INNER JOIN Bookings ON Users.user_id = Bookings.user_id INNER JOIN Events ON Bookings.event_id = Events.event_id WHERE booking_date >= '2023-01-01';",
      "SELECT * FROM Bookings;",
      "SELECT user_name, event_name, ticket_price FROM Users INNER JOIN Bookings ON Users.user_id = Bookings.user_id INNER JOIN Tickets ON Bookings.ticket_id = Tickets.ticket_id WHERE user_id = 2;",
      "SELECT COUNT(*) FROM Bookings;",
      "SELECT MAX(ticket_price) AS max_price FROM Tickets;",
      "SELECT AVG(ticket_price) AS avg_price FROM Tickets WHERE event_id = 3;",
      "SELECT DISTINCT event_location FROM Events;",
      "SELECT user_name, user_email FROM Users WHERE user_email LIKE '%example.com';",
      "SELECT * FROM Events WHERE event_date > '2022-01-01';",
      "SELECT event_name, event_location FROM Events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT Events.event_name, Venues.venue_name FROM Events JOIN Venues ON Events.event_location = Venues.venue_location;",
      "SELECT Events.event_name, Tickets.ticket_price, Users.user_name FROM Events JOIN Tickets ON Events.event_id = Tickets.event_id JOIN Users ON Tickets.ticket_id = Users.user_id;",
      "SELECT Events.event_name, Bookings.booking_date, Users.user_email FROM Events JOIN Bookings ON Events.event_id = Bookings.event_id JOIN Users ON Bookings.user_id = Users.user_id;",
      "SELECT DISTINCT venue_name FROM Venues;",
      "SELECT event_name, COUNT(*) AS total_tickets FROM Events JOIN Tickets ON Events.event_id = Tickets.event_id GROUP BY event_name;",
      "SELECT user_name, COUNT(*) AS total_bookings FROM Users JOIN Bookings ON Users.user_id = Bookings.user_id GROUP BY user_name;",
      "SELECT event_name, venue_name, booking_date FROM Events JOIN Bookings ON Events.event_id = Bookings.event_id JOIN Venues ON Venues.venue_id = Events.event_id ORDER BY booking_date DESC;",
      "SELECT user_name, SUM(ticket_price) AS total_spent FROM Users JOIN Bookings ON Users.user_id = Bookings.user_id JOIN Tickets ON Tickets.ticket_id = Bookings.ticket_id GROUP BY user_name ORDER BY total_spent DESC;",
      "SELECT event_name FROM Events WHERE event_id IN (SELECT event_id FROM Bookings WHERE user_id = 1);",
      "SELECT user_name, AVG(ticket_price) AS avg_ticket_price FROM Users JOIN Bookings ON Users.user_id = Bookings.user_id JOIN Tickets ON Tickets.ticket_id = Bookings.ticket_id GROUP BY user_name;",
      "SELECT venue_name, COUNT(*) AS total_events FROM Venues JOIN Events ON Venues.venue_location = Events.event_location GROUP BY venue_name;",
      "SELECT event_name, COUNT(*) AS total_bookings FROM Events LEFT JOIN Bookings ON Events.event_id = Bookings.event_id GROUP BY event_name;",
      "SELECT user_name, user_email FROM Users WHERE user_id IN (SELECT user_id FROM Bookings WHERE event_id = 1);",
      "SELECT venue_name, AVG(ticket_price) AS avg_ticket_price FROM Venues JOIN Events ON Venues.venue_location = Events.event_location JOIN Tickets ON Tickets.event_id = Events.event_id GROUP BY venue_name;",
      "SELECT event_name, COUNT(*) AS total_tickets FROM Events JOIN Tickets ON Events.event_id = Tickets.event_id WHERE event_date > '2022-01-01' GROUP BY event_name;",
      "SELECT user_name, SUM(ticket_price) AS total_spent FROM Users JOIN Bookings ON Users.user_id = Bookings.user_id JOIN Tickets ON Tickets.ticket_id = Bookings.ticket_id WHERE booking_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY user_name;",
      "SELECT venue_name, MAX(ticket_price) AS max_ticket_price FROM Venues JOIN Events ON Venues.venue_location = Events.event_location JOIN Tickets ON Tickets.event_id = Events.event_id GROUP BY venue_name;",
      "SELECT event_name, MIN(ticket_price) AS min_ticket_price FROM Events JOIN Tickets ON Events.event_id = Tickets.event_id GROUP BY event_name;",
      "SELECT user_name, COUNT(*) AS total_bookings FROM Users LEFT JOIN Bookings ON Users.user_id = Bookings.user_id GROUP BY user_name;"
    ]
  }
]