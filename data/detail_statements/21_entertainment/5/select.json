[
  {
    "statements": [
      "SELECT * FROM episodes WHERE season_number = 1 AND episode_number = 1;",
      "SELECT episode_name FROM episodes WHERE air_date > '2022-01-01';",
      "SELECT * FROM episodes WHERE season_number = 2;",
      "SELECT * FROM episodes WHERE air_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT episode_name, air_date FROM episodes WHERE season_number = 3 AND episode_number = 5;",
      "SELECT COUNT(*) FROM episodes WHERE season_number = 1;",
      "SELECT * FROM episodes ORDER BY air_date DESC;",
      "SELECT DISTINCT season_number FROM episodes;",
      "SELECT * FROM episodes WHERE episode_name LIKE '%finale%';",
      "SELECT MAX(episode_number) FROM episodes WHERE season_number = 3;",
      "SELECT AVG(episode_number) FROM episodes WHERE season_number = 2;",
      "SELECT episode_name, season_number, air_date FROM episodes WHERE season_number = 4;",
      "SELECT MIN(air_date) FROM episodes;",
      "SELECT * FROM episodes WHERE episode_name ILIKE '%final%';",
      "SELECT episode_name, air_date FROM episodes WHERE season_number = 5 AND air_date < '2023-01-01';",
      "SELECT COUNT(DISTINCT season_number) FROM episodes;",
      "SELECT episode_name, air_date FROM episodes WHERE air_date < '2020-01-01';",
      "SELECT * FROM episodes WHERE season_number > 3;",
      "SELECT episode_name, air_date FROM episodes WHERE season_number = 1 AND episode_number > 5;",
      "SELECT episode_name, air_date FROM episodes WHERE air_date = '2022-12-25';",
      "SELECT episode_name, season_number, episode_number FROM episodes WHERE season_number = 1 AND episode_number < 5",
      "SELECT * FROM episodes WHERE air_date BETWEEN '2021-01-01' AND '2021-12-31'",
      "SELECT DISTINCT season_number FROM episodes ORDER BY season_number ASC",
      "SELECT episode_name, season_number, episode_number, air_date FROM episodes WHERE episode_name LIKE '%finale%'",
      "SELECT * FROM episodes WHERE season_number = 3 ORDER BY episode_number DESC",
      "SELECT COUNT(*) AS total_episodes FROM episodes",
      "SELECT episode_name, season_number, episode_number FROM episodes WHERE season_number IN (1, 2, 3)",
      "SELECT * FROM episodes ORDER BY air_date ASC LIMIT 10",
      "SELECT AVG(episode_number) AS avg_ep_num FROM episodes WHERE season_number = 2",
      "SELECT season_number, COUNT(*) AS total_episodes FROM episodes GROUP BY season_number",
      "SELECT MAX(episode_number) AS max_ep_num FROM episodes WHERE season_number = 1",
      "SELECT episode_name, season_number, episode_number, air_date FROM episodes WHERE episode_name LIKE '%pilot%'",
      "SELECT * FROM episodes WHERE season_number = 2 AND air_date < '2022-01-01'",
      "SELECT episode_name, season_number, episode_number, air_date FROM episodes WHERE season_number = 4",
      "SELECT * FROM episodes ORDER BY season_number ASC, episode_number ASC",
      "SELECT * FROM episodes WHERE air_date >= '2022-01-01' ORDER BY air_date DESC",
      "SELECT MIN(episode_number) AS min_ep_num FROM episodes WHERE season_number = 3",
      "SELECT episode_name, season_number, episode_number FROM episodes WHERE air_date IS NULL",
      "SELECT DISTINCT season_number, MAX(episode_number) AS max_ep_num FROM episodes GROUP BY season_number ORDER BY season_number ASC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM episode WHERE id = 1;",
      "SELECT title FROM episode WHERE season = 1;",
      "SELECT * FROM episode WHERE episode_number = 5;",
      "SELECT title, release_date FROM episode WHERE season = 2 AND episode_number = 10;",
      "SELECT id, title, season FROM episode WHERE season < 5;",
      "SELECT * FROM user_viewing_history WHERE user_id = 10;",
      "SELECT episode_id, view_date FROM user_viewing_history WHERE episode_id = 20;",
      "SELECT * FROM user_viewing_history WHERE duration_in_seconds > 600;",
      "SELECT user_id, episode_id FROM user_viewing_history WHERE view_date BETWEEN '2021-01-01' AND '2021-06-30';",
      "SELECT COUNT(*) AS total_views FROM user_viewing_history;",
      "SELECT user_id, SUM(duration_in_seconds) AS total_duration FROM user_viewing_history GROUP BY user_id;",
      "SELECT e.title, u.view_date FROM episode e INNER JOIN user_viewing_history u ON e.id = u.episode_id;",
      "SELECT e.title, COUNT(u.view_date) AS views FROM episode e INNER JOIN user_viewing_history u ON e.id = u.episode_id GROUP BY e.id;",
      "SELECT e.title, AVG(u.duration_in_seconds) AS average_duration FROM episode e INNER JOIN user_viewing_history u ON e.id = u.episode_id GROUP BY e.id;",
      "SELECT e.title, MAX(u.duration_in_seconds) AS max_duration FROM episode e INNER JOIN user_viewing_history u ON e.id = u.episode_id GROUP BY e.id;",
      "SELECT e.title, MIN(u.duration_in_seconds) AS min_duration FROM episode e INNER JOIN user_viewing_history u ON e.id = u.episode_id GROUP BY e.id;",
      "SELECT e.title, u.view_date FROM episode e LEFT JOIN user_viewing_history u ON e.id = u.episode_id;",
      "SELECT e.title, u.view_date FROM episode e RIGHT JOIN user_viewing_history u ON e.id = u.episode_id;",
      "SELECT e.title, u.view_date FROM episode e FULL JOIN user_viewing_history u ON e.id = u.episode_id;",
      "SELECT e.title, u.view_date FROM episode e CROSS JOIN user_viewing_history u;",
      "SELECT title, season, episode_number, release_date FROM episode WHERE season = 1 AND episode_number < 5;",
      "SELECT title, release_date FROM episode WHERE season = 2 AND episode_number >= 10;",
      "SELECT title, season, episode_number FROM episode WHERE season IN (1, 3, 5);",
      "SELECT title, release_date FROM episode WHERE season = 2 OR season = 4;",
      "SELECT title, season, episode_number FROM episode WHERE release_date > '2022-01-01';",
      "SELECT title, season FROM episode JOIN user_viewing_history ON episode.id = user_viewing_history.episode_id WHERE user_id = 123;",
      "SELECT title, season FROM episode JOIN user_viewing_history ON episode.id = user_viewing_history.episode_id WHERE user_id = 456 AND duration_in_seconds > 1800;",
      "SELECT COUNT(id) AS total_episodes FROM episode;",
      "SELECT AVG(duration_in_seconds) AS avg_duration FROM user_viewing_history;",
      "SELECT title, season FROM episode WHERE season = (SELECT MAX(season) FROM episode);",
      "SELECT title, season FROM episode WHERE episode_number = (SELECT MAX(episode_number) FROM episode);",
      "SELECT season, COUNT(id) AS total_episodes FROM episode GROUP BY season;",
      "SELECT user_id, COUNT(episode_id) AS total_views FROM user_viewing_history GROUP BY user_id;",
      "SELECT season, COUNT(id) AS total_episodes, AVG(duration_in_seconds) AS avg_duration FROM episode JOIN user_viewing_history ON episode.id = user_viewing_history.episode_id GROUP BY season;",
      "SELECT title, season, episode_number, user_id FROM episode JOIN user_viewing_history ON episode.id = user_viewing_history.episode_id WHERE release_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT title, season, episode_number, view_date FROM episode JOIN user_viewing_history ON episode.id = user_viewing_history.episode_id WHERE view_date >= '2022-01-01' ORDER BY view_date DESC;",
      "SELECT title, season, episode_number, view_date, duration_in_seconds FROM episode JOIN user_viewing_history ON episode.id = user_viewing_history.episode_id WHERE duration_in_seconds > 1800 ORDER BY duration_in_seconds DESC;",
      "SELECT user_id, MAX(duration_in_seconds) AS longest_duration FROM user_viewing_history GROUP BY user_id;",
      "SELECT season, SUM(duration_in_seconds) AS total_duration FROM episode JOIN user_viewing_history ON episode.id = user_viewing_history.episode_id GROUP BY season;",
      "SELECT AVG(duration_in_seconds) AS avg_duration FROM user_viewing_history WHERE view_date BETWEEN '2022-01-01' AND '2022-12-31';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM episodes;",
      "SELECT episode_title, season_number FROM episodes;",
      "SELECT episode_id, episode_title, release_date FROM episodes WHERE season_number = 1;",
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT * FROM viewing_history;",
      "SELECT user_id, episode_id, viewing_date FROM viewing_history;",
      "SELECT episodes.episode_title, episodes.release_date, viewing_history.viewing_date FROM episodes JOIN viewing_history ON episodes.episode_id = viewing_history.episode_id;",
      "SELECT users.username, episodes.episode_title FROM users JOIN viewing_history ON users.user_id = viewing_history.user_id JOIN episodes ON episodes.episode_id = viewing_history.episode_id;",
      "SELECT episodes.episode_title, users.username, viewing_duration_minutes FROM episodes JOIN viewing_history ON episodes.episode_id = viewing_history.episode_id JOIN users ON users.user_id = viewing_history.user_id;",
      "SELECT season_number, COUNT(*) AS episode_count FROM episodes GROUP BY season_number;",
      "SELECT user_id, SUM(viewing_duration_minutes) AS total_duration FROM viewing_history GROUP BY user_id;",
      "SELECT episode_id, MAX(viewing_duration_minutes) AS max_duration FROM viewing_history GROUP BY episode_id;",
      "SELECT season_number, MAX(duration_minutes) AS max_duration FROM episodes GROUP BY season_number;",
      "SELECT episode_id, COUNT(user_id) AS viewers FROM viewing_history GROUP BY episode_id;",
      "SELECT user_id, COUNT(DISTINCT episode_id) AS episodes_watched FROM viewing_history GROUP BY user_id;",
      "SELECT episode_id, AVG(viewing_duration_minutes) AS avg_duration FROM viewing_history GROUP BY episode_id;",
      "SELECT user_id, MIN(viewing_duration_minutes) AS min_duration FROM viewing_history GROUP BY user_id;",
      "SELECT * FROM episodes WHERE release_date < '2022-01-01';",
      "SELECT * FROM users WHERE registration_date > '2021-01-01';",
      "SELECT * FROM episodes;",
      "SELECT episode_title, season_number FROM episodes WHERE season_number = 1;",
      "SELECT episode_title, season_number, release_date FROM episodes WHERE season_number = 1 AND release_date > '2021-01-01';",
      "SELECT episode_title, season_number FROM episodes ORDER BY season_number ASC;",
      "SELECT episode_title, season_number FROM episodes ORDER BY season_number DESC, episode_number ASC;",
      "SELECT COUNT(*) AS total_episodes FROM episodes;",
      "SELECT episode_title, AVG(duration_minutes) AS avg_duration FROM episodes GROUP BY season_number;",
      "SELECT episode_title, season_number FROM episodes WHERE season_number IN (1, 2, 3);",
      "SELECT username, episode_title FROM users, episodes WHERE users.user_id = 1 AND episodes.episode_id = 1;",
      "SELECT username, episode_title FROM users JOIN viewing_history ON users.user_id = viewing_history.user_id WHERE viewing_history.viewing_duration_minutes > 30;",
      "SELECT username, episode_title FROM users JOIN viewing_history ON users.user_id = viewing_history.user_id JOIN episodes ON viewing_history.episode_id = episodes.episode_id WHERE episodes.season_number = 1;",
      "SELECT episode_title, viewing_duration_minutes FROM episodes JOIN viewing_history ON episodes.episode_id = viewing_history.episode_id;",
      "SELECT username, episode_title, viewing_date FROM users JOIN viewing_history ON users.user_id = viewing_history.user_id JOIN episodes ON viewing_history.episode_id = episodes.episode_id WHERE viewing_date BETWEEN '2021-01-01' AND '2021-08-01';",
      "SELECT username, episode_title FROM users WHERE subscription_type = 'premium';",
      "SELECT episode_title, season_number, COUNT(viewing_date) AS views FROM episodes JOIN viewing_history ON episodes.episode_id = viewing_history.episode_id GROUP BY episode_title, season_number;",
      "SELECT username, MIN(viewing_duration_minutes) AS min_duration FROM users JOIN viewing_history ON users.user_id = viewing_history.user_id;",
      "SELECT episode_title, MAX(viewing_duration_minutes) AS max_duration FROM episodes JOIN viewing_history ON episodes.episode_id = viewing_history.episode_id;",
      "SELECT username, episode_title FROM users WHERE registration_date >= '2021-01-01' AND registration_date < '2022-01-01';",
      "SELECT episode_title, AVG(viewing_duration_minutes) AS avg_duration FROM episodes JOIN viewing_history ON episodes.episode_id = viewing_history.episode_id GROUP BY episode_title;",
      "SELECT episode_title, season_number FROM episodes WHERE episode_id IN (SELECT episode_id FROM viewing_history WHERE user_id = 1);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM episodes;",
      "SELECT title, season, episode_number FROM episodes WHERE season = 1;",
      "SELECT title, release_date FROM episodes WHERE episode_id = 1;",
      "SELECT * FROM series;",
      "SELECT title, genre FROM series WHERE genre = 'Drama';",
      "SELECT title, description FROM series WHERE total_seasons > 5;",
      "SELECT * FROM users;",
      "SELECT username, email FROM users WHERE date_joined > '2022-01-01';",
      "SELECT * FROM viewing_history;",
      "SELECT user_id, episode_id, date_watched FROM viewing_history WHERE user_id = 1;",
      "SELECT * FROM episodes JOIN series ON episodes.season = series.total_seasons;",
      "SELECT * FROM series JOIN episodes ON series.series_id = episodes.episode_id;",
      "SELECT * FROM users JOIN viewing_history ON users.user_id = viewing_history.user_id;",
      "SELECT episodes.title, series.title FROM episodes INNER JOIN series ON episodes.episode_id = series.series_id;",
      "SELECT users.username, episodes.title FROM users INNER JOIN episodes ON users.user_id = episodes.episode_id;",
      "SELECT series.genre, viewing_history.date_watched FROM series INNER JOIN viewing_history ON series.series_id = viewing_history.history_id;",
      "SELECT episodes.title, users.email FROM episodes INNER JOIN users ON episodes.season = users.user_id;",
      "SELECT series.description, viewing_history.duration_watched FROM series INNER JOIN viewing_history ON series.series_id = viewing_history.series_id;",
      "SELECT users.username, series.title, episodes.title FROM users JOIN series ON users.user_id = series.series_id JOIN episodes ON series.series_id = episodes.season;",
      "SELECT * FROM episodes WHERE season = 2 AND duration > 30;",
      "SELECT title, release_date FROM episodes WHERE duration > 40 ORDER BY release_date DESC;",
      "SELECT e.title, e.season, s.genre FROM episodes e JOIN series s ON e.season = s.total_seasons;",
      "SELECT u.username, v.date_watched FROM users u JOIN viewing_history v ON u.user_id = v.user_id;",
      "SELECT e.title, s.title AS series_title FROM episodes e JOIN series s ON e.season = s.total_seasons;",
      "SELECT * FROM episodes WHERE season IN (1, 3, 5) AND duration < 60;",
      "SELECT u.username, e.title, v.date_watched FROM users u JOIN viewing_history v ON u.user_id = v.user_id JOIN episodes e ON v.episode_id = e.episode_id;",
      "SELECT s.title, COUNT(e.episode_id) AS total_episodes FROM series s JOIN episodes e ON s.series_id = e.season GROUP BY s.title;",
      "SELECT s.title, AVG(e.duration) AS avg_duration FROM series s JOIN episodes e ON s.series_id = e.season GROUP BY s.title;",
      "SELECT u.username, MAX(v.date_watched) AS last_watched FROM users u JOIN viewing_history v ON u.user_id = v.user_id GROUP BY u.username;",
      "SELECT title, episode_number, DATEDIFF(NOW(), release_date) AS days_since_release FROM episodes;",
      "SELECT s.genre, COUNT(e.episode_id) AS total_episodes FROM episodes e JOIN series s ON e.season = s.total_seasons GROUP BY s.genre;",
      "SELECT DISTINCT u.username FROM users u JOIN viewing_history v ON u.user_id = v.user_id WHERE v.duration_watched > 40;",
      "SELECT s.title, AVG(e.duration) AS avg_duration FROM episodes e JOIN series s ON e.season = s.total_seasons GROUP BY s.title HAVING AVG(e.duration) > 45;",
      "SELECT s.title, COUNT(v.history_id) AS total_views FROM series s JOIN viewing_history v ON s.series_id = v.episode_id GROUP BY s.title ORDER BY total_views DESC;",
      "SELECT s.title, MAX(e.episode_number) AS last_episode FROM series s JOIN episodes e ON s.series_id = e.season GROUP BY s.title;",
      "SELECT u.username, COUNT(v.history_id) AS total_views FROM users u JOIN viewing_history v ON u.user_id = v.user_id GROUP BY u.username HAVING COUNT(v.history_id) < 5;",
      "SELECT e.title, s.genre FROM episodes e JOIN series s ON e.season = s.total_seasons WHERE e.duration > 30;",
      "SELECT * FROM episodes WHERE release_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT MONTHNAME(release_date) AS month, COUNT(episode_id) AS total_episodes FROM episodes GROUP BY MONTH(release_date);"
    ]
  },
  {
    "statements": [
      "SELECT show_title FROM Shows;",
      "SELECT episode_title, episode_number FROM Episodes;",
      "SELECT username, email FROM Users;",
      "SELECT user_id, show_id, episode_id, viewed_date FROM ViewingHistory;",
      "SELECT preferred_genre, preferred_language FROM UserPreferences;",
      "SELECT * FROM Shows;",
      "SELECT * FROM Episodes;",
      "SELECT * FROM Users;",
      "SELECT * FROM ViewingHistory;",
      "SELECT * FROM UserPreferences;",
      "SELECT show_id, show_title FROM Shows WHERE show_genre='Comedy';",
      "SELECT user_id, show_id, episode_id FROM ViewingHistory WHERE user_id=1;",
      "SELECT username, email FROM Users WHERE user_id=2;",
      "SELECT episode_title, episode_number FROM Episodes WHERE show_id=1;",
      "SELECT user_id, show_id, episode_id FROM ViewingHistory WHERE viewed_date > '2021-01-01';",
      "SELECT user_id, preferred_genre FROM UserPreferences WHERE preferred_language='English';",
      "SELECT show_title, episode_title, episode_number FROM Shows INNER JOIN Episodes ON Shows.show_id = Episodes.show_id;",
      "SELECT Users.username, Shows.show_title, ViewingHistory.viewed_date FROM Users JOIN ViewingHistory ON Users.user_id = ViewingHistory.user_id JOIN Shows ON ViewingHistory.show_id = Shows.show_id;",
      "SELECT Users.username, Shows.show_title, Episodes.episode_title FROM Users JOIN ViewingHistory ON Users.user_id = ViewingHistory.user_id JOIN Shows ON ViewingHistory.show_id = Shows.show_id JOIN Episodes ON ViewingHistory.episode_id = Episodes.episode_id;",
      "SELECT Users.username, Shows.show_title, Episodes.episode_title FROM Users JOIN ViewingHistory ON Users.user_id = ViewingHistory.user_id JOIN Shows ON ViewingHistory.show_id = Shows.show_id JOIN Episodes ON ViewingHistory.episode_id = Episodes.episode_id WHERE ViewingHistory.viewed_date > '2021-06-01';",
      "SELECT show_title, show_genre FROM Shows WHERE show_id = 1;",
      "SELECT show_title, episode_title, episode_number, episode_description FROM Shows JOIN Episodes ON Shows.show_id = Episodes.show_id WHERE show_genre = 'Action' ORDER BY episode_number DESC;",
      "SELECT username, email FROM Users WHERE registration_date > '2021-01-01';",
      "SELECT user_id, show_title, episode_title, viewed_date FROM ViewingHistory JOIN Shows ON ViewingHistory.show_id = Shows.show_id JOIN Episodes ON ViewingHistory.episode_id = Episodes.episode_id WHERE user_id = 2 ORDER BY viewed_date DESC;",
      "SELECT user_id, preferred_genre, preferred_language FROM UserPreferences WHERE user_id = 3;",
      "SELECT DISTINCT show_genre FROM Shows;",
      "SELECT COUNT(*) AS total_shows FROM Shows;",
      "SELECT MAX(episode_number) AS max_episode_number FROM Episodes WHERE show_id = 4;",
      "SELECT MIN(episode_number) AS min_episode_number FROM Episodes WHERE show_id > 5;",
      "SELECT user_id, COUNT(view_id) AS total_views FROM ViewingHistory GROUP BY user_id;",
      "SELECT show_title, COUNT(view_id) AS total_views FROM ViewingHistory JOIN Shows ON ViewingHistory.show_id = Shows.show_id GROUP BY show_title;",
      "SELECT AVG(episode_number) AS avg_episode_number FROM Episodes WHERE show_id = 6;",
      "SELECT show_title, episode_title, episode_description FROM Shows JOIN Episodes ON Shows.show_id = Episodes.show_id WHERE episode_number IN (1, 2, 3);",
      "SELECT username, email FROM Users WHERE username LIKE '%user%' ORDER BY registration_date DESC;",
      "SELECT user_id, show_id, episode_id, viewed_date FROM ViewingHistory WHERE viewed_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT user_id, show_title, COUNT(view_id) AS total_views FROM ViewingHistory JOIN Shows ON ViewingHistory.show_id = Shows.show_id GROUP BY user_id, show_title;",
      "SELECT user_id, preferred_genre FROM UserPreferences WHERE preferred_language = 'English';",
      "SELECT show_genre, COUNT(*) AS total_shows FROM Shows GROUP BY show_genre;",
      "SELECT show_title, episode_title, episode_description FROM Shows JOIN Episodes ON Shows.show_id = Episodes.show_id WHERE show_genre = 'Comedy' AND episode_number > 5;",
      "SELECT username, email FROM Users WHERE registration_date BETWEEN '2021-01-01' AND '2021-06-30';",
      "SELECT user_id, MAX(viewed_date) AS last_viewed FROM ViewingHistory WHERE user_id = 4;"
    ]
  }
]