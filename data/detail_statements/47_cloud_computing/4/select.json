[
  {
    "statements": [
      "SELECT * FROM data_analytics WHERE id = 1;",
      "SELECT name FROM data_analytics WHERE id = 2;",
      "SELECT id, name FROM data_analytics WHERE id > 3;",
      "SELECT * FROM data_analytics WHERE name LIKE 'A%';",
      "SELECT * FROM data_analytics WHERE data->'key' = 'value';",
      "SELECT * FROM data_analytics WHERE created_at > '2022-01-01';",
      "SELECT id, MAX(created_at) FROM data_analytics GROUP BY id;",
      "SELECT COUNT(id) FROM data_analytics;",
      "SELECT * FROM data_analytics ORDER BY created_at DESC;",
      "SELECT * FROM data_analytics LIMIT 10;",
      "SELECT * FROM data_analytics OFFSET 5;",
      "SELECT DISTINCT name FROM data_analytics;",
      "SELECT * FROM data_analytics WHERE id IN (1, 2, 3);",
      "SELECT * FROM data_analytics WHERE id BETWEEN 1 AND 5;",
      "SELECT AVG(created_at) FROM data_analytics;",
      "SELECT SUM(id) FROM data_analytics;",
      "SELECT * FROM data_analytics WHERE name IS NULL;",
      "SELECT * FROM data_analytics WHERE data->'key' IS NOT NULL;",
      "SELECT * FROM data_analytics WHERE created_at::date = '2022-01-01'::date;",
      "SELECT * FROM data_analytics OFFSET 3 LIMIT 5;",
      "SELECT * FROM data_analytics WHERE id = 1;",
      "SELECT name FROM data_analytics WHERE created_at > '2021-01-01';",
      "SELECT id, name FROM data_analytics WHERE data -> 'key' = 'value';",
      "SELECT id, name FROM data_analytics WHERE data -> 'nested_key' ->> 'nested_field' = 'nested_value';",
      "SELECT id FROM data_analytics WHERE data @> '{\"key1\": \"value1\", \"key2\": \"value2\"}';",
      "SELECT id, created_at FROM data_analytics WHERE created_at BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT id, name, created_at FROM data_analytics WHERE created_at > NOW() - INTERVAL '1 week';",
      "SELECT id, name FROM data_analytics WHERE id IN (1, 2, 3);",
      "SELECT id, COUNT(*) FROM data_analytics GROUP BY id ORDER BY COUNT(*) DESC;",
      "SELECT id, name, created_at FROM data_analytics WHERE name LIKE 'A%';",
      "SELECT id, AVG(id) AS avg_id FROM data_analytics GROUP BY id HAVING AVG(id) > 10;",
      "SELECT id, MAX(id) AS max_id FROM data_analytics GROUP BY id HAVING MAX(id) > 100;",
      "SELECT id, MIN(id) AS min_id FROM data_analytics GROUP BY id HAVING MIN(id) < 5;",
      "SELECT id, name, created_at FROM data_analytics WHERE EXTRACT(MONTH FROM created_at) = 6;",
      "SELECT id, name, created_at FROM data_analytics WHERE EXTRACT(YEAR FROM created_at) = 2022;",
      "SELECT id, name, created_at FROM data_analytics WHERE EXTRACT(DAY FROM created_at) = 1;",
      "SELECT id, name, created_at FROM data_analytics WHERE CAST(data->>'age' AS INTEGER) > 18;",
      "SELECT id, name, created_at FROM data_analytics WHERE name ILIKE '%john%';",
      "SELECT id, name, created_at FROM data_analytics WHERE name SIMILAR TO 'Joh[nN]%';",
      "SELECT name, COUNT(*) FROM data_analytics GROUP BY name HAVING COUNT(*) > 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM data_sets;",
      "SELECT id, name FROM data_sets;",
      "SELECT name, size FROM data_sets;",
      "SELECT * FROM data_sets WHERE id = 1;",
      "SELECT * FROM data_sets WHERE size > 100;",
      "SELECT id, created_at FROM data_sets WHERE name = 'example';",
      "SELECT * FROM analytics_results;",
      "SELECT result_id, data_set_id FROM analytics_results;",
      "SELECT result_description, result_date FROM analytics_results;",
      "SELECT * FROM analytics_results WHERE result_id = 1;",
      "SELECT * FROM analytics_results WHERE result_date = '2022-01-01';",
      "SELECT result_date, result_description FROM analytics_results WHERE data_set_id = 1;",
      "SELECT * FROM data_sets JOIN analytics_results ON data_sets.id = analytics_results.data_set_id;",
      "SELECT data_sets.id, data_sets.name, analytics_results.result_description FROM data_sets JOIN analytics_results ON data_sets.id = analytics_results.data_set_id;",
      "SELECT data_sets.id, data_sets.size, analytics_results.result_date FROM data_sets JOIN analytics_results ON data_sets.id = analytics_results.data_set_id WHERE data_set_id = 1;",
      "SELECT * FROM data_sets WHERE size BETWEEN 100 AND 500;",
      "SELECT COUNT(*) FROM data_sets;",
      "SELECT MAX(size) FROM data_sets;",
      "SELECT AVG(size) FROM data_sets;",
      "SELECT MIN(created_at) FROM data_sets;",
      "SELECT id, name, size, created_at FROM data_sets WHERE size > 100;",
      "SELECT id, name, size FROM data_sets WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT id, name FROM data_sets WHERE size = (SELECT MAX(size) FROM data_sets);",
      "SELECT id, name FROM data_sets WHERE size < (SELECT AVG(size) FROM data_sets);",
      "SELECT id, name, result_description, result_date FROM data_sets JOIN analytics_results ON data_sets.id = analytics_results.data_set_id;",
      "SELECT id, result_description, result_date FROM data_sets JOIN analytics_results ON data_sets.id = analytics_results.data_set_id WHERE data_set_id = 1;",
      "SELECT id, result_description, result_date FROM data_sets JOIN analytics_results ON data_sets.id = analytics_results.data_set_id WHERE result_date > '2022-01-01';",
      "SELECT id, name, size, created_at FROM data_sets WHERE id IN (SELECT data_set_id FROM analytics_results WHERE result_date < '2022-01-01');",
      "SELECT id, name, size, created_at FROM data_sets WHERE id NOT IN (SELECT data_set_id FROM analytics_results WHERE result_date > '2022-01-01');",
      "SELECT id, name, size, created_at FROM data_sets WHERE id NOT IN (SELECT data_set_id FROM analytics_results WHERE data_sets.size < 100);",
      "SELECT id, name, size, created_at FROM data_sets WHERE id IN (SELECT data_set_id FROM analytics_results WHERE result_description LIKE '%important%');",
      "SELECT id, name, size, created_at FROM data_sets WHERE size > 100 AND id IN (SELECT data_set_id FROM analytics_results WHERE result_date > '2022-01-01');",
      "SELECT id, name, size, created_at FROM data_sets WHERE size < 100 OR id IN (SELECT data_set_id FROM analytics_results WHERE result_date < '2022-01-01');",
      "SELECT id, name, size, created_at FROM data_sets WHERE size > 100 ORDER BY created_at DESC;",
      "SELECT id, name, size, created_at FROM data_sets WHERE size > 100 LIMIT 10;",
      "SELECT COUNT(*) AS total_data_sets FROM data_sets;",
      "SELECT data_set_id, COUNT(result_id) AS result_count FROM analytics_results GROUP BY data_set_id;",
      "SELECT id, name, size, created_at, COUNT(result_id) AS result_count FROM data_sets LEFT JOIN analytics_results ON data_sets.id = analytics_results.data_set_id GROUP BY data_sets.id;",
      "SELECT name, AVG(size) AS avg_size FROM data_sets GROUP BY name HAVING AVG(size) > 500;",
      "SELECT DISTINCT name FROM data_sets;",
      "SELECT name AS data_set_name, result_description AS analysis_result_description FROM data_sets JOIN analytics_results ON data_sets.id = analytics_results.data_set_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM large_datasets;",
      "SELECT dataset_name, dataset_size FROM large_datasets;",
      "SELECT * FROM data_analytics;",
      "SELECT analytics_name, analytics_description FROM data_analytics;",
      "SELECT * FROM business_intelligence;",
      "SELECT bi_name, bi_tools_used FROM business_intelligence;",
      "SELECT dataset_id, dataset_name, dataset_size FROM large_datasets WHERE dataset_size > 1000;",
      "SELECT analytics_id, analytics_name FROM data_analytics WHERE analytics_id = 5;",
      "SELECT bi_id, bi_name, bi_tools_used FROM business_intelligence WHERE bi_name LIKE 'BI%';",
      "SELECT * FROM large_datasets WHERE dataset_id IN (1, 2, 3);",
      "SELECT dataset_name, dataset_size FROM large_datasets WHERE dataset_size BETWEEN 500 AND 1000;",
      "SELECT analytics_name, analytics_description FROM data_analytics WHERE analytics_method = 'machine learning';",
      "SELECT bi_name, bi_description FROM business_intelligence WHERE bi_description LIKE '%visualization%';",
      "SELECT dataset_name, dataset_size FROM large_datasets ORDER BY dataset_size DESC;",
      "SELECT analytics_name, analytics_description FROM data_analytics ORDER BY analytics_id ASC;",
      "SELECT bi_name, bi_tools_used FROM business_intelligence ORDER BY bi_name;",
      "SELECT MAX(dataset_size) AS max_size FROM large_datasets;",
      "SELECT AVG(dataset_size) AS avg_size FROM large_datasets;",
      "SELECT COUNT(*) AS total_analytics FROM data_analytics;",
      "SELECT dataset_name, dataset_description FROM large_datasets WHERE dataset_id = 1;",
      "SELECT analytics_name, analytics_description FROM data_analytics WHERE analytics_id = 2;",
      "SELECT bi_name, bi_description FROM business_intelligence WHERE bi_id = 3;",
      "SELECT * FROM large_datasets WHERE dataset_size > 1000;",
      "SELECT dataset_name, analytics_name, bi_name FROM large_datasets INNER JOIN data_analytics ON dataset_id = analytics_id INNER JOIN business_intelligence ON dataset_id = bi_id;",
      "SELECT * FROM large_datasets WHERE dataset_name LIKE '%analysis%';",
      "SELECT dataset_name, dataset_description FROM large_datasets WHERE dataset_id IN (1, 3, 5);",
      "SELECT bi_name, bi_tools_used FROM business_intelligence WHERE bi_tools_used LIKE '%Tableau%';",
      "SELECT dataset_name, dataset_size FROM large_datasets WHERE dataset_size BETWEEN 500 AND 1000;",
      "SELECT analytics_name, analytics_method FROM data_analytics ORDER BY analytics_id DESC;",
      "SELECT bi_name, bi_description FROM business_intelligence WHERE bi_description IS NOT NULL;",
      "SELECT dataset_name, dataset_size FROM large_datasets WHERE dataset_id = (SELECT MAX(dataset_id) FROM large_datasets);",
      "SELECT analytics_name, analytics_description FROM data_analytics WHERE analytics_id = (SELECT MIN(analytics_id) FROM data_analytics);",
      "SELECT DISTINCT dataset_name FROM large_datasets;",
      "SELECT AVG(dataset_size) AS avg_size FROM large_datasets;",
      "SELECT COUNT(*) AS total_datasets FROM large_datasets;",
      "SELECT bi_tools_used, COUNT(*) AS tool_count FROM business_intelligence GROUP BY bi_tools_used;",
      "SELECT dataset_name, analytics_name, bi_name FROM large_datasets CROSS JOIN data_analytics CROSS JOIN business_intelligence;",
      "SELECT dataset_id, dataset_name, dataset_size FROM large_datasets WHERE dataset_id IN (SELECT dataset_id FROM data_analytics);",
      "SELECT bi_name, bi_description FROM business_intelligence WHERE bi_tools_used NOT LIKE '%Python%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM large_datasets;",
      "SELECT dataset_name, data_source FROM large_datasets WHERE id = 1;",
      "SELECT * FROM analytics_results;",
      "SELECT result_description, result_value FROM analytics_results WHERE result_id = 1;",
      "SELECT * FROM cloud_providers;",
      "SELECT provider_name, storage_capacity FROM cloud_providers WHERE provider_id = 1;",
      "SELECT * FROM user_activities;",
      "SELECT activity_name, activity_date FROM user_activities WHERE user_id = 1;",
      "SELECT dataset_name, data_source FROM large_datasets WHERE file_path = '/path/to/file';",
      "SELECT provider_name, pricing_model FROM cloud_providers WHERE storage_capacity > 1000;",
      "SELECT * FROM large_datasets WHERE id IN (1, 2, 3);",
      "SELECT * FROM analytics_results WHERE result_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM cloud_providers WHERE provider_name LIKE 'A%';",
      "SELECT * FROM user_activities WHERE activity_date >= '2022-01-01';",
      "SELECT dataset_name, data_source FROM large_datasets WHERE dataset_name LIKE '%data%';",
      "SELECT provider_name, storage_capacity FROM cloud_providers ORDER BY storage_capacity DESC;",
      "SELECT MAX(data_centers) FROM cloud_providers;",
      "SELECT COUNT(*) FROM user_activities;",
      "SELECT AVG(result_value) FROM analytics_results;",
      "SELECT * FROM large_datasets WHERE id = 1;",
      "SELECT dataset_name, data_type FROM large_datasets WHERE data_source = 'internal';",
      "SELECT DISTINCT file_path FROM large_datasets WHERE dataset_name LIKE 'Sales%';",
      "SELECT id, dataset_name, data_source FROM large_datasets WHERE data_type = 'CSV' AND file_path LIKE '%/2022/%';",
      "SELECT MAX(id) AS max_id FROM large_datasets;",
      "SELECT COUNT(*) AS total_datasets FROM large_datasets;",
      "SELECT AVG(id) AS avg_id FROM large_datasets;",
      "SELECT data_source, COUNT(*) AS total_datasets FROM large_datasets GROUP BY data_source;",
      "SELECT dataset_name, COUNT(*) AS dataset_count FROM large_datasets GROUP BY dataset_name HAVING COUNT(*) > 1;",
      "SELECT * FROM large_datasets INNER JOIN analytics_results ON large_datasets.id = analytics_results.data_source_id;",
      "SELECT provider_name, storage_capacity FROM cloud_providers WHERE pricing_model = 'Pay-as-you-go';",
      "SELECT activity_name, activity_date FROM user_activities WHERE activity_type = 'login' AND activity_date >= '2022-01-01' AND activity_date < '2022-02-01';",
      "SELECT provider_name, pricing_model FROM cloud_providers WHERE storage_capacity > 1000 ORDER BY storage_capacity DESC;",
      "SELECT AVG(result_value) AS avg_result_value, MAX(result_value) AS max_result_value FROM analytics_results;",
      "SELECT provider_name, SUM(storage_capacity) AS total_storage FROM cloud_providers GROUP BY provider_name;",
      "SELECT dataset_name, result_description FROM large_datasets LEFT JOIN analytics_results ON large_datasets.id = analytics_results.data_source_id;",
      "SELECT DISTINCT dataset_name FROM large_datasets WHERE dataset_name LIKE '%finance%' UNION SELECT dataset_name FROM large_datasets WHERE dataset_name LIKE '%sales%';",
      "SELECT dataset_name, AVG(result_value) AS avg_result_value FROM large_datasets LEFT JOIN analytics_results ON large_datasets.id = analytics_results.data_source_id GROUP BY dataset_name;",
      "SELECT provider_id, provider_name, AVG(storage_capacity) AS avg_storage_capacity FROM cloud_providers GROUP BY provider_id;",
      "SELECT activity_name, COUNT(*) AS activity_count FROM user_activities GROUP BY activity_name ORDER BY activity_count DESC;",
      "SELECT * FROM large_datasets WHERE id IN (SELECT data_source_id FROM analytics_results WHERE result_value > 100);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM data_sets;",
      "SELECT name, description FROM data_sets;",
      "SELECT id, name FROM data_sets WHERE id = 1;",
      "SELECT * FROM data_sources;",
      "SELECT name, type FROM data_sources;",
      "SELECT id, connection_string FROM data_sources WHERE id = 1;",
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT id, role FROM users WHERE id = 1;",
      "SELECT * FROM analytics_jobs;",
      "SELECT status, start_time FROM analytics_jobs;",
      "SELECT id, user_id FROM analytics_jobs WHERE id = 1;",
      "SELECT * FROM query_results;",
      "SELECT result_data, created_at FROM query_results;",
      "SELECT id, job_id FROM query_results WHERE id = 1;",
      "SELECT data_sets.name, data_sources.name FROM data_sets JOIN data_sources ON data_sets.id = data_sources.id;",
      "SELECT users.username, analytics_jobs.status FROM users JOIN analytics_jobs ON users.id = analytics_jobs.user_id;",
      "SELECT data_sets.name AS dataset_name, query_results.result_data AS results FROM data_sets JOIN query_results ON data_sets.id = query_results.id;",
      "SELECT users.username, query_results.result_data FROM users JOIN analytics_jobs ON users.id = analytics_jobs.user_id JOIN query_results ON analytics_jobs.id = query_results.job_id;",
      "SELECT users.username AS user, data_sources.type AS source_type FROM users JOIN analytics_jobs ON users.id = analytics_jobs.user_id JOIN data_sources ON analytics_jobs.status = data_sources.id;",
      "SELECT * FROM data_sets;",
      "SELECT id, name, description FROM data_sets WHERE id = 1;",
      "SELECT * FROM data_sources WHERE type = 'SQL';",
      "SELECT id, name FROM data_sources WHERE created_at > '2022-01-01';",
      "SELECT users.username, users.email, analytics_jobs.status FROM users INNER JOIN analytics_jobs ON users.id = analytics_jobs.user_id;",
      "SELECT data_sets.id, data_sets.name, analytics_jobs.status FROM data_sets INNER JOIN analytics_jobs ON data_sets.id = analytics_jobs.data_set_id;",
      "SELECT users.username, query_results.result_data FROM users LEFT JOIN query_results ON users.id = query_results.id;",
      "SELECT data_sets.name, data_sources.name FROM data_sets, data_sources WHERE data_sets.id = data_sources.id;",
      "SELECT data_sets.name, COUNT(analytics_jobs.id) AS num_jobs FROM data_sets LEFT JOIN analytics_jobs ON data_sets.id = analytics_jobs.data_set_id GROUP BY data_sets.name;",
      "SELECT users.username, COUNT(analytics_jobs.id) AS num_jobs FROM users LEFT JOIN analytics_jobs ON users.id = analytics_jobs.user_id GROUP BY users.username;",
      "SELECT data_sets.name, AVG(analytics_jobs.end_time - analytics_jobs.start_time) AS avg_execution_time FROM data_sets INNER JOIN analytics_jobs ON data_sets.id = analytics_jobs.data_set_id GROUP BY data_sets.name;",
      "SELECT data_sets.name, MAX(analytics_jobs.end_time - analytics_jobs.start_time) AS max_execution_time FROM data_sets INNER JOIN analytics_jobs ON data_sets.id = analytics_jobs.data_set_id GROUP BY data_sets.name;",
      "SELECT users.username, SUM(LENGTH(query_results.result_data)) AS total_result_length FROM users LEFT JOIN query_results ON users.id = query_results.id GROUP BY users.username;",
      "SELECT data_sets.name, MAX(analytics_jobs.end_time) AS latest_execution_time FROM data_sets INNER JOIN analytics_jobs ON data_sets.id = analytics_jobs.data_set_id GROUP BY data_sets.name;",
      "SELECT users.username, data_sets.name, query_results.created_at FROM users INNER JOIN analytics_jobs ON users.id = analytics_jobs.user_id INNER JOIN query_results ON analytics_jobs.id = query_results.job_id;",
      "SELECT data_sets.name, analytics_jobs.status, query_results.result_data FROM data_sets INNER JOIN analytics_jobs ON data_sets.id = analytics_jobs.data_set_id LEFT JOIN query_results ON analytics_jobs.id = query_results.job_id;",
      "SELECT users.username, AVG(LENGTH(query_results.result_data)) AS avg_result_length FROM users LEFT JOIN query_results ON users.id = query_results.id GROUP BY users.username;",
      "SELECT data_sources.name, AVG(LENGTH(query_results.result_data)) AS avg_result_length FROM data_sources LEFT JOIN query_results ON data_sources.id = query_results.job_id GROUP BY data_sources.name;",
      "SELECT data_sets.name AS data_set_name, data_sources.name AS data_source_name, users.username AS user_name FROM data_sets, data_sources, users WHERE data_sets.id = data_sources.id AND data_sources.id = users.id;",
      "SELECT users.username, COUNT(query_results.id) AS num_results FROM users LEFT JOIN query_results ON users.id = query_results.id GROUP BY users.username;"
    ]
  }
]