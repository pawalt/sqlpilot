[
  {
    "statements": [
      "SELECT * FROM user_credentials;",
      "SELECT user_id, username FROM user_credentials;",
      "SELECT user_id, username, email FROM user_credentials;",
      "SELECT * FROM user_credentials WHERE user_id = 1;",
      "SELECT * FROM user_credentials WHERE username = 'john_doe';",
      "SELECT * FROM user_credentials WHERE email = 'john_doe@example.com';",
      "SELECT COUNT(*) FROM user_credentials;",
      "SELECT DISTINCT username FROM user_credentials;",
      "SELECT * FROM user_credentials ORDER BY username ASC;",
      "SELECT * FROM user_credentials ORDER BY username DESC;",
      "SELECT * FROM user_credentials LIMIT 10;",
      "SELECT * FROM user_credentials WHERE user_id > 5;",
      "SELECT * FROM user_credentials WHERE username LIKE 'j%';",
      "SELECT * FROM user_credentials WHERE email LIKE '%@example.com';",
      "SELECT AVG(user_id) FROM user_credentials;",
      "SELECT MAX(user_id) FROM user_credentials;",
      "SELECT MIN(user_id) FROM user_credentials;",
      "SELECT SUM(user_id) FROM user_credentials;",
      "SELECT COUNT(*) AS total_users FROM user_credentials;",
      "SELECT email, COUNT(*) AS num_users FROM user_credentials GROUP BY email HAVING COUNT(*) > 1;",
      "SELECT * FROM user_credentials WHERE user_id = 1;",
      "SELECT username, email FROM user_credentials WHERE username LIKE 'john%';",
      "SELECT user_id, username, email FROM user_credentials WHERE email = 'admin@example.com';",
      "SELECT * FROM user_credentials WHERE username = 'alice' AND password_hash = 'hashed_password';",
      "SELECT user_id, email FROM user_credentials WHERE email LIKE '%@example.com';",
      "SELECT * FROM user_credentials WHERE user_id IN (1, 2, 3);",
      "SELECT * FROM user_credentials WHERE username = 'bob' OR email = 'bob@example.com';",
      "SELECT COUNT(*) FROM user_credentials WHERE username = 'alice';",
      "SELECT DISTINCT email FROM user_credentials WHERE username = 'alice';",
      "SELECT MAX(user_id) FROM user_credentials;",
      "SELECT username, email FROM user_credentials WHERE user_id > 5 AND user_id < 10;",
      "SELECT * FROM user_credentials WHERE username IS NOT NULL;",
      "SELECT * FROM user_credentials WHERE username = 'alice' ORDER BY user_id DESC;",
      "SELECT AVG(user_id) FROM user_credentials;",
      "SELECT * FROM user_credentials WHERE email LIKE '%@gmail.com' ORDER BY user_id ASC;",
      "SELECT user_id, email FROM user_credentials WHERE user_id BETWEEN 3 AND 6;",
      "SELECT COUNT(*) FROM user_credentials GROUP BY email;",
      "SELECT * FROM user_credentials WHERE email IN ('alice@example.com', 'bob@example.com');",
      "SELECT * FROM user_credentials WHERE user_id = (SELECT MAX(user_id) FROM user_credentials);",
      "SELECT user_id, username, email FROM user_credentials WHERE email != 'admin@example.com';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_credentials;",
      "SELECT username, password_hash FROM user_credentials WHERE user_id = 1;",
      "SELECT username FROM user_credentials WHERE user_id IN (1, 2, 3);",
      "SELECT * FROM user_sessions;",
      "SELECT session_id, user_id, login_time FROM user_sessions WHERE user_id = 1;",
      "SELECT session_id, login_time FROM user_sessions WHERE logout_time IS NULL;",
      "SELECT * FROM user_credentials WHERE username = 'john_doe';",
      "SELECT * FROM user_sessions WHERE session_id = 'abc123';",
      "SELECT user_id, username FROM user_credentials WHERE user_id <> 5;",
      "SELECT * FROM user_credentials WHERE username LIKE 'j%';",
      "SELECT * FROM user_sessions WHERE login_time > '2022-01-01 00:00:00';",
      "SELECT * FROM user_credentials ORDER BY user_id DESC LIMIT 5;",
      "SELECT user_id, COUNT(session_id) AS session_count FROM user_sessions GROUP BY user_id;",
      "SELECT u.user_id, u.username, s.login_time FROM user_credentials u LEFT JOIN user_sessions s ON u.user_id = s.user_id;",
      "SELECT user_id, username, login_time FROM user_credentials INNER JOIN user_sessions ON user_credentials.user_id = user_sessions.user_id;",
      "SELECT * FROM user_credentials WHERE user_id BETWEEN 1 AND 10;",
      "SELECT * FROM user_sessions WHERE login_time BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT user_id, COUNT(*) AS session_count FROM user_sessions WHERE user_id = 3 GROUP BY user_id;",
      "SELECT u.username, s.session_id FROM user_credentials u INNER JOIN user_sessions s ON u.user_id = s.user_id;",
      "SELECT user_id, username, login_time FROM user_credentials JOIN user_sessions USING(user_id);",
      "SELECT * FROM user_credentials WHERE user_id = 1;",
      "SELECT username, password_hash FROM user_credentials WHERE username = 'john.doe';",
      "SELECT * FROM user_credentials WHERE password_hash LIKE '%abc123%';",
      "SELECT user_id, username FROM user_credentials WHERE username LIKE '%admin%';",
      "SELECT session_id, user_id, login_time FROM user_sessions WHERE login_time > '2022-01-01';",
      "SELECT session_id, logout_time FROM user_sessions WHERE logout_time IS NULL;",
      "SELECT user_id, username FROM user_credentials WHERE user_id IN (1, 2, 3);",
      "SELECT * FROM user_sessions WHERE user_id NOT IN (4, 5, 6);",
      "SELECT AVG(login_time - logout_time) AS avg_session_duration FROM user_sessions;",
      "SELECT user_id, COUNT(*) AS session_count FROM user_sessions GROUP BY user_id;",
      "SELECT u.user_id, u.username, s.session_id FROM user_credentials u INNER JOIN user_sessions s ON u.user_id = s.user_id;",
      "SELECT u.user_id, u.username, COUNT(s.session_id) AS session_count FROM user_credentials u LEFT JOIN user_sessions s ON u.user_id = s.user_id GROUP BY u.user_id;",
      "SELECT * FROM user_credentials WHERE username = 'admin' UNION SELECT * FROM user_credentials WHERE username = 'superadmin';",
      "SELECT username, login_time FROM user_credentials u INNER JOIN user_sessions s ON u.user_id = s.user_id WHERE u.username = 'john.doe';",
      "SELECT DISTINCT username FROM user_credentials;",
      "SELECT u.user_id, u.username, s.session_id FROM user_credentials u LEFT JOIN user_sessions s ON u.user_id = s.user_id WHERE s.session_id IS NULL;",
      "SELECT user_id, username FROM user_credentials ORDER BY username ASC;",
      "SELECT user_id, username FROM user_credentials WHERE user_id > 10 ORDER BY user_id DESC;",
      "SELECT * FROM user_credentials WHERE username LIKE '%test%' AND password_hash LIKE '%123%';",
      "SELECT user_id, CASE WHEN user_id < 5 THEN 'Low' WHEN user_id < 10 THEN 'Medium' ELSE 'High' END AS user_category FROM user_credentials;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT id, username FROM users;",
      "SELECT username FROM users WHERE id = 1;",
      "SELECT * FROM user_sessions;",
      "SELECT session_id, user_id FROM user_sessions;",
      "SELECT * FROM user_tokens;",
      "SELECT token_id, token FROM user_tokens;",
      "SELECT * FROM users JOIN user_sessions ON users.id = user_sessions.user_id;",
      "SELECT users.username, user_sessions.last_active FROM users JOIN user_sessions ON users.id = user_sessions.user_id;",
      "SELECT users.username, user_tokens.token FROM users JOIN user_tokens ON users.id = user_tokens.user_id;",
      "SELECT * FROM users WHERE username LIKE 'a%';",
      "SELECT * FROM users WHERE email = 'example@example.com';",
      "SELECT * FROM user_tokens WHERE expiry_timestamp > NOW();",
      "SELECT username, COUNT(*) FROM users GROUP BY username;",
      "SELECT username, COUNT(*) FROM users GROUP BY username HAVING COUNT(*) > 1;",
      "SELECT * FROM user_tokens WHERE user_id = 2 AND token = 'xyz123';",
      "SELECT * FROM user_sessions WHERE created_at BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM users ORDER BY username ASC;",
      "SELECT * FROM user_sessions ORDER BY last_active DESC;",
      "SELECT * FROM users LIMIT 10 OFFSET 5;",
      "SELECT * FROM users;",
      "SELECT id, username, email FROM users WHERE id = 1;",
      "SELECT * FROM user_sessions WHERE last_active >= '2022-01-01';",
      "SELECT username, created_at FROM users LEFT JOIN user_sessions ON users.id = user_sessions.user_id;",
      "SELECT * FROM users WHERE email LIKE '%gmail.com';",
      "SELECT users.username, user_sessions.last_active FROM users INNER JOIN user_sessions ON users.id = user_sessions.user_id;",
      "SELECT users.id, user_sessions.created_at FROM users INNER JOIN user_sessions ON users.id = user_sessions.user_id WHERE users.id > 10;",
      "SELECT users.username, user_tokens.token FROM users INNER JOIN user_tokens ON users.id = user_tokens.user_id;",
      "SELECT users.username, user_tokens.expiry_timestamp FROM users INNER JOIN user_tokens ON users.id = user_tokens.user_id WHERE user_tokens.expiry_timestamp < CURRENT_TIMESTAMP;",
      "SELECT COUNT(*) FROM users;",
      "SELECT MAX(id) FROM users;",
      "SELECT MIN(id) FROM users;",
      "SELECT AVG(id) FROM users;",
      "SELECT DISTINCT(email) FROM users;",
      "SELECT username, MAX(last_active) FROM users INNER JOIN user_sessions ON users.id = user_sessions.user_id GROUP BY users.username;",
      "SELECT * FROM users ORDER BY id DESC;",
      "SELECT * FROM users WHERE id IN (1, 2, 3);",
      "SELECT user_id, COUNT(session_id) FROM user_sessions GROUP BY user_id HAVING COUNT(session_id) > 5;",
      "SELECT * FROM users WHERE username = 'john_doe' AND email = 'john_doe@example.com';",
      "SELECT * FROM users WHERE id BETWEEN 5 AND 10;",
      "SELECT users.username, user_sessions.created_at FROM users JOIN user_sessions ON users.id = user_sessions.user_id ORDER BY user_sessions.created_at DESC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, password_hash FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM user_roles;",
      "SELECT role_name FROM user_roles WHERE role_id = '123e4567-e89b-12d3-a456-426614174001';",
      "SELECT * FROM user_permissions;",
      "SELECT permission_name FROM user_permissions WHERE permission_id = '123e4567-e89b-12d3-a456-426614174002';",
      "SELECT user_id, role_id FROM user_role_mapping;",
      "SELECT * FROM user_role_mapping WHERE user_id = '123e4567-e89b-12d3-a456-426614174003';",
      "SELECT users.username, user_roles.role_name FROM users JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id JOIN user_roles ON user_role_mapping.role_id = user_roles.role_id;",
      "SELECT users.username, user_roles.role_name, user_permissions.permission_name FROM users JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id JOIN user_roles ON user_role_mapping.role_id = user_roles.role_id JOIN user_permissions ON user_permissions.permission_id = '123e4567-e89b-12d3-a456-426614174004';",
      "SELECT * FROM users WHERE username LIKE 'A%';",
      "SELECT * FROM users WHERE username LIKE '%Smith';",
      "SELECT * FROM users WHERE username = 'john_doe';",
      "SELECT * FROM users WHERE username = 'jane_doe' AND password_hash = 'hashed_password';",
      "SELECT users.username, user_roles.role_name FROM users LEFT JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id LEFT JOIN user_roles ON user_role_mapping.role_id = user_roles.role_id;",
      "SELECT users.username, user_roles.role_name FROM users RIGHT JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id RIGHT JOIN user_roles ON user_role_mapping.role_id = user_roles.role_id;",
      "SELECT * FROM users ORDER BY username ASC;",
      "SELECT * FROM users ORDER BY username DESC;",
      "SELECT COUNT(*) AS total_users FROM users;",
      "SELECT AVG(id) AS avg_id, MAX(id) AS max_id, MIN(id) AS min_id FROM users;",
      "SELECT * FROM users WHERE username = 'admin';",
      "SELECT user_id, username FROM users WHERE user_id = '123456';",
      "SELECT user_id, username FROM users WHERE username LIKE '%test%';",
      "SELECT user_id, username FROM users WHERE username = 'test' AND password_hash = 'password';",
      "SELECT users.username, user_roles.role_name FROM users JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id JOIN user_roles ON user_role_mapping.role_id = user_roles.role_id;",
      "SELECT user_id, username FROM users WHERE password_hash IS NOT NULL;",
      "SELECT user_id, COUNT(\n    DISTINCT role_id) AS role_count FROM user_role_mapping GROUP BY user_id HAVING COUNT(\n    DISTINCT role_id) > 1;",
      "SELECT user_id, COUNT(\n    DISTINCT permission_id) AS permission_count FROM user_permissions JOIN user_roles ON user_permissions.permission_id = user_roles.role_id JOIN user_role_mapping ON user_roles.role_id = user_role_mapping.role_id GROUP BY user_id HAVING COUNT(\n    DISTINCT permission_id) > 1;",
      "SELECT users.username, user_roles.role_name, user_permissions.permission_name FROM users JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id JOIN user_roles ON user_roles.role_id = user_role_mapping.role_id JOIN user_permissions ON user_permissions.permission_id = user_role_mapping.role_id;",
      "SELECT COUNT(\n    DISTINCT user_id) AS user_count, COUNT(\n    DISTINCT role_id) AS role_count FROM user_role_mapping;",
      "SELECT role_name, COUNT(\n    DISTINCT user_id) AS user_count FROM user_roles JOIN user_role_mapping ON user_roles.role_id = user_role_mapping.role_id GROUP BY role_name;",
      "SELECT username, role_name, permission_name FROM users JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id JOIN user_roles ON user_role_mapping.role_id = user_roles.role_id JOIN user_permissions ON user_role_mapping.role_id = user_permissions.permission_id;",
      "SELECT users.username, COUNT(\n    DISTINCT role_id) AS role_count, COUNT(\n    DISTINCT permission_id) AS permission_count FROM users JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id JOIN user_roles ON user_roles.role_id = user_role_mapping.role_id JOIN user_permissions ON user_role_mapping.role_id = user_permissions.permission_id GROUP BY users.username HAVING COUNT(\n    DISTINCT role_id) > 1 AND COUNT(\n    DISTINCT permission_id) > 1;",
      "SELECT username, SUM(\n    CASE WHEN user_id = '123456' THEN 1 ELSE 0 END) AS is_user_123456 FROM users;",
      "SELECT users.username, AVG(\n    CASE WHEN user_role_mapping.role_id = '111111' THEN 1 ELSE 0 END) AS is_role_111111 FROM users JOIN user_role_mapping ON users.user_id = user_role_mapping.user_id;",
      "SELECT user_id, role_id FROM user_role_mapping WHERE EXISTS (\n    SELECT * FROM user_roles WHERE user_roles.role_id = user_role_mapping.role_id AND user_roles.role_name = 'admin'\n);",
      "SELECT MAX(\n    CHAR_LENGTH(username)) AS max_username_length FROM users;",
      "SELECT user_id, username FROM users\n    WHERE user_id IN (SELECT user_id FROM user_role_mapping WHERE role_id = '111111');",
      "SELECT user_id, username FROM users\n    WHERE user_id IN (SELECT user_id FROM user_role_mapping WHERE role_id = '111111')\n    AND user_id IN (SELECT user_id FROM user_role_mapping WHERE role_id = '222222');",
      "SELECT user_id, role_id, COUNT(*) AS num_users FROM user_role_mapping GROUP BY user_id, role_id HAVING COUNT(*) > 1 ORDER BY num_users DESC;",
      "SELECT user_id, AVG(\n    CASE WHEN user_id IN (SELECT user_id FROM user_role_mapping WHERE role_id = '111111') THEN 1 ELSE 0 END) AS role_111111_percentage FROM users;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users",
      "SELECT user_id, username FROM users",
      "SELECT role_name FROM user_roles",
      "SELECT * FROM password_reset_tokens",
      "SELECT token_id, token FROM password_reset_tokens",
      "SELECT * FROM login_attempts",
      "SELECT attempt_id, user_id FROM login_attempts",
      "SELECT token FROM session_tokens",
      "SELECT session_id, created_at FROM session_tokens",
      "SELECT username, created_at FROM users",
      "SELECT user_id, token FROM password_reset_tokens",
      "SELECT * FROM users WHERE username = 'example_user'",
      "SELECT * FROM users WHERE created_at >= '2022-01-01'",
      "SELECT * FROM user_roles WHERE role_name = 'admin'",
      "SELECT * FROM user_roles WHERE user_id = '123456'",
      "SELECT * FROM session_tokens WHERE token = 'example_token'",
      "SELECT * FROM session_tokens WHERE created_at < '2022-01-01'",
      "SELECT * FROM login_attempts WHERE user_id = '7890123'",
      "SELECT * FROM login_attempts WHERE attempt_timestamp BETWEEN '2022-01-01' AND '2022-02-01'",
      "SELECT * FROM session_tokens ORDER BY created_at DESC",
      "SELECT * FROM users WHERE username = 'john_doe';",
      "SELECT user_id, username FROM users WHERE created_at > '2022-01-01';",
      "SELECT u.username, r.role_name FROM users u INNER JOIN user_roles r ON u.user_id = r.user_id;",
      "SELECT u.username, p.token FROM users u INNER JOIN password_reset_tokens p ON u.user_id = p.user_id;",
      "SELECT u.username, l.attempt_timestamp FROM users u LEFT JOIN login_attempts l ON u.user_id = l.user_id;",
      "SELECT u.username, s.token FROM users u INNER JOIN session_tokens s ON u.user_id = s.user_id;",
      "SELECT username, COUNT(*) AS total_attempts FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_sessions FROM users u INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, MAX(l.attempt_timestamp) AS last_attempt FROM users u LEFT JOIN login_attempts l ON u.user_id = l.user_id GROUP BY username;",
      "SELECT u.username, MIN(s.created_at) AS first_session FROM users u LEFT JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_sessions FROM users u INNER JOIN session_tokens s ON u.user_id = s.user_id WHERE s.created_at BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY username;",
      "SELECT u.username, AVG(EXTRACT(epoch FROM AGE(l.attempt_timestamp, s.created_at))) AS avg_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_attempts, SUM(EXTRACT(epoch FROM AGE(l.attempt_timestamp, s.created_at))) AS total_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_attempts, EXTRACT(epoch FROM AVG(AGE(l.attempt_timestamp, s.created_at))) AS avg_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_attempts, EXTRACT(epoch FROM STDDEV_POP(AGE(l.attempt_timestamp, s.created_at))) AS stddev_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_attempts, EXTRACT(epoch FROM PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY AGE(l.attempt_timestamp, s.created_at))) AS median_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_attempts, PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY EXTRACT(epoch FROM AGE(l.attempt_timestamp, s.created_at))) AS q1_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_sessions, PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY EXTRACT(epoch FROM AGE(l.attempt_timestamp, s.created_at))) AS q3_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_sessions, PERCENTILE_DISC(0.1) WITHIN GROUP (ORDER BY EXTRACT(epoch FROM AGE(l.attempt_timestamp, s.created_at))) AS p10_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;",
      "SELECT u.username, COUNT(*) AS total_sessions, PERCENTILE_DISC(0.9) WITHIN GROUP (ORDER BY EXTRACT(epoch FROM AGE(l.attempt_timestamp, s.created_at))) AS p90_time_diff FROM users u INNER JOIN login_attempts l ON u.user_id = l.user_id INNER JOIN session_tokens s ON u.user_id = s.user_id GROUP BY username;"
    ]
  }
]