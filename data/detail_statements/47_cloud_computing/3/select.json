[
  {
    "statements": [
      "SELECT * FROM centralized_logging_system;",
      "SELECT log_id, service_name, log_timestamp, log_message FROM centralized_logging_system;",
      "SELECT * FROM centralized_logging_system WHERE service_name = 'example_service';",
      "SELECT * FROM centralized_logging_system WHERE log_timestamp > '2022-01-01';",
      "SELECT * FROM centralized_logging_system ORDER BY log_timestamp DESC;",
      "SELECT COUNT(*) FROM centralized_logging_system;",
      "SELECT service_name, COUNT(*) FROM centralized_logging_system GROUP BY service_name;",
      "SELECT DISTINCT service_name FROM centralized_logging_system;",
      "SELECT * FROM centralized_logging_system WHERE service_name LIKE '%example%';",
      "SELECT * FROM centralized_logging_system WHERE log_message IS NOT NULL;",
      "SELECT * FROM centralized_logging_system WHERE service_name = 'example_service' AND log_timestamp > '2022-01-01';",
      "SELECT AVG(log_id) FROM centralized_logging_system;",
      "SELECT MAX(log_timestamp) FROM centralized_logging_system;",
      "SELECT MIN(log_timestamp) FROM centralized_logging_system;",
      "SELECT log_id, service_name, log_timestamp, log_message FROM centralized_logging_system LIMIT 10;",
      "SELECT * FROM centralized_logging_system OFFSET 5;",
      "SELECT * FROM centralized_logging_system WHERE log_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT service_name, COUNT(*) FROM centralized_logging_system WHERE log_timestamp > '2022-01-01' GROUP BY service_name;",
      "SELECT service_name, AVG(log_id) FROM centralized_logging_system GROUP BY service_name;",
      "SELECT service_name, MAX(log_timestamp) FROM centralized_logging_system GROUP BY service_name;",
      "SELECT * FROM centralized_logging_system;",
      "SELECT COUNT(*) FROM centralized_logging_system;",
      "SELECT DISTINCT service_name FROM centralized_logging_system;",
      "SELECT service_name, log_timestamp FROM centralized_logging_system WHERE service_name = 'service_A';",
      "SELECT * FROM centralized_logging_system WHERE log_timestamp > '2022-01-01 00:00:00';",
      "SELECT service_name, COUNT(*) AS log_count FROM centralized_logging_system GROUP BY service_name;",
      "SELECT * FROM centralized_logging_system ORDER BY log_timestamp DESC LIMIT 10;",
      "SELECT AVG(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - log_timestamp))) AS avg_time_diff FROM centralized_logging_system;",
      "SELECT service_name, COUNT(*) AS log_count FROM centralized_logging_system WHERE log_message LIKE '%error%' GROUP BY service_name;",
      "SELECT service_name, DATE_TRUNC('hour', log_timestamp) AS log_hour, COUNT(*) AS log_count FROM centralized_logging_system GROUP BY service_name, log_hour;",
      "SELECT service_name, AVG(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - log_timestamp))) AS avg_time_diff FROM centralized_logging_system GROUP BY service_name;",
      "SELECT service_name, MAX(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - log_timestamp))) AS max_time_diff FROM centralized_logging_system GROUP BY service_name;",
      "SELECT service_name, MIN(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - log_timestamp))) AS min_time_diff FROM centralized_logging_system GROUP BY service_name;",
      "SELECT service_name, COUNT(*) AS log_count FROM centralized_logging_system WHERE EXTRACT(DOW FROM log_timestamp) = 1 GROUP BY service_name;",
      "SELECT service_name, COUNT(*) AS log_count FROM centralized_logging_system WHERE EXTRACT(MONTH FROM log_timestamp) = 1 GROUP BY service_name;",
      "SELECT service_name, COUNT(*) AS log_count FROM centralized_logging_system WHERE EXTRACT(YEAR FROM log_timestamp) = 2022 GROUP BY service_name;",
      "SELECT service_name, log_message FROM centralized_logging_system WHERE log_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT service_name, log_timestamp, log_message FROM centralized_logging_system WHERE log_message LIKE '%warning%' AND EXTRACT(HOUR FROM log_timestamp) BETWEEN 8 AND 12;",
      "SELECT service_name, COUNT(*) AS log_count FROM centralized_logging_system WHERE log_message ILIKE '%timeout%' GROUP BY service_name;",
      "SELECT service_name, MIN(log_timestamp) AS first_log_time FROM centralized_logging_system GROUP BY service_name ORDER BY first_log_time ASC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM cloud_service_logs;",
      "SELECT log_id, service_name FROM cloud_service_logs;",
      "SELECT service_name, log_type FROM cloud_service_logs;",
      "SELECT log_message FROM cloud_service_logs;",
      "SELECT log_time FROM cloud_service_logs;",
      "SELECT * FROM log_analysis;",
      "SELECT analysis_id, analysis_result FROM log_analysis;",
      "SELECT analysis_result, analysis_time FROM log_analysis;",
      "SELECT log_id, analysis_result, analysis_time FROM log_analysis;",
      "SELECT log_id, service_name, log_type, log_message, log_time FROM cloud_service_logs INNER JOIN log_analysis ON cloud_service_logs.log_id = log_analysis.log_id;",
      "SELECT * FROM cloud_service_logs WHERE log_id = 1;",
      "SELECT * FROM cloud_service_logs WHERE service_name = 'example_service';",
      "SELECT * FROM cloud_service_logs WHERE log_type = 'error';",
      "SELECT * FROM cloud_service_logs WHERE log_message LIKE '%error%';",
      "SELECT * FROM cloud_service_logs WHERE log_time > '2022-01-01';",
      "SELECT * FROM log_analysis WHERE analysis_id = 1;",
      "SELECT * FROM log_analysis WHERE log_id = 2;",
      "SELECT * FROM log_analysis WHERE analysis_time > '2022-02-01';",
      "SELECT * FROM log_analysis INNER JOIN cloud_service_logs ON cloud_service_logs.log_id = log_analysis.log_id;",
      "SELECT service_name, analysis_result FROM cloud_service_logs INNER JOIN log_analysis ON cloud_service_logs.log_id = log_analysis.log_id;",
      "SELECT * FROM cloud_service_logs WHERE log_time > '2022-01-01' AND log_type = 'Error';",
      "SELECT service_name, COUNT(*) as total_logs FROM cloud_service_logs GROUP BY service_name ORDER BY total_logs DESC;",
      "SELECT l.log_id, l.service_name, a.analysis_result FROM cloud_service_logs l INNER JOIN log_analysis a ON l.log_id = a.log_id WHERE a.analysis_time > '2022-01-01';",
      "SELECT service_name, AVG(analysis_id) as avg_analysis_id FROM cloud_service_logs l INNER JOIN log_analysis a ON l.log_id = a.log_id GROUP BY service_name;",
      "SELECT service_name, MAX(log_id) as max_log_id FROM cloud_service_logs GROUP BY service_name HAVING COUNT(*) > 1;",
      "SELECT DISTINCT service_name FROM cloud_service_logs WHERE log_type = 'Warning';",
      "SELECT * FROM cloud_service_logs WHERE log_message LIKE '%critical%' OR log_message LIKE '%urgent%';",
      "SELECT service_name, COUNT(*) as error_count FROM cloud_service_logs WHERE log_type = 'Error' GROUP BY service_name;",
      "SELECT service_name, MIN(log_time) as earliest_log FROM cloud_service_logs GROUP BY service_name;",
      "SELECT service_name, MAX(log_time) as latest_log FROM cloud_service_logs GROUP BY service_name;",
      "SELECT COUNT(DISTINCT service_name) as unique_services FROM cloud_service_logs;",
      "SELECT service_name, AVG(UNIX_TIMESTAMP(log_time)) as avg_timestamp FROM cloud_service_logs GROUP BY service_name;",
      "SELECT * FROM cloud_service_logs WHERE log_id IN (SELECT log_id FROM log_analysis WHERE analysis_result = 'Failed');",
      "SELECT service_name, COUNT(*) as total_logs, SUM(log_id) as total_log_id FROM cloud_service_logs GROUP BY service_name;",
      "SELECT service_name, MIN(analysis_time) as earliest_analysis_time FROM cloud_service_logs l INNER JOIN log_analysis a ON l.log_id = a.log_id GROUP BY service_name;",
      "SELECT service_name, MAX(analysis_time) as latest_analysis_time FROM cloud_service_logs l INNER JOIN log_analysis a ON l.log_id = a.log_id GROUP BY service_name;",
      "SELECT service_name, COUNT(*) as total_analyses FROM cloud_service_logs l INNER JOIN log_analysis a ON l.log_id = a.log_id GROUP BY service_name;",
      "SELECT service_name, AVG(DATEDIFF(log_time, analysis_time)) as avg_time_diff FROM cloud_service_logs l INNER JOIN log_analysis a ON l.log_id = a.log_id GROUP BY service_name;",
      "SELECT service_name, COUNT(*) as total_logs, SUM(UNIX_TIMESTAMP(log_time)) as total_timestamp FROM cloud_service_logs GROUP BY service_name;",
      "SELECT service_name, COUNT(*) as total_analyses, SUM(UNIX_TIMESTAMP(analysis_time)) as total_analysis_timestamp FROM cloud_service_logs l INNER JOIN log_analysis a ON l.log_id = a.log_id GROUP BY service_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM cloud_logs;",
      "SELECT log_id, service_name, log_timestamp FROM cloud_logs;",
      "SELECT service_name, log_message FROM cloud_logs;",
      "SELECT * FROM cloud_services;",
      "SELECT service_name, service_type FROM cloud_services;",
      "SELECT analysis_id, log_id, service_id, analysis_results FROM log_analysis;",
      "SELECT service_name, service_type, analysis_results FROM cloud_services INNER JOIN log_analysis ON cloud_services.service_id = log_analysis.service_id;",
      "SELECT log_message, analysis_results FROM cloud_logs INNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id;",
      "SELECT * FROM cloud_logs WHERE log_timestamp > '2022-01-01';",
      "SELECT * FROM cloud_logs WHERE service_name = 'service_A';",
      "SELECT * FROM cloud_logs WHERE log_message LIKE '%error%';",
      "SELECT * FROM cloud_logs WHERE log_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM cloud_logs ORDER BY log_timestamp DESC;",
      "SELECT service_name, COUNT(log_id) AS total_logs FROM cloud_logs GROUP BY service_name;",
      "SELECT service_name, service_type, COUNT(log_id) AS total_logs FROM cloud_services INNER JOIN log_analysis ON cloud_services.service_id = log_analysis.service_id GROUP BY service_name, service_type;",
      "SELECT service_name, AVG(log_timestamp) AS avg_timestamp FROM cloud_logs GROUP BY service_name;",
      "SELECT service_name, MIN(log_timestamp) AS earliest_timestamp FROM cloud_logs GROUP BY service_name;",
      "SELECT service_name, MAX(log_timestamp) AS latest_timestamp FROM cloud_logs GROUP BY service_name;",
      "SELECT service_name, SUM(analysis_results->>'result_count'::int) AS total_results FROM cloud_services INNER JOIN log_analysis ON cloud_services.service_id = log_analysis.service_id GROUP BY service_name;",
      "SELECT service_name, AVG((analysis_results->>'processing_time')::int) AS avg_processing_time FROM cloud_services INNER JOIN log_analysis ON cloud_services.service_id = log_analysis.service_id GROUP BY service_name;",
      "SELECT * FROM cloud_logs\nJOIN cloud_services ON cloud_logs.service_name = cloud_services.service_name\nWHERE cloud_logs.log_timestamp > '2021-01-01';",
      "SELECT log_id, service_name, log_message FROM cloud_logs\nWHERE log_timestamp BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nWHERE log_analysis.analysis_results ->> 'status' = 'error';",
      "SELECT log_id, service_name, COUNT(*) AS error_count\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nWHERE log_analysis.analysis_results ->> 'status' = 'error'\nGROUP BY log_id, service_name\nORDER BY error_count DESC;",
      "SELECT service_name, AVG(analysis_results ->> 'processing_time'::float) AS avg_processing_time\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nWHERE analysis_results ->> 'status' = 'success'\nGROUP BY service_name;",
      "SELECT service_name, COUNT(*) AS num_logs\nFROM cloud_logs\nGROUP BY service_name\nHAVING COUNT(*) > 100;",
      "SELECT service_name, AVG(analysis_results ->> 'processing_time'::float) AS avg_processing_time\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nGROUP BY service_name\nHAVING COUNT(*) > 50\nORDER BY avg_processing_time DESC;",
      "SELECT service_name, MIN(log_timestamp) AS first_log_time\nFROM cloud_logs\nGROUP BY service_name;",
      "SELECT service_name, COUNT(*) AS num_logs\nFROM cloud_logs\nGROUP BY service_name\nORDER BY num_logs DESC\nLIMIT 10;",
      "SELECT service_name, MAX(log_timestamp) AS last_log_time\nFROM cloud_logs\nGROUP BY service_name;",
      "SELECT service_name, SUM(analysis_results ->> 'data_size'::int) AS total_data_size\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nGROUP BY service_name;",
      "SELECT service_name, AVG(analysis_results ->> 'data_size'::int) AS avg_data_size\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nGROUP BY service_name\nORDER BY avg_data_size DESC;",
      "SELECT service_name, COUNT(DISTINCT log_id) AS unique_logs\nFROM cloud_logs\nGROUP BY service_name;",
      "SELECT service_name, MAX(analysis_results ->> 'error_code'::int) AS max_error_code\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nWHERE analysis_results ->> 'status' = 'error'\nGROUP BY service_name;",
      "SELECT log_id, service_name, log_timestamp\nFROM cloud_logs\nWHERE service_name IN (\n    SELECT service_name\n    FROM cloud_services\n    WHERE service_type = 'database'\n);",
      "SELECT service_name, AVG(analysis_results ->> 'processing_time'::float) AS avg_processing_time\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nWHERE log_timestamp BETWEEN '2021-01-01' AND '2021-12-31'\nGROUP BY service_name\nHAVING AVG(analysis_results ->> 'processing_time'::float) > 10;",
      "SELECT service_name, COUNT(*) AS num_errors\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nWHERE analysis_results ->> 'status' = 'error'\nGROUP BY service_name\nORDER BY num_errors DESC;",
      "SELECT service_name, AVG(analysis_results ->> 'processing_time'::float) AS avg_processing_time\nFROM cloud_logs\nINNER JOIN log_analysis ON cloud_logs.log_id = log_analysis.log_id\nWHERE log_timestamp BETWEEN '2021-01-01' AND '2021-12-31'\nGROUP BY service_name\nORDER BY avg_processing_time ASC\nLIMIT 5;",
      "SELECT service_name, MIN(log_timestamp) AS first_log_time, MAX(log_timestamp) AS last_log_time\nFROM cloud_logs\nGROUP BY service_name;",
      "SELECT service_name, COUNT(*) AS num_logs\nFROM cloud_logs\nGROUP BY service_name\nORDER BY num_logs\nOFFSET 5 LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CloudServiceLogs;",
      "SELECT log_id, service_name FROM ErrorLogs;",
      "SELECT error_id, log_id, error_type FROM ErrorLogs WHERE error_type = 'Server';",
      "SELECT log_id, log_message FROM CloudServiceLogs WHERE log_time > '2022-01-01 00:00:00';",
      "SELECT * FROM AuthenticationLogs WHERE auth_status = 'SUCCESS';",
      "SELECT log_id, system_name FROM SystemLogs WHERE log_level = 'WARNING';",
      "SELECT log_id, user_id, auth_status FROM AuthenticationLogs WHERE auth_time BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';",
      "SELECT auth_id, log_id, user_id FROM AuthenticationLogs WHERE auth_status = 'FAILED';",
      "SELECT log_id, service_name, log_time FROM CloudServiceLogs WHERE log_time > '2022-02-01 00:00:00';",
      "SELECT * FROM SystemLogs WHERE log_time < '2022-03-01 00:00:00';",
      "SELECT log_id, error_type, error_message FROM ErrorLogs WHERE error_time BETWEEN '2022-01-01 00:00:00' AND '2022-02-28 23:59:59';",
      "SELECT * FROM CloudServiceLogs WHERE log_time > '2022-03-01 00:00:00' AND log_time < '2022-03-31 23:59:59';",
      "SELECT log_id, system_name FROM SystemLogs WHERE log_time < '2022-01-01 00:00:00';",
      "SELECT log_id, service_name, log_message FROM CloudServiceLogs WHERE log_id = 100;",
      "SELECT error_id, log_id, error_type FROM ErrorLogs ORDER BY error_time DESC;",
      "SELECT auth_id, log_id, auth_status FROM AuthenticationLogs ORDER BY auth_time ASC;",
      "SELECT system_id, system_name, log_level FROM SystemLogs WHERE system_name LIKE 'Database%';",
      "SELECT * FROM CloudServiceLogs WHERE service_name = 'AppService' AND log_time > '2022-02-01 00:00:00';",
      "SELECT COUNT(*) AS total_logs FROM CloudServiceLogs;",
      "SELECT MAX(auth_time) AS latest_auth_time FROM AuthenticationLogs;",
      "SELECT * FROM CloudServiceLogs WHERE log_time > '2022-01-01';",
      "SELECT log_message, log_time FROM CloudServiceLogs WHERE service_name = 'Service A';",
      "SELECT COUNT(*) FROM ErrorLogs WHERE error_type = 'critical';",
      "SELECT AVG(log_time) FROM AuthenticationLogs WHERE user_id = 101;",
      "SELECT system_name, log_level FROM SystemLogs WHERE log_time BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT * FROM CloudServiceLogs INNER JOIN ErrorLogs ON CloudServiceLogs.log_id = ErrorLogs.log_id;",
      "SELECT service_name, log_message FROM CloudServiceLogs WHERE log_id IN (SELECT log_id FROM ErrorLogs WHERE error_type = 'warning');",
      "SELECT user_id, auth_status FROM AuthenticationLogs WHERE auth_time < '2022-12-31';",
      "SELECT system_name, log_level FROM SystemLogs WHERE log_time > (SELECT MAX(log_time) FROM ErrorLogs WHERE error_type = 'fatal');",
      "SELECT log_id, COUNT(*) FROM CloudServiceLogs GROUP BY log_id HAVING COUNT(*) > 1;",
      "SELECT service_name, COUNT(*) FROM CloudServiceLogs GROUP BY service_name ORDER BY COUNT(*) DESC LIMIT 3;",
      "SELECT user_id, MAX(auth_time) FROM AuthenticationLogs WHERE auth_status = 'success' GROUP BY user_id;",
      "SELECT DISTINCT service_name FROM CloudServiceLogs;",
      "SELECT service_name, COUNT(*) FROM CloudServiceLogs GROUP BY service_name HAVING COUNT(*) > 10;",
      "SELECT AVG(error_id) FROM ErrorLogs WHERE error_time <= '2022-06-30';",
      "SELECT log_id, MAX(auth_time) - MIN(auth_time) AS time_difference FROM AuthenticationLogs GROUP BY log_id;",
      "SELECT service_name, log_message, auth_status FROM CloudServiceLogs INNER JOIN AuthenticationLogs ON CloudServiceLogs.log_id = AuthenticationLogs.log_id;",
      "SELECT error_type, COUNT(*) FROM ErrorLogs GROUP BY error_type ORDER BY COUNT(*) DESC LIMIT 1;",
      "SELECT DISTINCT service_name, error_type FROM CloudServiceLogs INNER JOIN ErrorLogs ON CloudServiceLogs.log_id = ErrorLogs.log_id;",
      "SELECT user_id, AVG(auth_time) FROM AuthenticationLogs WHERE auth_status = 'success' GROUP BY user_id HAVING AVG(auth_time) > '2022-01-01';",
      "SELECT service_name, log_message, log_level FROM CloudServiceLogs INNER JOIN SystemLogs ON CloudServiceLogs.log_id = SystemLogs.log_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CloudServiceLogs;",
      "SELECT log_id, service_name FROM CloudServiceLogs WHERE log_timestamp > '2022-01-01';",
      "SELECT service_name, log_message FROM CloudServiceLogs WHERE log_id = 100;",
      "SELECT * FROM CloudServiceMetrics;",
      "SELECT metric_name, metric_value FROM CloudServiceMetrics WHERE metric_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM CloudServiceErrors;",
      "SELECT error_message, error_code FROM CloudServiceErrors WHERE service_name = 'ServiceA';",
      "SELECT * FROM CloudServiceUsers;",
      "SELECT username, email FROM CloudServiceUsers WHERE role = 'admin';",
      "SELECT * FROM CloudServiceSettings;",
      "SELECT setting_name, setting_value FROM CloudServiceSettings;",
      "SELECT * FROM CloudServiceLogs WHERE service_name = 'ServiceA' AND log_timestamp > '2022-01-01';",
      "SELECT * FROM CloudServiceMetrics WHERE metric_value > 100;",
      "SELECT * FROM CloudServiceErrors WHERE error_code = 404;",
      "SELECT * FROM CloudServiceUsers WHERE username = 'john_doe';",
      "SELECT * FROM CloudServiceSettings WHERE setting_name = 'EnableFeatureA';",
      "SELECT COUNT(*) FROM CloudServiceLogs;",
      "SELECT AVG(metric_value) FROM CloudServiceMetrics;",
      "SELECT MAX(error_timestamp) FROM CloudServiceErrors;",
      "SELECT DISTINCT service_name FROM CloudServiceUsers;",
      "SELECT * FROM CloudServiceLogs WHERE service_name = 'service1';",
      "SELECT log_id, log_message, log_timestamp FROM CloudServiceLogs WHERE log_timestamp >= '2022-01-01' AND log_timestamp <= '2022-02-01';",
      "SELECT service_name, COUNT(*) AS total_logs FROM CloudServiceLogs GROUP BY service_name HAVING total_logs > 100;",
      "SELECT * FROM CloudServiceMetrics WHERE metric_value > 100 AND metric_timestamp >= '2022-01-01';",
      "SELECT service_name, AVG(metric_value) AS avg_value FROM CloudServiceMetrics GROUP BY service_name;",
      "SELECT * FROM CloudServiceErrors WHERE error_code = 404 ORDER BY error_timestamp DESC;",
      "SELECT service_name, error_code, COUNT(*) AS total_errors FROM CloudServiceErrors GROUP BY service_name, error_code;",
      "SELECT * FROM CloudServiceUsers WHERE role = 'admin';",
      "SELECT username, email FROM CloudServiceUsers WHERE user_id IN (1, 2, 3);",
      "SELECT * FROM CloudServiceSettings WHERE setting_name LIKE '%notification%';",
      "SELECT setting_name, setting_value FROM CloudServiceSettings WHERE setting_value IS NOT NULL;",
      "SELECT * FROM CloudServiceLogs l JOIN CloudServiceMetrics m ON l.service_name = m.service_name;",
      "SELECT * FROM CloudServiceLogs l JOIN CloudServiceErrors e ON l.service_name = e.service_name;",
      "SELECT u.username, COUNT(*) AS total_logs FROM CloudServiceUsers u JOIN CloudServiceLogs l ON u.username = l.service_name GROUP BY u.username;",
      "SELECT u.username, AVG(m.metric_value) AS avg_metric FROM CloudServiceUsers u JOIN CloudServiceMetrics m ON u.username = m.service_name GROUP BY u.username;",
      "SELECT * FROM CloudServiceLogs WHERE log_id = (SELECT MAX(log_id) FROM CloudServiceLogs);",
      "SELECT * FROM CloudServiceMetrics WHERE metric_id IN (SELECT MIN(metric_id) FROM CloudServiceMetrics);",
      "SELECT * FROM CloudServiceErrors WHERE error_timestamp = (SELECT MAX(error_timestamp) FROM CloudServiceErrors);",
      "SELECT username, email, role FROM CloudServiceUsers WHERE username LIKE '%user%' AND role = 'viewer';",
      "SELECT * FROM CloudServiceSettings WHERE setting_value NOT LIKE '%disabled%';"
    ]
  }
]