[
  {
    "statements": [
      "SELECT * FROM robots WHERE robot_id = 1;",
      "SELECT robot_name FROM robots WHERE robot_id = 2;",
      "SELECT model_3d FROM robots WHERE robot_id = 3;",
      "SELECT design_specifications FROM robots WHERE robot_id = 4;",
      "SELECT * FROM robots WHERE robot_id > 5;",
      "SELECT robot_name, design_specifications FROM robots WHERE robot_id < 10;",
      "SELECT * FROM robots WHERE robot_id BETWEEN 5 AND 10;",
      "SELECT robot_name, model_3d FROM robots WHERE robot_id = 6;",
      "SELECT * FROM robots WHERE robot_name = 'Robot A';",
      "SELECT * FROM robots WHERE design_specifications LIKE '%advanced%';",
      "SELECT * FROM robots WHERE model_3d IS NOT NULL;",
      "SELECT robot_id, robot_name FROM robots WHERE model_3d IS NULL;",
      "SELECT DISTINCT robot_name FROM robots;",
      "SELECT COUNT(*) AS total_robots FROM robots;",
      "SELECT AVG(robot_id) AS average_id FROM robots;",
      "SELECT MAX(robot_id) AS max_id FROM robots;",
      "SELECT MIN(robot_id) AS min_id FROM robots;",
      "SELECT SUM(robot_id) AS total_id FROM robots;",
      "SELECT * FROM robots ORDER BY robot_id DESC;",
      "SELECT * FROM robots ORDER BY robot_name ASC;",
      "SELECT * FROM robots WHERE robot_id = 1;",
      "SELECT robot_name FROM robots WHERE robot_id > 10;",
      "SELECT COUNT(*) FROM robots WHERE robot_name LIKE 'A%';",
      "SELECT robot_name, model_3d FROM robots WHERE robot_id BETWEEN 5 AND 10;",
      "SELECT * FROM robots WHERE design_specifications IS NOT NULL;",
      "SELECT DISTINCT robot_name FROM robots;",
      "SELECT AVG(robot_id) FROM robots;",
      "SELECT robot_name FROM robots ORDER BY robot_id DESC;",
      "SELECT robot_name FROM robots WHERE model_3d = B'101010';",
      "SELECT * FROM robots WHERE design_specifications LIKE '%metal%';",
      "SELECT robot_name, design_specifications FROM robots WHERE robot_id IN (2, 4, 6);",
      "SELECT * FROM robots WHERE robot_name = 'R2D2';",
      "SELECT robot_name, model_3d FROM robots WHERE LENGTH(robot_name) > 5;",
      "SELECT * FROM robots WHERE robot_name IN ('C3PO', 'R2D2', 'BB8');",
      "SELECT robot_name, model_3d FROM robots WHERE robot_name LIKE '%robot%';",
      "SELECT COUNT(DISTINCT robot_name) FROM robots;",
      "SELECT * FROM robots WHERE LENGTH(design_specifications) > 100;",
      "SELECT robot_id, robot_name, model_3d FROM robots ORDER BY robot_id LIMIT 5;",
      "SELECT robot_name, LENGTH(design_specifications) AS spec_length FROM robots WHERE robot_id < 5;",
      "SELECT robot_name FROM robots WHERE design_specifications LIKE '%home%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Robots;",
      "SELECT robot_name, creation_date FROM Robots;",
      "SELECT robot_id, robot_name, creation_date FROM Robots WHERE robot_id = 1;",
      "SELECT robot_id, robot_description FROM Robots WHERE creation_date > '2022-01-01';",
      "SELECT design_id, robot_id, design_name FROM RobotDesigns;",
      "SELECT design_id, design_name, design_file FROM RobotDesigns WHERE robot_id = 1;",
      "SELECT R.robot_name, RD.design_name FROM Robots R INNER JOIN RobotDesigns RD ON R.robot_id = RD.robot_id;",
      "SELECT R.robot_name, RD.design_file FROM Robots R INNER JOIN RobotDesigns RD ON R.robot_id = RD.robot_id WHERE RD.design_name = 'Model X';",
      "SELECT RD.design_name, R.creation_date FROM Robots R LEFT JOIN RobotDesigns RD ON R.robot_id = RD.robot_id;",
      "SELECT RD.design_file, R.robot_description FROM RobotDesigns RD RIGHT JOIN Robots R ON R.robot_id = RD.robot_id;",
      "SELECT COUNT(*) FROM Robots;",
      "SELECT MAX(robot_id) FROM Robots;",
      "SELECT AVG(robot_id) FROM Robots;",
      "SELECT MIN(creation_date) FROM Robots;",
      "SELECT SUM(robot_id) FROM Robots;",
      "SELECT DISTINCT robot_name FROM Robots;",
      "SELECT robot_name AS name, creation_date AS date FROM Robots;",
      "SELECT robot_id, robot_name FROM Robots ORDER BY robot_id DESC;",
      "SELECT robot_name, COUNT(*) FROM Robots GROUP BY robot_name;",
      "SELECT robot_id, robot_name FROM Robots LIMIT 5 OFFSET 10;",
      "SELECT robot_name, creation_date FROM Robots WHERE robot_description LIKE '%AI%';",
      "SELECT robot_name, robot_description FROM Robots WHERE creation_date >= '2022-01-01';",
      "SELECT * FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id WHERE r.robot_name LIKE '%R2%';",
      "SELECT r.robot_name, rd.design_name FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id WHERE r.creation_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT COUNT(*) AS total_robots FROM Robots;",
      "SELECT r.robot_name, COUNT(rd.design_id) AS total_designs FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
      "SELECT r.robot_name, rd.design_name, COUNT(*) AS total_designs FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name, rd.design_name;",
      "SELECT r.robot_name, AVG(rd.design_id) AS avg_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
      "SELECT r.robot_name, SUM(rd.design_id) AS total_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
      "SELECT r.robot_name, MAX(rd.design_id) AS max_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
      "SELECT r.robot_name, MIN(rd.design_id) AS min_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
      "SELECT r.robot_name, AVG(DATEDIFF(current_date(), r.creation_date)) AS avg_days_since_creation FROM Robots r;",
      "SELECT r.robot_name, creation_date, DATE_FORMAT(creation_date, '%Y-%m-%d') AS formatted_date FROM Robots r;",
      "SELECT r.robot_name, rd.design_name, YEAR(creation_date) AS creation_year FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id;",
      "SELECT robot_name, STR_TO_DATE('2022-06-15', '%Y-%m-%d') AS target_date FROM Robots;",
      "SELECT robot_name, creation_date, DATE_ADD(creation_date, INTERVAL 1 YEAR) AS next_year FROM Robots;",
      "SELECT robot_name, creation_date, CASE WHEN creation_date < '2021-01-01' THEN 'Before_2021' ELSE '2021_or_later' END AS creation_period FROM Robots;",
      "SELECT robot_name, creation_date, IF(creation_date < '2021-01-01', 'Before_2021', '2021_or_later') AS creation_period FROM Robots;",
      "SELECT robot_name, robot_description, LENGTH(robot_description) AS description_length FROM Robots WHERE LENGTH(robot_description) > 100;",
      "SELECT robot_name, SUBSTRING(robot_description, 1, 50) AS first_50_chars FROM Robots;",
      "SELECT robot_name, robot_description, UPPER(robot_name) AS uppercase_name FROM Robots;",
      "SELECT robot_name, CONCAT(robot_name, ' - ', robot_description) AS robot_info FROM Robots;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Robots;",
      "SELECT robot_name, robot_material FROM Robots;",
      "SELECT robot_id, robot_name, robot_material FROM Robots WHERE robot_material='Metal';",
      "SELECT * FROM RobotDesigns;",
      "SELECT design_id, design_name FROM RobotDesigns WHERE design_version=1;",
      "SELECT * FROM RobotSpecifications;",
      "SELECT robot_name, spec_description, spec_weight FROM Robots JOIN RobotSpecifications ON Robots.robot_id = RobotSpecifications.robot_id;",
      "SELECT r.robot_name, rs.spec_description FROM Robots r INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT rs.spec_id, r.robot_name, rs.spec_weight FROM Robots r INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id ORDER BY rs.spec_weight DESC;",
      "SELECT r.robot_name, rd.design_name, rd.design_version FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id;",
      "SELECT r.robot_name, rd.design_name FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id;",
      "SELECT r.robot_name, rs.spec_description FROM Robots r RIGHT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT DISTINCT robot_material FROM Robots;",
      "SELECT COUNT(*) AS total_robots FROM Robots;",
      "SELECT AVG(spec_weight) AS avg_weight FROM RobotSpecifications;",
      "SELECT MAX(spec_height) AS max_height FROM RobotSpecifications;",
      "SELECT * FROM Robots WHERE robot_id=1;",
      "SELECT r.robot_name, rd.design_name, rd.design_version, rs.spec_description FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT robot_name, spec_weight FROM Robots JOIN RobotSpecifications ON Robots.robot_id = RobotSpecifications.robot_id WHERE spec_weight > 20;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id LEFT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT * FROM Robots;",
      "SELECT robot_id, robot_name FROM Robots WHERE robot_material = 'Metal';",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id LEFT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r RIGHT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id RIGHT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
      "SELECT r.robot_name, AVG(rs.spec_weight) AS avg_weight FROM Robots r JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id GROUP BY r.robot_name;",
      "SELECT r.robot_name, COUNT(rd.design_id) AS design_count FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
      "SELECT r.robot_name, MAX(rs.spec_height) AS max_height FROM Robots r JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id GROUP BY r.robot_name;",
      "SELECT DISTINCT r.robot_material FROM Robots r;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE rs.spec_height > 100;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id ORDER BY r.robot_name ASC;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id ORDER BY rs.spec_weight DESC;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id LIMIT 5;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id OFFSET 5;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id LIMIT 5 OFFSET 5;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE r.robot_name LIKE '%Model%';",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE rd.design_version = 2;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE r.robot_id = 5;",
      "SELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE r.robot_name = 'X-101';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Robots;",
      "SELECT robot_id, robot_name, created_at FROM Robots;",
      "SELECT robot_name, robot_description FROM Robots;",
      "SELECT * FROM RobotParts;",
      "SELECT part_id, part_name, part_type FROM RobotParts;",
      "SELECT part_name, part_weight FROM RobotParts;",
      "SELECT * FROM RobotModels;",
      "SELECT model_id, robot_id, model_name FROM RobotModels;",
      "SELECT model_name, model_description FROM RobotModels;",
      "SELECT * FROM DesignSpecifications;",
      "SELECT spec_id, model_id, spec_type FROM DesignSpecifications;",
      "SELECT spec_type, spec_details FROM DesignSpecifications;",
      "SELECT Robots.robot_name, RobotParts.part_name FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
      "SELECT Robots.robot_name, RobotModels.model_name, DesignSpecifications.spec_type FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, DesignSpecifications.spec_type FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, RobotModels.model_name, DesignSpecifications.spec_type FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
      "SELECT robot_name, COUNT(*) AS total_parts FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN RobotParts ON RobotModels.model_id = RobotParts.part_id GROUP BY robot_name;",
      "SELECT model_name, COUNT(*) AS total_specifications FROM RobotModels JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id GROUP BY model_name;",
      "SELECT robot_name, MAX(part_weight) AS heaviest_part FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN RobotParts ON RobotModels.model_id = RobotParts.part_id GROUP BY robot_name;",
      "SELECT robot_name, MIN(part_weight) AS lightest_part FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN RobotParts ON RobotModels.model_id = RobotParts.part_id GROUP BY robot_name;",
      "SELECT * FROM Robots;",
      "SELECT robot_name, robot_description FROM Robots WHERE robot_id = 1;",
      "SELECT model_name, model_description FROM RobotModels WHERE robot_id IN (1, 2);",
      "SELECT DISTINCT part_type FROM RobotParts;",
      "SELECT robot_name, model_name FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id;",
      "SELECT robot_name, part_name FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
      "SELECT * FROM Robots ORDER BY created_at DESC;",
      "SELECT model_name, spec_type FROM RobotModels JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
      "SELECT robot_name, model_name FROM Robots INNER JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id;",
      "SELECT robot_name, part_name FROM Robots LEFT JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
      "SELECT robot_name, part_name FROM Robots RIGHT JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
      "SELECT COUNT(*) FROM Robots;",
      "SELECT MIN(part_weight), MAX(part_weight) FROM RobotParts;",
      "SELECT AVG(part_weight) AS average_weight FROM RobotParts;",
      "SELECT robot_name, COUNT(DesignSpecifications.spec_id) AS spec_count FROM Robots LEFT JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id LEFT JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id GROUP BY Robots.robot_name;",
      "SELECT model_name, SUM(part_weight) AS total_weight FROM RobotModels JOIN RobotParts ON RobotModels.robot_id = RobotParts.part_id GROUP BY model_name;",
      "SELECT robot_name, model_name FROM Robots WHERE robot_id = 1 UNION SELECT robot_name, model_name FROM Robots WHERE created_at < '2022-01-01';",
      "SELECT robot_name, model_name FROM Robots WHERE EXISTS (SELECT * FROM RobotModels WHERE RobotModels.robot_id = Robots.robot_id);",
      "SELECT robot_name, model_name FROM Robots WHERE NOT EXISTS (SELECT * FROM RobotModels WHERE RobotModels.robot_id = Robots.robot_id);",
      "SELECT robot_name, model_name FROM Robots WHERE robot_id BETWEEN 1 AND 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Robots;",
      "SELECT robot_name, robot_type FROM Robots;",
      "SELECT * FROM RobotParts;",
      "SELECT part_name, part_category FROM RobotParts;",
      "SELECT * FROM RobotModels;",
      "SELECT model_name, model_description FROM RobotModels;",
      "SELECT * FROM RobotParameters;",
      "SELECT param_name, param_value FROM RobotParameters;",
      "SELECT * FROM ModelParts;",
      "SELECT model_id, part_id, quantity FROM ModelParts;",
      "SELECT Robots.robot_name, RobotParts.part_name FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id WHERE ModelParts.quantity > 5;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots LEFT JOIN ModelParts ON Robots.robot_id = ModelParts.model_id LEFT JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots RIGHT JOIN ModelParts ON Robots.robot_id = ModelParts.model_id RIGHT JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots INNER JOIN ModelParts ON Robots.robot_id = ModelParts.model_id INNER JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
      "SELECT Robots.robot_name, COUNT(*) AS total_parts FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
      "SELECT Robots.robot_name, SUM(ModelParts.quantity) AS total_quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
      "SELECT Robots.robot_name, AVG(ModelParts.quantity) AS avg_quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
      "SELECT Robots.robot_name, MAX(ModelParts.quantity) AS max_quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
      "SELECT * FROM Robots;",
      "SELECT robot_id, robot_name, robot_type FROM Robots WHERE robot_type = 'Humanoid';",
      "SELECT robot_name AS Name, robot_type AS Type FROM Robots WHERE robot_id = 3;",
      "SELECT COUNT(*) AS TotalRobots FROM Robots;",
      "SELECT RobotParts.part_name, RobotModels.model_name, ModelParts.quantity FROM RobotParts JOIN ModelParts ON RobotParts.part_id = ModelParts.part_id JOIN RobotModels ON ModelParts.model_id = RobotModels.model_id;",
      "SELECT Robots.robot_name, RobotModels.model_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotModels ON ModelParts.model_id = RobotModels.model_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id;",
      "SELECT RobotModels.model_name, COUNT(Robots.robot_id) AS TotalRobots FROM RobotModels JOIN ModelParts ON RobotModels.model_id = ModelParts.model_id JOIN Robots ON ModelParts.model_id = Robots.robot_id GROUP BY RobotModels.model_name;",
      "SELECT RobotModels.model_name, AVG(ModelParts.quantity) AS AvgQuantity FROM RobotModels JOIN ModelParts ON RobotModels.model_id = ModelParts.model_id GROUP BY RobotModels.model_name;",
      "SELECT Robots.robot_name, COUNT(ModelParts.part_id) AS TotalParts FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id GROUP BY Robots.robot_name;",
      "SELECT RobotModels.model_name, SUM(ModelParts.quantity) AS TotalQuantity FROM RobotModels JOIN ModelParts ON RobotModels.model_id = ModelParts.model_id GROUP BY RobotModels.model_name;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE ModelParts.quantity > 10;",
      "SELECT Robots.robot_name, RobotParts.part_category FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE ModelParts.quantity > 5;",
      "SELECT Robots.robot_name, RobotParts.part_name, RobotParts.part_category, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE ModelParts.quantity BETWEEN 5 AND 10;",
      "SELECT RobotModels.model_name, RobotParameters.param_name, RobotParameters.param_value FROM RobotModels JOIN RobotParameters ON RobotModels.model_id = RobotParameters.param_id;",
      "SELECT Robots.robot_name, RobotParts.part_name, RobotParts.part_color FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE RobotParts.part_color IS NOT NULL;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id ORDER BY ModelParts.quantity DESC;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id ORDER BY RobotParts.part_name ASC;",
      "SELECT DISTINCT Robots.robot_name FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id WHERE ModelParts.quantity > 5;",
      "SELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id GROUP BY Robots.robot_name HAVING SUM(ModelParts.quantity) > 20;"
    ]
  }
]