[
  {
    "statements": [
      "SELECT * FROM components;",
      "SELECT component_id, component_name FROM components;",
      "SELECT component_id, quantity FROM components WHERE price > 50;",
      "SELECT component_name, price FROM components WHERE quantity < 10;",
      "SELECT COUNT(*) FROM components;",
      "SELECT component_id, component_name, quantity FROM components WHERE price > 100 AND quantity > 5;",
      "SELECT AVG(price) FROM components;",
      "SELECT MAX(price) FROM components;",
      "SELECT MIN(price) FROM components;",
      "SELECT SUM(quantity) FROM components WHERE price < 50;",
      "SELECT component_id, component_name, price * quantity AS total_price FROM components;",
      "SELECT * FROM components ORDER BY price DESC;",
      "SELECT component_id, component_name, price FROM components WHERE quantity < 5 ORDER BY price ASC;",
      "SELECT * FROM components WHERE component_name LIKE 'CPU%';",
      "SELECT * FROM components WHERE price BETWEEN 50 AND 100;",
      "SELECT component_name, quantity FROM components WHERE component_name IN ('RAM', 'SSD');",
      "SELECT DISTINCT component_name FROM components;",
      "SELECT * FROM components WHERE quantity = (SELECT MAX(quantity) FROM components);",
      "SELECT component_id, component_name, price FROM components WHERE price = (SELECT MAX(price) FROM components);",
      "SELECT component_id, component_name, price FROM components WHERE price = (SELECT MIN(price) FROM components);",
      "SELECT * FROM components WHERE component_id = 1;",
      "SELECT component_name, price FROM components WHERE quantity > 10;",
      "SELECT component_id, quantity, price FROM components WHERE price < 50.00;",
      "SELECT * FROM components WHERE component_name LIKE '%processor%';",
      "SELECT component_id, SUM(quantity) AS total_quantity FROM components GROUP BY component_id;",
      "SELECT AVG(price) AS avg_price FROM components;",
      "SELECT component_name, (price * quantity) AS total_cost FROM components;",
      "SELECT * FROM components ORDER BY price DESC;",
      "SELECT component_name, AVG(price) AS avg_price FROM components GROUP BY component_name;",
      "SELECT COUNT(*) AS total_components FROM components;",
      "SELECT component_id, quantity, price FROM components WHERE component_name = 'RAM';",
      "SELECT MAX(price) AS highest_price FROM components;",
      "SELECT component_id, quantity, price FROM components WHERE price BETWEEN 20.00 AND 50.00;",
      "SELECT * FROM components WHERE quantity >= 5 AND price < 100.00;",
      "SELECT component_id, component_name, quantity FROM components WHERE price > 50.00 ORDER BY component_name;",
      "SELECT component_name, SUM(quantity) AS total_quantity FROM components GROUP BY component_name HAVING total_quantity > 100;",
      "SELECT DISTINCT component_name FROM components;",
      "SELECT * FROM components WHERE quantity < 5 OR price > 200.00;",
      "SELECT component_id, component_name, price FROM components WHERE quantity > 0 AND price < 50.00;",
      "SELECT component_id, component_name, price FROM components WHERE component_id IN (1, 3, 5);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM robot_components;",
      "SELECT component_name, quantity FROM robot_components;",
      "SELECT * FROM component_suppliers;",
      "SELECT supplier_name, component_id FROM component_suppliers;",
      "SELECT component_id, supplier_address FROM component_suppliers;",
      "SELECT * FROM robot_components WHERE quantity > 5;",
      "SELECT * FROM robot_components WHERE component_name = 'Sensor';",
      "SELECT component_id, component_name FROM robot_components WHERE quantity < 10;",
      "SELECT component_id, supplier_name FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id;",
      "SELECT * FROM robot_components WHERE quantity > 3 AND quantity < 10;",
      "SELECT * FROM component_suppliers WHERE supplier_name = 'ABC Suppliers';",
      "SELECT supplier_name, supplier_address FROM component_suppliers WHERE component_id = 1;",
      "SELECT component_name, quantity FROM robot_components WHERE component_name LIKE 'A%';",
      "SELECT * FROM robot_components WHERE component_name LIKE '%motor%';",
      "SELECT * FROM component_suppliers WHERE component_id IN (1, 2, 3);",
      "SELECT supplier_name, supplier_address FROM component_suppliers WHERE supplier_address IS NOT NULL;",
      "SELECT COUNT(*) FROM robot_components;",
      "SELECT MIN(quantity), MAX(quantity) FROM robot_components;",
      "SELECT AVG(quantity) FROM robot_components;",
      "SELECT component_name, SUM(quantity) FROM robot_components GROUP BY component_name;",
      "SELECT supplier_name, COUNT(*) FROM component_suppliers GROUP BY supplier_name;",
      "SELECT * FROM robot_components;",
      "SELECT component_name, quantity FROM robot_components WHERE quantity > 10;",
      "SELECT component_name, supplier_name FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id;",
      "SELECT component_name, supplier_name FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE supplier_name = 'Supplier ABC';",
      "SELECT component_name, quantity, supplier_name, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id ORDER BY quantity DESC;",
      "SELECT component_name, SUM(quantity) AS total_quantity FROM robot_components GROUP BY component_name;",
      "SELECT supplier_name, COUNT(component_id) AS total_components FROM component_suppliers GROUP BY supplier_name;",
      "SELECT component_name, supplier_name, COUNT(*) AS total_suppliers FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id GROUP BY component_name, supplier_name;",
      "SELECT component_name, supplier_name, MAX(quantity) AS max_quantity FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id GROUP BY component_name, supplier_name;",
      "SELECT component_name, supplier_name, AVG(quantity) AS avg_quantity, MIN(quantity) AS min_quantity FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id GROUP BY component_name, supplier_name;",
      "SELECT component_name, supplier_name, SUM(quantity) AS total_quantity FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE supplier_address LIKE '%Street%' GROUP BY component_name, supplier_name;",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE supplier_id IN (SELECT supplier_id FROM component_suppliers WHERE supplier_name = 'Supplier XYZ');",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE component_name LIKE '%motor%' AND supplier_address NOT LIKE '%PO Box%';",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE quantity >= 20 AND supplier_name IN ('Supplier A', 'Supplier B');",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE quantity BETWEEN 15 AND 25;",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE supplier_address IS NOT NULL;",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE quantity = (SELECT MAX(quantity) FROM robot_components);",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE quantity = (SELECT MIN(quantity) FROM robot_components);",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE supplier_name = (SELECT supplier_name FROM component_suppliers WHERE component_id = 1);",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE component_id IN (SELECT component_id FROM component_suppliers WHERE supplier_id = 1);",
      "SELECT component_name, supplier_name, quantity, supplier_address FROM robot_components JOIN component_suppliers ON robot_components.component_id = component_suppliers.component_id WHERE component_name = 'Motor' AND supplier_name = 'Supplier ABC' AND quantity = 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM robot_components;",
      "SELECT component_name, quantity FROM robot_components;",
      "SELECT * FROM warehouses;",
      "SELECT warehouse_name, location FROM warehouses;",
      "SELECT * FROM shipments;",
      "SELECT component_id, quantity FROM robot_components WHERE warehouse_id = 1;",
      "SELECT component_id, shipped_date FROM shipments WHERE warehouse_id = 2;",
      "SELECT component_name, quantity FROM robot_components WHERE quantity > 10;",
      "SELECT * FROM robot_components WHERE quantity BETWEEN 5 AND 10;",
      "SELECT * FROM shipments WHERE shipped_date IS NOT NULL;",
      "SELECT component_name, quantity FROM robot_components WHERE component_name LIKE 'Robo%';",
      "SELECT shipment_id, received_date FROM shipments WHERE received_date >= '2023-01-01';",
      "SELECT component_id, quantity FROM robot_components WHERE component_name = 'Arm';",
      "SELECT * FROM warehouses WHERE location LIKE '%California%';",
      "SELECT warehouse_id, warehouse_name FROM warehouses WHERE warehouse_id = 3;",
      "SELECT * FROM robot_components ORDER BY quantity DESC;",
      "SELECT COUNT(*) AS total_shipments FROM shipments;",
      "SELECT AVG(quantity) AS average_quantity FROM robot_components;",
      "SELECT MAX(quantity) AS max_quantity FROM robot_components;",
      "SELECT MIN(quantity) AS min_quantity FROM robot_components;",
      "SELECT * FROM robot_components WHERE quantity > 10;",
      "SELECT robot_components.component_name, robot_components.quantity, warehouses.warehouse_name FROM robot_components JOIN warehouses ON robot_components.warehouse_id = warehouses.warehouse_id;",
      "SELECT * FROM shipments WHERE shipped_date < '2022-01-01' AND received_date > '2022-01-10';",
      "SELECT component_id, component_name, quantity, warehouse_id FROM robot_components WHERE warehouse_id IS NULL;",
      "SELECT warehouse_name, location, COUNT(*) AS total_shipments FROM warehouses JOIN shipments ON warehouses.warehouse_id = shipments.warehouse_id GROUP BY warehouse_name, location;",
      "SELECT component_name, SUM(quantity) AS total_quantity FROM robot_components GROUP BY component_name;",
      "SELECT component_name, warehouse_name, shipments.quantity FROM shipments JOIN robot_components ON shipments.component_id = robot_components.component_id JOIN warehouses ON shipments.warehouse_id = warehouses.warehouse_id WHERE shipments.quantity > 20;",
      "SELECT DISTINCT warehouse_id FROM shipments WHERE received_date IS NULL;",
      "SELECT * FROM robot_components WHERE component_name LIKE '%arm%' AND quantity >= 5;",
      "SELECT shipment_id, component_name, warehouse_name, shipped_date, received_date FROM shipments JOIN robot_components ON shipments.component_id = robot_components.component_id JOIN warehouses ON shipments.warehouse_id = warehouses.warehouse_id WHERE shipped_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT AVG(quantity) AS average_quantity FROM robot_components;",
      "SELECT warehouse_id, SUM(quantity) AS total_quantity FROM robot_components GROUP BY warehouse_id ORDER BY total_quantity DESC;",
      "SELECT MAX(quantity) AS max_quantity FROM robot_components;",
      "SELECT MIN(quantity) AS min_quantity FROM robot_components;",
      "SELECT * FROM warehouses WHERE warehouse_id IN (SELECT warehouse_id FROM shipments WHERE quantity > 10);",
      "SELECT component_id, component_name, quantity, warehouse_id, location FROM robot_components JOIN warehouses ON robot_components.warehouse_id = warehouses.warehouse_id;",
      "SELECT COUNT(DISTINCT warehouse_id) AS total_warehouses FROM robot_components;",
      "SELECT warehouse_name, location, COUNT(*) AS total_shipments FROM warehouses LEFT JOIN shipments ON warehouses.warehouse_id = shipments.warehouse_id GROUP BY warehouse_name, location;",
      "SELECT * FROM robot_components WHERE component_id BETWEEN 100 AND 200;",
      "SELECT component_name, SUM(quantity) AS total_quantity FROM robot_components GROUP BY component_name HAVING total_quantity > 100;",
      "SELECT * FROM shipments WHERE component_id IN (SELECT component_id FROM robot_components WHERE quantity < 5);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM RobotComponents;",
      "SELECT component_name, quantity FROM RobotComponents;",
      "SELECT component_name, price FROM RobotComponents WHERE quantity > 10;",
      "SELECT * FROM ComponentSuppliers;",
      "SELECT supplier_name, supplier_location FROM ComponentSuppliers;",
      "SELECT * FROM ComponentInventory;",
      "SELECT component_id, quantity_in_stock FROM ComponentInventory WHERE quantity_in_stock < 50;",
      "SELECT * FROM ComponentOrders;",
      "SELECT component_id, order_date, quantity_ordered FROM ComponentOrders WHERE delivery_status = 'Pending';",
      "SELECT component_name, price FROM RobotComponents JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id;",
      "SELECT supplier_name, supplier_location, contact_email FROM ComponentSuppliers WHERE supplier_location = 'New York';",
      "SELECT * FROM RobotComponents WHERE price > 100.00;",
      "SELECT supplier_name, supplier_location FROM ComponentSuppliers WHERE supplier_name LIKE '%Tech%';",
      "SELECT component_name, quantity FROM RobotComponents WHERE component_name LIKE 'Arm%';",
      "SELECT * FROM ComponentInventory WHERE last_stock_update > '2022-01-01';",
      "SELECT * FROM ComponentOrders WHERE order_date between '2022-01-01' AND '2022-03-31';",
      "SELECT component_name, quantity FROM RobotComponents ORDER BY quantity DESC;",
      "SELECT component_name, price FROM RobotComponents ORDER BY price ASC;",
      "SELECT supplier_name, supplier_location FROM ComponentSuppliers ORDER BY supplier_name;",
      "SELECT * FROM ComponentInventory ORDER BY quantity_in_stock DESC;",
      "SELECT * FROM RobotComponents;",
      "SELECT component_name, quantity FROM RobotComponents WHERE price > 100;",
      "SELECT supplier_name, supplier_location FROM ComponentSuppliers;",
      "SELECT * FROM ComponentInventory WHERE quantity_in_stock < 10;",
      "SELECT component_id, order_date FROM ComponentOrders WHERE delivery_status = 'Pending';",
      "SELECT component_name, quantity_in_stock FROM RobotComponents JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id;",
      "SELECT component_name, supplier_name FROM RobotComponents JOIN ComponentSuppliers ON RobotComponents.component_id = ComponentSuppliers.supplier_id;",
      "SELECT RobotComponents.component_id, ComponentOrders.quantity_ordered FROM RobotComponents JOIN ComponentOrders ON RobotComponents.component_id = ComponentOrders.component_id WHERE ComponentOrders.quantity_ordered > 5;",
      "SELECT supplier_name, contact_email FROM ComponentSuppliers WHERE supplier_location = 'New York';",
      "SELECT component_name, quantity_ordered FROM RobotComponents JOIN ComponentOrders ON RobotComponents.component_id = ComponentOrders.component_id WHERE ComponentOrders.order_date BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT supplier_name, quantity_in_stock FROM ComponentSuppliers JOIN ComponentInventory ON ComponentSuppliers.supplier_id = ComponentInventory.inventory_id;",
      "SELECT * FROM ComponentOrders WHERE order_date >= '2022-03-01' AND order_date <= '2022-03-31';",
      "SELECT component_name, component_id, quantity FROM RobotComponents ORDER BY quantity DESC;",
      "SELECT component_name, order_date FROM RobotComponents JOIN ComponentOrders ON RobotComponents.component_id = ComponentOrders.component_id ORDER BY order_date ASC;",
      "SELECT component_name, quantity_in_stock, delivery_status FROM RobotComponents JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id JOIN ComponentOrders ON RobotComponents.component_id = ComponentOrders.component_id WHERE ComponentOrders.delivery_status = 'Delivered';",
      "SELECT supplier_name, supplier_location, last_stock_update FROM ComponentSuppliers JOIN ComponentInventory ON ComponentSuppliers.supplier_id = ComponentInventory.inventory_id;",
      "SELECT COUNT(*) AS total_components FROM RobotComponents;",
      "SELECT AVG(price) AS average_price FROM RobotComponents;",
      "SELECT MAX(quantity_in_stock) AS max_stock FROM ComponentInventory;",
      "SELECT supplier_name, SUM(quantity_ordered) AS total_ordered FROM ComponentSuppliers JOIN ComponentOrders ON ComponentSuppliers.supplier_id = ComponentOrders.order_id GROUP BY supplier_name HAVING total_ordered > 100;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM RobotComponents;",
      "SELECT component_name, quantity FROM RobotComponents;",
      "SELECT * FROM ComponentSuppliers;",
      "SELECT supplier_name, supplier_location FROM ComponentSuppliers;",
      "SELECT * FROM ComponentInventory;",
      "SELECT inventory_id, quantity_in_stock FROM ComponentInventory;",
      "SELECT * FROM RobotAssemblies;",
      "SELECT assembly_name, assembly_date FROM RobotAssemblies;",
      "SELECT * FROM AssemblyWorkers;",
      "SELECT worker_name FROM AssemblyWorkers;",
      "SELECT rc.component_name, ci.quantity_in_stock FROM RobotComponents rc JOIN ComponentInventory ci ON rc.component_id = ci.component_id;",
      "SELECT rs.supplier_name, ci.quantity_in_stock FROM ComponentSuppliers rs JOIN ComponentInventory ci ON rs.supplier_id = ci.inventory_id;",
      "SELECT ra.assembly_name, rw.worker_name FROM RobotAssemblies ra JOIN AssemblyWorkers rw ON ra.assembly_id = rw.assembly_id;",
      "SELECT rc.component_name, ci.quantity_in_stock FROM RobotComponents rc, ComponentInventory ci WHERE rc.component_id = ci.component_id;",
      "SELECT rs.supplier_name, ci.quantity_in_stock FROM ComponentSuppliers rs, ComponentInventory ci WHERE rs.supplier_id = ci.inventory_id;",
      "SELECT ra.assembly_name, rw.worker_name FROM RobotAssemblies ra, AssemblyWorkers rw WHERE ra.assembly_id = rw.assembly_id;",
      "SELECT rc.component_name, rc.component_type FROM RobotComponents rc WHERE rc.quantity > 0;",
      "SELECT rs.supplier_name, rs.contact_email FROM ComponentSuppliers rs;",
      "SELECT ra.assembly_name, ra.total_components_used FROM RobotAssemblies ra WHERE ra.total_components_used >= 10;",
      "SELECT rw.worker_name, ra.assembly_date FROM AssemblyWorkers rw JOIN RobotAssemblies ra ON ra.assembly_id = rw.assembly_id;",
      "SELECT * FROM RobotComponents WHERE quantity > 100;",
      "SELECT component_name, component_type FROM RobotComponents WHERE component_type = 'Arm';",
      "SELECT supplier_name, supplier_location FROM ComponentSuppliers WHERE supplier_location LIKE '%California%';",
      "SELECT component_name, quantity_in_stock FROM RobotComponents INNER JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id;",
      "SELECT assembly_name, assembly_date FROM RobotAssemblies WHERE total_components_used >= 10;",
      "SELECT worker_name, assembly_name FROM AssemblyWorkers INNER JOIN RobotAssemblies ON AssemblyWorkers.assembly_id = RobotAssemblies.assembly_id;",
      "SELECT supplier_name, component_name FROM ComponentSuppliers INNER JOIN RobotComponents ON ComponentSuppliers.supplier_id = RobotComponents.component_id;",
      "SELECT component_name, quantity_in_stock FROM RobotComponents INNER JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id WHERE quantity_in_stock < 50;",
      "SELECT component_name, quantity_in_stock FROM RobotComponents INNER JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id ORDER BY quantity_in_stock DESC;",
      "SELECT worker_name, assembly_name, assembly_date FROM AssemblyWorkers INNER JOIN RobotAssemblies ON AssemblyWorkers.assembly_id = RobotAssemblies.assembly_id ORDER BY assembly_date DESC, worker_name ASC;",
      "SELECT supplier_name, component_name, quantity_in_stock FROM ComponentSuppliers INNER JOIN RobotComponents ON ComponentSuppliers.supplier_id = RobotComponents.component_id INNER JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id WHERE quantity_in_stock > 0 ORDER BY supplier_name ASC;",
      "SELECT component_name, quantity_in_stock FROM RobotComponents INNER JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id WHERE quantity_in_stock = (SELECT MAX(quantity_in_stock) FROM ComponentInventory);",
      "SELECT assembly_name, SUM(total_components_used) AS total_components FROM RobotAssemblies GROUP BY assembly_name ORDER BY total_components DESC;",
      "SELECT worker_name, COUNT(assembly_id) AS total_assemblies FROM AssemblyWorkers GROUP BY worker_name ORDER BY total_assemblies DESC;",
      "SELECT supplier_name, COUNT(component_id) AS total_components FROM ComponentSuppliers INNER JOIN RobotComponents ON ComponentSuppliers.supplier_id = RobotComponents.component_id GROUP BY supplier_name ORDER BY total_components DESC;",
      "SELECT assembly_name, AVG(total_components_used) AS average_components FROM RobotAssemblies GROUP BY assembly_name HAVING AVG(total_components_used) > 5;",
      "SELECT component_type, COUNT(component_id) AS total_components FROM RobotComponents GROUP BY component_type HAVING COUNT(component_id) > 2;",
      "SELECT component_name, quantity_in_stock FROM RobotComponents INNER JOIN ComponentInventory ON RobotComponents.component_id = ComponentInventory.component_id WHERE component_name LIKE '%Sensor%' OR component_name LIKE '%Actuator%';",
      "SELECT supplier_name, supplier_location, COUNT(component_id) AS total_components FROM ComponentSuppliers INNER JOIN RobotComponents ON ComponentSuppliers.supplier_id = RobotComponents.component_id GROUP BY supplier_name, supplier_location HAVING COUNT(component_id) > 1;",
      "SELECT assembly_name, assembly_date, total_components_used FROM RobotAssemblies WHERE assembly_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT worker_name, assembly_name, assembly_date FROM AssemblyWorkers INNER JOIN RobotAssemblies ON AssemblyWorkers.assembly_id = RobotAssemblies.assembly_id WHERE assembly_date >= '2022-02-01';"
    ]
  }
]