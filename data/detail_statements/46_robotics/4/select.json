[
  {
    "statements": [
      "SELECT * FROM robot_performance_metrics WHERE robot_id = 1;",
      "SELECT robot_name, performance_score FROM robot_performance_metrics WHERE battery_level > 50;",
      "SELECT robot_name, battery_level, timestamp FROM robot_performance_metrics WHERE performance_score < 0.5;",
      "SELECT DISTINCT robot_id FROM robot_performance_metrics;",
      "SELECT COUNT(*) FROM robot_performance_metrics;",
      "SELECT AVG(performance_score) FROM robot_performance_metrics;",
      "SELECT MAX(battery_level) FROM robot_performance_metrics;",
      "SELECT robot_id, robot_name, performance_score FROM robot_performance_metrics WHERE performance_score BETWEEN 0.5 AND 0.8;",
      "SELECT robot_name AS name, timestamp AS last_updated FROM robot_performance_metrics WHERE robot_id = 2;",
      "SELECT * FROM robot_performance_metrics WHERE performance_score IS NULL;",
      "SELECT * FROM robot_performance_metrics WHERE timestamp > '2022-01-01';",
      "SELECT robot_name, battery_level FROM robot_performance_metrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT robot_name, performance_score FROM robot_performance_metrics ORDER BY performance_score DESC;",
      "SELECT robot_name, battery_level FROM robot_performance_metrics ORDER BY battery_level ASC;",
      "SELECT robot_name, performance_score, battery_level FROM robot_performance_metrics ORDER BY timestamp DESC;",
      "SELECT * FROM robot_performance_metrics LIMIT 5;",
      "SELECT * FROM robot_performance_metrics OFFSET 10;",
      "SELECT * FROM robot_performance_metrics WHERE robot_id IN (1, 3, 5);",
      "SELECT robot_name, performance_score FROM robot_performance_metrics WHERE robot_name LIKE 'R%';",
      "SELECT robot_name, performance_score FROM robot_performance_metrics WHERE battery_level > 80 OR performance_score < 0.3;",
      "SELECT robot_id, robot_name FROM robot_performance_metrics WHERE performance_score > 0.5 ORDER BY performance_score DESC LIMIT 5",
      "SELECT * FROM robot_performance_metrics WHERE battery_level < 20 AND timestamp > '2022-01-01'",
      "SELECT robot_name, AVG(performance_score) AS avg_score FROM robot_performance_metrics GROUP BY robot_name HAVING AVG(performance_score) > 0.8",
      "SELECT COUNT(robot_id) AS total_robots FROM robot_performance_metrics",
      "SELECT robot_name, MAX(battery_level) AS max_battery FROM robot_performance_metrics WHERE performance_score < 0.3",
      "SELECT * FROM robot_performance_metrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT robot_name, SUM(battery_level) AS total_battery FROM robot_performance_metrics GROUP BY robot_name",
      "SELECT DISTINCT robot_name FROM robot_performance_metrics",
      "SELECT AVG(performance_score) AS avg_score, MAX(battery_level) AS max_battery FROM robot_performance_metrics",
      "SELECT robot_name, performance_score FROM robot_performance_metrics WHERE battery_level > 50 ORDER BY performance_score DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM robot_metrics;",
      "SELECT robot_id, timestamp FROM robot_metrics WHERE performance_metric > 0.8;",
      "SELECT * FROM robot_metrics WHERE timestamp > '2022-01-01';",
      "SELECT * FROM robot_metrics ORDER BY timestamp DESC;",
      "SELECT robot_id, COUNT(*) AS error_count FROM robot_errors GROUP BY robot_id;",
      "SELECT robot_id, timestamp, error_message FROM robot_errors WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT robot_id, AVG(performance_metric) AS avg_performance FROM robot_metrics GROUP BY robot_id;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics INNER JOIN robot_errors ON robot_metrics.robot_id = robot_errors.robot_id WHERE robot_errors.error_message LIKE '%critical%';",
      "SELECT robot_id, MIN(performance_metric) AS min_performance, MAX(performance_metric) AS max_performance FROM robot_metrics GROUP BY robot_id;",
      "SELECT * FROM robot_metrics WHERE performance_metric BETWEEN 0.5 AND 0.8;",
      "SELECT robot_errors.error_id, robot_errors.timestamp, robot_metrics.performance_metric FROM robot_errors INNER JOIN robot_metrics ON robot_errors.robot_id = robot_metrics.robot_id ORDER BY robot_errors.timestamp ASC;",
      "SELECT robot_id, COUNT(DISTINCT error_message) AS unique_errors FROM robot_errors GROUP BY robot_id;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE robot_id IN (1, 2, 3);",
      "SELECT robot_id, SUM(performance_metric) AS total_performance FROM robot_metrics GROUP BY robot_id;",
      "SELECT * FROM robot_metrics WHERE performance_metric > (SELECT AVG(performance_metric) FROM robot_metrics);",
      "SELECT robot_id, timestamp, error_message FROM robot_errors WHERE robot_id = 5 AND error_message LIKE '%error%';",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE robot_id NOT IN (SELECT robot_id FROM robot_errors);",
      "SELECT robot_id, COUNT(*) AS error_count FROM robot_errors HAVING error_count > 5;",
      "SELECT robot_id, timestamp, error_message FROM robot_errors WHERE error_message IN ('connection error', 'system error');",
      "SELECT robot_id, timestamp, error_message FROM robot_errors WHERE robot_id = (SELECT robot_id FROM robot_metrics WHERE performance_metric = (SELECT MAX(performance_metric) FROM robot_metrics));",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE robot_id = 1;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE performance_metric > 0.8;",
      "SELECT robot_id, timestamp, AVG(performance_metric) AS average_performance FROM robot_metrics GROUP BY robot_id;",
      "SELECT r.robot_id, r.timestamp, r.performance_metric, e.error_message FROM robot_metrics r LEFT JOIN robot_errors e ON r.robot_id = e.robot_id;",
      "SELECT robot_id, COUNT(*) AS total_errors FROM robot_errors GROUP BY robot_id;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE TIMESTAMPDIFF(SECOND, timestamp, NOW()) < 3600;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-02-01 00:00:00';",
      "SELECT robot_id, MAX(performance_metric) AS max_performance FROM robot_metrics GROUP BY robot_id;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE performance_metric < (SELECT AVG(performance_metric) FROM robot_metrics);",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE robot_id IN (SELECT robot_id FROM robot_errors WHERE error_message LIKE '%fatal%');",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE robot_id = (SELECT robot_id FROM robot_metrics ORDER BY performance_metric DESC LIMIT 1);",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE timestamp >= '2022-01-01 00:00:00' AND timestamp <= '2022-03-01 00:00:00';",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE TIMESTAMPDIFF(DAY, timestamp, NOW()) < 30;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE robot_id IN (SELECT robot_id FROM robot_errors GROUP BY robot_id HAVING COUNT(*) > 3);",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE timestamp = (SELECT MAX(timestamp) FROM robot_metrics);",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE performance_metric > (SELECT performance_metric FROM robot_metrics WHERE robot_id = 2);",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics JOIN robot_errors ON robot_metrics.robot_id = robot_errors.robot_id;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE performance_metric < (SELECT performance_metric FROM robot_metrics WHERE robot_id = 2) ORDER BY performance_metric ASC;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE performance_metric > (SELECT performance_metric FROM robot_metrics WHERE robot_id = 2) ORDER BY timestamp DESC;",
      "SELECT robot_id, timestamp, performance_metric FROM robot_metrics WHERE robot_id = 1 OR robot_id = 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM robot_metrics;",
      "SELECT robot_id, metric_name, metric_value FROM robot_metrics WHERE metric_name = 'battery_level';",
      "SELECT robot_id, metric_name, metric_value FROM robot_metrics WHERE robot_id = 1;",
      "SELECT * FROM robot_configuration;",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration WHERE configuration_key = 'startup_mode';",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration WHERE robot_id = 2;",
      "SELECT * FROM robot_errors;",
      "SELECT robot_id, error_code, error_description FROM robot_errors WHERE error_code = 404;",
      "SELECT robot_id, error_code, error_description FROM robot_errors WHERE robot_id = 3;",
      "SELECT * FROM robot_metrics WHERE robot_id = 1 AND metric_timestamp >= '2022-01-01 00:00:00';",
      "SELECT robot_id, metric_name, metric_value FROM robot_metrics WHERE robot_id = 2 AND metric_name = 'battery_level';",
      "SELECT * FROM robot_configuration WHERE robot_id = 3 AND configuration_value = 'manual_mode';",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration WHERE configuration_key LIKE '%mode%';",
      "SELECT * FROM robot_errors WHERE robot_id = 1 AND error_timestamp >= '2022-01-15 00:00:00';",
      "SELECT robot_id, error_code, error_description FROM robot_errors WHERE robot_id = 2 AND error_code = 500;",
      "SELECT * FROM robot_metrics WHERE robot_id = 3 AND metric_value >= 50.0;",
      "SELECT robot_id, metric_name, metric_value FROM robot_metrics WHERE metric_name LIKE '%temperature%';",
      "SELECT * FROM robot_configuration WHERE robot_id = 1;",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration WHERE robot_id = 2 AND configuration_key = 'startup_mode';",
      "SELECT * FROM robot_errors WHERE robot_id = 3;",
      "SELECT * FROM robot_metrics WHERE robot_id = 1;",
      "SELECT metric_name, metric_value FROM robot_metrics WHERE metric_value > 10.0;",
      "SELECT robot_id, count(*) as error_count FROM robot_errors GROUP BY robot_id;",
      "SELECT robot_id, AVG(metric_value) as avg_metric_value FROM robot_metrics GROUP BY robot_id;",
      "SELECT * FROM robot_metrics WHERE metric_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT robot_id, metric_name, MAX(metric_value) as max_metric_value FROM robot_metrics GROUP BY robot_id, metric_name;",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration WHERE robot_id = 2;",
      "SELECT robot_id, metric_name, COUNT(*) as metric_count FROM robot_metrics WHERE metric_value < 5.0 GROUP BY robot_id, metric_name;",
      "SELECT robot_id, error_code, error_description FROM robot_errors WHERE error_timestamp >= '2022-01-01';",
      "SELECT robot_id, AVG(metric_value) as avg_metric_value FROM robot_metrics WHERE metric_timestamp >= '2022-01-01' GROUP BY robot_id;",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration WHERE configuration_key LIKE '%size%';",
      "SELECT robot_id, metric_name, MIN(metric_value) as min_metric_value FROM robot_metrics WHERE metric_timestamp >= '2022-01-01' GROUP BY robot_id, metric_name;",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration ORDER BY configuration_key DESC;",
      "SELECT robot_id, metric_name, SUM(metric_value) as total_metric_value FROM robot_metrics WHERE metric_value > 0 GROUP BY robot_id, metric_name;",
      "SELECT robot_id, configuration_key, COUNT(*) as config_count FROM robot_configuration GROUP BY robot_id, configuration_key;",
      "SELECT robot_id, error_code, error_description FROM robot_errors ORDER BY error_timestamp DESC;",
      "SELECT robot_id, metric_name, AVG(metric_value) as avg_metric_value FROM robot_metrics GROUP BY robot_id, metric_name HAVING AVG(metric_value) > 5.0;",
      "SELECT robot_id, configuration_key, configuration_value FROM robot_configuration WHERE configuration_value IN ('small', 'medium', 'large');",
      "SELECT robot_id, MIN(metric_value) as min_metric_value, MAX(metric_value) as max_metric_value FROM robot_metrics GROUP BY robot_id;",
      "SELECT robot_id, metric_name, COUNT(*) as metric_count FROM robot_metrics WHERE metric_timestamp BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY robot_id, metric_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM RobotMetrics;",
      "SELECT RobotID, Date, CPUUtilization FROM RobotMetrics;",
      "SELECT RobotID, Date, MemoryUsage FROM RobotMetrics WHERE CPUUtilization > 80;",
      "SELECT * FROM RobotErrors;",
      "SELECT RobotID, ErrorCode FROM RobotErrors WHERE ErrorCode = 404;",
      "SELECT * FROM RobotTasks;",
      "SELECT TaskID, RobotID, TaskDescription FROM RobotTasks WHERE TaskStatus = 'Completed';",
      "SELECT * FROM RobotInventory;",
      "SELECT ItemID, ItemType, Quantity FROM RobotInventory WHERE ItemType = 'Sensor';",
      "SELECT ItemID, Location FROM RobotInventory WHERE Quantity <= 5;",
      "SELECT RobotID, Date, CPUUtilization FROM RobotMetrics WHERE Date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT RobotID, Date, MemoryUsage FROM RobotMetrics WHERE MemoryUsage < 20;",
      "SELECT RobotID, TaskDescription FROM RobotTasks WHERE TaskDescription LIKE '%clean%';",
      "SELECT ItemID, Location FROM RobotInventory ORDER BY Quantity DESC;",
      "SELECT TaskID, TaskDescription FROM RobotTasks WHERE TaskStatus = 'Pending' ORDER BY TaskID ASC;",
      "SELECT RobotID, ErrorCode, ErrorDescription FROM RobotErrors WHERE ErrorDescription IS NOT NULL;",
      "SELECT RobotID, Date, CPUUtilization, MemoryUsage FROM RobotMetrics WHERE CPUUtilization >= 90 AND MemoryUsage >= 80;",
      "SELECT RobotID, TaskDescription FROM RobotTasks WHERE TaskDescription = 'Inspect' AND TaskStatus = 'Pending';",
      "SELECT ItemID, Location FROM RobotInventory WHERE Location LIKE '%Warehouse%' ORDER BY ItemID ASC;",
      "SELECT TaskID, RobotID, TaskStatus FROM RobotTasks WHERE TaskStatus != 'Completed';",
      "SELECT * FROM RobotMetrics WHERE CPUUtilization > 80",
      "SELECT RobotID, Date, CPUUtilization FROM RobotMetrics WHERE CPUUtilization > 90 ORDER BY Date DESC",
      "SELECT RobotID, COUNT(*) AS ErrorCount FROM RobotErrors GROUP BY RobotID HAVING ErrorCount > 5",
      "SELECT TaskID, TaskDescription, TaskStatus FROM RobotTasks WHERE TaskStatus = 'Pending'",
      "SELECT ItemType, SUM(Quantity) AS TotalQuantity FROM RobotInventory GROUP BY ItemType",
      "SELECT * FROM RobotMetrics JOIN RobotErrors ON RobotMetrics.RobotID = RobotErrors.RobotID",
      "SELECT TaskID, RobotTasks.RobotID, TaskDescription, TaskStatus FROM RobotTasks JOIN RobotMetrics ON RobotTasks.RobotID = RobotMetrics.RobotID WHERE CPUUtilization > 70 AND TaskStatus = 'Completed'",
      "SELECT TaskID, TaskDescription, TaskStatus FROM RobotTasks WHERE TaskStatus IN ('Pending', 'In Progress') ORDER BY TaskStatus ASC, TaskID DESC",
      "SELECT ItemID, ItemType, Quantity FROM RobotInventory WHERE Location = 'Warehouse' AND Quantity > 0",
      "SELECT RobotID, Date, CPUUtilization FROM RobotMetrics WHERE Date BETWEEN '2022-01-01' AND '2022-01-31'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM robot_metrics;",
      "SELECT robot_id, metric_name, metric_value FROM robot_metrics WHERE robot_id = 1;",
      "SELECT robot_id, metric_name FROM robot_metrics WHERE metric_value > 10.0;",
      "SELECT * FROM robot_status;",
      "SELECT robot_id, status FROM robot_status WHERE status = 'online';",
      "SELECT robot_id, last_update FROM robot_status WHERE last_update >= '2022-01-01';",
      "SELECT * FROM robot_errors;",
      "SELECT error_id, robot_id, error_message FROM robot_errors WHERE robot_id = 2;",
      "SELECT error_id, error_timestamp FROM robot_errors WHERE error_timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-02 00:00:00';",
      "SELECT * FROM robot_logs;",
      "SELECT log_id, robot_id, log_message FROM robot_logs WHERE robot_id = 3;",
      "SELECT log_id, log_timestamp FROM robot_logs WHERE log_timestamp >= '2022-01-01';",
      "SELECT * FROM robot_config;",
      "SELECT config_id, robot_id, config_name FROM robot_config WHERE config_value = 'enabled';",
      "SELECT config_id, config_value FROM robot_config WHERE config_name = 'setting1';",
      "SELECT robot_id, config_name, config_value FROM robot_config WHERE robot_id = 4;",
      "SELECT robot_id, config_value FROM robot_config WHERE config_value LIKE '%param%';",
      "SELECT * FROM robot_metrics JOIN robot_status ON robot_metrics.robot_id = robot_status.robot_id;",
      "SELECT * FROM robot_metrics LEFT JOIN robot_logs ON robot_metrics.robot_id = robot_logs.robot_id;",
      "SELECT * FROM robot_metrics RIGHT JOIN robot_config ON robot_metrics.robot_id = robot_config.robot_id;",
      "SELECT * FROM robot_metrics WHERE metric_value > 100",
      "SELECT robot_id, metric_name FROM robot_metrics WHERE metric_name LIKE '%temperature%'",
      "SELECT robot_id, AVG(metric_value) AS avg_value FROM robot_metrics GROUP BY robot_id",
      "SELECT r.robot_id, r.status, l.log_message FROM robot_status r INNER JOIN robot_logs l ON r.robot_id = l.robot_id",
      "SELECT r.robot_id, e.error_message FROM robot_status r LEFT JOIN robot_errors e ON r.robot_id = e.robot_id",
      "SELECT robot_id, config_name, config_value FROM robot_config WHERE config_name = 'speed_limit'",
      "SELECT * FROM robot_metrics ORDER BY metric_timestamp DESC LIMIT 10",
      "SELECT COUNT(*) AS total_errors FROM robot_errors WHERE robot_id = 5",
      "SELECT robot_id, MAX(metric_value) AS max_value FROM robot_metrics GROUP BY robot_id",
      "SELECT robot_id, SUM(metric_value) AS total_value FROM robot_metrics GROUP BY robot_id"
    ]
  }
]