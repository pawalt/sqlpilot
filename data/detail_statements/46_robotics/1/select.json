[
  {
    "statements": [
      "SELECT * FROM robot_movements;",
      "SELECT movement_id, robot_id, movement_type FROM robot_movements;",
      "SELECT * FROM robot_movements WHERE robot_id = 1;",
      "SELECT * FROM robot_movements WHERE movement_type = 'forward';",
      "SELECT robot_id, COUNT(*) AS total_moves FROM robot_movements GROUP BY robot_id;",
      "SELECT * FROM robot_movements ORDER BY movement_timestamp DESC;",
      "SELECT * FROM robot_movements WHERE movement_timestamp >= '2022-01-01';",
      "SELECT AVG(robot_id) AS avg_robot_id FROM robot_movements;",
      "SELECT DISTINCT movement_type FROM robot_movements;",
      "SELECT * FROM robot_movements OFFSET 5 LIMIT 10;",
      "SELECT robot_id, COUNT(*) AS total_moves FROM robot_movements HAVING COUNT(*) > 10 GROUP BY robot_id;",
      "SELECT movement_id, robot_id, movement_type, movement_timestamp FROM robot_movements WHERE movement_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT COUNT(*) AS total_movements FROM robot_movements;",
      "SELECT MAX(movement_timestamp) AS latest_movement FROM robot_movements;",
      "SELECT * FROM robot_movements WHERE movement_type LIKE 'left%';",
      "SELECT movement_id, robot_id, movement_timestamp FROM robot_movements ORDER BY movement_timestamp ASC;",
      "SELECT robot_id, COUNT(*) AS total_moves FROM robot_movements WHERE movement_timestamp >= '2022-01-01' GROUP BY robot_id;",
      "SELECT * FROM robot_movements WHERE robot_id IN (1, 2, 3);",
      "SELECT * FROM robot_movements WHERE movement_type = 'backward' OR movement_type = 'left';",
      "SELECT * FROM robot_movements WHERE movement_type != 'stop';",
      "SELECT * FROM robot_movements WHERE robot_id = 1 AND movement_type = 'walk' ORDER BY movement_timestamp DESC LIMIT 5;",
      "SELECT robot_id, COUNT(*) AS movement_count FROM robot_movements GROUP BY robot_id HAVING COUNT(*) > 10;",
      "SELECT robot_id, EXTRACT(MONTH FROM movement_timestamp) AS month, COUNT(*) AS movements_per_month FROM robot_movements GROUP BY robot_id, month;",
      "SELECT DISTINCT robot_id FROM robot_movements WHERE movement_timestamp > '2022-01-01';",
      "SELECT robot_id, AVG(EXTRACT(EPOCH FROM movement_timestamp)) AS avg_movement_duration FROM robot_movements GROUP BY robot_id;",
      "SELECT robot_id, MAX(movement_timestamp) - MIN(movement_timestamp) AS total_movement_duration FROM robot_movements GROUP BY robot_id HAVING COUNT(*) > 1;",
      "SELECT robot_id, COUNT(*) AS total_movements, SUM(EXTRACT(EPOCH FROM movement_timestamp)) AS total_duration FROM robot_movements GROUP BY robot_id ORDER BY total_movements DESC;",
      "SELECT robot_id, movement_type, COUNT(*) AS type_count FROM robot_movements GROUP BY robot_id, movement_type HAVING COUNT(*) > 5;",
      "SELECT robot_id, movement_type, COUNT(*) AS type_count, AVG(EXTRACT(EPOCH FROM movement_timestamp)) AS avg_duration FROM robot_movements GROUP BY robot_id, movement_type HAVING COUNT(*) > 5;",
      "SELECT robot_id, movement_type, COUNT(*) AS type_count, MIN(movement_timestamp) AS first_movement FROM robot_movements GROUP BY robot_id, movement_type HAVING COUNT(*) > 2;",
      "SELECT robot_id, COUNT(distinct movement_type) AS unique_movements FROM robot_movements GROUP BY robot_id;",
      "SELECT movement_type, COUNT(*) AS total_movement_count FROM robot_movements WHERE movement_type LIKE '%turn%' GROUP BY movement_type;",
      "SELECT AVG(EXTRACT(EPOCH FROM movement_timestamp)) AS avg_duration_per_movement FROM robot_movements;",
      "SELECT SUM(EXTRACT(EPOCH FROM movement_timestamp)) AS total_duration_all_robots FROM robot_movements;",
      "SELECT DISTINCT EXTRACT(DOW FROM movement_timestamp) AS day_of_week FROM robot_movements;",
      "SELECT robot_id, movement_timestamp, LAG(movement_timestamp, 1) OVER(PARTITION BY robot_id ORDER BY movement_timestamp) AS prev_movement_timestamp FROM robot_movements;",
      "SELECT robot_id, movement_timestamp, LEAD(movement_timestamp, 1) OVER(PARTITION BY robot_id ORDER BY movement_timestamp) AS next_movement_timestamp FROM robot_movements;",
      "SELECT robot_id, movement_type, movement_timestamp, ROW_NUMBER() OVER(PARTITION BY robot_id ORDER BY movement_timestamp) AS movement_order FROM robot_movements;",
      "SELECT robot_id, movement_timestamp, movement_type, LAG(movement_type) OVER(PARTITION BY robot_id ORDER BY movement_timestamp) AS prev_movement_type FROM robot_movements;",
      "SELECT robot_id, movement_timestamp, movement_type, LEAD(movement_type) OVER(PARTITION BY robot_id ORDER BY movement_timestamp) AS next_movement_type FROM robot_movements;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Robot;",
      "SELECT robot_id, name, location FROM Robot;",
      "SELECT * FROM MovementHistory;",
      "SELECT movement_id, robot_id, movement_type FROM MovementHistory;",
      "SELECT r.name, mh.movement_type FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id;",
      "SELECT r.name, mh.movement_type FROM Robot r JOIN MovementHistory mh ON r.robot_id = mh.robot_id;",
      "SELECT r.name, mh.movement_type FROM Robot r INNER JOIN MovementHistory mh ON r.robot_id = mh.robot_id;",
      "SELECT r.name, mh.movement_type FROM Robot r LEFT JOIN MovementHistory mh ON r.robot_id = mh.robot_id;",
      "SELECT r.name, mh.movement_type FROM Robot r RIGHT JOIN MovementHistory mh ON r.robot_id = mh.robot_id;",
      "SELECT count(*) AS num_movements FROM MovementHistory;",
      "SELECT MAX(timestamp) AS latest_movement FROM MovementHistory;",
      "SELECT r.name, count(*) AS num_movements FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id GROUP BY r.name;",
      "SELECT r.name, mh.movement_type FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id ORDER BY r.name, mh.timestamp DESC;",
      "SELECT r.name, mh.movement_type FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id LIMIT 10;",
      "SELECT r.name, mh.movement_type FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id OFFSET 5;",
      "SELECT r.name, mh.movement_type FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id LIMIT 5 OFFSET 10;",
      "SELECT DISTINCT r.name FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id;",
      "SELECT r.name, mh.movement_type, COUNT(*) AS num_movements FROM Robot r, MovementHistory mh WHERE r.robot_id = mh.robot_id GROUP BY r.name, mh.movement_type;",
      "SELECT r.name, AVG(r.timestamp) AS avg_timestamp FROM Robot r;",
      "SELECT r.name, SUM(DATEDIFF(NOW(), r.timestamp)) AS total_days_active FROM Robot r;",
      "SELECT * FROM Robot;",
      "SELECT robot_id, name, location FROM Robot WHERE robot_id = 5;",
      "SELECT Robot.name, MovementHistory.movement_type FROM Robot JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id;",
      "SELECT Robot.name, MovementHistory.movement_description FROM Robot LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id;",
      "SELECT COUNT(*) AS total_robots FROM Robot;",
      "SELECT COUNT(*) AS total_movements FROM MovementHistory;",
      "SELECT Robot.name, MovementHistory.movement_type, MovementHistory.timestamp FROM Robot JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id WHERE Robot.location = 'Warehouse';",
      "SELECT MAX(timestamp) AS latest_movement_time FROM MovementHistory;",
      "SELECT AVG(robot_id) AS avg_robot_id FROM Robot;",
      "SELECT DISTINCT location FROM Robot;",
      "SELECT Robot.name, COUNT(MovementHistory.movement_id) AS total_movements FROM Robot LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name;",
      "SELECT Robot.name, COUNT(MovementHistory.movement_id) AS total_movements FROM Robot LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name HAVING total_movements > 10;",
      "SELECT Robot.name, COUNT(MovementHistory.movement_id) AS total_movements FROM Robot LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name ORDER BY total_movements DESC;",
      "SELECT Robot.name, COUNT(MovementHistory.movement_id) AS total_movements FROM Robot LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name ORDER BY total_movements ASC;",
      "SELECT Robot.name, MAX(timestamp) AS last_movement_time FROM Robot LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name;",
      "SELECT Robot.name, COUNT(MovementHistory.movement_id) AS total_movements FROM Robot INNER JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name ORDER BY total_movements DESC LIMIT 5;",
      "SELECT Robot.name, COUNT(MovementHistory.movement_id) AS total_movements FROM Robot INNER JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name ORDER BY total_movements ASC LIMIT 5;",
      "SELECT Robot.name, AVG(robot_id) AS avg_robot_id, MAX(timestamp) AS last_movement_time FROM Robot LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name;",
      "SELECT Robot.name, COUNT(MovementHistory.movement_id) AS total_movements FROM Robot INNER JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.name HAVING total_movements > 5;",
      "SELECT COUNT(DISTINCT Robot.location) AS total_locations FROM Robot;",
      "SELECT MovementHistory.movement_type, COUNT(*) AS total_movements FROM MovementHistory GROUP BY MovementHistory.movement_type HAVING total_movements > 50;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Robot;",
      "SELECT robot_id, robot_name FROM Robot;",
      "SELECT location FROM Robot;",
      "SELECT movement_type FROM Robot;",
      "SELECT * FROM MovementHistory;",
      "SELECT movement_id, robot_id FROM MovementHistory;",
      "SELECT movement_description FROM MovementHistory;",
      "SELECT movement_timestamp FROM MovementHistory;",
      "SELECT * FROM RobotStatus;",
      "SELECT status_id, robot_id FROM RobotStatus;",
      "SELECT battery_level FROM RobotStatus;",
      "SELECT operational_status FROM RobotStatus;",
      "SELECT robot_id, robot_name, location FROM Robot;",
      "SELECT robot_id, movement_description, movement_timestamp FROM MovementHistory;",
      "SELECT robot_id, battery_level, operational_status FROM RobotStatus;",
      "SELECT robot_name, location, movement_type FROM Robot;",
      "SELECT movement_description, movement_timestamp FROM MovementHistory;",
      "SELECT battery_level, operational_status FROM RobotStatus;",
      "SELECT robot_name, movement_description, movement_timestamp FROM Robot INNER JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id;",
      "SELECT robot_name, battery_level, operational_status FROM Robot INNER JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id;",
      "SELECT Robot.robot_id, Robot.robot_name, MovementHistory.movement_description FROM Robot JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id WHERE MovementHistory.movement_timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59'",
      "SELECT * FROM RobotStatus WHERE battery_level < 20",
      "SELECT Robot.robot_name, RobotStatus.battery_level, RobotStatus.operational_status FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id WHERE Robot.robot_name LIKE '%Alpha%'",
      "SELECT AVG(battery_level) AS average_battery FROM RobotStatus",
      "SELECT COUNT(*) AS total_robots FROM Robot",
      "SELECT Robot.robot_name, RobotStatus.battery_level, MovementHistory.movement_description FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id WHERE MovementHistory.movement_timestamp > '2022-02-01'",
      "SELECT Robot.robot_name, COUNT(*) AS movements_count FROM Robot JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.robot_name ORDER BY movements_count DESC",
      "SELECT Robot.robot_name, Robot.location, RobotStatus.operational_status FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id WHERE RobotStatus.operational_status = 'Active'",
      "SELECT Robot.robot_name, RobotStatus.battery_level, MovementHistory.movement_description FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id",
      "SELECT Robot.robot_name, RobotStatus.battery_level, MovementHistory.movement_description FROM Robot LEFT JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id LEFT JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id",
      "SELECT Robot.robot_name, RobotStatus.operational_status, COUNT(*) AS total_movements FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id GROUP BY Robot.robot_name, RobotStatus.operational_status",
      "SELECT Robot.robot_name, RobotStatus.operational_status, MAX(battery_level) AS max_battery FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id GROUP BY Robot.robot_name, RobotStatus.operational_status",
      "SELECT Robot.robot_name, RobotStatus.operational_status, AVG(battery_level) AS average_battery FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id GROUP BY Robot.robot_name, RobotStatus.operational_status",
      "SELECT Robot.robot_name, RobotStatus.battery_level, RobotStatus.operational_status, MovementHistory.movement_description FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id",
      "SELECT Robot.robot_name, RobotStatus.operational_status, CONCAT('Battery Level: ', CAST(battery_level AS VARCHAR)) AS status_info FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id",
      "SELECT Robot.robot_name, RobotStatus.operational_status, SUBSTRING(movement_description, 1, 20) AS short_description FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id",
      "SELECT Robot.robot_name, RobotStatus.battery_level, MovementHistory.movement_timestamp, DATEDIFF(NOW(), movement_timestamp) AS days_since_movement FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id",
      "SELECT Robot.robot_name, RobotStatus.battery_level, RobotStatus.operational_status, CONCAT(MONTHNAME(movement_timestamp), ' ', YEAR(movement_timestamp)) AS movement_month_year FROM Robot JOIN RobotStatus ON Robot.robot_id = RobotStatus.robot_id JOIN MovementHistory ON Robot.robot_id = MovementHistory.robot_id",
      "SELECT DISTINCT robot_name FROM Robot",
      "SELECT robot_name, SUM(battery_level) AS total_battery FROM RobotStatus GROUP BY robot_name HAVING total_battery >= 100",
      "SELECT robot_name, AVG(battery_level) AS average_battery FROM RobotStatus GROUP BY robot_name ORDER BY average_battery DESC LIMIT 5"
    ]
  },
  {
    "statements": [
      "SELECT * FROM RobotLocations;",
      "SELECT robot_id, location_id FROM RobotLocations;",
      "SELECT * FROM Robots;",
      "SELECT robot_id, robot_name, model FROM Robots;",
      "SELECT * FROM Locations;",
      "SELECT location_id, location_name FROM Locations;",
      "SELECT * FROM MovementHistory;",
      "SELECT movement_id, robot_id, location_id FROM MovementHistory;",
      "SELECT robot_id, location_id, move_time FROM MovementHistory;",
      "SELECT R.robot_id, R.robot_name, RL.location_id, L.location_name, MH.move_time FROM Robots R JOIN RobotLocations RL ON R.robot_id = RL.robot_id JOIN Locations L ON RL.location_id = L.location_id JOIN MovementHistory MH ON RL.robot_id = MH.robot_id;",
      "SELECT R.robot_id, R.robot_name, RL.location_id, L.location_name, MH.move_time FROM Robots R JOIN RobotLocations RL ON R.robot_id = RL.robot_id JOIN Locations L ON RL.location_id = L.location_id JOIN MovementHistory MH ON RL.robot_id = MH.robot_id ORDER BY MH.move_time DESC;",
      "SELECT R.robot_id, R.robot_name, RL.location_id, L.location_name, MH.move_time FROM Robots R JOIN RobotLocations RL ON R.robot_id = RL.robot_id JOIN Locations L ON RL.location_id = L.location_id JOIN MovementHistory MH ON RL.robot_id = MH.robot_id WHERE R.status = 'active';",
      "SELECT R.robot_name, COUNT(*) AS total_movements FROM Robots R JOIN MovementHistory MH ON R.robot_id = MH.robot_id GROUP BY R.robot_name;",
      "SELECT L.location_name, AVG(MH.move_time) AS avg_move_time FROM Locations L JOIN MovementHistory MH ON L.location_id = MH.location_id GROUP BY L.location_name;",
      "SELECT R.robot_name, L.location_name, MAX(MH.move_time) AS last_move_time FROM Robots R JOIN MovementHistory MH ON R.robot_id = MH.robot_id JOIN Locations L ON MH.location_id = L.location_id GROUP BY R.robot_name, L.location_name;",
      "SELECT R.robot_name, MH.move_time AS last_move_time FROM Robots R JOIN MovementHistory MH ON R.robot_id = MH.robot_id WHERE MH.move_time = (SELECT MAX(move_time) FROM MovementHistory WHERE robot_id = R.robot_id);",
      "SELECT R1.robot_name AS from_robot, R2.robot_name AS to_robot, MH.move_time AS move_time FROM MovementHistory MH JOIN Robots R1 ON MH.robot_id = R1.robot_id JOIN Robots R2 ON MH.robot_id = R2.robot_id WHERE R1.robot_name != R2.robot_name;",
      "SELECT DISTINCT L.location_name FROM Locations L JOIN MovementHistory MH ON L.location_id = MH.location_id WHERE MH.move_time BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT COUNT(DISTINCT R.robot_id) AS total_robots FROM Robots R JOIN MovementHistory MH ON R.robot_id = MH.robot_id;",
      "SELECT * FROM RobotLocations JOIN Robots ON RobotLocations.robot_id = Robots.robot_id WHERE Robots.status = 'Active';",
      "SELECT robot_name, location_name, move_time FROM MovementHistory JOIN Robots ON MovementHistory.robot_id = Robots.robot_id JOIN Locations ON MovementHistory.location_id = Locations.location_id;",
      "SELECT robot_id, robot_name, location_name, latitude, longitude FROM RobotLocations JOIN Robots ON RobotLocations.robot_id = Robots.robot_id JOIN Locations ON RobotLocations.location_id = Locations.location_id;",
      "SELECT robot_id, COUNT(*) AS total_moves FROM MovementHistory GROUP BY robot_id ORDER BY total_moves DESC;",
      "SELECT robot_name, model, status, location_name FROM Robots LEFT JOIN RobotLocations ON Robots.robot_id = RobotLocations.robot_id LEFT JOIN Locations ON RobotLocations.location_id = Locations.location_id WHERE Robots.status = 'Inactive';",
      "SELECT AVG(latitude) AS avg_latitude, AVG(longitude) AS avg_longitude FROM Locations;",
      "SELECT RobotLocations.robot_id, Robots.robot_name, COUNT(*) AS total_moves FROM RobotLocations JOIN Robots ON RobotLocations.robot_id = Robots.robot_id GROUP BY RobotLocations.robot_id, Robots.robot_name;",
      "SELECT * FROM Locations WHERE latitude BETWEEN 40 AND 45 AND longitude BETWEEN -80 AND -75;",
      "SELECT robot_name, location_name, move_time FROM Robots JOIN MovementHistory ON Robots.robot_id = MovementHistory.robot_id WHERE Robots.status = 'Active';",
      "SELECT robot_name, model, location_name, move_time FROM Robots JOIN MovementHistory ON Robots.robot_id = MovementHistory.robot_id JOIN Locations ON MovementHistory.location_id = Locations.location_id WHERE Robots.status = 'Active';",
      "SELECT * FROM Robots UNION SELECT * FROM RobotLocations UNION SELECT * FROM Locations UNION SELECT * FROM MovementHistory;",
      "SELECT robot_name, model, location_name, latitude, longitude FROM Robots JOIN MovementHistory ON Robots.robot_id = MovementHistory.robot_id JOIN Locations ON MovementHistory.location_id = Locations.location_id WHERE location_name = 'Warehouse';",
      "SELECT DISTINCT robot_id FROM MovementHistory;",
      "SELECT robot_id, robot_name, model, status FROM Robots WHERE robot_id IN (SELECT robot_id FROM RobotLocations WHERE location_id = 3);",
      "SELECT robot_name, location_name, move_time FROM Robots JOIN MovementHistory ON Robots.robot_id = MovementHistory.robot_id JOIN Locations ON MovementHistory.location_id = Locations.location_id WHERE Robots.status = 'Active' AND move_time > '2022-01-01';",
      "SELECT robot_id, robot_name, status, location_name FROM Robots JOIN RobotLocations ON Robots.robot_id = RobotLocations.robot_id JOIN Locations ON RobotLocations.location_id = Locations.location_id WHERE location_name LIKE '%Storage%';",
      "SELECT robot_name, AVG(latitude) AS avg_latitude, AVG(longitude) AS avg_longitude FROM Robots JOIN RobotLocations ON Robots.robot_id = RobotLocations.robot_id JOIN Locations ON RobotLocations.location_id = Locations.location_id GROUP BY robot_name;",
      "SELECT location_name, COUNT(*) AS total_robots FROM RobotLocations JOIN Locations ON RobotLocations.location_id = Locations.location_id GROUP BY location_name HAVING total_robots > 5;",
      "SELECT robot_name, model, COUNT(*) AS total_moves FROM Robots JOIN MovementHistory ON Robots.robot_id = MovementHistory.robot_id GROUP BY robot_name, model ORDER BY total_moves DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM robot;",
      "SELECT id, name FROM robot WHERE location='Factory';",
      "SELECT robot_id, timestamp FROM movement_history WHERE direction='UP';",
      "SELECT command_id, robot_id, command FROM commands ORDER BY command_id DESC;",
      "SELECT MIN(reading) FROM sensors WHERE sensor_type='Temperature';",
      "SELECT id, name, location FROM robot WHERE timestamp > '2022-01-01';",
      "SELECT COUNT(*) FROM movement_history WHERE robot_id=5 AND direction='RIGHT';",
      "SELECT AVG(reading) FROM sensors WHERE sensor_type='Pressure' AND timestamp > '2022-01-01';",
      "SELECT error_id, robot_id, error_message FROM errors WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM commands WHERE command_id IN (1, 2, 3);",
      "SELECT MAX(reading) FROM sensors WHERE sensor_type='Humidity';",
      "SELECT id, name FROM robot WHERE location LIKE '%Warehouse%';",
      "SELECT COUNT(DISTINCT robot_id) FROM movement_history;",
      "SELECT command_id, command FROM commands WHERE robot_id=3 OR robot_id=5;",
      "SELECT AVG(reading) FROM sensors WHERE sensor_type='Temperature' GROUP BY robot_id;",
      "SELECT robot_id, MAX(reading) FROM sensors GROUP BY robot_id HAVING MAX(reading) > 50;",
      "SELECT * FROM errors WHERE error_message LIKE '%Critical%' ORDER BY timestamp DESC;",
      "SELECT id, name, location FROM robot WHERE id BETWEEN 1 AND 10;",
      "SELECT AVG(reading) AS average_reading, sensor_type FROM sensors GROUP BY sensor_type;",
      "SELECT robot_id, COUNT(*) AS num_errors FROM errors GROUP BY robot_id HAVING num_errors > 5;",
      "SELECT * FROM robot;",
      "SELECT name, location FROM robot WHERE location = 'Factory';",
      "SELECT robot.name, movement_history.timestamp FROM robot JOIN movement_history ON robot.id = movement_history.robot_id;",
      "SELECT robot.name, commands.command FROM robot JOIN commands ON robot.id = commands.robot_id WHERE commands.timestamp >= '2022-01-01';",
      "SELECT SUM(sensors.reading) AS total_reading FROM sensors WHERE sensor_type = 'temperature';",
      "SELECT robot.name, errors.error_message FROM robot LEFT JOIN errors ON robot.id = errors.robot_id;",
      "SELECT robot.name, movement_history.direction FROM robot JOIN movement_history ON robot.id = movement_history.robot_id WHERE movement_history.timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT AVG(sensors.reading) AS average_reading FROM sensors WHERE robot_id = 1;",
      "SELECT COUNT(*) AS total_errors FROM errors WHERE robot_id = 3;",
      "SELECT MAX(commands.timestamp) AS last_command_time FROM commands;",
      "SELECT robot.name, sensors.sensor_type FROM robot JOIN sensors ON robot.id = sensors.robot_id WHERE sensors.reading < 50;",
      "SELECT robot.name, movements.direction FROM robot JOIN (SELECT * FROM movement_history ORDER BY timestamp DESC LIMIT 1) AS movements ON robot.id = movements.robot_id;",
      "SELECT commands.command, errors.error_message FROM commands LEFT JOIN errors ON commands.robot_id = errors.robot_id WHERE commands.id = 5;",
      "SELECT robot.name, sensors.sensor_type, sensors.reading FROM robot JOIN sensors ON robot.id = sensors.robot_id WHERE sensors.timestamp = (SELECT MAX(timestamp) FROM sensors);",
      "SELECT robot.name, SUM(sensors.reading) AS total_reading FROM robot JOIN sensors ON robot.id = sensors.robot_id GROUP BY robot.name;",
      "SELECT DISTINCT sensor_type FROM sensors;",
      "SELECT robot.name, COUNT(commands.command) AS total_commands FROM robot JOIN commands ON robot.id = commands.robot_id GROUP BY robot.name HAVING total_commands > 5;",
      "SELECT AVG(sensors.reading) AS average_reading, MAX(sensors.reading) AS max_reading, MIN(sensors.reading) AS min_reading FROM sensors WHERE sensor_type = 'humidity';",
      "SELECT robot.name, movement_history.direction, movement_history.timestamp FROM robot JOIN movement_history ON robot.id = movement_history.robot_id ORDER BY movement_history.timestamp DESC LIMIT 5;",
      "SELECT COUNT(*) AS total_robots FROM (SELECT DISTINCT robot_id FROM sensors);"
    ]
  }
]