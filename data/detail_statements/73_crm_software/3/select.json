[
  {
    "statements": [
      "SELECT * FROM sales_data;",
      "SELECT order_id, customer_id FROM sales_data;",
      "SELECT product_name, quantity FROM sales_data;",
      "SELECT unit_price FROM sales_data;",
      "SELECT order_date FROM sales_data;",
      "SELECT order_id, customer_id, product_name FROM sales_data;",
      "SELECT * FROM sales_data WHERE quantity > 10;",
      "SELECT * FROM sales_data WHERE unit_price < 50.00;",
      "SELECT * FROM sales_data WHERE order_date = '2022-01-15';",
      "SELECT order_id, customer_id FROM sales_data WHERE order_date >= '2022-01-01' AND order_date <= '2022-01-31';",
      "SELECT order_id, customer_id FROM sales_data WHERE product_name LIKE '%shirt%';",
      "SELECT order_id, product_name, quantity FROM sales_data WHERE customer_id = 1001;",
      "SELECT customer_id, SUM(quantity) AS total_quantity FROM sales_data GROUP BY customer_id;",
      "SELECT product_name, AVG(unit_price) AS avg_price FROM sales_data GROUP BY product_name;",
      "SELECT DISTINCT customer_id FROM sales_data;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM sales_data GROUP BY customer_id;",
      "SELECT order_id, customer_id, order_date FROM sales_data ORDER BY order_date DESC;",
      "SELECT * FROM sales_data ORDER BY unit_price ASC;",
      "SELECT * FROM sales_data LIMIT 10;",
      "SELECT * FROM sales_data OFFSET 5 LIMIT 10;",
      "SELECT * FROM sales_data WHERE order_date >= '2022-01-01' AND unit_price > 50;",
      "SELECT order_id, product_name, quantity, unit_price FROM sales_data WHERE customer_id = 1001;",
      "SELECT customer_id, SUM(quantity) AS total_quantity FROM sales_data GROUP BY customer_id;",
      "SELECT product_name, AVG(unit_price) AS avg_price FROM sales_data GROUP BY product_name HAVING COUNT(*) >= 5;",
      "SELECT customer_id, MAX(unit_price) AS max_price FROM sales_data WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customer_id;",
      "SELECT customer_id, COUNT(DISTINCT product_name) AS unique_products FROM sales_data GROUP BY customer_id HAVING unique_products > 3;",
      "SELECT order_id, SUM(quantity * unit_price) AS total_revenue FROM sales_data WHERE order_date < '2022-06-01' GROUP BY order_id;",
      "SELECT customer_id, MIN(order_date) AS first_order_date FROM sales_data WHERE customer_id IN (1001, 1002, 1003) GROUP BY customer_id;",
      "SELECT product_name, AVG(quantity) AS avg_quantity FROM sales_data WHERE order_date >= '2022-07-01' GROUP BY product_name HAVING AVG(quantity) > 10;",
      "SELECT customer_id, MAX(unit_price) AS max_price, MIN(unit_price) AS min_price, AVG(unit_price) AS avg_price FROM sales_data GROUP BY customer_id;",
      "SELECT DISTINCT customer_id FROM sales_data WHERE order_date >= '2022-01-01' AND order_date < '2022-02-01';",
      "SELECT product_name, SUM(quantity) AS total_quantity FROM sales_data WHERE order_date BETWEEN '2022-03-01' AND '2022-04-30' GROUP BY product_name;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM sales_data WHERE unit_price >= 100 GROUP BY customer_id HAVING total_orders >= 2;",
      "SELECT customer_id, product_name, unit_price, quantity FROM sales_data WHERE customer_id IN (1001, 1002) AND unit_price < 50;",
      "SELECT customer_id, AVG(unit_price) AS avg_price FROM sales_data WHERE order_date >= '2022-01-01' AND order_date < '2022-02-01' GROUP BY customer_id;",
      "SELECT product_name, MAX(quantity) AS max_quantity FROM sales_data WHERE unit_price > 50 GROUP BY product_name HAVING MAX(quantity) > 5;",
      "SELECT order_id, customer_id, product_name, quantity, unit_price, order_date FROM sales_data WHERE order_date = '2022-05-15';",
      "SELECT customer_id, SUM(quantity * unit_price) AS total_sales FROM sales_data WHERE order_date >= '2022-03-01' AND order_date < '2022-04-01' GROUP BY customer_id;",
      "SELECT order_id, product_name, unit_price FROM sales_data WHERE quantity > 10 AND unit_price < 30;",
      "SELECT customer_id, AVG(quantity) AS avg_quantity FROM sales_data WHERE order_date BETWEEN '2022-04-01' AND '2022-05-01' GROUP BY customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers;",
      "SELECT customer_id, name, phone FROM customers;",
      "SELECT * FROM sales;",
      "SELECT sale_id, customer_id, sale_date FROM sales;",
      "SELECT product_name, amount FROM sales;",
      "SELECT c.name, s.product_name FROM customers c JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.name AS customer_name, s.product_name AS purchased_product FROM customers c JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.name, s.sale_date FROM customers c JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.email, s.amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.name, s.amount FROM customers c LEFT JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.name, s.amount FROM customers c RIGHT JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.name, s.amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id WHERE s.amount > 100;",
      "SELECT c.name, s.product_name FROM customers c JOIN sales s ON c.customer_id = s.customer_id WHERE s.sale_date BETWEEN '2022-01-01' AND '2022-05-31';",
      "SELECT c.name, COUNT(s.sale_id) AS total_sales FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name, AVG(s.amount) AS average_purchase FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name, MAX(s.amount) AS max_purchase FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name, MIN(s.amount) AS min_purchase FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name, SUM(s.amount) AS total_spent FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT name, email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE name LIKE 'A%';",
      "SELECT customer_id, name, email, phone FROM customers WHERE phone IS NOT NULL;",
      "SELECT c.customer_id, c.name, s.sale_date, s.product_name, s.amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.name AS customer_name, s.product_name AS purchased_product, s.amount AS purchase_amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.customer_id, c.name, s.sale_date, s.product_name, s.amount FROM customers c LEFT JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.customer_id, c.name, s.sale_date, s.product_name, s.amount FROM customers c RIGHT JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.name AS customer_name, AVG(s.amount) AS avg_purchase_amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name AS customer_name, COUNT(s.sale_id) AS total_sales FROM customers c LEFT JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name AS customer_name, MAX(s.sale_date) AS last_purchase_date FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name AS customer_name, MIN(s.sale_date) AS first_purchase_date FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name AS customer_name, SUM(s.amount) AS total_purchases FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name;",
      "SELECT c.name AS customer_name, AVG(s.amount) AS avg_purchase_amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id WHERE s.amount > 100 GROUP BY c.name;",
      "SELECT c.name AS customer_name, MAX(s.amount) AS largest_purchase_amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name ORDER BY largest_purchase_amount DESC;",
      "SELECT c.name AS customer_name, MIN(s.amount) AS smallest_purchase_amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.name ORDER BY smallest_purchase_amount ASC;",
      "SELECT c.name AS customer_name, s.product_name, s.amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id WHERE c.name = 'Alice' AND s.amount > 50;",
      "SELECT c.name AS customer_name, s.product_name, s.amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id WHERE c.name = 'Bob' AND s.sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT c.name AS customer_name, s.product_name, s.amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id WHERE c.email LIKE '%@example.com%';",
      "SELECT c.name AS customer_name, s.product_name, s.amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id WHERE c.phone IS NULL;",
      "SELECT c.name AS customer_name, s.product_name, s.amount FROM customers c INNER JOIN sales s ON c.customer_id = s.customer_id WHERE s.amount > (SELECT AVG(amount) FROM sales);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_id, customer_name, email FROM customers WHERE customer_id = 5;",
      "SELECT * FROM products;",
      "SELECT product_name, category FROM products;",
      "SELECT product_id, product_name, price FROM products WHERE price > 100;",
      "SELECT * FROM sales;",
      "SELECT product_id, total_amount FROM sales;",
      "SELECT sale_date, quantity FROM sales WHERE quantity > 5;",
      "SELECT customers.customer_name, products.product_name FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id;",
      "SELECT customers.customer_name, products.product_name FROM customers INNER JOIN sales ON customers.customer_id = sales.customer_id LEFT JOIN products ON sales.product_id = products.product_id;",
      "SELECT customers.customer_name, products.product_name FROM customers RIGHT JOIN sales ON customers.customer_id = sales.customer_id LEFT JOIN products ON sales.product_id = products.product_id;",
      "SELECT customers.customer_name, products.product_name FROM customers LEFT JOIN sales ON customers.customer_id = sales.customer_id RIGHT JOIN products ON sales.product_id = products.product_id;",
      "SELECT customers.customer_name, SUM(sales.total_amount) AS total_sales FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customers.customer_name;",
      "SELECT category, AVG(price) AS avg_price FROM products GROUP BY category;",
      "SELECT COUNT(sale_id) AS total_sales FROM sales;",
      "SELECT product_id, COUNT(sale_id) AS num_sales FROM sales GROUP BY product_id;",
      "SELECT customer_id, MAX(total_amount) AS max_purchase FROM sales GROUP BY customer_id;",
      "SELECT sale_date, SUM(total_amount) AS total_revenue FROM sales GROUP BY sale_date;",
      "SELECT customer_id, product_id, sale_date, quantity, total_amount FROM sales WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers WHERE customer_id = 1;",
      "SELECT product_name, category, price FROM products ORDER BY price DESC;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customer_id;",
      "SELECT product_name, COUNT(*) AS total_sales FROM products JOIN sales ON products.product_id = sales.product_id GROUP BY product_id;",
      "SELECT customer_name, product_name, category, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT category, AVG(price) AS avg_price FROM products GROUP BY category;",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE total_amount > 1000;",
      "SELECT customer_name, product_name, sale_date FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE customer_name LIKE '%John%' AND category = 'Electronics';",
      "SELECT customer_name, product_name, quantity, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE quantity BETWEEN 1 AND 5 ORDER BY total_amount DESC;",
      "SELECT product_name, COUNT(*) AS total_sales FROM products JOIN sales ON products.product_id = sales.product_id WHERE price > 100 GROUP BY product_id HAVING total_sales > 5;",
      "SELECT customer_name, SUM(quantity) AS total_quantity FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customer_id HAVING total_quantity > 10;",
      "SELECT customer_name, product_name, sale_date, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE total_amount BETWEEN 50 AND 200 ORDER BY sale_date ASC;",
      "SELECT customer_name, product_name, sale_date, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE customer_name = 'Alice' OR customer_name = 'Bob';",
      "SELECT customer_name, product_name, sale_date, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE customer_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE category IN ('Electronics', 'Clothing') ORDER BY total_amount DESC;",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE customer_name = 'Alice' AND category = 'Electronics';",
      "SELECT customer_name, product_name, sale_date FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE sale_date > '2022-06-01';",
      "SELECT customer_name, product_name, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE customer_name LIKE '%Doe%' ORDER BY total_amount DESC;",
      "SELECT customer_name, product_name, sale_date, total_amount FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN products ON sales.product_id = products.product_id WHERE price > 50 AND total_amount < 1000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT product_name, product_price FROM products;",
      "SELECT * FROM orders;",
      "SELECT order_date, quantity FROM orders;",
      "SELECT metric_id, revenue FROM sales_metrics;",
      "SELECT order_id, profit FROM sales_metrics;",
      "SELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_id = 1;",
      "SELECT product_name, product_price, product_category FROM products WHERE product_id = 1;",
      "SELECT * FROM orders WHERE customer_id = 1;",
      "SELECT order_date, quantity FROM orders WHERE product_id = 1;",
      "SELECT metric_id, revenue, profit FROM sales_metrics WHERE order_id = 1;",
      "SELECT metric_id, revenue, profit FROM sales_metrics WHERE profit > 1000;",
      "SELECT * FROM customers ORDER BY customer_name ASC;",
      "SELECT customer_name, customer_email FROM customers ORDER BY customer_name DESC;",
      "SELECT product_name, product_category FROM products WHERE product_price > 50;",
      "SELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT SUM(revenue) AS total_revenue FROM sales_metrics;",
      "SELECT AVG(profit) AS average_profit FROM sales_metrics;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_phone LIKE '123%';",
      "SELECT product_name, product_price FROM products WHERE product_price > 100.00;",
      "SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, product_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id;",
      "SELECT customer_name, product_category, revenue FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id WHERE revenue > 500.00;",
      "SELECT COUNT(*) AS total_orders FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, SUM(revenue) AS total_revenue FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id GROUP BY customers.customer_id;",
      "SELECT product_category, AVG(profit) AS avg_profit FROM products JOIN sales_metrics ON products.product_id = sales_metrics.order_id GROUP BY product_category;",
      "SELECT customer_name, SUM(revenue) AS total_revenue, AVG(profit) AS avg_profit FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id GROUP BY customers.customer_id;",
      "SELECT customer_id, SUM(profit) AS total_profit FROM sales_metrics GROUP BY customer_id ORDER BY total_profit DESC;",
      "SELECT customer_name, product_name, SUM(profit) AS total_profit FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id GROUP BY customers.customer_id, products.product_id;",
      "SELECT customer_name, order_date, SUM(quantity) AS total_quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, order_date;",
      "SELECT customer_name, product_category, SUM(revenue) AS total_revenue FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id GROUP BY customer_name, product_category;",
      "SELECT customer_name, profit, margin FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id WHERE profit > 1000.00 AND margin < 0.2;",
      "SELECT customer_name, product_name, revenue, profit FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id WHERE customer_name LIKE '%John%' AND product_category = 'Electronics';",
      "SELECT customer_name, AVG(revenue) AS avg_revenue FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id GROUP BY customers.customer_id HAVING avg_revenue > 500.00;",
      "SELECT product_category, COUNT(DISTINCT customer_id) AS unique_customers FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_category;",
      "SELECT customer_name, product_name, MAX(revenue) AS max_revenue FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id GROUP BY customers.customer_id, products.product_id;",
      "SELECT customer_name, product_name, AVG(profit) AS avg_profit_per_order FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id JOIN sales_metrics ON orders.order_id = sales_metrics.order_id GROUP BY customers.customer_id, products.product_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_id, customer_name, customer_phone FROM customers WHERE customer_email='example@example.com';",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date FROM orders WHERE total_amount > 1000.00;",
      "SELECT order_id, total_amount FROM orders WHERE customer_id=1001;",
      "SELECT * FROM products;",
      "SELECT product_name, product_price FROM products WHERE product_price < 50.00;",
      "SELECT * FROM order_items;",
      "SELECT order_id, product_id, quantity FROM order_items WHERE total_price > 200.00;",
      "SELECT * FROM sales_reps;",
      "SELECT sales_rep_name, sales_rep_email, sales_rep_phone FROM sales_reps;",
      "SELECT sales_rep_id FROM sales_reps WHERE sales_rep_name LIKE '%John%';",
      "SELECT customer_id, customer_name, order_id, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT order_id, product_name, quantity, total_price FROM order_items JOIN products ON order_items.product_id = products.product_id;",
      "SELECT customer_name, product_name, total_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id;",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders);",
      "SELECT customer_name, SUM(total_amount) FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_id;",
      "SELECT product_name, AVG(product_price) FROM products GROUP BY product_name HAVING AVG(product_price) > 50.00;",
      "SELECT customer_name, COUNT(order_id) FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING COUNT(order_id) > 1;",
      "SELECT sales_rep_name, COUNT(order_id) AS total_orders FROM sales_reps JOIN orders ON sales_reps.sales_rep_id = orders.customer_id GROUP BY sales_rep_name HAVING total_orders > 5;",
      "SELECT * FROM customers WHERE customer_name LIKE '%A%' ORDER BY customer_id DESC;",
      "SELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, order_date, total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE total_amount > 1000;",
      "SELECT customer_name, product_name, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT customers.customer_name, orders.order_date, order_items.quantity, products.product_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id;",
      "SELECT COUNT(*) AS orders_count FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT MAX(total_price) AS max_order_total FROM order_items WHERE order_id = 1;",
      "SELECT AVG(total_amount) AS avg_order_amount FROM orders;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id;",
      "SELECT sales_rep_name, COUNT(*) AS total_orders FROM sales_reps JOIN orders ON sales_reps.sales_rep_id = orders.customer_id GROUP BY sales_reps.sales_rep_id;",
      "SELECT customer_name, product_name, total_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id WHERE total_price > 100;",
      "SELECT AVG(product_price) AS avg_product_price FROM products;",
      "SELECT product_name, COUNT(*) AS total_orders FROM products JOIN order_items ON products.product_id = order_items.product_id GROUP BY products.product_id;",
      "SELECT sales_rep_name, SUM(total_amount) AS total_sales FROM sales_reps JOIN orders ON sales_reps.sales_rep_id = orders.customer_id GROUP BY sales_reps.sales_rep_id HAVING total_sales > 5000;",
      "SELECT customer_name, total_amount * 0.1 AS discount_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, MAX(total_amount) AS max_order_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id;",
      "SELECT customer_name, AVG(total_amount) AS avg_order_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id HAVING avg_order_amount > 500;",
      "SELECT sales_rep_name, AVG(total_amount) AS avg_sales FROM sales_reps JOIN orders ON sales_reps.sales_rep_id = orders.customer_id GROUP BY sales_reps.sales_rep_id;",
      "SELECT product_name, MIN(product_price) AS min_price FROM products;",
      "SELECT product_name, MAX(quantity) AS max_quantity FROM products JOIN order_items ON products.product_id = order_items.product_id GROUP BY products.product_id;"
    ]
  }
]