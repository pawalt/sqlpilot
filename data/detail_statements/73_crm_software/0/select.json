[
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, name FROM customers;",
      "SELECT name, email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE customer_id = 1 AND name = 'John';",
      "SELECT customer_id, phone_number FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT DISTINCT email FROM customers;",
      "SELECT * FROM customers ORDER BY name ASC;",
      "SELECT name FROM customers WHERE purchase_history->>'total_purchases' >= '5';",
      "SELECT * FROM customers WHERE phone_number IS NULL;",
      "SELECT customer_id, name, phone_number FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT * FROM customers WHERE name ILIKE 'j%';",
      "SELECT * FROM customers WHERE purchase_history @> '{\"frequent_customer\": true}';",
      "SELECT customer_id, name FROM customers WHERE purchase_history ? 'total_purchases';",
      "SELECT * FROM customers WHERE customer_id BETWEEN 1 AND 10;",
      "SELECT * FROM customers WHERE customer_id IN (1, 2, 3);",
      "SELECT name, phone_number FROM customers WHERE email IS NOT NULL;",
      "SELECT customer_id, email FROM customers WHERE email NOT LIKE '%@example.com';",
      "SELECT * FROM customers WHERE purchase_history->>'last_purchase_date' BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM customers WHERE customer_id = 10 OR customer_id = 15;",
      "SELECT * FROM customers WHERE name LIKE '%son%' AND email IS NOT NULL;",
      "SELECT * FROM customers WHERE customer_id = 100;",
      "SELECT name, email FROM customers WHERE email IS NOT NULL AND phone_number IS NOT NULL;",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE customer_id > 100 ORDER BY customer_id DESC;",
      "SELECT customer_id, name FROM customers WHERE customer_id IN (100, 200, 300);",
      "SELECT customer_id, name FROM customers WHERE email LIKE '%gmail.com' AND purchase_history->'product' = 'Laptop';",
      "SELECT DISTINCT name FROM customers;",
      "SELECT customer_id, name, count(*) FROM customers GROUP BY customer_id, name;",
      "SELECT customer_id, name, email, CASE WHEN phone_number IS NULL THEN 'No Phone Number' ELSE phone_number END AS display_phone FROM customers;",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history @> '[{\"product\":\"Phone\", \"price\": 500}]';",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history @> '[{\"product\":\"Laptop\", \"price\": 1000}]' AND phone_number IS NOT NULL;",
      "SELECT customer_id, name, jsonb_array_elements_text(purchase_history->'items') AS purchased_item FROM customers;",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history->'items' @> '[{\"product_name\": \"Book\"}]';",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history->'items' @> '[{\"price\": {\"$lt\": 50}}]' AND email IS NOT NULL;",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history @> '[{\"product\":\"Shoes\"}]' AND phone_number LIKE '%123%';",
      "SELECT customer_id, name FROM customers WHERE purchase_history->'items' @? '$[1].product_type' = 'Electronics';",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history->'items' @? '$[*].price' > 1000 AND email LIKE '%company.com';",
      "SELECT customer_id, name, count(*) AS total_purchases FROM customers CROSS JOIN LATERAL jsonb_array_elements(purchase_history->'items') AS purchases WHERE purchases->>'product' = 'Watch' GROUP BY customer_id, name;",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history->'items' @> '[{\"product_name\": \"Bag\", \"price\": {\"$gt\": 50}}]';",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE purchase_history->'items' @> '[{\"product_name\": \"Chair\", \"price\": {\"$between\": [50,100]}}]';",
      "SELECT customer_id, name FROM customers WHERE purchase_history->'items' @? '$[*].product_type' IN ('Electronics', 'Clothing');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers;",
      "SELECT customer_id, phone_number FROM customers;",
      "SELECT * FROM purchase_history;",
      "SELECT purchase_id, customer_id, purchase_date FROM purchase_history;",
      "SELECT total_amount FROM purchase_history;",
      "SELECT customers.name, purchase_history.total_amount FROM customers JOIN purchase_history ON customers.customer_id = purchase_history.customer_id;",
      "SELECT customers.name, purchase_history.total_amount FROM customers INNER JOIN purchase_history ON customers.customer_id = purchase_history.customer_id;",
      "SELECT customers.name, purchase_history.total_amount FROM customers LEFT JOIN purchase_history ON customers.customer_id = purchase_history.customer_id;",
      "SELECT customers.name, purchase_history.total_amount FROM customers RIGHT JOIN purchase_history ON customers.customer_id = purchase_history.customer_id;",
      "SELECT name, email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE name LIKE 'A%';",
      "SELECT * FROM customers ORDER BY name ASC;",
      "SELECT * FROM customers ORDER BY customer_id DESC;",
      "SELECT * FROM purchase_history WHERE total_amount > 100;",
      "SELECT customers.name, purchase_history.total_amount FROM customers JOIN purchase_history ON customers.customer_id = purchase_history.customer_id WHERE purchase_date >= '2021-01-01';",
      "SELECT customers.name, purchase_history.total_amount FROM customers JOIN purchase_history ON customers.customer_id = purchase_history.customer_id GROUP BY customers.name;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT AVG(total_amount) FROM purchase_history;",
      "SELECT MAX(total_amount) FROM purchase_history;",
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers;",
      "SELECT customer_id, name, phone_number FROM customers WHERE customer_id = 10;",
      "SELECT * FROM customers WHERE name LIKE 'J%';",
      "SELECT name, email FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT c.customer_id, p.purchase_id, p.purchase_date, p.total_amount FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id;",
      "SELECT c.name, COUNT(p.purchase_id) AS total_purchases FROM customers c LEFT JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.name;",
      "SELECT c.customer_id, c.name, (SELECT MAX(purchase_date) FROM purchase_history WHERE customer_id = c.customer_id) AS last_purchase_date FROM customers c;",
      "SELECT c.name, c.email, SUM(p.total_amount) AS total_spent FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.name, c.email;",
      "SELECT c.name, p.total_amount FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id WHERE p.total_amount > 1000;",
      "SELECT c.customer_id, c.name, AVG(p.total_amount) AS avg_purchase_amount FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.customer_id, c.name;",
      "SELECT c.name, MAX(p.total_amount) AS max_purchase_amount FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.name;",
      "SELECT c.name AS customer_name, p.purchase_date AS last_purchase_date FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id WHERE p.purchase_date = (SELECT MAX(purchase_date) FROM purchase_history WHERE customer_id = c.customer_id);",
      "SELECT c.name, p.purchase_date FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id WHERE p.purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT c.name, MIN(p.total_amount) AS min_purchase_amount FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.name;",
      "SELECT c.name, COUNT(p.purchase_id) AS total_purchases FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.name HAVING total_purchases > 5;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM purchase_history GROUP BY customer_id ORDER BY total_spent DESC LIMIT 5;",
      "SELECT c.name, AVG(p.total_amount) AS avg_purchase_amount FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id WHERE p.total_amount > 500 GROUP BY c.name;",
      "SELECT c.name, c.email, COUNT(p.purchase_id) AS total_purchases FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.name, c.email HAVING total_purchases < 3;",
      "SELECT c.name, MIN(p.purchase_date) AS first_purchase_date FROM customers c JOIN purchase_history p ON c.customer_id = p.customer_id GROUP BY c.name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customer;",
      "SELECT customer_id, name FROM Customer;",
      "SELECT * FROM Purchase;",
      "SELECT purchase_id, customer_id, total_amount FROM Purchase;",
      "SELECT * FROM Address;",
      "SELECT address_id, street_address, city, country FROM Address;",
      "SELECT name, email FROM Customer WHERE customer_id = 1;",
      "SELECT name, phone_number FROM Customer WHERE email LIKE '%gmail.com';",
      "SELECT * FROM Purchase WHERE total_amount > 1000;",
      "SELECT customer_id, COUNT(*) AS total_purchases FROM Purchase GROUP BY customer_id;",
      "SELECT Customer.name, Address.street_address, Address.city, Address.country FROM Customer INNER JOIN Address ON Customer.customer_id = Address.customer_id;",
      "SELECT Customer.name, Purchase.total_amount FROM Customer INNER JOIN Purchase ON Customer.customer_id = Purchase.customer_id;",
      "SELECT Customer.name, Purchase.total_amount FROM Customer LEFT JOIN Purchase ON Customer.customer_id = Purchase.customer_id;",
      "SELECT Customer.name, Purchase.purchase_date, Address.street_address, Address.city, Address.country FROM Customer INNER JOIN Purchase ON Customer.customer_id = Purchase.customer_id INNER JOIN Address ON Customer.customer_id = Address.customer_id;",
      "SELECT COUNT(*) AS total_customers FROM Customer;",
      "SELECT AVG(total_amount) AS avg_purchase_amount FROM Purchase;",
      "SELECT city, COUNT(*) AS total_customers FROM Address GROUP BY city;",
      "SELECT * FROM Customer ORDER BY name ASC;",
      "SELECT * FROM Purchase ORDER BY total_amount DESC LIMIT 5;",
      "SELECT name, email FROM Customer;",
      "SELECT name, phone_number FROM Customer WHERE customer_id = 1;",
      "SELECT * FROM Purchase WHERE purchase_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT c.name, p.total_amount FROM Customer c JOIN Purchase p ON c.customer_id = p.customer_id;",
      "SELECT DISTINCT city FROM Address;",
      "SELECT a.street_address, a.city, c.name FROM Address a JOIN Customer c ON a.customer_id = c.customer_id;",
      "SELECT c.name, p.total_amount FROM Customer c LEFT JOIN Purchase p ON c.customer_id = p.customer_id;",
      "SELECT MAX(total_amount) FROM Purchase;",
      "SELECT AVG(total_amount) FROM Purchase;",
      "SELECT customer_id, COUNT(*) FROM Purchase GROUP BY customer_id;",
      "SELECT customer_id, SUM(total_amount) FROM Purchase GROUP BY customer_id HAVING SUM(total_amount) > 1000;",
      "SELECT name, city, country FROM Customer c JOIN Address a ON c.customer_id = a.customer_id;",
      "SELECT customer_id, COUNT(*) AS total_purchases FROM Purchase GROUP BY customer_id HAVING total_purchases > 1;",
      "SELECT c.name, SUM(p.total_amount) AS total_spent FROM Customer c JOIN Purchase p ON c.customer_id = p.customer_id GROUP BY c.customer_id;",
      "SELECT name, email, phone_number FROM Customer WHERE phone_number LIKE '%123%';",
      "SELECT AVG(total_amount) AS average_purchase_amount FROM Purchase;",
      "SELECT c.name, a.country FROM Customer c JOIN Address a ON c.customer_id = a.customer_id WHERE a.country = 'USA';",
      "SELECT name, city, country, SUM(total_amount) AS total_spend FROM Customer c JOIN (Purchase p JOIN Address a ON p.customer_id = a.customer_id) ON c.customer_id = p.customer_id GROUP BY c.customer_id, city, country;",
      "SELECT c.name, COUNT(purchase_id) AS total_purchases FROM Customer c LEFT JOIN Purchase p ON c.customer_id = p.customer_id GROUP BY c.customer_id HAVING total_purchases > 0;",
      "SELECT name, phone_number FROM Customer ORDER BY name ASC LIMIT 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers;",
      "SELECT * FROM addresses;",
      "SELECT street_address, city, state FROM addresses;",
      "SELECT order_id, order_date, total_amount FROM orders;",
      "SELECT * FROM order_items;",
      "SELECT product_name, quantity, price FROM order_items;",
      "SELECT customer_id, name, email, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT street_address, city, state, postal_code FROM addresses WHERE customer_id = 1;",
      "SELECT order_id, total_amount FROM orders WHERE customer_id = 1;",
      "SELECT product_name, quantity, price FROM order_items WHERE order_id = 1;",
      "SELECT name, email FROM customers WHERE customer_id IN (1, 2, 3);",
      "SELECT city, state FROM addresses WHERE customer_id IN (1, 2, 3);",
      "SELECT order_date, total_amount FROM orders WHERE customer_id IN (1, 2, 3);",
      "SELECT product_name, quantity, price FROM order_items WHERE order_id IN (1, 2, 3);",
      "SELECT * FROM customers ORDER BY name ASC;",
      "SELECT * FROM addresses ORDER BY city DESC;",
      "SELECT * FROM orders ORDER BY total_amount DESC;",
      "SELECT * FROM order_items ORDER BY price ASC;",
      "SELECT customer_id, name, email FROM customers WHERE name LIKE 'A%';",
      "SELECT * FROM customers WHERE name = 'John Doe';",
      "SELECT customer_id, name, email FROM customers WHERE phone_number LIKE '%555%';",
      "SELECT customers.customer_id, customers.name, addresses.city FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id;",
      "SELECT orders.order_id, orders.order_date, SUM(order_items.quantity) AS total_items FROM orders JOIN order_items ON orders.order_id = order_items.order_id GROUP BY orders.order_id;",
      "SELECT customers.name, orders.order_date, order_items.product_name, order_items.price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT AVG(total_amount) AS average_amount FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customers.name, customers.email, SUM(order_items.quantity * order_items.price) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customers.customer_id;",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE total_amount > 1000);",
      "SELECT customers.name, addresses.state, AVG(orders.total_amount) AS average_order_amount FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id;",
      "SELECT DISTINCT customers.name, addresses.city FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id;",
      "SELECT customer_id, name, email FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM orders);",
      "SELECT * FROM customers WHERE name LIKE 'A%' OR name LIKE '%a';",
      "SELECT orders.order_id, orders.total_amount, products.product_name, products.category FROM orders JOIN (SELECT order_id, product_name, category FROM order_items WHERE price > 50) AS products ON orders.order_id = products.order_id;",
      "SELECT customers.name, orders.order_date, order_items.product_name, order_items.price FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN order_items ON orders.order_id = order_items.order_id;",
      "SELECT customers.name, orders.order_date FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN addresses ON customers.customer_id = addresses.customer_id;",
      "SELECT customers.name, addresses.city, first_order_date, last_order_date FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id JOIN (SELECT customer_id, MIN(order_date) AS first_order_date, MAX(order_date) AS last_order_date FROM orders GROUP BY customer_id) AS order_dates ON customers.customer_id = order_dates.customer_id;",
      "SELECT customer_id, name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE DATEDIFF(CURDATE(), order_date) >= 30);",
      "SELECT customers.name, orders.order_date, order_items.product_name, order_items.price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id WHERE orders.total_amount > 500;",
      "SELECT customers.name, addresses.city, COUNT(orders.order_id) AS total_orders FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id;",
      "SELECT name, city, total_orders FROM (SELECT customers.name, addresses.city, COUNT(orders.order_id) AS total_orders FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id) AS customer_orders WHERE total_orders >= 5;",
      "SELECT customers.name, addresses.city, orders.order_date, SUM(order_items.quantity) AS total_items FROM customers JOIN addresses ON customers.customer_id = addresses.customer_id JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY customers.customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT customer_id, customer_name, email FROM Customers WHERE customer_id = 1;",
      "SELECT customer_name, email FROM Customers WHERE phone_number LIKE '%123%';",
      "SELECT * FROM Addresses;",
      "SELECT customer_id, street_address, city FROM Addresses WHERE state = 'California';",
      "SELECT * FROM Orders;",
      "SELECT order_id, order_date, total_amount FROM Orders WHERE customer_id = 1;",
      "SELECT * FROM Products;",
      "SELECT product_id, product_name, price FROM Products WHERE price > 50.00;",
      "SELECT * FROM Order_Items;",
      "SELECT order_id, product_id, quantity FROM Order_Items WHERE unit_price > 10.00;",
      "SELECT customer_name, email, order_date, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT product_name, description, price, quantity, unit_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id;",
      "SELECT customer_name, street_address, city, order_date, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Addresses ON Customers.customer_id = Addresses.customer_id;",
      "SELECT Orders.order_id, Customers.customer_name, Products.product_name, Order_Items.quantity FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id;",
      "SELECT customer_name, email, order_date, total_amount, product_name, quantity, unit_price FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id;",
      "SELECT * FROM Customers WHERE customer_id = 1;",
      "SELECT customer_name, email FROM Customers WHERE phone_number LIKE '%555%';",
      "SELECT Orders.order_id, Orders.total_amount, Customers.customer_name FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id;",
      "SELECT Customers.customer_name, Addresses.street_address, Addresses.city, Addresses.state, Addresses.postal_code FROM Customers INNER JOIN Addresses ON Customers.customer_id = Addresses.customer_id;",
      "SELECT Customers.customer_name, Orders.order_date, Products.product_name, Order_Items.quantity FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id;",
      "SELECT Orders.order_id, Orders.total_amount, Customers.customer_name, Products.product_name, Order_Items.quantity FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id;",
      "SELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT Customers.customer_name, SUM(Orders.total_amount) AS total_spent FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_name;",
      "SELECT Products.product_name, AVG(Order_Items.unit_price) AS avg_price FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_name;",
      "SELECT Customers.customer_name, COUNT(Orders.order_id) AS num_orders FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_name;",
      "SELECT Customers.customer_name, MAX(Orders.total_amount) AS max_spent FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_name;",
      "SELECT Products.product_name, MIN(Order_Items.unit_price) AS min_price FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_name;",
      "SELECT Customers.customer_name, Addresses.city, COUNT(Orders.order_id) AS num_orders FROM Customers INNER JOIN Addresses ON Customers.customer_id = Addresses.customer_id INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_name, Addresses.city;",
      "SELECT Customers.customer_name, Orders.order_id, Orders.order_date, SUM(Order_Items.quantity) AS total_quantity FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_name, Orders.order_id, Orders.order_date;",
      "SELECT Products.product_name, SUM(Order_Items.quantity) AS total_quantity FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_name HAVING SUM(Order_Items.quantity) > 100;",
      "SELECT Customers.customer_name, Orders.order_date, SUM(Order_Items.quantity * Order_Items.unit_price) AS total_order_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_name, Orders.order_date;",
      "SELECT Customers.customer_name, Addresses.city, COUNT(Orders.order_id) AS num_orders FROM Customers INNER JOIN Addresses ON Customers.customer_id = Addresses.customer_id LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_name, Addresses.city;",
      "SELECT Customers.customer_name, Orders.order_date, AVG(Order_Items.unit_price) AS avg_unit_price FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_name, Orders.order_date;",
      "SELECT Customers.customer_name, Addresses.city, COUNT(Orders.order_id) AS num_orders FROM Customers FULL JOIN Addresses ON Customers.customer_id = Addresses.customer_id LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_name, Addresses.city;",
      "SELECT Customers.customer_name, Orders.order_date, MAX(Order_Items.unit_price) AS max_unit_price FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_name, Orders.order_date;"
    ]
  }
]