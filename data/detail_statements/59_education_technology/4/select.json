[
  {
    "statements": [
      "SELECT * FROM student_data;",
      "SELECT student_name, student_age FROM student_data;",
      "SELECT student_name, course_name FROM student_data WHERE student_age > 20;",
      "SELECT COUNT(*) FROM student_data;",
      "SELECT AVG(student_age) FROM student_data;",
      "SELECT MAX(student_age) FROM student_data;",
      "SELECT student_name FROM student_data WHERE student_age < 25;",
      "SELECT * FROM student_data WHERE course_name = 'Math';",
      "SELECT student_name, course_name FROM student_data WHERE student_age BETWEEN 18 AND 25;",
      "SELECT DISTINCT course_name FROM student_data;",
      "SELECT student_name, student_age, course_name FROM student_data WHERE student_name LIKE '%John%';",
      "SELECT student_name, student_age FROM student_data ORDER BY student_age DESC;",
      "SELECT student_name, course_name FROM student_data WHERE course_name IN ('Math', 'Science');",
      "SELECT MIN(student_age) FROM student_data;",
      "SELECT student_name FROM student_data WHERE course_name LIKE '%Science%';",
      "SELECT * FROM student_data WHERE student_age >= 30;",
      "SELECT student_name, course_name FROM student_data WHERE student_age < 20 OR course_name = 'History';",
      "SELECT COUNT(DISTINCT course_name) FROM student_data;",
      "SELECT * FROM student_data WHERE student_name = 'Alice' AND course_name = 'Biology';",
      "SELECT student_name, student_age FROM student_data WHERE student_age < 30 ORDER BY student_name ASC;",
      "SELECT * FROM student_data WHERE student_age > 20;",
      "SELECT student_name, course_name FROM student_data WHERE student_age BETWEEN 18 AND 25;",
      "SELECT student_name, course_name FROM student_data WHERE student_name LIKE '%John%';",
      "SELECT student_name, student_age FROM student_data WHERE course_name = 'Mathematics';",
      "SELECT COUNT(*) FROM student_data WHERE course_name = 'Physics';",
      "SELECT student_name, student_age FROM student_data ORDER BY student_age DESC;",
      "SELECT AVG(student_age) FROM student_data WHERE course_name = 'Biology';",
      "SELECT DISTINCT course_name FROM student_data;",
      "SELECT student_name, course_name FROM student_data WHERE student_age < 18 OR student_age > 25;",
      "SELECT student_name, course_name FROM student_data WHERE course_name IN ('Mathematics', 'Physics');",
      "SELECT * FROM student_data WHERE student_age < (SELECT AVG(student_age) FROM student_data);",
      "SELECT MAX(student_age), MIN(student_age) FROM student_data;",
      "SELECT student_name, student_age FROM student_data WHERE student_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT student_name, course_name FROM student_data WHERE student_age < 20 AND course_name = 'Chemistry';",
      "SELECT student_name, student_age FROM student_data WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT student_name FROM student_data WHERE student_age = (SELECT MAX(student_age) FROM student_data);",
      "SELECT AVG(student_age) AS average_age, course_name FROM student_data GROUP BY course_name;",
      "SELECT student_name, course_name FROM student_data WHERE student_age > 18 UNION SELECT student_name, course_name FROM student_data WHERE course_name = 'History';",
      "SELECT student_name, student_age FROM student_data WHERE student_name NOT IN ('David', 'Emily');",
      "SELECT student_name, course_name FROM student_data WHERE student_age >= 20 AND course_name != 'English';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_name, student_age FROM Students;",
      "SELECT * FROM Courses;",
      "SELECT course_name, course_credit FROM Courses;",
      "SELECT student_id, student_name, student_grade FROM Students;",
      "SELECT course_id, course_name, course_teacher FROM Courses;",
      "SELECT student_name, student_age, student_grade FROM Students;",
      "SELECT course_name, course_credit, course_teacher FROM Courses;",
      "SELECT student_id, student_name, student_age, student_grade FROM Students;",
      "SELECT course_id, course_name, course_credit, course_teacher FROM Courses;",
      "SELECT student_id, student_name, student_grade FROM Students WHERE student_age > 20;",
      "SELECT course_id, course_name, course_credit FROM Courses WHERE course_teacher = 'Dr. Smith';",
      "SELECT * FROM Students WHERE student_grade = 'A';",
      "SELECT * FROM Courses WHERE course_credit > 3;",
      "SELECT student_id, student_name FROM Students WHERE student_age < 25;",
      "SELECT course_id, course_name FROM Courses WHERE course_credit < 4;",
      "SELECT COUNT(student_id) AS total_students FROM Students;",
      "SELECT MAX(student_age) AS oldest_student_age FROM Students;",
      "SELECT AVG(course_credit) AS avg_course_credit FROM Courses;",
      "SELECT MIN(course_credit) AS min_course_credit FROM Courses;",
      "SELECT * FROM Students WHERE student_age > 20;",
      "SELECT student_name, student_grade FROM Students WHERE student_grade = 'A';",
      "SELECT DISTINCT student_id FROM Students;",
      "SELECT student_name, course_name FROM Students INNER JOIN Courses ON Students.student_id = Courses.course_id;",
      "SELECT student_name, course_credit FROM Students INNER JOIN Courses ON Students.student_id = Courses.course_id WHERE course_credit > 3;",
      "SELECT student_name, AVG(student_age) AS avg_age FROM Students GROUP BY student_name;",
      "SELECT student_name, COUNT(course_id) AS num_courses FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
      "SELECT student_name, SUM(course_credit) AS total_credits FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
      "SELECT student_name, MAX(course_credit) AS max_credit FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
      "SELECT student_name, MIN(course_credit) AS min_credit FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
      "SELECT student_name, course_name FROM Students CROSS JOIN Courses;",
      "SELECT student_name, course_name FROM Students FULL OUTER JOIN Courses ON Students.student_id = Courses.course_id;",
      "SELECT student_name, course_name FROM Students RIGHT JOIN Courses ON Students.student_id = Courses.course_id;",
      "SELECT student_name, course_name FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id WHERE course_teacher = 'Mr. Smith';",
      "SELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE student_age > 18 AND course_credit > 2;",
      "SELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE student_age BETWEEN 18 AND 25;",
      "SELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE student_name LIKE 'A%';",
      "SELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE course_name IN ('Math', 'English', 'Science');",
      "SELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id ORDER BY student_name DESC;",
      "SELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id LIMIT 10 OFFSET 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_id, student_name, major FROM Students;",
      "SELECT enrollment_date FROM Students;",
      "SELECT * FROM Courses;",
      "SELECT course_id, course_name, instructor FROM Courses;",
      "SELECT course_description FROM Courses;",
      "SELECT * FROM Grades;",
      "SELECT student_id, course_id, grade FROM Grades;",
      "SELECT grade_id, student_id, course_id, grade FROM Grades;",
      "SELECT student_id, course_id, grade FROM Grades WHERE grade = 'A';",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'B';",
      "SELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE Students.major = 'Computer Science';",
      "SELECT AVG(CAST(grade AS DECIMAL)) AS avg_grade FROM Grades WHERE course_id = 1;",
      "SELECT COUNT(*) AS num_students FROM Students;",
      "SELECT course_id, AVG(CAST(grade AS DECIMAL)) AS avg_grade FROM Grades GROUP BY course_id;",
      "SELECT student_name, COUNT(*) AS num_courses FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_id;",
      "SELECT student_id, COUNT(DISTINCT course_id) AS num_courses FROM Grades GROUP BY student_id;",
      "SELECT student_name, course_name, MAX(CAST(grade AS DECIMAL)) AS max_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id GROUP BY student_id;",
      "SELECT student_name, course_name, MIN(CAST(grade AS DECIMAL)) AS min_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id GROUP BY student_id;",
      "SELECT * FROM Students;",
      "SELECT student_name FROM Students WHERE major = 'Computer Science';",
      "SELECT course_name, course_description FROM Courses WHERE instructor = 'Professor Smith';",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'B';",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'C';",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'D';",
      "SELECT student_name, course_name FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id LEFT JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade IS NULL;",
      "SELECT student_name, AVG(grade) AS avg_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id;",
      "SELECT major, COUNT(*) AS num_students FROM Students GROUP BY major;",
      "SELECT course_id, COUNT(*) AS num_students FROM Grades GROUP BY course_id ORDER BY num_students DESC;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id ORDER BY grade DESC;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE enrollment_date >= '2022-01-01';",
      "SELECT student_id, student_name, COUNT(course_id) AS num_courses FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id HAVING num_courses >= 3;",
      "SELECT AVG(GRADE) AS avg_grade FROM Grades GROUP BY course_id HAVING COUNT(student_id) >= 5;",
      "SELECT student_name, MAX(grade) AS max_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id;",
      "SELECT course_name, MIN(grade) AS min_grade FROM Courses INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY Courses.course_id;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE major = 'Engineering';",
      "SELECT student_name, course_name, CASE WHEN grade >= 'A' THEN 'Pass' ELSE 'Fail' END AS result FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT name, age FROM Students;",
      "SELECT student_id, name FROM Students WHERE grade = 'A';",
      "SELECT course_name, instructor FROM Courses;",
      "SELECT course_id, department FROM Courses WHERE instructor = 'John Doe';",
      "SELECT * FROM Enrollments;",
      "SELECT student_id, course_id FROM Enrollments WHERE grade = 'B';",
      "SELECT enrollment_id, enrollment_date FROM Enrollments WHERE student_id = 123;",
      "SELECT * FROM Grades;",
      "SELECT assignment_name, score FROM Grades WHERE grade_id = 100;",
      "SELECT student_id, course_id, grade FROM Enrollments WHERE enrollment_date > '2022-01-01';",
      "SELECT name, age, grade FROM Students WHERE age > 20;",
      "SELECT course_name, instructor, department FROM Courses WHERE department = 'Computer Science';",
      "SELECT * FROM Enrollments WHERE grade = 'A' AND grade IN ('A', 'B');",
      "SELECT enrollment_id, assignment_name, score FROM Grades WHERE score > 90;",
      "SELECT name, age, grade FROM Students WHERE grade IS NOT NULL;",
      "SELECT course_id, course_name, department FROM Courses WHERE instructor IS NULL;",
      "SELECT student_id, enrollment_date FROM Enrollments WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT course_id, COUNT(student_id) AS total_students FROM Enrollments GROUP BY course_id;",
      "SELECT AVG(score) AS average_score FROM Grades;",
      "SELECT * FROM Students;",
      "SELECT name, age FROM Students WHERE age > 20;",
      "SELECT * FROM Courses WHERE department = 'Computer Science';",
      "SELECT student_id, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT course_name, instructor FROM Courses WHERE course_name LIKE '%Programming%';",
      "SELECT name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id WHERE grade = 'A';",
      "SELECT student_id, AVG(score) AS average_score FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY student_id;",
      "SELECT DISTINCT instructor FROM Courses WHERE department = 'Mathematics';",
      "SELECT student_id, COUNT(course_id) AS num_courses FROM Enrollments GROUP BY student_id HAVING num_courses > 3;",
      "SELECT assignment_name, MAX(score) AS max_score FROM Grades GROUP BY assignment_name;",
      "SELECT name, age, CASE WHEN age < 18 THEN 'Minor' ELSE 'Adult' END AS age_category FROM Students;",
      "SELECT course_name, COUNT(enrollment_id) AS num_students FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name;",
      "SELECT department, AVG(score) AS average_score FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY department;",
      "SELECT name, feedback FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id WHERE grade = 'F';",
      "SELECT COUNT(DISTINCT student_id) AS num_students FROM Enrollments;",
      "SELECT course_name, COUNT(DISTINCT student_id) AS num_students FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name HAVING num_students > 5;",
      "SELECT name, AVG(score) AS avg_score FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY name HAVING avg_score > 80;",
      "SELECT course_name, instructor, AVG(score) AS avg_score FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY course_name, instructor;",
      "SELECT name, age, grade FROM Students WHERE age BETWEEN 20 AND 25 AND grade IN ('A', 'B');",
      "SELECT course_name, department, COUNT(enrollment_id) AS num_students FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name, department HAVING num_students > 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_id, student_name FROM Students;",
      "SELECT * FROM Courses;",
      "SELECT course_id, course_name FROM Courses;",
      "SELECT * FROM Enrollments;",
      "SELECT enrollment_id, student_id, course_id FROM Enrollments;",
      "SELECT * FROM Grades;",
      "SELECT student_id, course_id, grade FROM Grades;",
      "SELECT * FROM Instructors;",
      "SELECT instructor_id, instructor_name FROM Instructors;",
      "SELECT student_id, student_name, major FROM Students;",
      "SELECT course_id, course_name, course_description FROM Courses;",
      "SELECT enrollment_id, student_id, course_id, enrollment_date FROM Enrollments;",
      "SELECT grade_id, student_id, course_id, grade FROM Grades;",
      "SELECT instructor_id, instructor_name, department FROM Instructors;",
      "SELECT student_name, enrolled_year FROM Students;",
      "SELECT course_name, instructor_id FROM Courses;",
      "SELECT student_id, course_id, grade FROM Grades WHERE grade = 'A';",
      "SELECT * FROM Enrollments WHERE enrollment_date = '2022-01-01';",
      "SELECT student_id, student_name FROM Students WHERE major = 'Computer Science';",
      "SELECT * FROM Students WHERE enrolled_year BETWEEN 2018 AND 2020;",
      "SELECT student_name, major FROM Students WHERE major = 'Computer Science';",
      "SELECT course_name, course_description, instructor_name FROM Courses INNER JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
      "SELECT instructor_name, COUNT(course_id) AS num_courses FROM Instructors LEFT JOIN Courses ON Instructors.instructor_id = Courses.instructor_id GROUP BY instructor_name;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'B' AND enrolled_year = 2019;",
      "SELECT instructor_name, SUM(CAST(grade AS INT)) AS total_grades FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY instructor_name;",
      "SELECT student_name, count(DISTINCT course_id) AS num_courses_taken FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name;",
      "SELECT student_name, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
      "SELECT student_name, MAX(CAST(grade AS INT)) AS max_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
      "SELECT instructor_name, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY instructor_name;",
      "SELECT student_name, COUNT(course_id) AS num_courses FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name HAVING num_courses > 3;",
      "SELECT student_name, MAX(enrollment_date) AS latest_enrollment FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE enrolled_year = 2020;",
      "SELECT department, COUNT(instructor_id) AS num_instructors FROM Instructors GROUP BY department;",
      "SELECT major, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY major;",
      "SELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE student_name LIKE 'A%';",
      "SELECT instructor_name, course_name, grade FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id WHERE grade = 'A';",
      "SELECT student_name, SUM(CAST(grade AS INT)) AS total_grades FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
      "SELECT department, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY department;"
    ]
  }
]