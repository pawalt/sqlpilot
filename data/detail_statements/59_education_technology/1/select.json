[
  {
    "statements": [
      "SELECT * FROM student_assessment_data;",
      "SELECT student_id, assessment_date FROM student_assessment_data;",
      "SELECT assessment_score FROM student_assessment_data WHERE student_id = 1;",
      "SELECT * FROM student_assessment_data WHERE assessment_score > 80;",
      "SELECT student_id, assessment_score FROM student_assessment_data WHERE assessment_date = '2023-01-05';",
      "SELECT COUNT(*) FROM student_assessment_data;",
      "SELECT AVG(assessment_score) FROM student_assessment_data;",
      "SELECT MAX(assessment_score) FROM student_assessment_data;",
      "SELECT * FROM student_assessment_data ORDER BY assessment_score DESC;",
      "SELECT * FROM student_assessment_data WHERE student_id IN (1, 2, 3);",
      "SELECT * FROM student_assessment_data WHERE assessment_date BETWEEN '2023-01-01' AND '2023-01-31';",
      "SELECT DISTINCT assessment_date FROM student_assessment_data;",
      "SELECT student_id, AVG(assessment_score) FROM student_assessment_data GROUP BY student_id;",
      "SELECT assessment_date, COUNT(*) FROM student_assessment_data GROUP BY assessment_date;",
      "SELECT student_id, SUM(assessment_score) FROM student_assessment_data GROUP BY student_id HAVING SUM(assessment_score) > 200;",
      "SELECT * FROM student_assessment_data LIMIT 10;",
      "SELECT * FROM student_assessment_data OFFSET 5;",
      "SELECT * FROM student_assessment_data WHERE assessment_score IS NOT NULL;",
      "SELECT * FROM student_assessment_data WHERE assessment_score IS NULL;",
      "SELECT * FROM student_assessment_data WHERE assessment_score LIKE '8%';",
      "SELECT * FROM student_assessment_data;",
      "SELECT student_id, MAX(assessment_score) FROM student_assessment_data GROUP BY student_id;",
      "SELECT student_id, assessment_date FROM student_assessment_data WHERE assessment_score > 90;",
      "SELECT AVG(assessment_score) FROM student_assessment_data;",
      "SELECT * FROM student_assessment_data WHERE assessment_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT COUNT(DISTINCT student_id) FROM student_assessment_data;",
      "SELECT student_id, assessment_score FROM student_assessment_data ORDER BY assessment_score DESC;",
      "SELECT student_id, MAX(assessment_score) AS highest_score FROM student_assessment_data GROUP BY student_id;",
      "SELECT student_id, assessment_score FROM student_assessment_data WHERE assessment_score < 70;",
      "SELECT student_id, COUNT(*) AS num_assessments FROM student_assessment_data GROUP BY student_id HAVING num_assessments > 2;",
      "SELECT student_id, assessment_date, assessment_score FROM student_assessment_data WHERE assessment_score BETWEEN 80 AND 90;",
      "SELECT student_id, AVG(assessment_score) AS avg_score FROM student_assessment_data GROUP BY student_id;",
      "SELECT DISTINCT student_id FROM student_assessment_data;",
      "SELECT student_id, assessment_score FROM student_assessment_data WHERE assessment_date < '2022-03-15';",
      "SELECT student_id, assessment_date FROM student_assessment_data WHERE assessment_date = '2022-05-20';",
      "SELECT student_id, assessment_score FROM student_assessment_data WHERE assessment_score NOT BETWEEN 70 AND 80;",
      "SELECT student_id, assessment_date FROM student_assessment_data ORDER BY assessment_date ASC;",
      "SELECT student_id, COUNT(*) AS num_assessments FROM student_assessment_data GROUP BY student_id ORDER BY num_assessments DESC;",
      "SELECT student_id, assessment_date, assessment_score FROM student_assessment_data WHERE assessment_date > '2022-04-01' AND assessment_score < 85;",
      "SELECT student_id, assessment_score FROM student_assessment_data WHERE assessment_score BETWEEN 60 AND 70 ORDER BY student_id ASC;",
      "SELECT student_id, AVG(assessment_score) AS avg_score FROM student_assessment_data GROUP BY student_id HAVING avg_score > 85;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM student;",
      "SELECT student_id, student_name FROM student;",
      "SELECT student_id, enrollment_date FROM student;",
      "SELECT * FROM assessment;",
      "SELECT assessment_id, student_id, score FROM assessment;",
      "SELECT assessment_id, assessment_date FROM assessment;",
      "SELECT student.student_id, student.student_name, assessment.score FROM student INNER JOIN assessment ON student.student_id = assessment.student_id;",
      "SELECT student.student_id, student.student_name, assessment.assessment_date FROM student INNER JOIN assessment ON student.student_id = assessment.student_id;",
      "SELECT student.student_id, student.student_name, assessment.score, assessment.subject FROM student INNER JOIN assessment ON student.student_id = assessment.student_id;",
      "SELECT AVG(score) FROM assessment;",
      "SELECT MIN(score) FROM assessment;",
      "SELECT MAX(score) FROM assessment;",
      "SELECT student_id, COUNT(assessment_id) FROM assessment GROUP BY student_id;",
      "SELECT student.major, AVG(score) FROM student INNER JOIN assessment ON student.student_id = assessment.student_id GROUP BY student.major;",
      "SELECT student.student_name, assessment.subject, assessment.score FROM student INNER JOIN assessment ON student.student_id = assessment.student_id WHERE assessment.score > 80;",
      "SELECT student.student_name, assessment.subject, assessment.assessment_date FROM student INNER JOIN assessment ON student.student_id = assessment.student_id WHERE assessment.assessment_date = '2022-10-25';",
      "SELECT student.student_name, assessment.subject, assessment.score FROM student INNER JOIN assessment ON student.student_id = assessment.student_id WHERE assessment.subject = 'Math';",
      "SELECT student.student_name, assessment.subject, assessment.score FROM student INNER JOIN assessment ON student.student_id = assessment.student_id WHERE assessment.subject LIKE '%Science%';",
      "SELECT student.student_name, assessment.subject, assessment.score FROM student INNER JOIN assessment ON student.student_id = assessment.student_id ORDER BY assessment.score DESC;",
      "SELECT student.student_name, assessment.subject, assessment.score FROM student INNER JOIN assessment ON student.student_id = assessment.student_id ORDER BY assessment.assessment_date ASC;",
      "SELECT * FROM student WHERE major = 'Computer Science';",
      "SELECT student_name, enrollment_date FROM student WHERE enrollment_date < '2022-01-01';",
      "SELECT student_name, major FROM student WHERE major IN ('Mathematics', 'Physics');",
      "SELECT student_name, major, assessment_date, score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE assessment_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT COUNT(student_id) AS total_students FROM student;",
      "SELECT AVG(score) AS average_score FROM assessment;",
      "SELECT student_name, score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE score >= 80;",
      "SELECT student_name, subject, MAX(score) AS highest_score FROM student JOIN assessment ON student.student_id = assessment.student_id GROUP BY student_name, subject;",
      "SELECT student_name, major, assessment_date, subject, score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE major = 'Biology' ORDER BY assessment_date DESC;",
      "SELECT student_name, major, assessment_date, subject, score FROM student LEFT JOIN assessment ON student.student_id = assessment.student_id;",
      "SELECT student_name, major, COUNT(assessment_id) AS total_assessments FROM student LEFT JOIN assessment ON student.student_id = assessment.student_id GROUP BY student_name, major;",
      "SELECT student_name, major, AVG(score) AS average_score FROM student LEFT JOIN assessment ON student.student_id = assessment.student_id GROUP BY student_name, major HAVING AVG(score) > 70;",
      "SELECT student_name, major, assessment_date, score, subject FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE assessment_date > '2021-06-01' AND (subject = 'Mathematics' OR subject = 'Physics') ORDER BY assessment_date;",
      "SELECT student_name, enrollment_date, subject, score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE enrollment_date < '2022-01-01' AND major = 'Computer Science';",
      "SELECT student_name, subject, COUNT(assessment_id) AS total_assessments FROM student JOIN assessment ON student.student_id = assessment.student_id GROUP BY student_name, subject HAVING COUNT(assessment_id) >= 3;",
      "SELECT student_name, major, MAX(score) AS highest_score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE major = 'Chemistry' AND assessment_date < '2021-12-31';",
      "SELECT student_name, major, MIN(score) AS lowest_score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE major = 'Economics' AND assessment_date > '2021-01-01';",
      "SELECT student_name, major, assessment_date, score, subject FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE assessment_date < '2021-06-01' AND major = 'Physics' ORDER BY score DESC;",
      "SELECT student_name, major, assessment_date, subject, score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE enrollment_date < '2021-12-31' AND major = 'Mathematics';",
      "SELECT student_name, major, assessment_date, subject, score FROM student JOIN assessment ON student.student_id = assessment.student_id WHERE assessment_date > '2022-01-01';",
      "SELECT student_name, COUNT(assessment_id) AS total_assessments FROM student LEFT JOIN assessment ON student.student_id = assessment.student_id GROUP BY student_name HAVING COUNT(assessment_id) > 1;",
      "SELECT student_name, major, AVG(score) AS average_score FROM student JOIN assessment ON student.student_id = assessment.student_id GROUP BY student_name, major HAVING AVG(score) < 60;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, enrollment_date FROM students;",
      "SELECT * FROM assessments;",
      "SELECT student_id, assessment_date, score FROM assessments;",
      "SELECT * FROM courses;",
      "SELECT course_name, course_description FROM courses;",
      "SELECT student_name, assessment_date, score FROM students join assessments on students.student_id = assessments.student_id;",
      "SELECT course_name, course_description FROM courses where course_id = 1;",
      "SELECT student_name, assessment_date, score FROM students join assessments on students.student_id = assessments.student_id where score > 80;",
      "SELECT student_id, assessment_date, score FROM assessments where assessment_date >= '2023-01-01';",
      "SELECT course_name FROM courses where course_description like '%database%';",
      "SELECT student_name, course_name FROM students join assessments on students.student_id = assessments.student_id join courses on courses.course_id = assessments.course_id;",
      "SELECT student_name, assessment_date, course_name FROM students join assessments on students.student_id = assessments.student_id join courses on courses.course_id = assessments.course_id where assessment_date >= '2023-01-01';",
      "SELECT * FROM students where student_id = 2;",
      "SELECT student_name, assessment_date, score FROM students join assessments on students.student_id = assessments.student_id where students.student_id = 2;",
      "SELECT student_name, assessment_date, score FROM students join assessments on students.student_id = assessments.student_id where students.student_id = 2 and score < 50;",
      "SELECT course_name, assessment_date, score FROM courses join assessments on courses.course_id = assessments.course_id where assessments.score > 90;",
      "SELECT * FROM students where enrollment_date < '2022-01-01';",
      "SELECT student_name, course_name, assessment_date FROM students join assessments on students.student_id = assessments.student_id join courses on courses.course_id = assessments.course_id where assessments.score < 70;",
      "SELECT course_name FROM courses where course_description like '%SQL%';",
      "SELECT * FROM students WHERE student_id = 1;",
      "SELECT student_name, enrollment_date FROM students WHERE enrollment_date > '2021-01-01';",
      "SELECT student_name, assessments.assessment_date, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id;",
      "SELECT course_name, course_description FROM courses;",
      "SELECT students.student_name, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id WHERE assessments.score > 80;",
      "SELECT students.student_name, assessments.assessment_date, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id WHERE assessments.assessment_date >= '2021-06-01';",
      "SELECT COUNT(*) AS num_students FROM students;",
      "SELECT AVG(score) AS average_score FROM assessments;",
      "SELECT course_name, COUNT(*) AS num_assessments FROM courses INNER JOIN assessments ON courses.course_id = assessments.course_id GROUP BY course_name;",
      "SELECT student_name, AVG(score) AS average_score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id GROUP BY student_name;",
      "SELECT student_name, course_name FROM students INNER JOIN assessments ON students.student_id = assessments.student_id INNER JOIN courses ON assessments.course_id = courses.course_id;",
      "SELECT student_name, course_name, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id INNER JOIN courses ON assessments.course_id = courses.course_id WHERE student_id = 1;",
      "SELECT student_name, course_name, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id INNER JOIN courses ON assessments.course_id = courses.course_id ORDER BY assessments.score DESC;",
      "SELECT student_name, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id WHERE assessments.score = (SELECT MAX(score) FROM assessments);",
      "SELECT student_name, COUNT(*) AS num_courses FROM students INNER JOIN assessments ON students.student_id = assessments.student_id GROUP BY student_name HAVING num_courses > 2;",
      "SELECT student_name, AVG(score) AS average_score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id WHERE enrollment_date > '2021-01-01' GROUP BY student_name HAVING average_score > 70;",
      "SELECT student_name, enrollment_date, AVG(score) AS average_score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id WHERE student_id = 1 GROUP BY student_name, enrollment_date;",
      "SELECT student_name, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id WHERE student_id IN (SELECT student_id FROM assessments WHERE score < 50);",
      "SELECT student_name, course_name FROM students INNER JOIN assessments ON students.student_id = assessments.student_id INNER JOIN courses ON assessments.course_id = courses.course_id WHERE assessments.assessment_date < '2021-06-01';",
      "SELECT student_name, course_name, assessments.score FROM students INNER JOIN assessments ON students.student_id = assessments.student_id INNER JOIN courses ON assessments.course_id = courses.course_id WHERE course_name LIKE '%Science%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, first_name, last_name FROM students;",
      "SELECT * FROM courses;",
      "SELECT course_id, course_name, instructor FROM courses;",
      "SELECT * FROM assessments;",
      "SELECT assessment_id, assessment_name, course_id FROM assessments;",
      "SELECT * FROM student_scores;",
      "SELECT student_id, assessment_id, score FROM student_scores;",
      "SELECT student_id, first_name, last_name, assessment_id, score FROM students JOIN student_scores ON students.student_id = student_scores.student_id;",
      "SELECT course_id, course_name, assessment_id, assessment_name FROM courses JOIN assessments ON courses.course_id = assessments.course_id;",
      "SELECT student_id, first_name, last_name, assessment_id, assessment_name, score FROM students JOIN student_scores ON students.student_id = student_scores.student_id JOIN assessments ON student_scores.assessment_id = assessments.assessment_id;",
      "SELECT student_id, first_name, last_name FROM students WHERE date_of_birth BETWEEN '1990-01-01' AND '2000-01-01';",
      "SELECT course_id, course_name FROM courses WHERE instructor = 'John Doe';",
      "SELECT assessment_id, assessment_name, max_score FROM assessments WHERE max_score > 50;",
      "SELECT student_id, assessment_id, score FROM student_scores WHERE score >= 80;",
      "SELECT student_id, first_name, last_name, assessment_id, assessment_name, score FROM students JOIN student_scores ON students.student_id = student_scores.student_id JOIN assessments ON student_scores.assessment_id = assessments.assessment_id WHERE score >= 80;",
      "SELECT student_id, first_name, last_name, assessment_id, assessment_name, score FROM students JOIN student_scores ON students.student_id = student_scores.student_id JOIN assessments ON student_scores.assessment_id = assessments.assessment_id WHERE date_taken >= '2021-01-01';",
      "SELECT student_id, first_name, last_name, assessment_id, assessment_name, score FROM students JOIN student_scores ON students.student_id = student_scores.student_id JOIN assessments ON student_scores.assessment_id = assessments.assessment_id WHERE course_id = 1;",
      "SELECT student_id, first_name, last_name, assessment_id, assessment_name, score FROM students JOIN student_scores ON students.student_id = student_scores.student_id JOIN assessments ON student_scores.assessment_id = assessments.assessment_id WHERE department = 'Computer Science';",
      "SELECT * FROM students;",
      "SELECT student_id, first_name, last_name FROM students WHERE date_of_birth > '2000-01-01';",
      "SELECT course_name, instructor FROM courses WHERE department = 'Computer Science';",
      "SELECT assessment_name, max_score FROM assessments WHERE course_id = 1;",
      "SELECT s.first_name, s.last_name, a.assessment_name, ss.score FROM students s JOIN student_scores ss ON s.student_id = ss.student_id JOIN assessments a ON ss.assessment_id = a.assessment_id;",
      "SELECT s.first_name, s.last_name, a.assessment_name, ss.score FROM students s JOIN student_scores ss ON s.student_id = ss.student_id JOIN assessments a ON ss.assessment_id = a.assessment_id WHERE ss.score >= 80;",
      "SELECT c.course_name, a.assessment_name, ss.score FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id WHERE c.instructor = 'John Doe';",
      "SELECT s.first_name, s.last_name, c.course_name, a.assessment_name, ss.score FROM students s JOIN student_scores ss ON s.student_id = ss.student_id JOIN assessments a ON ss.assessment_id = a.assessment_id JOIN courses c ON a.course_id = c.course_id WHERE ss.score < 60;",
      "SELECT s.first_name, s.last_name, c.course_name, a.assessment_name, ss.score FROM students s JOIN student_scores ss ON s.student_id = ss.student_id JOIN assessments a ON ss.assessment_id = a.assessment_id JOIN courses c ON a.course_id = c.course_id WHERE c.department = 'Mathematics';",
      "SELECT s.first_name, s.last_name, c.course_name, a.assessment_name, ss.score FROM students s JOIN student_scores ss ON s.student_id = ss.student_id JOIN assessments a ON ss.assessment_id = a.assessment_id JOIN courses c ON a.course_id = c.course_id WHERE ss.date_taken BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT c.course_name, a.assessment_name, ss.score AS 'Student Score' FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id WHERE c.department = 'Physics' AND ss.score >= 70;",
      "SELECT s.first_name, s.last_name, c.course_name, a.assessment_name, ss.score AS 'Student Score' FROM students s JOIN student_scores ss ON s.student_id = ss.student_id JOIN assessments a ON ss.assessment_id = a.assessment_id JOIN courses c ON a.course_id = c.course_id WHERE ss.score < 40;",
      "SELECT s.first_name, s.last_name, c.course_name, a.assessment_name, ss.score AS 'Student Score' FROM students s JOIN student_scores ss ON s.student_id = ss.student_id JOIN assessments a ON ss.assessment_id = a.assessment_id JOIN courses c ON a.course_id = c.course_id WHERE s.date_of_birth < '1990-01-01';",
      "SELECT c.instructor, COUNT(DISTINCT a.assessment_id) AS 'Number of Assessments' FROM courses c JOIN assessments a ON c.course_id = a.course_id GROUP BY c.instructor;",
      "SELECT c.department, AVG(ss.score) AS 'Average Score' FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id GROUP BY c.department;",
      "SELECT c.course_name, MAX(ss.score) AS 'Highest Score' FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id GROUP BY c.course_name;",
      "SELECT s.first_name, s.last_name, MAX(ss.score) AS 'Highest Score' FROM students s JOIN student_scores ss ON s.student_id = ss.student_id GROUP BY s.student_id;",
      "SELECT c.department, COUNT(DISTINCT s.student_id) AS 'Number of Students' FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id JOIN students s ON ss.student_id = s.student_id GROUP BY c.department;",
      "SELECT c.course_name, COUNT(DISTINCT s.student_id) AS 'Number of Students' FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id JOIN students s ON ss.student_id = s.student_id GROUP BY c.course_name;",
      "SELECT c.department, AVG(ss.score) AS 'Average Score' FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id JOIN students s ON ss.student_id = s.student_id GROUP BY c.department HAVING AVG(ss.score) > 80;",
      "SELECT c.course_name, MIN(ss.score) AS 'Lowest Score' FROM courses c JOIN assessments a ON c.course_id = a.course_id JOIN student_scores ss ON a.assessment_id = ss.assessment_id GROUP BY c.course_name HAVING MIN(ss.score) < 50;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students WHERE student_grade > 80;",
      "SELECT assessment_id, assessment_name, total_marks FROM assessments;",
      "SELECT student_id, assessment_id, marks_obtained FROM student_assessments WHERE marks_obtained >= 70;",
      "SELECT * FROM grades;",
      "SELECT student_id, grade_id FROM student_performance WHERE overall_performance = 'Excellent';",
      "SELECT student_name, student_grade FROM students WHERE student_grade BETWEEN 60 AND 80;",
      "SELECT assessment_name, assessment_date FROM assessments WHERE assessment_date > '2022-01-01';",
      "SELECT student_id, assessment_id FROM student_assessments WHERE assessment_id = 5;",
      "SELECT * FROM student_performance;",
      "SELECT grade_name FROM grades WHERE grade_id = 3;",
      "SELECT student_id, grade_id, assessment_id FROM student_performance WHERE grade_id = 2;",
      "SELECT assessment_id, total_marks FROM assessments WHERE total_marks < 100;",
      "SELECT grade_name FROM grades WHERE grade_name LIKE 'A%';",
      "SELECT student_name, student_grade FROM students WHERE student_name LIKE '%John%';",
      "SELECT student_id, assessment_id, marks_obtained FROM student_assessments WHERE student_id = 10;",
      "SELECT assessment_name, total_marks FROM assessments WHERE assessment_id = 2;",
      "SELECT * FROM student_performance WHERE overall_performance = 'Good';",
      "SELECT student_id, assessment_id, marks_obtained FROM student_assessments WHERE marks_obtained < 60;",
      "SELECT student_name, student_grade FROM students ORDER BY student_grade DESC;",
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students WHERE student_grade > 80;",
      "SELECT assessment_name, total_marks FROM assessments WHERE assessment_date >= '2022-01-01';",
      "SELECT s.student_name, a.assessment_name, sa.marks_obtained FROM students s JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id;",
      "SELECT s.student_name, g.grade_name, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id;",
      "SELECT s.student_name, a.assessment_name, sa.marks_obtained, g.grade_name, sp.overall_performance FROM students s JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id;",
      "SELECT s.student_name, COUNT(sa.assessment_id) AS num_assessments FROM students s LEFT JOIN student_assessments sa ON s.student_id = sa.student_id GROUP BY s.student_id;",
      "SELECT AVG(sa.marks_obtained) AS avg_marks, MAX(sa.marks_obtained) AS max_marks, MIN(sa.marks_obtained) AS min_marks FROM student_assessments sa;",
      "SELECT s.student_name, COUNT(sp.assessment_id) AS num_assessments, SUM(sp.overall_performance) AS total_performance FROM students s LEFT JOIN student_performance sp ON s.student_id = sp.student_id GROUP BY s.student_id;",
      "SELECT s.student_name, g.grade_name, COUNT(sp.assessment_id) AS num_assessments, AVG(sa.marks_obtained) AS avg_marks FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id GROUP BY s.student_id, g.grade_id;",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id;",
      "SELECT s.student_name, a.assessment_name, sa.marks_obtained, g.grade_name FROM students s JOIN student_assessments sa ON s.student_id = sa.student_id JOIN grades g ON sa.student_id = sp.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id;",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id;",
      "SELECT s.student_name, g.grade_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id WHERE sp.overall_performance = 'Excellent';",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id WHERE sa.marks_obtained >= 90;",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id WHERE sa.marks_obtained >= 90 AND sp.overall_performance = 'Excellent';",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id WHERE sp.overall_performance = 'Good' OR sa.marks_obtained >= 80;",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id WHERE g.grade_name = 'A' AND sp.overall_performance = 'Excellent';",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id WHERE g.grade_name = 'B' AND sp.overall_performance = 'Good';",
      "SELECT s.student_name, g.grade_name, a.assessment_name, sa.marks_obtained, sp.overall_performance FROM students s JOIN student_performance sp ON s.student_id = sp.student_id JOIN grades g ON sp.grade_id = g.grade_id JOIN student_assessments sa ON s.student_id = sa.student_id JOIN assessments a ON sa.assessment_id = a.assessment_id WHERE g.grade_name = 'C' AND sa.marks_obtained < 70;"
    ]
  }
]