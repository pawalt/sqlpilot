[
  {
    "statements": [
      "SELECT * FROM student_accounts;",
      "SELECT student_id, full_name FROM student_accounts;",
      "SELECT email FROM student_accounts WHERE student_id = 1;",
      "SELECT * FROM student_accounts WHERE email = 'example@example.com';",
      "SELECT * FROM student_accounts WHERE account_created_at >= '2022-01-01';",
      "SELECT full_name, email FROM student_accounts WHERE full_name LIKE 'A%';",
      "SELECT * FROM student_accounts WHERE password = 'securepassword';",
      "SELECT COUNT(*) FROM student_accounts;",
      "SELECT MAX(student_id) FROM student_accounts;",
      "SELECT MIN(account_created_at) FROM student_accounts;",
      "SELECT AVG(student_id) FROM student_accounts;",
      "SELECT DISTINCT full_name FROM student_accounts;",
      "SELECT * FROM student_accounts ORDER BY full_name ASC;",
      "SELECT * FROM student_accounts ORDER BY account_created_at DESC;",
      "SELECT * FROM student_accounts LIMIT 10;",
      "SELECT * FROM student_accounts OFFSET 5;",
      "SELECT * FROM student_accounts WHERE student_id IN (1, 2, 3);",
      "SELECT * FROM student_accounts WHERE student_id BETWEEN 1 AND 5;",
      "SELECT * FROM student_accounts WHERE email LIKE '%gmail.com';",
      "SELECT * FROM student_accounts WHERE account_created_at BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT * FROM student_accounts;",
      "SELECT student_id, full_name, email FROM student_accounts WHERE email LIKE '%@gmail.com';",
      "SELECT COUNT(*) AS total_students FROM student_accounts;",
      "SELECT full_name, email, account_created_at FROM student_accounts WHERE account_created_at > '2022-01-01';",
      "SELECT * FROM student_accounts ORDER BY full_name ASC;",
      "SELECT * FROM student_accounts WHERE student_id = 1001;",
      "SELECT full_name, email FROM student_accounts WHERE email LIKE '%@domain.com';",
      "SELECT COUNT(DISTINCT full_name) AS total_students FROM student_accounts;",
      "SELECT * FROM student_accounts WHERE full_name LIKE 'J%';",
      "SELECT AVG(student_id) AS avg_student_id FROM student_accounts;",
      "SELECT full_name, email FROM student_accounts WHERE account_created_at > '2022-01-01' AND email LIKE '%@example.com';",
      "SELECT full_name, COUNT(email) AS total_emails FROM student_accounts GROUP BY full_name;",
      "SELECT COUNT(*) AS total_accounts, DATE(account_created_at) AS creation_date FROM student_accounts GROUP BY creation_date;",
      "SELECT MAX(student_id) AS max_student_id, MIN(student_id) AS min_student_id FROM student_accounts;",
      "SELECT * FROM student_accounts WHERE account_created_at BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT full_name, email FROM student_accounts ORDER BY account_created_at DESC;",
      "SELECT AVG(student_id) AS avg_student_id, COUNT(*) AS total_students FROM student_accounts;",
      "SELECT full_name, email FROM student_accounts WHERE email NOT LIKE '%@test.com';",
      "SELECT full_name, DATE(account_created_at) AS creation_date FROM student_accounts;",
      "SELECT * FROM student_accounts WHERE full_name LIKE '%son%' OR full_name LIKE '%ley%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, student_email FROM students;",
      "SELECT student_id, student_name FROM students WHERE student_id = 1;",
      "SELECT * FROM permissions;",
      "SELECT permission_name FROM permissions;",
      "SELECT permission_name, permission_level FROM permissions WHERE permission_level > 5;",
      "SELECT student_id, student_name, student_email FROM students WHERE student_email LIKE '%@example.com';",
      "SELECT student_id, student_name FROM students WHERE student_name LIKE 'A%';",
      "SELECT * FROM students ORDER BY student_name ASC;",
      "SELECT * FROM permissions ORDER BY permission_level DESC;",
      "SELECT * FROM students LIMIT 10;",
      "SELECT student_id, student_name FROM students WHERE student_name = 'Alice';",
      "SELECT COUNT(*) FROM students;",
      "SELECT MAX(student_id) FROM students;",
      "SELECT MIN(permission_level) FROM permissions;",
      "SELECT AVG(permission_level) FROM permissions;",
      "SELECT SUM(permission_level) FROM permissions;",
      "SELECT DISTINCT permission_level FROM permissions;",
      "SELECT COUNT(DISTINCT student_name) FROM students;",
      "SELECT * FROM students INNER JOIN permissions ON students.student_id = permissions.permission_id;",
      "SELECT * FROM students WHERE student_name LIKE 'A%';",
      "SELECT student_id, student_name FROM students WHERE student_email='example@email.com';",
      "SELECT student_name, student_email FROM students WHERE student_id = 1001;",
      "SELECT student_name, student_email FROM students WHERE student_id <> 1001;",
      "SELECT student_id, student_name FROM students WHERE student_id BETWEEN 1001 AND 1010;",
      "SELECT * FROM students WHERE student_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT * FROM students WHERE student_name LIKE '%son';",
      "SELECT student_name, student_email FROM students WHERE student_email LIKE '%@gmail.com';",
      "SELECT * FROM students WHERE student_name = 'John' AND student_email = 'john@example.com';",
      "SELECT * FROM students WHERE student_name = 'Mary' OR student_email LIKE '%@yahoo.com';",
      "SELECT student_name, student_email FROM students INNER JOIN permissions ON students.student_id = permissions.permission_id WHERE permissions.permission_level = 2;",
      "SELECT student_name, permission_name FROM students INNER JOIN permissions ON students.student_id = permissions.permission_id WHERE student_name = 'Alice' OR permission_name = 'READ';",
      "SELECT * FROM students WHERE student_id IN (SELECT permission_id FROM permissions WHERE permission_level = 3);",
      "SELECT * FROM students WHERE student_id NOT IN (SELECT permission_id FROM permissions WHERE permission_level = 1);",
      "SELECT student_name, COUNT(*) AS permission_count FROM students INNER JOIN permissions ON students.student_id = permissions.permission_id GROUP BY student_name;",
      "SELECT student_name, AVG(permission_level) AS avg_permission_level FROM students INNER JOIN permissions ON students.student_id = permissions.permission_id GROUP BY student_name HAVING AVG(permission_level) > 1.5;",
      "SELECT student_name, MAX(permission_level) AS max_permission_level FROM students INNER JOIN permissions ON students.student_id = permissions.permission_id GROUP BY student_name;",
      "SELECT student_name, MIN(permission_level) AS min_permission_level FROM students INNER JOIN permissions ON students.student_id = permissions.permission_id GROUP BY student_name;",
      "SELECT COUNT(*) AS student_count FROM students;",
      "SELECT permission_name, SUM(permission_level) AS total_permission_level FROM permissions GROUP BY permission_name HAVING SUM(permission_level) > 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM student_accounts;",
      "SELECT student_name, department FROM student_accounts;",
      "SELECT student_name AS name, department AS dept FROM student_accounts;",
      "SELECT student_id, student_name, enrollment_year FROM student_accounts;",
      "SELECT * FROM login_credentials;",
      "SELECT login_id, username FROM login_credentials;",
      "SELECT login_id, student_id, username FROM login_credentials;",
      "SELECT * FROM access_permissions;",
      "SELECT login_id, permission_type FROM access_permissions;",
      "SELECT login_id, permission_type AS access_type FROM access_permissions;",
      "SELECT student_name, department FROM student_accounts WHERE enrollment_year = 2021;",
      "SELECT student_name, department FROM student_accounts WHERE department = 'Computer Science';",
      "SELECT * FROM login_credentials WHERE username = 'john_doe';",
      "SELECT login_id, username FROM login_credentials WHERE student_id = 101;",
      "SELECT * FROM access_permissions WHERE permission_type = 'admin';",
      "SELECT student_name, department, enrollment_year FROM student_accounts WHERE department LIKE '%ngineering%';",
      "SELECT student_name, department, enrollment_year FROM student_accounts ORDER BY enrollment_year DESC;",
      "SELECT * FROM student_accounts WHERE enrollment_year >= 2019 AND enrollment_year <= 2021;",
      "SELECT student_name, department, enrollment_year FROM student_accounts WHERE department IN ('Computer Science', 'Electrical Engineering');",
      "SELECT * FROM login_credentials WHERE username IN ('john_doe', 'jane_smith');",
      "SELECT * FROM student_accounts WHERE enrollment_year > 2018;",
      "SELECT student_name, department FROM student_accounts WHERE department = 'Computer Science';",
      "SELECT student_name, enrollment_year FROM student_accounts WHERE department = 'Engineering' ORDER BY enrollment_year DESC;",
      "SELECT student_id, student_name, department FROM student_accounts WHERE student_name LIKE 'A%';",
      "SELECT student_name, enrollment_year FROM student_accounts WHERE enrollment_year BETWEEN 2015 AND 2017;",
      "SELECT COUNT(*) FROM student_accounts;",
      "SELECT student_name, department FROM student_accounts ORDER BY student_name ASC;",
      "SELECT student_id, student_name, department, enrollment_year FROM student_accounts WHERE department IN ('Mathematics', 'Physics');",
      "SELECT student_name, enrollment_year FROM student_accounts WHERE student_name NOT LIKE '%Smith%';",
      "SELECT student_name, department FROM student_accounts WHERE LENGTH(department) > 10;",
      "SELECT login_id, username FROM login_credentials WHERE username = 'john_doe';",
      "SELECT login_id, username FROM login_credentials WHERE username LIKE '%@gmail.com';",
      "SELECT permission_id, permission_type FROM access_permissions WHERE permission_type = 'admin';",
      "SELECT student_id, student_name FROM student_accounts JOIN login_credentials ON student_accounts.student_id = login_credentials.student_id;",
      "SELECT student_name, department, permission_type FROM student_accounts JOIN login_credentials ON student_accounts.student_id = login_credentials.student_id JOIN access_permissions ON login_credentials.login_id = access_permissions.login_id;",
      "SELECT student_name, username, permission_type FROM student_accounts JOIN login_credentials ON student_accounts.student_id = login_credentials.student_id JOIN access_permissions ON login_credentials.login_id = access_permissions.login_id WHERE permission_type = 'admin';",
      "SELECT student_name, department, permission_type FROM student_accounts JOIN login_credentials ON student_accounts.student_id = login_credentials.student_id LEFT JOIN access_permissions ON login_credentials.login_id = access_permissions.login_id;",
      "SELECT student_name, department, permission_type FROM student_accounts JOIN login_credentials ON student_accounts.student_id = login_credentials.student_id RIGHT JOIN access_permissions ON login_credentials.login_id = access_permissions.login_id;",
      "SELECT student_name, department, permission_type FROM student_accounts JOIN login_credentials ON student_accounts.student_id = login_credentials.student_id INNER JOIN access_permissions ON login_credentials.login_id = access_permissions.login_id;",
      "SELECT student_name, department, permission_type FROM student_accounts JOIN login_credentials ON student_accounts.student_id = login_credentials.student_id FULL JOIN access_permissions ON login_credentials.login_id = access_permissions.login_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_name FROM Students;",
      "SELECT student_email, student_course FROM Students;",
      "SELECT * FROM Accounts;",
      "SELECT account_type FROM Accounts;",
      "SELECT account_balance FROM Accounts;",
      "SELECT * FROM LoginCredentials;",
      "SELECT username FROM LoginCredentials;",
      "SELECT * FROM Permissions;",
      "SELECT permission_name FROM Permissions;",
      "SELECT student_name, account_balance FROM Students INNER JOIN Accounts ON Students.student_id = Accounts.student_id;",
      "SELECT student_name, username FROM Students INNER JOIN Accounts ON Students.student_id = Accounts.student_id INNER JOIN LoginCredentials ON Accounts.account_id = LoginCredentials.account_id;",
      "SELECT student_name, permission_name FROM Students INNER JOIN Accounts ON Students.student_id = Accounts.student_id INNER JOIN Permissions ON Accounts.account_id = Permissions.account_id;",
      "SELECT student_name, account_type, permission_name FROM Students INNER JOIN Accounts ON Students.student_id = Accounts.student_id INNER JOIN Permissions ON Accounts.account_id = Permissions.account_id;",
      "SELECT * FROM Students WHERE student_course = 'Math';",
      "SELECT student_name FROM Students WHERE student_email LIKE '%@gmail.com%';",
      "SELECT account_balance FROM Accounts WHERE account_type = 'Savings';",
      "SELECT username FROM LoginCredentials WHERE password = 'password123';",
      "SELECT permission_name FROM Permissions WHERE account_id = 1;",
      "SELECT student_name, account_balance FROM Students INNER JOIN Accounts ON Students.student_id = Accounts.student_id WHERE account_balance > 1000;",
      "SELECT student_id, student_name, student_email FROM Students WHERE student_course = 'Computer Science'",
      "SELECT * FROM Students WHERE student_name LIKE 'A%'",
      "SELECT student_name, account_type, account_balance FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id",
      "SELECT student_name, username, permission_name FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id JOIN LoginCredentials ON Accounts.account_id = LoginCredentials.account_id JOIN Permissions ON Accounts.account_id = Permissions.account_id",
      "SELECT student_id, account_type, account_balance FROM Accounts WHERE account_balance > 1000",
      "SELECT account_id, permission_name FROM Accounts JOIN Permissions ON Accounts.account_id = Permissions.account_id",
      "SELECT student_name, username FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id JOIN LoginCredentials ON Accounts.account_id = LoginCredentials.account_id WHERE username = 'admin'",
      "SELECT student_id, student_name, student_email FROM Students WHERE student_id IN (SELECT student_id FROM Accounts WHERE account_balance > 5000)",
      "SELECT student_name, account_type, account_balance FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id ORDER BY account_balance DESC",
      "SELECT AVG(account_balance) AS average_balance FROM Accounts WHERE account_type = 'Savings' GROUP BY account_type",
      "SELECT COUNT(student_id) AS total_students FROM Students",
      "SELECT MAX(account_balance) AS highest_balance FROM Accounts",
      "SELECT MIN(account_balance) AS lowest_balance FROM Accounts",
      "SELECT DISTINCT(account_type) FROM Accounts",
      "SELECT student_name, account_balance FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id WHERE account_balance BETWEEN 1000 AND 5000",
      "SELECT AVG(account_balance) AS average_balance, account_type FROM Accounts GROUP BY account_type HAVING AVG(account_balance) > 2000",
      "SELECT student_name, permission_name FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id JOIN Permissions ON Accounts.account_id = Permissions.account_id WHERE permission_name = 'Admin'",
      "SELECT student_name, account_balance FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id WHERE account_type = 'Checking'",
      "SELECT student_name, username, password FROM Students JOIN Accounts ON Students.student_id = Accounts.student_id JOIN LoginCredentials ON Accounts.account_id = LoginCredentials.account_id WHERE username = 'user123' AND password = 'password123'",
      "SELECT COUNT(account_id) AS total_accounts, account_type FROM Accounts GROUP BY account_type ORDER BY total_accounts DESC LIMIT 3",
      "SELECT SUM(account_balance) AS total_balance FROM Accounts"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, age FROM students;",
      "SELECT student_name, grade_level FROM students WHERE age > 18;",
      "SELECT * FROM accounts;",
      "SELECT username FROM accounts WHERE student_id = 1;",
      "SELECT student_name, permission_type FROM students JOIN permissions ON students.student_id = permissions.student_id;",
      "SELECT course_name, instructor_name FROM courses JOIN instructors ON courses.instructor_id = instructors.instructor_id;",
      "SELECT * FROM students WHERE age BETWEEN 18 AND 21;",
      "SELECT course_name FROM courses WHERE instructor_id = 1;",
      "SELECT student_name, instructor_name FROM students JOIN courses ON students.student_id = courses.instructor_id;",
      "SELECT account_id, student_id, username FROM accounts WHERE password != 'admin';",
      "SELECT * FROM students ORDER BY age DESC;",
      "SELECT student_name, age FROM students WHERE grade_level = 12;",
      "SELECT * FROM instructors WHERE department = 'Computer Science';",
      "SELECT COUNT(*) FROM students;",
      "SELECT MAX(age) FROM students;",
      "SELECT student_id, COUNT(*) FROM permissions GROUP BY student_id;",
      "SELECT AVG(age) FROM students;",
      "SELECT * FROM students WHERE student_name LIKE 'A%';",
      "SELECT course_name, student_name FROM courses JOIN students ON courses.instructor_id = students.student_id;",
      "SELECT * FROM students WHERE grade_level = 10",
      "SELECT student_name, age FROM students WHERE age > 18",
      "SELECT * FROM accounts JOIN students ON accounts.student_id = students.student_id",
      "SELECT student_name, course_name FROM students JOIN courses ON students.student_id = courses.instructor_id",
      "SELECT student_name, department FROM students JOIN instructors ON students.instructor_id = instructors.instructor_id",
      "SELECT * FROM permissions WHERE permission_type = 'admin'",
      "SELECT account_id, student_name FROM accounts JOIN students ON accounts.student_id = students.student_id",
      "SELECT student_id, account_id FROM students LEFT JOIN accounts ON students.student_id = accounts.student_id LIMIT 5",
      "SELECT * FROM courses WHERE instructor_id IN (SELECT instructor_id FROM instructors WHERE department = 'Math')",
      "SELECT student_name, course_name FROM students LEFT JOIN courses ON students.student_id = courses.instructor_id"
    ]
  }
]