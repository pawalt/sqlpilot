[
  {
    "statements": [
      "SELECT * FROM participation_tracking",
      "SELECT student_id, discussion_participation FROM participation_tracking",
      "SELECT student_id, quiz_score FROM participation_tracking",
      "SELECT student_id, project_completion FROM participation_tracking",
      "SELECT AVG(discussion_participation) FROM participation_tracking",
      "SELECT MAX(quiz_score) FROM participation_tracking",
      "SELECT MIN(project_completion) FROM participation_tracking",
      "SELECT student_id, discussion_participation, quiz_score FROM participation_tracking",
      "SELECT AVG(discussion_participation), MAX(quiz_score) FROM participation_tracking",
      "SELECT student_id, project_completion, AVG(discussion_participation) FROM participation_tracking",
      "SELECT * FROM participation_tracking WHERE student_id = 1",
      "SELECT * FROM participation_tracking WHERE quiz_score > 80",
      "SELECT * FROM participation_tracking WHERE project_completion < 50",
      "SELECT * FROM participation_tracking WHERE discussion_participation BETWEEN 30 AND 70",
      "SELECT student_id, COUNT(*) FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, SUM(quiz_score) FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, COUNT(*) FROM participation_tracking WHERE project_completion = 100 GROUP BY student_id",
      "SELECT MIN(discussion_participation), MAX(quiz_score) FROM participation_tracking",
      "SELECT AVG(project_completion) FROM participation_tracking",
      "SELECT student_id, AVG(discussion_participation), AVG(quiz_score) FROM participation_tracking",
      "SELECT student_id, AVG(discussion_participation) AS avg_participation FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, SUM(quiz_score) AS total_quiz_score FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, MAX(project_completion) AS highest_project_completion FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, COUNT(*) AS total_records FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, SUM(discussion_participation) AS total_participation FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, AVG(quiz_score) AS avg_quiz_score FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, MIN(project_completion) AS lowest_project_completion FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, COUNT(DISTINCT quiz_score) AS unique_quiz_scores FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, AVG(project_completion) AS avg_project_completion FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, SUM(project_completion) AS total_project_completion FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, MAX(discussion_participation) AS highest_participation FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, MIN(quiz_score) AS lowest_quiz_score FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, COUNT(*) AS total_records FROM participation_tracking",
      "SELECT student_id, AVG(discussion_participation * quiz_score) AS avg_participation_quiz FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, SUM(discussion_participation * project_completion) AS total_participation_project FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, SUM(quiz_score * project_completion) AS total_quiz_project FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, COUNT(DISTINCT discussion_participation) AS unique_participation FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, AVG(quiz_score + project_completion) AS avg_quiz_project FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, MAX(discussion_participation + quiz_score) AS highest_participation_quiz FROM participation_tracking GROUP BY student_id",
      "SELECT student_id, MIN(quiz_score - project_completion) AS min_quiz_project_diff FROM participation_tracking GROUP BY student_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, class_id FROM students;",
      "SELECT * FROM participation;",
      "SELECT discussion_participation, quiz_score FROM participation;",
      "SELECT student_id, student_name FROM students WHERE class_id = 1;",
      "SELECT * FROM students WHERE student_id = 5;",
      "SELECT student_name, discussion_participation FROM students JOIN participation ON students.student_id = participation.student_id;",
      "SELECT student_id, quiz_score FROM students JOIN participation ON students.student_id = participation.student_id;",
      "SELECT * FROM students WHERE student_name LIKE 'A%';",
      "SELECT student_id, project_involvement FROM participation WHERE quiz_score > 80;",
      "SELECT student_name, class_id FROM students WHERE student_id IN (1, 2, 3);",
      "SELECT * FROM students ORDER BY student_id ASC;",
      "SELECT * FROM students ORDER BY student_name DESC;",
      "SELECT * FROM students LIMIT 10;",
      "SELECT COUNT(*) FROM students;",
      "SELECT AVG(quiz_score) FROM participation;",
      "SELECT MAX(discussion_participation) FROM participation;",
      "SELECT student_id, MAX(quiz_score) FROM participation GROUP BY student_id;",
      "SELECT student_id, COUNT(*) AS participation_count FROM participation GROUP BY student_id HAVING participation_count > 2;",
      "SELECT AVG(quiz_score) AS avg_score, MAX(quiz_score) AS max_score FROM participation GROUP BY student_id HAVING avg_score > 70;",
      "SELECT * FROM students JOIN participation ON students.student_id = participation.student_id WHERE students.class_id = 1",
      "SELECT student_name, discussion_participation, quiz_score FROM students JOIN participation ON students.student_id = participation.student_id WHERE students.student_id = 5",
      "SELECT AVG(quiz_score) AS average_quiz_score FROM participation",
      "SELECT MAX(project_involvement) AS max_project_involvement FROM participation",
      "SELECT student_name, discussion_participation FROM students JOIN participation ON students.student_id = participation.student_id WHERE participation.project_involvement > 80",
      "SELECT COUNT(student_id) AS total_students FROM students",
      "SELECT student_name, participation_id, discussion_participation, quiz_score FROM students JOIN participation ON students.student_id = participation.student_id WHERE students.class_id = 2",
      "SELECT * FROM students WHERE student_id = (SELECT MAX(student_id) FROM students)",
      "SELECT student_name, SUM(quiz_score) AS total_quiz_score FROM students JOIN participation ON students.student_id = participation.student_id GROUP BY students.student_id",
      "SELECT student_name, AVG(discussion_participation) AS average_discussion_participation FROM students JOIN participation ON students.student_id = participation.student_id GROUP BY students.student_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM discussions;",
      "SELECT discussion_id, discussion_topic FROM discussions WHERE participation_count > 10;",
      "SELECT * FROM quizzes;",
      "SELECT quiz_topic, total_score FROM quizzes WHERE student_id = 'abc123';",
      "SELECT project_title FROM collaborative_projects WHERE submission_date > '2022-01-01';",
      "SELECT project_id, student_id FROM collaborative_projects;",
      "SELECT discussion_id, discussion_topic, participation_count FROM discussions WHERE discussion_topic LIKE '%database%';",
      "SELECT * FROM quizzes WHERE total_score > 80;",
      "SELECT * FROM collaborative_projects WHERE student_id = 'def456';",
      "SELECT SUM(participation_count) FROM discussions;",
      "SELECT AVG(total_score) FROM quizzes;",
      "SELECT MAX(participation_count) AS max_participation_count FROM discussions;",
      "SELECT MIN(total_score) AS min_total_score FROM quizzes;",
      "SELECT COUNT(*) FROM collaborative_projects;",
      "SELECT AVG(total_score) AS avg_score, MAX(total_score) AS max_score FROM quizzes WHERE quiz_topic LIKE '%math%';",
      "SELECT discussion_id, student_id, discussion_topic FROM discussions WHERE student_id = 'ghi789';",
      "SELECT AVG(participation_count) AS avg_participation_count FROM discussions;",
      "SELECT * FROM collaborative_projects WHERE project_id = 'xyz321';",
      "SELECT project_title FROM collaborative_projects WHERE project_title LIKE '%AI%';",
      "SELECT project_id, submission_date FROM collaborative_projects WHERE student_id = 'stu789';",
      "SELECT * FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174000' LIMIT 10;",
      "SELECT discussion_id, discussion_topic FROM discussions WHERE participation_count > 50;",
      "SELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174001';",
      "SELECT project_id, project_title FROM collaborative_projects WHERE submission_date > '2022-01-01';",
      "SELECT discussion_topic, participation_count FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174003' AND participation_count > 20;",
      "SELECT * FROM quizzes WHERE total_score >= 80 AND student_id = '123e4567-e89b-12d3-a456-426614174004';",
      "SELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174005' AND participation_count > 30 ORDER BY participation_count DESC;",
      "SELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174006' AND total_score <= 60;",
      "SELECT project_id, project_title FROM collaborative_projects WHERE student_id = '123e4567-e89b-12d3-a456-426614174007' AND submission_date < '2022-03-01';",
      "SELECT * FROM discussions WHERE participation_count < 10 OR student_id = '123e4567-e89b-12d3-a456-426614174008';",
      "SELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174009' AND participation_count BETWEEN 20 AND 50;",
      "SELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174010' AND total_score IN (70, 80, 90);",
      "SELECT project_id, project_title FROM collaborative_projects WHERE submission_date BETWEEN '2022-02-01' AND '2022-03-01';",
      "SELECT discussion_topic, participation_count FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174011' AND participation_count >= 40 AND participation_count < 60;",
      "SELECT * FROM quizzes WHERE total_score > 75 OR student_id = '123e4567-e89b-12d3-a456-426614174012';",
      "SELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174013' AND participation_count < 30 ORDER BY participation_count ASC;",
      "SELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174014' AND total_score >= 50 AND total_score <= 70;",
      "SELECT project_id, project_title FROM collaborative_projects WHERE student_id = '123e4567-e89b-12d3-a456-426614174015' AND submission_date > '2022-04-01';",
      "SELECT * FROM discussions WHERE participation_count BETWEEN 10 AND 30 OR student_id = '123e4567-e89b-12d3-a456-426614174016';",
      "SELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174017' AND participation_count > 70;",
      "SELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174018' AND total_score < 50;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Participants;",
      "SELECT participant_id, participant_name FROM Participants WHERE participation_status = TRUE;",
      "SELECT COUNT(*) FROM Participants;",
      "SELECT * FROM Discussions;",
      "SELECT discussion_topic, discussion_date FROM Discussions WHERE discussion_date >= '2022-01-01';",
      "SELECT * FROM Quizzes;",
      "SELECT quiz_topic, quiz_date FROM Quizzes WHERE quiz_date <= '2022-12-31';",
      "SELECT * FROM Projects;",
      "SELECT project_id, project_topic FROM Projects WHERE project_status = TRUE;",
      "SELECT COUNT(*) FROM Projects;",
      "SELECT DISTINCT participant_name FROM Participants;",
      "SELECT discussion_topic, discussion_date FROM Discussions ORDER BY discussion_date DESC;",
      "SELECT quiz_topic, quiz_date FROM Quizzes ORDER BY quiz_date ASC;",
      "SELECT project_topic, project_status FROM Projects WHERE project_status = FALSE;",
      "SELECT participant_name, participation_status FROM Participants WHERE participation_status = FALSE;",
      "SELECT participant_name AS Name, participation_status AS Status FROM Participants;",
      "SELECT project_topic, 'Project' AS Category FROM Projects;",
      "SELECT quiz_topic, 'Quiz' AS Category FROM Quizzes;",
      "SELECT discussion_topic, 'Discussion' AS Category FROM Discussions;",
      "SELECT participant_name, 'Participant' AS Category FROM Participants;",
      "SELECT * FROM Participants WHERE participation_status = true;",
      "SELECT participant_id, participant_name FROM Participants WHERE participation_status = false;",
      "SELECT DISTINCT discussion_topic FROM Discussions;",
      "SELECT project_topic, project_status FROM Projects WHERE project_status = true;",
      "SELECT participant_name, discussion_topic FROM Participants JOIN Discussions ON Participants.participant_id = Discussions.discussion_id;",
      "SELECT quiz_id, quiz_topic, quiz_date FROM Quizzes WHERE quiz_date >= '2022-01-01';",
      "SELECT * FROM Participants WHERE participant_name LIKE '%John%';",
      "SELECT COUNT(*) FROM Participants;",
      "SELECT MAX(participant_id) AS max_id FROM Participants;",
      "SELECT MIN(discussion_date) AS earliest_date FROM Discussions;",
      "SELECT AVG(quiz_id) AS avg_quiz_id FROM Quizzes;",
      "SELECT participant_name, project_topic FROM Participants JOIN Projects ON Participants.participant_id = Projects.project_id WHERE project_status = true;",
      "SELECT COUNT(*) AS total_discussions FROM Discussions;",
      "SELECT AVG(discussion_id) AS avg_discussion_id FROM Discussions;",
      "SELECT project_topic, COUNT(*) AS total_participants FROM Projects JOIN Participants ON Projects.project_id = Participants.participant_id GROUP BY project_topic;",
      "SELECT MAX(quiz_date) AS latest_quiz_date FROM Quizzes;",
      "SELECT participant_name, discussion_topic, quiz_topic FROM Participants JOIN Discussions ON Participants.participant_id = Discussions.participant_id JOIN Quizzes ON Participants.participant_id = Quizzes.quiz_id;",
      "SELECT project_id, project_topic FROM Projects WHERE project_status = false;",
      "SELECT COUNT(*) AS total_projects, project_status FROM Projects GROUP BY project_status;",
      "SELECT project_id, project_topic FROM Projects WHERE project_status = true ORDER BY project_id DESC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students WHERE student_id = 1;",
      "SELECT * FROM discussions;",
      "SELECT discussion_topic, discussion_date FROM discussions WHERE discussion_id = 1;",
      "SELECT * FROM quizzes;",
      "SELECT quiz_topic, total_marks FROM quizzes WHERE quiz_id = 1;",
      "SELECT * FROM projects;",
      "SELECT project_name, project_deadline FROM projects WHERE project_id = 1;",
      "SELECT * FROM participation;",
      "SELECT student_id, activity_type FROM participation WHERE participation_id = 1;",
      "SELECT student_name, discussion_topic, discussion_date FROM students JOIN discussions ON students.student_id = discussions.discussion_id;",
      "SELECT student_name, quiz_topic, total_marks FROM students JOIN quizzes ON students.student_id = quizzes.quiz_id;",
      "SELECT student_name, project_name, project_deadline FROM students JOIN projects ON students.student_id = projects.project_id;",
      "SELECT student_name, activity_type FROM students JOIN participation ON students.student_id = participation.student_id;",
      "SELECT student_name, discussion_topic, quiz_topic, project_name FROM students JOIN discussions ON students.student_id = discussions.discussion_id JOIN quizzes ON students.student_id = quizzes.quiz_id JOIN projects ON students.student_id = projects.project_id;",
      "SELECT student_name, discussion_topic, quiz_topic, project_name, activity_type FROM students JOIN discussions ON students.student_id = discussions.discussion_id JOIN quizzes ON students.student_id = quizzes.quiz_id JOIN projects ON students.student_id = projects.project_id JOIN participation ON students.student_id = participation.student_id;",
      "SELECT student_name, discussion_topic, quiz_topic, project_name, activity_type FROM students LEFT JOIN discussions ON students.student_id = discussions.discussion_id LEFT JOIN quizzes ON students.student_id = quizzes.quiz_id LEFT JOIN projects ON students.student_id = projects.project_id LEFT JOIN participation ON students.student_id = participation.student_id;",
      "SELECT student_name, discussion_topic, quiz_topic, project_name, activity_type FROM students RIGHT JOIN discussions ON students.student_id = discussions.discussion_id RIGHT JOIN quizzes ON students.student_id = quizzes.quiz_id RIGHT JOIN projects ON students.student_id = projects.project_id RIGHT JOIN participation ON students.student_id = participation.student_id;",
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students WHERE student_id = 1;",
      "SELECT student_name, discussion_topic, discussion_date FROM students JOIN participation ON students.student_id = participation.student_id JOIN discussions ON participation.activity_id = discussions.discussion_id;",
      "SELECT student_name, quiz_topic, total_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id;",
      "SELECT student_name, project_name, project_deadline FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id;",
      "SELECT student_name, activity_type FROM students JOIN participation ON students.student_id = participation.student_id WHERE activity_type = 'quiz';",
      "SELECT student_id, student_name, project_name FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE activity_type = 'project';",
      "SELECT MAX(total_marks) AS highest_marks FROM quizzes;",
      "SELECT AVG(total_marks) AS average_marks FROM quizzes;",
      "SELECT COUNT(*) AS total_discussions FROM discussions;",
      "SELECT student_name, COUNT(activity_id) AS total_activities FROM students JOIN participation ON students.student_id = participation.student_id GROUP BY student_name;",
      "SELECT student_name, project_name, DATEDIFF(project_deadline, CURDATE()) AS days_left FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id;",
      "SELECT student_name, AVG(total_marks) AS average_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id GROUP BY student_name;",
      "SELECT COUNT(*) AS total_participations, activity_type FROM participation GROUP BY activity_type;",
      "SELECT student_name, project_name, project_deadline, DATEDIFF(project_deadline, CURDATE()) AS days_left FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id ORDER BY days_left ASC;",
      "SELECT student_name, quiz_topic, total_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id WHERE total_marks > 80;",
      "SELECT student_name, project_name, project_deadline FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE project_deadline BETWEEN '2021-10-01' AND '2021-12-31';",
      "SELECT student_name, project_name, project_deadline, DATEDIFF(project_deadline, CURDATE()) AS days_left FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE DATEDIFF(project_deadline, CURDATE()) <= 7;",
      "SELECT student_name, MAX(total_marks) AS highest_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id GROUP BY student_name;",
      "SELECT student_name, project_name, project_deadline FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE project_deadline > CURDATE();"
    ]
  }
]