[
  {
    "statements": [
      "SELECT * FROM messages WHERE message_id = 1;",
      "SELECT message_text FROM messages WHERE sender_id = 2;",
      "SELECT message_text, message_timestamp FROM messages WHERE receiver_id = 3;",
      "SELECT * FROM messages WHERE sender_id = 4 AND receiver_id = 5;",
      "SELECT message_id, sender_id, receiver_id FROM messages WHERE message_timestamp > '2022-01-01';",
      "SELECT * FROM messages WHERE sender_id = 6 OR receiver_id = 7;",
      "SELECT DISTINCT sender_id FROM messages;",
      "SELECT COUNT(*) FROM messages;",
      "SELECT message_id, receiver_id FROM messages WHERE message_text LIKE '%important%';",
      "SELECT * FROM messages WHERE sender_id = 8 ORDER BY message_timestamp DESC;",
      "SELECT message_text FROM messages WHERE sender_id = 9 LIMIT 5;",
      "SELECT message_id, sender_id, receiver_id FROM messages WHERE message_timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT AVG(message_id) FROM messages;",
      "SELECT MAX(receiver_id) FROM messages;",
      "SELECT MIN(sender_id) FROM messages;",
      "SELECT COUNT(DISTINCT sender_id) FROM messages;",
      "SELECT * FROM messages WHERE receiver_id = 10 OFFSET 3 LIMIT 2;",
      "SELECT sender_id, COUNT(*) AS total_messages FROM messages GROUP BY sender_id;",
      "SELECT message_text FROM messages WHERE message_text IS NOT NULL;",
      "SELECT message_id, receiver_id FROM messages WHERE sender_id <> receiver_id;",
      "SELECT * FROM messages WHERE sender_id = 1;",
      "SELECT message_id, message_text FROM messages WHERE receiver_id = 2 AND sender_id = 3;",
      "SELECT COUNT(*) AS message_count FROM messages WHERE sender_id = 1;",
      "SELECT sender_id, receiver_id, COUNT(*) AS message_count FROM messages WHERE sender_id = 1 GROUP BY sender_id, receiver_id;",
      "SELECT * FROM messages ORDER BY message_timestamp DESC;",
      "SELECT * FROM messages WHERE message_text LIKE '%important%';",
      "SELECT * FROM messages WHERE message_timestamp >= '2022-01-01' AND message_timestamp < '2023-01-01';",
      "SELECT sender_id, COUNT(*) AS message_count FROM messages GROUP BY sender_id HAVING COUNT(*) > 10;",
      "SELECT sender_id, MAX(message_timestamp) AS latest_message_timestamp FROM messages GROUP BY sender_id;",
      "SELECT DISTINCT sender_id FROM messages;",
      "SELECT receiver_id, COUNT(*) AS message_count FROM messages GROUP BY receiver_id;",
      "SELECT sender_id, AVG(message_text) AS avg_message_length FROM messages GROUP BY sender_id;",
      "SELECT sender_id, receiver_id, DATE_TRUNC('hour', message_timestamp) AS message_hour FROM messages;",
      "SELECT sender_id, receiver_id, EXTRACT(MONTH FROM message_timestamp) AS message_month FROM messages;",
      "SELECT sender_id, receiver_id, message_timestamp - LAG(message_timestamp) OVER (PARTITION BY sender_id ORDER BY message_timestamp) AS time_gap FROM messages;",
      "SELECT sender_id, receiver_id, message_text, message_timestamp, ROW_NUMBER() OVER (PARTITION BY sender_id ORDER BY message_timestamp) AS message_order FROM messages;",
      "SELECT sender_id, receiver_id, message_timestamp, LAG(message_timestamp) OVER (PARTITION BY sender_id ORDER BY message_timestamp) AS previous_message_timestamp FROM messages;",
      "SELECT sender_id, receiver_id, message_text, message_timestamp, LEAD(message_text) OVER (PARTITION BY sender_id ORDER BY message_timestamp) AS next_message_text FROM messages;",
      "SELECT sender_id, receiver_id, message_text, message_timestamp, FIRST_VALUE(message_text) OVER (PARTITION BY sender_id ORDER BY message_timestamp) AS first_message_text FROM messages;",
      "SELECT sender_id, receiver_id, message_text, message_timestamp, LAST_VALUE(message_text) OVER (PARTITION BY sender_id ORDER BY message_timestamp) AS last_message_text FROM messages;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM teachers;",
      "SELECT teacher_name, teacher_email FROM teachers;",
      "SELECT * FROM students;",
      "SELECT student_name, student_email FROM students;",
      "SELECT teacher_name, teacher_email FROM teachers WHERE teacher_id = 1;",
      "SELECT student_name, student_email FROM students WHERE student_id = 2;",
      "SELECT * FROM teachers INNER JOIN students ON teachers.teacher_id = students.student_id;",
      "SELECT teacher_name, student_name FROM teachers, students WHERE teachers.teacher_id = students.student_id;",
      "SELECT * FROM teachers WHERE teacher_id = 1 OR teacher_id = 2;",
      "SELECT * FROM students WHERE student_name LIKE '%John%';",
      "SELECT * FROM teachers WHERE teacher_name LIKE 'A%';",
      "SELECT teacher_name, student_name FROM teachers LEFT JOIN students ON teachers.teacher_id = students.student_id;",
      "SELECT COUNT(*) FROM teachers;",
      "SELECT AVG(teacher_id) FROM teachers;",
      "SELECT DISTINCT teacher_name FROM teachers;",
      "SELECT COUNT(student_id) FROM students WHERE student_name = 'Alice';",
      "SELECT MAX(teacher_id) FROM teachers;",
      "SELECT MIN(student_id) FROM students;",
      "SELECT teacher_name, COUNT(student_id) FROM teachers, students WHERE teachers.teacher_id = students.student_id GROUP BY teacher_name;",
      "SELECT * FROM teachers ORDER BY teacher_name DESC LIMIT 5;",
      "SELECT * FROM teachers WHERE teacher_id = 1;",
      "SELECT teacher_name FROM teachers WHERE teacher_email = 'teacher@example.com';",
      "SELECT * FROM students WHERE student_id = 1;",
      "SELECT student_name FROM students WHERE student_email = 'student@example.com';",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.student_id;",
      "SELECT teacher_name, COUNT(student_id) AS total_students FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id GROUP BY teacher_name;",
      "SELECT teacher_name, student_name FROM teachers LEFT JOIN students ON teachers.teacher_id = students.teacher_id;",
      "SELECT teacher_name, student_name FROM teachers RIGHT JOIN students ON teachers.teacher_id = students.teacher_id;",
      "SELECT teacher_name, student_name FROM teachers FULL JOIN students ON teachers.teacher_id = students.teacher_id;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id WHERE teacher_name LIKE 'A%';",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id ORDER BY teacher_name ASC;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id ORDER BY teacher_name DESC;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id LIMIT 5;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id OFFSET 2;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id LIMIT 5 OFFSET 2;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id WHERE teacher_name = 'John Doe';",
      "SELECT teacher_name, COUNT(student_id) AS total_students FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id GROUP BY teacher_name HAVING total_students > 3;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id UNION SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id;",
      "SELECT CONCAT(teacher_name, ' teaches ', student_name) AS teaching_info FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id;",
      "SELECT teacher_name, student_name FROM teachers JOIN students ON teachers.teacher_id = students.teacher_id WHERE student_name IN ('Alice', 'Bob', 'Eve');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM teachers;",
      "SELECT teacher_name FROM teachers;",
      "SELECT teacher_name, subject FROM teachers;",
      "SELECT * FROM students;",
      "SELECT student_name, grade FROM students;",
      "SELECT * FROM messages;",
      "SELECT sender_id, receiver_id, message_text FROM messages;",
      "SELECT sender_id, receiver_id, message_text, timestamp FROM messages;",
      "SELECT teacher_name FROM teachers WHERE teacher_id = 1;",
      "SELECT student_name FROM students WHERE grade = 12;",
      "SELECT teacher_name, subject FROM teachers WHERE teacher_name LIKE 'J%';",
      "SELECT student_name, grade FROM students WHERE grade > 90;",
      "SELECT sender_id, receiver_id, message_text FROM messages WHERE sender_id = 1;",
      "SELECT * FROM teachers JOIN students ON teacher_id = student_id;",
      "SELECT student_name, subject FROM students JOIN teachers ON student_id = teacher_id;",
      "SELECT teacher_name, message_text FROM teachers JOIN messages ON teacher_id = sender_id;",
      "SELECT student_name, timestamp FROM students JOIN messages ON student_id = receiver_id;",
      "SELECT teacher_name, student_name, message_text FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id JOIN students s ON s.student_id = m.receiver_id;",
      "SELECT AVG(grade) AS average_grade FROM students;",
      "SELECT COUNT(*) AS total_messages FROM messages;",
      "SELECT DISTINCT teacher_name, subject FROM teachers WHERE teacher_id IN (SELECT sender_id FROM messages) ORDER BY teacher_name ASC, subject DESC LIMIT 5",
      "SELECT student_name, grade FROM students WHERE student_id IN (SELECT receiver_id FROM messages) AND grade > 80 ORDER BY grade DESC, student_name ASC LIMIT 3",
      "SELECT teacher_name, COUNT(subject) AS num_subjects FROM teachers GROUP BY teacher_name HAVING num_subjects > 1 ORDER BY num_subjects DESC",
      "SELECT student_name, grade FROM students WHERE grade = (SELECT MAX(grade) FROM students) ORDER BY student_name ASC",
      "SELECT sender_id, receiver_id, COUNT(message_id) AS num_messages FROM messages GROUP BY sender_id, receiver_id HAVING num_messages > 3 ORDER BY num_messages DESC LIMIT 5",
      "SELECT teacher_name, student_name, grade FROM teachers t INNER JOIN students s ON t.teacher_id = s.student_id ORDER BY teacher_name ASC, student_name ASC LIMIT 5",
      "SELECT teacher_name, COUNT(message_id) AS num_messages FROM teachers LEFT JOIN messages ON teachers.teacher_id = messages.sender_id GROUP BY teacher_name ORDER BY num_messages DESC",
      "SELECT student_name, AVG(grade) AS avg_grade FROM students GROUP BY student_name HAVING avg_grade > 70 ORDER BY avg_grade DESC LIMIT 5",
      "SELECT DISTINCT sender_id, receiver_id FROM messages WHERE sender_id <> receiver_id ORDER BY sender_id ASC, receiver_id DESC LIMIT 5",
      "SELECT teacher_name, student_name, grade FROM teachers INNER JOIN students ON teachers.teacher_id = students.student_id WHERE grade >= 90 ORDER BY teacher_name ASC, student_name ASC LIMIT 5",
      "SELECT teacher_name, subject FROM teachers WHERE teacher_id NOT IN (SELECT sender_id FROM messages) ORDER BY teacher_name ASC, subject DESC LIMIT 5",
      "SELECT sender_id, MAX(timestamp) AS last_message_time FROM messages GROUP BY sender_id ORDER BY last_message_time DESC LIMIT 5",
      "SELECT student_name, grade FROM students WHERE grade < (SELECT AVG(grade) FROM students) ORDER BY grade DESC",
      "SELECT teacher_name, COUNT(receiver_id) AS num_receivers FROM teachers LEFT JOIN messages ON teachers.teacher_id = messages.sender_id GROUP BY teacher_name ORDER BY num_receivers DESC",
      "SELECT sender_id, COUNT(DISTINCT receiver_id) AS num_unique_receivers FROM messages GROUP BY sender_id ORDER BY num_unique_receivers DESC LIMIT 5",
      "SELECT student_name, grade FROM students ORDER BY RAND() LIMIT 5",
      "SELECT teacher_name, COUNT(message_id) AS num_sent_messages FROM teachers INNER JOIN messages ON teachers.teacher_id = messages.sender_id GROUP BY teacher_name ORDER BY num_sent_messages DESC",
      "SELECT sender_id, receiver_id, MAX(grade) AS max_grade FROM messages INNER JOIN students ON messages.sender_id = students.student_id GROUP BY sender_id, receiver_id ORDER BY max_grade DESC",
      "SELECT DISTINCT teacher_name, subject FROM teachers INNER JOIN students ON teachers.teacher_id = students.student_id WHERE grade < 70 ORDER BY teacher_name ASC, subject DESC LIMIT 5",
      "SELECT teacher_name, COUNT(DISTINCT receiver_id) AS num_unique_receivers FROM teachers INNER JOIN messages ON teachers.teacher_id = messages.sender_id GROUP BY teacher_name ORDER BY num_unique_receivers DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM teachers",
      "SELECT teacher_name, teacher_email FROM teachers",
      "SELECT * FROM students",
      "SELECT student_name, student_email FROM students",
      "SELECT * FROM messages",
      "SELECT sender_id, receiver_id, message_text, message_time FROM messages",
      "SELECT * FROM conversations",
      "SELECT teacher_id, student_id, start_time, end_time FROM conversations",
      "SELECT teacher_id, student_id, end_time FROM conversations",
      "SELECT conversation_id, teacher_id, student_id FROM conversations",
      "SELECT * FROM teachers WHERE teacher_id = 1",
      "SELECT teacher_name FROM teachers WHERE teacher_id = 1",
      "SELECT * FROM students WHERE student_id = 1",
      "SELECT student_name FROM students WHERE student_id = 1",
      "SELECT * FROM messages WHERE sender_id = 1",
      "SELECT * FROM messages WHERE receiver_id = 1",
      "SELECT * FROM conversations WHERE teacher_id = 1",
      "SELECT * FROM conversations WHERE student_id = 1",
      "SELECT * FROM conversations WHERE start_time > '2022-01-01'",
      "SELECT * FROM teachers ORDER BY teacher_name ASC",
      "SELECT * FROM teachers WHERE teacher_id = 1;",
      "SELECT teacher_name, teacher_email FROM teachers WHERE teacher_id > 5;",
      "SELECT * FROM students WHERE student_id IN (SELECT teacher_id FROM teachers);",
      "SELECT student_name, student_email FROM students WHERE student_name LIKE 'A%';",
      "SELECT messages.message_id, sender_id, receiver_id, message_time, teacher_name FROM messages JOIN teachers ON teachers.teacher_id = messages.sender_id;",
      "SELECT * FROM teachers JOIN conversations ON teachers.teacher_id = conversations.teacher_id;",
      "SELECT teacher_id, student_id, MAX(message_time) AS last_message FROM messages GROUP BY teacher_id, student_id;",
      "SELECT student_id, student_name, COUNT(message_id) AS num_messages FROM messages JOIN students ON students.student_id = messages.receiver_id GROUP BY student_id;",
      "SELECT teacher_id, teacher_name, COUNT(DISTINCT student_id) AS num_students FROM conversations JOIN teachers ON teachers.teacher_id = conversations.teacher_id GROUP BY teacher_id;",
      "SELECT teacher_id, teacher_name, AVG(message_text) AS avg_message_length FROM messages JOIN teachers ON teachers.teacher_id = messages.sender_id GROUP BY teacher_id;",
      "SELECT student_name, COUNT(conversation_id) AS num_conversations FROM conversations JOIN students ON students.student_id = conversations.student_id GROUP BY student_name HAVING num_conversations > 3;",
      "SELECT * FROM conversations WHERE teacher_id = 2 AND start_time BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT * FROM teachers WHERE teacher_id NOT IN (SELECT teacher_id FROM conversations);",
      "SELECT * FROM students WHERE student_email LIKE '%@example.com';",
      "SELECT teacher_id, teacher_name, MAX(end_time) - MIN(start_time) AS conversation_duration FROM conversations GROUP BY teacher_id;",
      "SELECT teacher_id, teacher_name, COUNT(message_id) AS num_messages FROM messages JOIN teachers ON teachers.teacher_id = messages.receiver_id GROUP BY teacher_id HAVING num_messages > 100;",
      "SELECT teacher_name, SUM(message_id) AS total_messages FROM messages JOIN teachers ON teachers.teacher_id = messages.sender_id GROUP BY teacher_name ORDER BY total_messages DESC;",
      "SELECT student_name, AVG(DATEDIFF(end_time, start_time)) AS avg_conversation_duration FROM conversations JOIN students ON conversations.student_id = students.student_id GROUP BY student_name;",
      "SELECT * FROM teachers WHERE teacher_id = (SELECT MAX(teacher_id) FROM teachers);",
      "SELECT student_id, student_name, COUNT(message_id) AS num_messages FROM messages JOIN students ON students.student_id = messages.receiver_id WHERE message_time > '2022-01-01' GROUP BY student_id;",
      "SELECT teacher_id, teacher_name, COUNT(message_id) AS num_messages FROM messages JOIN teachers ON teachers.teacher_id = messages.sender_id WHERE teacher_name <> 'John Doe' GROUP BY teacher_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM teachers;",
      "SELECT teacher_name, teacher_email FROM teachers;",
      "SELECT * FROM students;",
      "SELECT student_name, student_email FROM students;",
      "SELECT * FROM messages;",
      "SELECT sender_id, receiver_id, message_text, timestamp FROM messages;",
      "SELECT * FROM conversations;",
      "SELECT teacher_id, student_id FROM conversations;",
      "SELECT * FROM message_attachments;",
      "SELECT message_id, attachment_url FROM message_attachments;",
      "SELECT teachers.teacher_name, students.student_name FROM teachers, students;",
      "SELECT messages.message_text, message_attachments.attachment_url FROM messages JOIN message_attachments ON messages.message_id = message_attachments.message_id;",
      "SELECT teachers.teacher_name, students.student_name, messages.message_text FROM teachers JOIN conversations ON teachers.teacher_id = conversations.teacher_id JOIN students ON conversations.student_id = students.student_id JOIN messages ON teachers.teacher_id = messages.sender_id;",
      "SELECT teacher_id, COUNT(*) AS num_conversations FROM conversations GROUP BY teacher_id;",
      "SELECT student_id, COUNT(*) AS num_conversations FROM conversations GROUP BY student_id;",
      "SELECT teacher_id, COUNT(*) AS num_messages FROM messages GROUP BY teacher_id;",
      "SELECT student_id, COUNT(*) AS num_messages FROM messages GROUP BY student_id;",
      "SELECT teacher_id, MAX(timestamp) AS last_message_timestamp FROM messages WHERE sender_id = teacher_id GROUP BY teacher_id;",
      "SELECT student_id, MAX(timestamp) AS last_message_timestamp FROM messages WHERE sender_id = student_id GROUP BY student_id;",
      "SELECT sender_id AS teacher_id, receiver_id AS student_id, message_text, timestamp FROM messages WHERE sender_id IN (SELECT teacher_id FROM conversations) AND receiver_id IN (SELECT student_id FROM conversations);",
      "SELECT * FROM teachers;",
      "SELECT teacher_name, teacher_email FROM teachers WHERE teacher_id = 1;",
      "SELECT * FROM students WHERE student_name LIKE 'A%';",
      "SELECT student_name, student_email FROM students WHERE student_id = 5;",
      "SELECT m.message_id, m.sender_id, m.receiver_id, m.message_text, m.timestamp, t.teacher_name, s.student_name, ma.attachment_url FROM messages m JOIN teachers t ON m.sender_id = t.teacher_id JOIN students s ON m.receiver_id = s.student_id LEFT JOIN message_attachments ma ON m.message_id = ma.message_id;",
      "SELECT t.teacher_name, COUNT(*) AS total_messages FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id GROUP BY t.teacher_name ORDER BY total_messages DESC;",
      "SELECT student_name, COUNT(*) AS total_conversations FROM students s JOIN conversations c ON s.student_id = c.student_id GROUP BY student_name ORDER BY total_conversations DESC;",
      "SELECT t.teacher_name, COUNT(*) AS total_attachments FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id JOIN message_attachments ma ON m.message_id = ma.message_id GROUP BY t.teacher_name ORDER BY total_attachments DESC;",
      "SELECT sender_id, COUNT(*) AS total_messages_sent FROM messages GROUP BY sender_id ORDER BY total_messages_sent DESC LIMIT 5;",
      "SELECT receiver_id, COUNT(*) AS total_messages_received FROM messages GROUP BY receiver_id ORDER BY total_messages_received DESC LIMIT 5;",
      "SELECT DISTINCT t.teacher_name, s.student_name FROM teachers t, students s WHERE t.teacher_id = 1 AND s.student_id = 5;",
      "SELECT * FROM messages WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31' ORDER BY timestamp DESC;",
      "SELECT * FROM students WHERE student_id IN (1, 3, 5, 7);",
      "SELECT * FROM messages WHERE message_text LIKE '%important%' OR message_text LIKE '%urgent%';",
      "SELECT t.teacher_name, s.student_name, m.timestamp FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id JOIN students s ON m.receiver_id = s.student_id WHERE t.teacher_name = 'John Doe' AND s.student_name = 'Alice Smith';",
      "SELECT t.teacher_name, s.student_name, m.timestamp FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id JOIN students s ON m.receiver_id = s.student_id WHERE t.teacher_name = 'Jane Smith' OR s.student_name = 'Bob Johnson';",
      "SELECT * FROM messages WHERE sender_id = 1 AND receiver_id = 5;",
      "SELECT t.teacher_name, s.student_name, COUNT(*) AS total_messages FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id JOIN students s ON m.receiver_id = s.student_id GROUP BY t.teacher_name, s.student_name;",
      "SELECT t.teacher_name, s.student_name, COUNT(*) AS total_attachments FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id JOIN students s ON m.receiver_id = s.student_id JOIN message_attachments ma ON m.message_id = ma.message_id GROUP BY t.teacher_name, s.student_name ORDER BY total_attachments DESC;",
      "SELECT t.teacher_name, s.student_name, MAX(m.timestamp) AS last_message_timestamp FROM teachers t JOIN messages m ON t.teacher_id = m.sender_id JOIN students s ON m.receiver_id = s.student_id GROUP BY t.teacher_name, s.student_name ORDER BY last_message_timestamp DESC LIMIT 10;"
    ]
  }
]