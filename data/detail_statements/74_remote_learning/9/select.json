[
  {
    "statements": [
      "SELECT * FROM student_reports WHERE student_id = 1;",
      "SELECT student_id, enrollment_status FROM student_reports WHERE enrollment_status = 'Active';",
      "SELECT student_id, engagement_level FROM student_reports WHERE engagement_level = 'High';",
      "SELECT * FROM student_reports WHERE performance_score > 80;",
      "SELECT student_id, enrollment_status, engagement_level FROM student_reports WHERE enrollment_status = 'Inactive';",
      "SELECT * FROM student_reports WHERE performance_score < 60;",
      "SELECT student_id, performance_score FROM student_reports WHERE performance_score BETWEEN 70 AND 90;",
      "SELECT * FROM student_reports WHERE enrollment_status = 'Active' AND engagement_level = 'High';",
      "SELECT * FROM student_reports WHERE enrollment_status = 'Active' OR engagement_level = 'High';",
      "SELECT student_id, performance_score FROM student_reports WHERE enrollment_status = 'Active' AND performance_score > 80;",
      "SELECT student_id, enrollment_status FROM student_reports WHERE enrollment_status LIKE '%e%';",
      "SELECT student_id, performance_score FROM student_reports WHERE enrollment_status LIKE 'A%';",
      "SELECT * FROM student_reports ORDER BY student_id ASC;",
      "SELECT * FROM student_reports ORDER BY student_id DESC;",
      "SELECT AVG(performance_score) FROM student_reports;",
      "SELECT COUNT(student_id) FROM student_reports;",
      "SELECT MAX(performance_score) FROM student_reports;",
      "SELECT MIN(performance_score) FROM student_reports;",
      "SELECT SUM(performance_score) FROM student_reports;",
      "SELECT DISTINCT engagement_level FROM student_reports;",
      "SELECT * FROM student_reports WHERE enrollment_status = 'enrolled';",
      "SELECT student_id, engagement_level FROM student_reports WHERE performance_score > 80;",
      "SELECT student_id, enrollment_status, AVG(performance_score) AS avg_performance FROM student_reports GROUP BY student_id HAVING avg_performance > 70;",
      "SELECT student_id, enrollment_status, engagement_level, performance_score FROM student_reports ORDER BY performance_score DESC LIMIT 5;",
      "SELECT COUNT(student_id) AS total_students FROM student_reports WHERE enrollment_status = 'enrolled' AND engagement_level = 'high';",
      "SELECT student_id, performance_score FROM student_reports WHERE enrollment_status = 'enrolled' AND engagement_level IN ('high', 'medium');",
      "SELECT student_id, enrollment_status, engagement_level, performance_score FROM student_reports WHERE performance_score BETWEEN 70 AND 90 ORDER BY performance_score DESC LIMIT 10;",
      "SELECT student_id, MAX(performance_score) AS highes..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, enrollment_date FROM students WHERE student_id = 1;",
      "SELECT * FROM grades;",
      "SELECT student_id, course_code, grade FROM grades WHERE student_id = 1;",
      "SELECT * FROM students JOIN grades ON students.student_id = grades.student_id;",
      "SELECT student_name, grade FROM students JOIN grades ON students.student_id = grades.student_id WHERE students.student_id = 1;",
      "SELECT student_id, student_name FROM students WHERE enrollment_date >= '2022-01-01';",
      "SELECT student_name, grade FROM students JOIN grades ON students.student_id = grades.student_id WHERE grades.grade = 'A';",
      "SELECT * FROM students WHERE student_name LIKE 'J%';",
      "SELECT student_id, course_code, grade FROM grades WHERE semester = 'Fall';",
      "SELECT student_name, course_code, grade FROM students JOIN grades ON students.student_id = grades.student_id WHERE students.enrollment_date >= '2020-01-01' AND grades.semester = 'Spring';",
      "SELECT student_id, student_name FROM students ORDER BY student_id DESC;",
      "SELECT student_name, MAX(grade) AS highest_grade FROM students JOIN grades ON students.student_id = grades.student_id GROUP BY student_name;",
      "SELECT student_name, AVG(CAST(grade AS INT)) AS average_grade FROM students JOIN grades ON students.student_id = grades.student_id GROUP BY student_name HAVING COUNT(*) > 1;",
      "SELECT student_id, student_name, COUNT(course_code) AS num_courses FROM students JOIN grades ON students.student_id = grades.student_id GROUP BY student_id, student_name ORDER BY num_courses DESC;",
      "SELECT student_name, SUM(CAST(grade AS INT)) AS total_grade FROM students JOIN grades ON students.student_id = grades.student_id GROUP BY student_name HAVING SUM(CAST(grade AS INT)) > 80;",
      "SELECT student_id, student_name, MIN(enrollment_date) AS first_enrollment_date FROM students GROUP BY student_id, student_name;",
      "SELECT student_name, course_code, COUNT(DISTINCT semester) AS num_semesters FROM students JOIN grades ON students.student_id = grades.student_id GROUP BY student_name, course_code ORDER BY num_semesters DESC;",
      "SELECT student_name, enrollment_date, AVG(CAST(grade AS INT)) AS average_grade FROM students JOIN grades ON students.student_id = grades.student_id WHERE grades.grade IN ('A', 'B', 'C') GROUP BY student_name, enrollment_date;",
      "SELECT student_id, student_name, MAX(enrollment_date) AS latest_enrollment_date FROM students GROUP BY student_id, student_name;",
      "SELECT student_id, student_name FROM students WHERE enrollment_date >= '2022-01-01';",
      "SELECT student_name, grade FROM students JOIN grades ON students.student_id = grades.student_id;",
      "SELECT student_name, grade, semester FROM students JOIN grades ON students.student_id = grades.student_id WHERE semester = 'Fall';",
      "SELECT student_name, course_code, grade FROM students JOIN grades ON students.student_id = grades.student_id WHERE grade >= 'A';",
      "SELECT student_name, course_code, grade, semester FROM students JOIN grades ON students.student_id = grades.student_id WHERE semester = 'Spring' AND grade = 'B';",
      "SELECT student_name, COUNT(grade) AS num_grades FROM students JOIN grades ON students.student_id = grades.student_id GROUP BY student_name;",
      "SELECT student_name, AVG(grade) AS avg_grade FROM students JOIN grades ON students.student_id = grades.student_id GROUP BY student_name;",
      "SELECT student_name, MAX(grade) AS m..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM Enrollment;",
      "SELECT student_id, course_id FROM Enrollment WHERE enrollment_date >= '2022-01-01';",
      "SELECT COUNT(*) FROM Enrollment;",
      "SELECT student_id, AVG(course_id) FROM Enrollment GROUP BY student_id;",
      "SELECT * FROM Engagement WHERE engagement_score > 80;",
      "SELECT student_id, MAX(engagement_score) FROM Engagement GROUP BY student_id;",
      "SELECT course_id, MIN(engagement_score) FROM Engagement GROUP BY course_id;",
      "SELECT * FROM Performance WHERE performance_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT student_id, course_id, performance_score FROM Performance WHERE performance_score < 70;",
      "SELECT course_id, SUM(performance_score) FROM Performance GROUP BY course_id;",
      "SELECT * FROM Enrollment JOIN Engagement ON Enrollment.student_id = Engagement.student_id;",
      "SELECT * FROM Enrollment JOIN Performance ON Enrollment.course_id = Performance.course_id;",
      "SELECT * FROM Enrollment WHERE student_id = 1;",
      "SELECT * FROM Engagement WHERE course_id = 2;",
      "SELECT * FROM Performance WHERE student_id = 3;",
      "SELECT student_id, AVG(performance_score) FROM Performance GROUP BY student_id HAVING AVG(performance_score) > 85;",
      "SELECT course_id, COUNT(*) FROM Enrollment GROUP BY course_id HAVING COUNT(*) > 3;",
      "SELECT DISTINCT student_id FROM Enrollment;",
      "SELECT * FROM Enrollment ORDER BY enrollment_date DESC LIMIT 5;",
      "SELECT * FROM Performance ORDER BY performance_score ASC LIMIT 3;",
      "SELECT * FROM Enrollment WHERE student_id = 1;",
      "SELECT student_id, course_id FROM Enrollment WHERE enrollment_date >= '2022-01-01';",
      "SELECT DISTINCT student_id, course_id from Enrollment WHERE course_id IN (SELECT course_id FROM Engagement WHERE engagement_score > 80);",
      "SELECT MAX(performance_score) FROM Performance WHERE course_id = 1;",
      "SELECT AVG(engagement_score) FROM Engagement WHERE student_id = 2 GROUP BY course_id;",
      "SELECT COUNT(*) FROM Enrollment JOIN Performance ON Enrollment.student_id = Performance.student_id WHERE enrollment_date >= '2022-01-01' AND performance_score >= 70;",
      "SELECT E.student_id, P.course_id, E.enrollment_date, P.performance_score FROM Enrollment E JOIN Performance P ON E.student_id = P.student_id;",
      "SELECT student_id, AVG(engagement_score) AS avg_score FROM Engagement GROUP BY student_id HAVING avg_score > 75;",
      "SELECT * FROM Enrollment WHERE student_id IN (SELECT student_id FROM Performance WHERE performance_score >= 80);",
      "SELECT student_id, SUM(performance_score) AS total_score FROM Performance GROUP BY student_id;",
      "SELECT AVG(performance_score) AS avg_score, COUNT(course_id) AS course_count FROM Performance GROUP BY student_id HAVING avg_score > 70;",
      "SELECT E.student_id, E.course_id, E.enrollment_date, P.performance_score FROM Enrollment E LEFT JOIN Performance P ON E.student_id = P.student_id;",
      "SELECT E.student_id, P.course_id, E.enrollment_date, P.performance_score FROM Enrollment E RIGHT JOIN Performance P ON E.student_id = P.student_id;",
      "SELECT student_id, MAX(engagement_score) AS max_score FROM Engagement GROUP BY student_id HAVING max_score > 90;",
      "SELECT student_id, course_id, performance_score FROM Performance UNION SELECT student_id, course_id, engagement_score FROM Engagement;",
      "SELECT student_id, course_id, MAX(engagement_score) as max_engagement_score FROM Engagement GROUP BY student_id, course_id;",
      "SELECT COUNT(DISTINCT course_id) as course_count, SUM(performance_score) as total_score FROM Performance GROUP BY student_id;",
      "SELECT E.student_id, E.course_id, E.enrollment_date, P.performance_score FROM Enrollment E INNER JOIN Performance P ON E.student_id = P.student_id;",
      "SELECT student_id, MAX(engagement_score) AS max_score FROM Engagement WHERE engagement_date >= '2022-01-01' GROUP BY student_id HAVING max_score > 85;",
      "SELECT student_id, AVG(performance_score) AS avg_score FROM Performance WHERE performance_date >= '2022-01-01' GROUP BY student_id HAVING avg_score > 80;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM student_enrollment;",
      "SELECT student_id, enrollment_date, enrollment_status FROM student_enrollment;",
      "SELECT * FROM student_engagement;",
      "SELECT student_id, engagement_date, engagement_type, engagement_duration FROM student_engagement;",
      "SELECT * FROM student_performance;",
      "SELECT student_id, exam_date, exam_score FROM student_performance;",
      "SELECT * FROM student_report;",
      "SELECT student_id, report_date, report_type FROM student_report;",
      "SELECT student_id, enrollment_date, program_id, enrollment_status FROM student_enrollment WHERE student_id = 1;",
      "SELECT student_id, exam_date, exam_score FROM student_performance WHERE exam_score >= 80;",
      "SELECT student_id, engagement_date, engagement_type FROM student_engagement WHERE engagement_duration > 30;",
      "SELECT student_id, report_date, report_type FROM student_report WHERE report_type = 'Midterm';",
      "SELECT COUNT(*) FROM student_enrollment;",
      "SELECT AVG(exam_score) FROM student_performance;",
      "SELECT MAX(engagement_duration) FROM student_engagement;",
      "SELECT MIN(exam_score) FROM student_performance;",
      "SELECT student_id, enrollment_date, program_id, enrollment_status FROM student_enrollment ORDER BY enrollment_date DESC;",
      "SELECT student_id, exam_date, exam_score FROM student_performance ORDER BY exam_score DESC;",
      "SELECT student_id, report_date, report_type FROM student_report ORDER BY report_date ASC;",
      "SELECT AVG(engagement_duration) FROM student_engagement GROUP BY student_id;",
      "SELECT SUM(exam_score) FROM student_performance GROUP BY student_id;",
      "SELECT * FROM student_enrollment WHERE enrollment_status='Active';",
      "SELECT se.student_id, se.program_id, se.enrollment_date, se.enrollment_status, se.program_id, se.program_name FROM student_enrollment se JOIN program p ON se.program_id = p.program_id;",
      "SELECT se.student_id, se.enrollment_date, sp.exam_date, sp.exam_score FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id AND sp.exam_score > 80;",
      "SELECT se.student_id, se.enrollment_date, se.program_id, sp.exam_date, sp.exam_score, sr.report_type FROM student_enrollment se LEFT JOIN student_performance sp ON se.student_id = sp.student_id LEFT JOIN student_report sr ON se.student_id = sr.student_id AND sr.report_type = 'Final Report';",
      "SELECT COUNT(se.student_id) AS total_enrollments, sp.exam_score, AVG(sp.exam_score) AS avg_exam_score FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id WHERE se.enrollment_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY sp.exam_score;",
      "SELECT se.student_id, se.program_id, se.enrollment_date, sp.exam_score, sr.report_content FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id JOIN student_report sr ON se.student_id = sr.student_id WHERE sr.report_date > '2022-08-01';",
      "SELECT se.student_id, se.enrollment_date, se.enrollment_status, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se LEFT JOIN student_performance sp ON se.student_id = sp.student_id LEFT JOIN student_report sr ON se.student_id = sr.student_id WHERE sp.exam_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT se.student_id, se.enrollment_date, se.enrollment_status, se.program_id, sp.exam_score, sr.report_type FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id JOIN student_report sr ON se.student_id = sr.student_id AND sr.report_type IN ('Progress Report', 'Midterm Report');",
      "SELECT se.student_id, se.enrollment_date, se.enrollment_status, sp.exam_date, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se LEFT JOIN student_performance sp ON se.student_id = sp.student_id LEFT JOIN student_report sr ON se.student_id = sr.student_id WHERE se.enrollment_date < '2022-06-01' AND sp.exam_score < 70;",
      "SELECT se.student_id, se.enrollment_status, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id JOIN student_report sr ON se.student_id = sr.student_id WHERE se.enrollment_date > '2022-03-01' AND sp.exam_score < 60;",
      "SELECT SUM(sp.exam_score) AS total_score, sr.report_type, COUNT(sr.report_id) AS total_reports FROM student_performance sp JOIN student_report sr ON sp.student_id = sr.student_id WHERE sr.report_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY sr.report_type;",
      "SELECT se.student_id, COUNT(sp.performance_id) AS total_exams FROM student_enrollment se LEFT JOIN student_performance sp ON se.student_id = sp.student_id GROUP BY se.student_id HAVING COUNT(sp.performance_id) > 3;",
      "SELECT se.student_id, AVG(sp.exam_score) AS avg_score FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id GROUP BY se.student_id HAVING AVG(sp.exam_score) >= 70;",
      "SELECT se.student_id, se.enrollment_date, sp.exam_date, DATEDIFF(sp.exam_date, se.enrollment_date) AS days_to_exam FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id WHERE DATEDIFF(sp.exam_date, se.enrollment_date) > 30;",
      "SELECT se.student_id, se.program_id, se.enrollment_status, sp.exam_date, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id JOIN student_report sr ON se.student_id = sr.student_id WHERE se.enrollment_date BETWEEN '2022-01-01' AND '2022-12-31' AND sp.exam_score >= 80 AND sr.report_type = 'Final Report';",
      "SELECT se.student_id, se.enrollment_date, se.program_id, sp.exam_date, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id JOIN student_report sr ON se.student_id = sr.student_id WHERE sr.report_date BETWEEN '2022-03-01' AND '2022-12-31' AND sp.exam_score >= 70;",
      "SELECT se.student_id, se.enrollment_date, sp.exam_date, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id JOIN student_report sr ON se.student_id = sr.student_id WHERE se.enrollment_date < '2022-03-01' AND NOT sr.report_type = 'Final Report';",
      "SELECT se.student_id, se.enrollment_date, se.enrollment_status, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se LEFT JOIN student_performance sp ON se.student_id = sp.student_id LEFT JOIN student_report sr ON se.student_id = sr.student_id WHERE se.enrollment_status = 'Active' AND sp.exam_score < 60 AND sr.report_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT se.student_id, se.enrollment_date, se.enrollment_status, sp.exam_date, sp.exam_score, sr.report_type, sr.report_content FROM student_enrollment se JOIN student_performance sp ON se.student_id = sp.student_id JOIN student_report sr ON se.student_id = sr.student_id WHERE se.enrollment_date BETWEEN '2022-01-01' AND '2022-12-31' AND sp.exam_score < 70 AND sr.report_type = 'Progress Report';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, first_name, last_name FROM students;",
      "SELECT student_id, first_name, last_name, enrollment_date FROM students WHERE student_id = 1;",
      "SELECT course_id, course_name, instructor FROM courses;",
      "SELECT course_id, course_name, instructor, start_date, end_date FROM courses WHERE course_id = 1;",
      "SELECT enrollment_id, student_id, course_id FROM enrollments;",
      "SELECT enrollment_id, student_id, course_id, enrollment_date FROM enrollments WHERE enrollment_id = 1;",
      "SELECT engagement_id, student_id, course_id FROM engagements;",
      "SELECT engagement_id, student_id, course_id, engagement_date, engagement_type FROM engagements WHERE engagement_id = 1;",
      "SELECT performance_id, student_id, course_id FROM performances;",
      "SELECT performance_id, student_id, course_id, performance_date, performance_type FROM performances WHERE performance_id = 1;",
      "SELECT student_id, course_id, performance_type, grade FROM performances WHERE grade >= 90;",
      "SELECT student_id, course_id, performance_type, grade FROM performances WHERE student_id = 1 AND grade >= 80;",
      "SELECT student_id, course_id, performance_type, grade FROM performances WHERE course_id = 1 AND grade < 70;",
      "SELECT student_id, course_id, performance_type, grade FROM performances WHERE performance_type = 'Midterm';",
      "SELECT student_id, course_id, performance_date, performance_type, grade FROM performances WHERE performance_type = 'Final' AND grade >= 85;",
      "SELECT student_id, course_id, performance_date, performance_type, grade FROM performances WHERE performance_type = 'Quiz' AND grade < 60;",
      "SELECT student_id, course_id, performance_date, performance_type, grade FROM performances WHERE performance_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT student_id, course_id, performance_date, performance_type, grade FROM performances WHERE student_id = 1 AND course_id = 1;",
      "SELECT student_id, course_id, performance_date, performance_type, grade FROM performances WHERE student_id = 1 OR course_id = 1;",
      "SELECT * FROM students",
      "SELECT student_id, first_name, last_name FROM students",
      "SELECT course_id, course_name, instructor FROM courses",
      "SELECT * FROM enrollments",
      "SELECT student_id, COUNT(*) AS total_enrollments FROM enrollments GROUP BY student_id",
      "SELECT student_id, course_id, enrollment_date FROM enrollments WHERE student_id = 1",
      "SELECT student_id, course_id, enrollment_date FROM enrollments WHERE course_id = 2",
      "SELECT student_id, course_id, enrollment_date FROM enrollments WHERE enrollment_date >= '2022-01-01'",
      "SELECT * FROM engagements",
      "SELECT engagement_id, student_id, course_id, engagement_date, engagement_type FROM engagements WHERE engagement_type = 'Participation'",
      "SELECT * FROM performances",
      "SELECT student_id, course_id, performance_date, performance_type, grade FROM performances WHERE grade >= 80",
      "SELECT student_id, AVG(grade) AS average_grade FROM performances GROUP BY student_id HAVING average_grade >= 70",
      "SELECT student_id, course_id, MAX(grade) AS highest_grade FROM performances GROUP BY student_id",
      "SELECT student_id, course_id, performance_date FROM performances ORDER BY performance_date ASC LIMIT 5",
      "SELECT * FROM students JOIN performances ON students.student_id = performances.student_id",
      "SELECT COUNT(*) AS total_students FROM students",
      "SELECT course_id, instructor, COUNT(*) AS total_courses FROM courses GROUP BY instructor",
      "SELECT student_id, course_id, performance_date, grade FROM performances WHERE performance_type = 'Final Exam'"
    ]
  }
]