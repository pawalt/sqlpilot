[
  {
    "statements": [
      "SELECT * FROM assignments;",
      "SELECT id, student_id, assignment_name, grade, feedback FROM assignments;",
      "SELECT id, student_id FROM assignments WHERE grade > 90;",
      "SELECT * FROM assignments WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT assignment_name, grade FROM assignments WHERE grade BETWEEN 80 AND 100;",
      "SELECT * FROM assignments WHERE assignment_name LIKE 'Lab%';",
      "SELECT id, student_id FROM assignments WHERE feedback IS NOT NULL;",
      "SELECT DISTINCT student_id FROM assignments;",
      "SELECT assignment_name, COUNT(*) as total_assignments FROM assignments GROUP BY assignment_name;",
      "SELECT AVG(grade) as average_grade FROM assignments;",
      "SELECT MAX(grade) as highest_grade FROM assignments;",
      "SELECT MIN(grade) as lowest_grade FROM assignments;",
      "SELECT student_id, AVG(grade) as average_grade FROM assignments GROUP BY student_id;",
      "SELECT assignment_name, MAX(grade) as highest_grade FROM assignments GROUP BY assignment_name;",
      "SELECT assignment_name, MIN(grade) as lowest_grade FROM assignments GROUP BY assignment_name;",
      "SELECT assignment_name, COUNT(*) as total_assignments FROM assignments WHERE grade < 70 GROUP BY assignment_name;",
      "SELECT student_id, COUNT(*) as total_assignments FROM assignments GROUP BY student_id HAVING COUNT(*) > 3;",
      "SELECT student_id, AVG(grade) as average_grade FROM assignments GROUP BY student_id HAVING AVG(grade) > 85;",
      "SELECT * FROM assignments ORDER BY grade DESC;",
      "SELECT * FROM assignments ORDER BY assignment_name ASC;",
      "SELECT * FROM assignments WHERE student_id IN ('123e4567-e89b-12d3-a456-426614174000','223e4567-e89b-12d3-a456-426614174000');",
      "SELECT * FROM assignments WHERE grade >= 90;",
      "SELECT student_id, assignment_name FROM assignments WHERE grade = 100;",
      "SELECT COUNT(*) AS total_assignments FROM assignments WHERE student_id = '12345678-90ab-cdef-1234-567890abcdef';",
      "SELECT assignment_name, grade, feedback FROM assignments WHERE student_id = '12345678-90ab-cdef-1234-567890abcdef' AND grade < 70;",
      "SELECT * FROM assignments WHERE feedback LIKE '%improve%';",
      "SELECT assignment_name, grade FROM assignments WHERE student_id = '87654321-abcde-f123-4567-abcdef123456' AND grade BETWEEN 80 AND 90;",
      "SELECT AVG(grade) AS average_grade FROM assignments WHERE student_id = '87654321-abcde-f123-4567-abcdef123456';",
      "SELECT DISTINCT student_id FROM assignments;",
      "SELECT * FROM assignments ORDER BY grade DESC;",
      "SELECT student_id, COUNT(*) AS total_assignments FROM assignments GROUP BY student_id;",
      "SELECT assignment_name, AVG(grade) AS average_grade FROM assignments GROUP BY assignment_name;",
      "SELECT student_id, MAX(grade) AS highest_grade FROM assignments GROUP BY student_id;",
      "SELECT * FROM assignments JOIN students ON assignments.student_id = students.id;",
      "SELECT * FROM assignments LEFT JOIN students ON assignments.student_id = students.id;",
      "SELECT * FROM assignments RIGHT JOIN students ON assignments.student_id = students.id;",
      "SELECT * FROM assignments INNER JOIN students ON assignments.student_id = students.id;",
      "SELECT * FROM assignments FULL JOIN students ON assignments.student_id = students.id;",
      "SELECT * FROM assignments WHERE assignment_name IN ('Math Assignment', 'Science Assignment', 'History Assignment');",
      "SELECT COUNT(*) AS total_assignments FROM assignments WHERE assignment_name LIKE 'Reading Assignment%';",
      "SELECT * FROM assignments WHERE assignment_name = 'Programming Project' AND feedback IS NULL;",
      "SELECT * FROM assignments WHERE assignment_name = 'Final Exam' AND feedback IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM grades WHERE student_id = 1;",
      "SELECT assignment_id, grade FROM grades WHERE grade >= 90;",
      "SELECT * FROM assignments WHERE due_date < CURRENT_DATE;",
      "SELECT assignment_id, assignment_name, due_date FROM assignments WHERE assignment_id = 5;",
      "SELECT * FROM grades WHERE student_id = 2 AND assignment_id = 3;",
      "SELECT AVG(grade) FROM grades WHERE assignment_id = 4;",
      "SELECT MAX(grade) FROM grades WHERE student_id = 1;",
      "SELECT student_id, MAX(grade) AS best_grade FROM grades GROUP BY student_id;",
      "SELECT COUNT(*) AS total_assignments FROM assignments;",
      "SELECT assignment_name, COUNT(student_id) AS total_students FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id GROUP BY assignment_name;",
      "SELECT student_id, AVG(grade) AS average_grade FROM grades GROUP BY student_id;",
      "SELECT assignment_id, assignment_name, COUNT(*) AS total_grades FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id GROUP BY assignment_id, assignment_name;",
      "SELECT * FROM grades WHERE grade BETWEEN 80 AND 90;",
      "SELECT student_id, SUM(grade) AS total_grade FROM grades GROUP BY student_id;",
      "SELECT assignment_name, AVG(grade) AS average_grade FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id GROUP BY assignment_name;",
      "SELECT assignment_id, COUNT(DISTINCT student_id) AS unique_students FROM grades GROUP BY assignment_id;",
      "SELECT student_id, MAX(grade) FROM grades GROUP BY student_id HAVING MAX(grade) > 95;",
      "SELECT * FROM grades WHERE feedback IS NULL;",
      "SELECT assignment_id, assignment_name, due_date FROM assignments WHERE due_date > '2022-01-15';",
      "SELECT student_id, COUNT(DISTINCT assignment_id) AS total_assignments FROM grades;",
      "SELECT * FROM grades WHERE grade > 90",
      "SELECT assignment_id, grade FROM grades ORDER BY grade DESC LIMIT 5",
      "SELECT AVG(grade) AS average_grade FROM grades GROUP BY student_id",
      "SELECT assignment_name, due_date FROM assignments WHERE due_date > '2022-01-01'",
      "SELECT * FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id",
      "SELECT assignment_name, AVG(grade) AS average_grade FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id GROUP BY assignment_name",
      "SELECT assignment_name, due_date, COUNT(*) AS total_assignments FROM assignments JOIN grades ON assignments.assignment_id = grades.assignment_id GROUP BY assignment_name",
      "SELECT assignment_name, COUNT(*) AS total_students FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id GROUP BY assignment_name",
      "SELECT assignment_name, AVG(grade) AS average_grade FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id WHERE grade > 80 GROUP BY assignment_name",
      "SELECT assignment_name, MAX(grade) AS highest_grade FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id GROUP BY assignment_name",
      "SELECT assignment_name, MIN(grade) AS lowest_grade FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id GROUP BY assignment_name",
      "SELECT assignment_name, feedback FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id WHERE grade < 70",
      "SELECT assignment_name, grade FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id WHERE due_date < '2022-03-01'",
      "SELECT assignment_name, COUNT(*) AS total_assignments, AVG(grade) AS average_grade FROM grades JOIN assignments ON grades.assignment_id = assignments.assignment_id WHERE grade > 85 GROUP BY assignment_name",
      "SELECT assignment_name, AVG(grade) AS average_grade FROM assignments LEFT JOIN grades ON assignments.assignment_id = grades.assignment_id GROUP BY assignment_name",
      "SELECT assignment_name, due_date FROM assignments LEFT JOIN grades ON assignments.assignment_id = grades.assignment_id WHERE grade IS NULL",
      "SELECT assignment_name, COUNT(*) AS total_assignments FROM assignments LEFT JOIN grades ON assignments.assignment_id = grades.assignment_id WHERE grade IS NULL GROUP BY assignment_name",
      "SELECT assignment_name, AVG(grade) AS average_grade FROM assignments RIGHT JOIN grades ON assignments.assignment_id = grades.assignment_id GROUP BY assignment_name",
      "SELECT assignment_name, due_date FROM assignments RIGHT JOIN grades ON assignments.assignment_id = grades.assignment_id WHERE assignment_id IS NULL",
      "SELECT assignment_name, COUNT(*) AS total_assignments FROM assignments RIGHT JOIN grades ON assignments.assignment_id = grades.assignment_id WHERE assignment_id IS NULL GROUP BY assignment_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Students;",
      "SELECT student_name, student_email FROM Students;",
      "SELECT * FROM Assignments;",
      "SELECT assignment_name, due_date FROM Assignments;",
      "SELECT * FROM Grades;",
      "SELECT student_id, assignment_id, score FROM Grades;",
      "SELECT Students.student_name, Assignments.assignment_name FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id;",
      "SELECT student_name, assignment_name, score FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id;",
      "SELECT student_name, assignment_name, due_date FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id;",
      "SELECT Students.student_name, Assignments.assignment_name, Grades.score FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id;",
      "SELECT AVG(score) AS average_score FROM Grades;",
      "SELECT MAX(score) AS highest_score FROM Grades;",
      "SELECT MIN(score) AS lowest_score FROM Grades;",
      "SELECT COUNT(*) AS total_grades FROM Grades;",
      "SELECT student_name, COUNT(*) AS total_grades FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_name;",
      "SELECT assignment_name, COUNT(*) AS total_assignments FROM Assignments JOIN Grades ON Assignments.assignment_id = Grades.assignment_id GROUP BY assignment_name;",
      "SELECT student_name, AVG(score) AS average_score FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
      "SELECT assignment_name, MAX(score) AS highest_score FROM Assignments JOIN Grades ON Assignments.assignment_id = Grades.assignment_id GROUP BY assignment_name;",
      "SELECT student_name, SUM(score) AS total_score FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
      "SELECT assignment_name, MIN(score) AS lowest_score FROM Assignments JOIN Grades ON Assignments.assignment_id = Grades.assignment_id GROUP BY assignment_name;",
      "SELECT * FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id",
      "SELECT student_name, assignment_name FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id",
      "SELECT student_name, score FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id WHERE score > 80",
      "SELECT student_name, assignment_name, due_date FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE due_date >= '2022-12-31'",
      "SELECT student_name, assignment_name, score FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE score < 60",
      "SELECT student_name, feedback FROM Students JOIN Grades ON Students.student_id = Grades.student_id WHERE feedback IS NOT NULL",
      "SELECT student_name, assignment_name, score, feedback FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE feedback LIKE '%improve%'",
      "SELECT student_name, assignment_name, due_date, score FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE due_date BETWEEN '2022-06-01' AND '2022-12-31'",
      "SELECT COUNT(*) FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id",
      "SELECT AVG(score) FROM Grades",
      "SELECT student_name, MAX(score) FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name",
      "SELECT assignment_name, MIN(score) FROM Assignments JOIN Grades ON Assignments.assignment_id = Grades.assignment_id GROUP BY assignment_name",
      "SELECT student_name, AVG(score) FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name HAVING AVG(score) > 70",
      "SELECT assignment_name, AVG(score) FROM Assignments JOIN Grades ON Assignments.assignment_id = Grades.assignment_id GROUP BY assignment_id HAVING AVG(score) < 70",
      "SELECT student_name, COUNT(*) FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name HAVING COUNT(*) >= 2",
      "SELECT student_name, SUM(score) FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name HAVING SUM(score) >= 200",
      "SELECT assignment_name, AVG(score) FROM Assignments JOIN Grades ON Assignments.assignment_id = Grades.assignment_id WHERE grade_id IN (1, 2, 3) GROUP BY assignment_name",
      "SELECT student_name, MAX(score) FROM Students JOIN Grades ON Students.student_id = Grades.student_id WHERE assignment_id IN (1, 2, 3) GROUP BY student_name",
      "SELECT student_name, COUNT(*) FROM Students JOIN Grades ON Students.student_id = Grades.student_id WHERE assignment_id IN (4, 5) GROUP BY student_name ORDER BY COUNT(*) DESC LIMIT 3",
      "SELECT student_name, SUM(score) FROM Students JOIN Grades ON Students.student_id = Grades.student_id WHERE grade_id NOT IN (7, 8) GROUP BY student_name HAVING SUM(score) < 150"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Assignments",
      "SELECT assignment_id, assignment_name, grade FROM Assignments",
      "SELECT * FROM Students",
      "SELECT student_id, student_name, class_id FROM Students",
      "SELECT * FROM Classes",
      "SELECT class_id, class_name, teacher_name FROM Classes",
      "SELECT * FROM Grades",
      "SELECT student_id, assignment_id, grade FROM Grades",
      "SELECT assignment_id, student_id, grade FROM Grades",
      "SELECT student_name, email FROM Students",
      "SELECT assignment_name, grade FROM Assignments",
      "SELECT class_name, teacher_name FROM Classes",
      "SELECT student_id, student_name, email, class_id FROM Students",
      "SELECT assignment_id, assignment_name, grade, feedback FROM Assignments",
      "SELECT student_name, class_name, teacher_name FROM Students JOIN Classes ON Students.class_id = Classes.class_id",
      "SELECT student_name, assignment_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Assignments.assignment_id = Grades.assignment_id",
      "SELECT s.student_name, c.class_name, a.assignment_name, g.grade FROM Students s JOIN Classes c ON s.class_id = c.class_id JOIN Grades g ON s.student_id = g.student_id JOIN Assignments a ON g.assignment_id = a.assignment_id",
      "SELECT student_id, MAX(grade) FROM Grades GROUP BY student_id",
      "SELECT class_name, AVG(grade) FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Classes ON Students.class_id = Classes.class_id GROUP BY class_id",
      "SELECT teacher_name, AVG(grade) FROM Students JOIN Classes ON Students.class_id = Classes.class_id JOIN Grades ON Students.student_id = Grades.student_id GROUP BY teacher_name",
      "SELECT * FROM Assignments;",
      "SELECT assignment_name, grade FROM Assignments WHERE grade >= 90;",
      "SELECT * FROM Students WHERE class_id = 101;",
      "SELECT student_name, email FROM Students WHERE student_id IN (SELECT student_id FROM Grades WHERE grade < 70);",
      "SELECT class_name, teacher_name FROM Classes;",
      "SELECT Students.student_name, Assignments.assignment_name, Grades.grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id;",
      "SELECT student_name, assignment_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE grade >= 80;",
      "SELECT student_name, email, class_name FROM Students JOIN Classes ON Students.class_id = Classes.class_id;",
      "SELECT class_name, avg(grade) AS average_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id JOIN Classes ON Students.class_id = Classes.class_id GROUP BY class_name;",
      "SELECT class_name, count(*) AS num_students FROM Students JOIN Classes ON Students.class_id = Classes.class_id GROUP BY class_name HAVING num_students > 25;",
      "SELECT student_id, SUM(grade) AS total_grade FROM Grades GROUP BY student_id ORDER BY total_grade DESC LIMIT 10;",
      "SELECT student_name, count(*) AS num_assignments FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name HAVING num_assignments < 5;",
      "SELECT teacher_name, avg(grade) AS average_grade FROM Classes JOIN Students ON Classes.class_id = Students.class_id JOIN Grades ON Students.student_id = Grades.student_id GROUP BY teacher_name;",
      "SELECT student_name, MAX(grade) AS highest_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
      "SELECT * FROM Assignments WHERE assignment_name LIKE '%Project%';",
      "SELECT student_name, email FROM Students WHERE email LIKE '%@example.com';",
      "SELECT class_name, teacher_name FROM Classes WHERE class_name = 'Math';",
      "SELECT student_name, assignment_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE student_name LIKE '%John%' OR student_name LIKE '%Jane%';",
      "SELECT student_name, assignment_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE assignment_name = 'Final Exam';",
      "SELECT student_name, assignment_name, feedback FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Assignments ON Grades.assignment_id = Assignments.assignment_id WHERE feedback IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Grades;",
      "SELECT student_id, grade FROM Grades WHERE assignment_id = 1;",
      "SELECT MAX(max_score) FROM Assignments;",
      "SELECT first_name, last_name FROM Students WHERE student_id = 1;",
      "SELECT course_id, course_name FROM Courses;",
      "SELECT * FROM Classes WHERE professor_id = 1;",
      "SELECT course_name, course_code FROM Courses WHERE course_id = 1;",
      "SELECT assignment_name, max_score FROM Assignments WHERE assignment_id = 1;",
      "SELECT grade FROM Grades WHERE grade_id = 1;",
      "SELECT assignment_id, assignment_name FROM Assignments;",
      "SELECT grade, feedback FROM Grades WHERE student_id = 1;",
      "SELECT first_name, last_name FROM Students;",
      "SELECT course_id, course_code FROM Courses WHERE course_name = 'Math';",
      "SELECT assignment_id, max_score FROM Assignments;",
      "SELECT * FROM Students WHERE first_name = 'John';",
      "SELECT course_name, course_code FROM Courses WHERE course_code = 'CS101';",
      "SELECT assignment_name, max_score FROM Assignments;",
      "SELECT grade, feedback FROM Grades WHERE student_id = 2;",
      "SELECT first_name, last_name FROM Students WHERE last_name = 'Doe';",
      "SELECT course_name, course_code FROM Courses WHERE course_id = 2;",
      "SELECT * FROM Grades",
      "SELECT grade_id, student_id, grade FROM Grades",
      "SELECT student_id, assignment_id, grade FROM Grades WHERE grade >= 'A'",
      "SELECT first_name, last_name FROM Students",
      "SELECT assignment_id, assignment_name, max_score FROM Assignments",
      "SELECT course_id, course_name, course_code FROM Courses",
      "SELECT class_id, course_id, professor_id FROM Classes",
      "SELECT first_name, last_name, assignment_name, grade, feedback FROM Students as S JOIN Grades as G ON S.student_id = G.student_id JOIN Assignments as A ON G.assignment_id = A.assignment_id",
      "SELECT course_name, assignment_name, max_score FROM Courses as C JOIN Assignments as A ON C.course_id = A.assignment_id",
      "SELECT course_name, assignment_name, professor_id FROM Courses as C JOIN Classes as Cl ON C.course_id = Cl.course_id",
      "SELECT grade_id, student_id, assignment_name, grade FROM Grades as G JOIN Assignments as A ON G.assignment_id = A.assignment_id",
      "SELECT assignment_name, first_name, last_name, grade FROM Assignments as A JOIN Grades as G ON A.assignment_id = G.assignment_id JOIN Students as S ON G.student_id = S.student_id",
      "SELECT course_name, professor_id FROM Courses as C JOIN Classes as Cl ON C.course_id = Cl.course_id",
      "SELECT first_name, last_name, grade, feedback FROM Students as S JOIN Grades as G ON S.student_id = G.student_id",
      "SELECT student_id, grade FROM Grades WHERE grade < 'B'",
      "SELECT class_id, course_name, first_name FROM Classes as Cl JOIN Courses as C ON Cl.course_id = C.course_id JOIN Students as S ON C.course_code = 'CS101'",
      "SELECT course_name, grade FROM Courses as C JOIN Classes as Cl ON C.course_id = Cl.course_id JOIN Grades as G ON Cl.class_id = G.class_id",
      "SELECT assignment_name, max_score FROM Assignments WHERE max_score >= 80",
      "SELECT course_name, assignment_name, grade FROM Courses as C JOIN Assignments as A ON C.course_id = A.assignment_id JOIN Grades as G ON A.assignment_id = G.assignment_id",
      "SELECT course_name, first_name, last_name FROM Courses as C JOIN Classes as Cl ON C.course_id = Cl.course_id JOIN Students as S ON Cl.professor_id = S.student_id"
    ]
  }
]