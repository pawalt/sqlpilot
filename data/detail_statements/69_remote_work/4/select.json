[
  {
    "statements": [
      "SELECT * FROM employee_work_logs WHERE employee_id = 1;",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE log_date >= '2022-01-01';",
      "SELECT * FROM employee_work_logs WHERE work_hours > 8;",
      "SELECT AVG(work_hours) AS avg_work_hours FROM employee_work_logs;",
      "SELECT employee_id, SUM(work_hours) AS total_work_hours FROM employee_work_logs GROUP BY employee_id;",
      "SELECT MIN(work_hours) AS min_work_hours, MAX(work_hours) AS max_work_hours FROM employee_work_logs;",
      "SELECT * FROM employee_work_logs WHERE log_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT DISTINCT employee_id FROM employee_work_logs;",
      "SELECT * FROM employee_work_logs WHERE employee_id IN (1, 2, 3);",
      "SELECT COUNT(*) AS total_logs FROM employee_work_logs;",
      "SELECT * FROM employee_work_logs WHERE log_date = CURRENT_DATE;",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE work_hours < 4;",
      "SELECT * FROM employee_work_logs ORDER BY log_date DESC;",
      "SELECT employee_id, HOUR(log_start_time) AS start_hour FROM employee_work_logs;",
      "SELECT * FROM employee_work_logs WHERE log_start_time < '08:00:00';",
      "SELECT employee_id, TIMESTAMPDIFF(HOUR, log_start_time, log_end_time) AS hours_worked FROM employee_work_logs;",
      "SELECT * FROM employee_work_logs WHERE DAYOFWEEK(log_date) = 2;",
      "SELECT * FROM employee_work_logs WHERE log_date = '2022-02-14' AND work_hours >= 8;",
      "SELECT employee_id, log_date FROM employee_work_logs WHERE MONTH(log_date) = 3;",
      "SELECT * FROM employee_work_logs WHERE log_date = '2022-04-01' AND work_hours < 5;",
      "SELECT * FROM employee_work_logs WHERE employee_id = 1001 AND log_date = '2022-01-01'",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE log_date BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT AVG(work_hours) as average_hours FROM employee_work_logs GROUP BY employee_id",
      "SELECT employee_id, SUM(work_hours) as total_hours FROM employee_work_logs GROUP BY employee_id",
      "SELECT COUNT(*) as total_entries FROM employee_work_logs WHERE log_date >= '2022-01-01'",
      "SELECT * FROM employee_work_logs WHERE work_hours > 8",
      "SELECT * FROM employee_work_logs ORDER BY log_date DESC",
      "SELECT employee_id, log_start_time, log_end_time FROM employee_work_logs WHERE log_start_time < '08:00:00'",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE work_hours < 4",
      "SELECT * FROM employee_work_logs WHERE log_date = '2022-02-01' AND work_hours < 3",
      "SELECT DISTINCT employee_id FROM employee_work_logs",
      "SELECT AVG(work_hours) as average_hours FROM employee_work_logs WHERE employee_id = 1002",
      "SELECT employee_id, log_date, log_start_time, log_end_time, work_hours FROM employee_work_logs WHERE employee_id = 1003 AND log_date = '2022-03-01'",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE log_date LIKE '%-01'",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE employee_id IN (1001, 1002)",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE MONTH(log_date) = 2",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE YEAR(log_date) = 2022",
      "SELECT * FROM employee_work_logs WHERE TIME(log_start_time) < '12:00:00'",
      "SELECT employee_id, log_date, work_hours FROM employee_work_logs WHERE work_hours >= 6",
      "SELECT employee_id, log_start_time, log_end_time FROM employee_work_logs WHERE log_start_time > '16:00:00'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM EmployeeWorkLogs;",
      "SELECT log_id, employee_id FROM EmployeeWorkLogs;",
      "SELECT employee_id, log_date FROM EmployeeWorkLogs WHERE hours_worked > 8;",
      "SELECT * FROM Timesheets;",
      "SELECT timesheet_id, start_date, end_date FROM Timesheets;",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT employee_id, SUM(hours_worked) FROM EmployeeWorkLogs GROUP BY employee_id;",
      "SELECT * FROM Timesheets WHERE total_hours > 40;",
      "SELECT employee_id, AVG(hours_worked) FROM EmployeeWorkLogs GROUP BY employee_id HAVING AVG(hours_worked) < 6;",
      "SELECT start_date, end_date FROM Timesheets WHERE employee_id = 101;",
      "SELECT log_id, employee_id, log_date FROM EmployeeWorkLogs WHERE employee_id = 202;",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date >= '2022-01-01' ORDER BY log_date DESC;",
      "SELECT employee_id, COUNT(log_id) FROM EmployeeWorkLogs GROUP BY employee_id HAVING COUNT(log_id) > 5;",
      "SELECT SUM(total_hours) FROM Timesheets WHERE employee_id = 303 AND end_date > '2022-06-30';",
      "SELECT * FROM Timesheets WHERE start_date < '2023-01-01' ORDER BY start_date ASC;",
      "SELECT employee_id, MAX(hours_worked) FROM EmployeeWorkLogs GROUP BY employee_id;",
      "SELECT AVG(total_hours) FROM Timesheets WHERE employee_id = 404 AND start_date < '2023-12-31';",
      "SELECT * FROM Timesheets WHERE employee_id = 505 AND end_date < '2023-06-30';",
      "SELECT log_id, employee_id, log_date, hours_worked FROM EmployeeWorkLogs WHERE log_date = '2023-03-15';",
      "SELECT employee_id, MIN(hours_worked) FROM EmployeeWorkLogs GROUP BY employee_id;",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date = '2022-01-01';",
      "SELECT log_id, employee_id, log_date FROM EmployeeWorkLogs WHERE hours_worked > 8;",
      "SELECT employee_id, SUM(hours_worked) AS total_hours_worked FROM EmployeeWorkLogs GROUP BY employee_id;",
      "SELECT * FROM EmployeeWorkLogs JOIN Timesheets ON EmployeeWorkLogs.employee_id = Timesheets.employee_id;",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT employee_id, AVG(hours_worked) AS avg_hours_worked FROM EmployeeWorkLogs GROUP BY employee_id HAVING AVG(hours_worked) > 6;",
      "SELECT * FROM EmployeeWorkLogs ORDER BY log_date DESC;",
      "SELECT * FROM EmployeeWorkLogs WHERE employee_id = 123 AND log_date >= '2022-01-01' AND hours_worked < 10;",
      "SELECT COUNT(*) FROM EmployeeWorkLogs WHERE hours_worked > 8;",
      "SELECT * FROM Timesheets WHERE start_date <= '2022-01-15' AND end_date >= '2022-01-15';",
      "SELECT employee_id, MAX(hours_worked) AS max_hours_worked FROM EmployeeWorkLogs GROUP BY employee_id;",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date = (SELECT MAX(log_date) FROM EmployeeWorkLogs);",
      "SELECT * FROM Timesheets WHERE total_hours > 40;",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date = '2022-01-01' AND hours_worked NOT BETWEEN 5 AND 10;",
      "SELECT COUNT(DISTINCT employee_id) FROM EmployeeWorkLogs;",
      "SELECT AVG(total_hours) AS avg_total_hours FROM Timesheets;",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date = '2022-01-01' OR log_date = '2022-01-15';",
      "SELECT employee_id, MIN(hours_worked) AS min_hours_worked FROM EmployeeWorkLogs GROUP BY employee_id;",
      "SELECT * FROM EmployeeWorkLogs WHERE employee_id IN (SELECT employee_id FROM Timesheets WHERE total_hours > 40);",
      "SELECT * FROM EmployeeWorkLogs WHERE log_date = '2022-01-01' AND hours_worked > (SELECT AVG(hours_worked) FROM EmployeeWorkLogs);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employee_work_logs;",
      "SELECT employee_id, log_date, hours_worked FROM employee_work_logs;",
      "SELECT log_id, task_description FROM employee_work_logs;",
      "SELECT * FROM employee_timesheets;",
      "SELECT employee_id, start_date, end_date FROM employee_timesheets;",
      "SELECT timesheet_id, total_hours FROM employee_timesheets;",
      "SELECT * FROM employee_productivity;",
      "SELECT employee_id, productivity_rating FROM employee_productivity;",
      "SELECT productivity_id, notes FROM employee_productivity;",
      "SELECT log_date, hours_worked FROM employee_work_logs WHERE employee_id = 1;",
      "SELECT start_date, end_date FROM employee_timesheets WHERE employee_id = 2;",
      "SELECT productivity_rating, notes FROM employee_productivity WHERE employee_id = 3;",
      "SELECT * FROM employee_work_logs WHERE hours_worked > 8;",
      "SELECT * FROM employee_timesheets WHERE total_hours < 40;",
      "SELECT * FROM employee_productivity WHERE productivity_rating > 5;",
      "SELECT employee_id, SUM(hours_worked) AS total_hours FROM employee_work_logs GROUP BY employee_id;",
      "SELECT employee_id, AVG(hours_worked) AS avg_hours FROM employee_work_logs GROUP BY employee_id;",
      "SELECT employee_id, COUNT(log_id) AS num_logs FROM employee_work_logs GROUP BY employee_id;",
      "SELECT employee_id, start_date, end_date, DATEDIFF(end_date, start_date) AS days_worked FROM employee_timesheets;",
      "SELECT * FROM employee_work_logs WHERE employee_id = 1 AND log_date BETWEEN '2021-01-01' AND '2021-01-31'",
      "SELECT employee_id, SUM(hours_worked) AS total_hours_worked FROM employee_work_logs GROUP BY employee_id",
      "SELECT employee_id, COUNT(*) AS total_logs FROM employee_work_logs GROUP BY employee_id HAVING total_logs > 10",
      "SELECT e.employee_id, e.log_date, t.total_hours FROM employee_work_logs e JOIN employee_timesheets t ON e.employee_id = t.employee_id",
      "SELECT e.employee_id, e.log_date, t.total_hours FROM employee_work_logs e LEFT JOIN employee_timesheets t ON e.employee_id = t.employee_id",
      "SELECT employee_id, AVG(hours_worked) AS average_hours_worked FROM employee_work_logs GROUP BY employee_id",
      "SELECT e.employee_id, e.log_date, p.productivity_rating FROM employee_work_logs e JOIN employee_productivity p ON e.employee_id = p.employee_id",
      "SELECT employee_id, MAX(hours_worked) AS max_hours_worked FROM employee_work_logs GROUP BY employee_id",
      "SELECT employee_id, MIN(hours_worked) AS min_hours_worked FROM employee_work_logs GROUP BY employee_id",
      "SELECT employee_id, task_description, COUNT(*) AS total_logs FROM employee_work_logs GROUP BY employee_id, task_description",
      "SELECT employee_id, AVG(hours_worked) AS average_hours_worked FROM employee_work_logs WHERE log_date BETWEEN '2021-01-01' AND '2021-01-31' GROUP BY employee_id",
      "SELECT employee_id, MAX(hours_worked) AS max_hours_worked FROM employee_work_logs WHERE log_date BETWEEN '2021-01-01' AND '2021-01-31' GROUP BY employee_id",
      "SELECT e.employee_id, e.log_date, t.total_hours FROM employee_work_logs e JOIN employee_timesheets t ON e.employee_id = t.employee_id WHERE t.total_hours > 40",
      "SELECT e.employee_id, e.log_date, t.total_hours FROM employee_work_logs e JOIN employee_timesheets t ON e.employee_id = t.employee_id ORDER BY t.total_hours DESC",
      "SELECT employee_id, COUNT(*) AS total_logs FROM employee_work_logs WHERE task_description LIKE '%meeting%' GROUP BY employee_id",
      "SELECT employee_id, task_description, COUNT(*) AS total_logs FROM employee_work_logs WHERE task_description LIKE '%project%' GROUP BY employee_id, task_description",
      "SELECT employee_id, AVG(hours_worked) AS average_hours_worked FROM employee_work_logs WHERE employee_id IN (SELECT employee_id FROM employee_productivity WHERE productivity_rating > 8) GROUP BY employee_id",
      "SELECT e.employee_id, e.log_date, p.notes FROM employee_work_logs e JOIN employee_productivity p ON e.employee_id = p.employee_id WHERE p.productivity_rating < 5",
      "SELECT employee_id, MAX(hours_worked) AS max_hours_worked FROM employee_work_logs GROUP BY employee_id HAVING max_hours_worked > 8",
      "SELECT e.employee_id, e.log_date, t.total_hours FROM employee_work_logs e JOIN employee_timesheets t ON e.employee_id = t.employee_id GROUP BY e.employee_id HAVING SUM(t.total_hours) > 50"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employee;",
      "SELECT employee_id, employee_name, department FROM employee;",
      "SELECT * FROM work_log;",
      "SELECT log_id, employee_id, log_date FROM work_log;",
      "SELECT * FROM timesheet;",
      "SELECT timesheet_id, employee_id, week_start_date FROM timesheet;",
      "SELECT * FROM project;",
      "SELECT project_id, project_name, deadline FROM project;",
      "SELECT employee_id, employee_name FROM employee WHERE department = 'IT';",
      "SELECT log_id, log_date FROM work_log WHERE hours_worked > 8;",
      "SELECT timesheet_id, total_hours FROM timesheet WHERE total_hours >= 40;",
      "SELECT project_id, project_name FROM project WHERE deadline < DATE '2022-01-01';",
      "SELECT employee_name, department, join_date FROM employee WHERE employee_id = 1;",
      "SELECT description FROM work_log WHERE log_id = 10;",
      "SELECT total_hours FROM timesheet WHERE timesheet_id = 5;",
      "SELECT project_name, deadline FROM project WHERE project_id = 3;",
      "SELECT * FROM employee ORDER BY department;",
      "SELECT * FROM work_log ORDER BY log_date DESC;",
      "SELECT * FROM timesheet ORDER BY total_hours DESC;",
      "SELECT * FROM project ORDER BY deadline;",
      "SELECT MAX(total_hours) FROM timesheet;",
      "SELECT * FROM employee WHERE department='Sales';",
      "SELECT * FROM employee WHERE join_date > '2021-01-01';",
      "SELECT e.employee_name, e.department, w.log_date, w.hours_worked FROM employee e JOIN work_log w ON e.employee_id = w.employee_id;",
      "SELECT e.employee_name, t.week_start_date, t.total_hours, p.project_name FROM employee e JOIN timesheet t ON e.employee_id = t.employee_id JOIN project p ON e.department = p.project_name;",
      "SELECT e.employee_name, w.log_date, t.total_hours, p.project_name FROM employee e JOIN work_log w ON e.employee_id = w.employee_id JOIN timesheet t ON e.employee_id = t.employee_id JOIN project p ON e.department = p.project_name;",
      "SELECT e.employee_name, w.log_date, t.total_hours, p.project_name FROM employee e JOIN work_log w ON e.employee_id = w.employee_id JOIN timesheet t ON e.employee_id = t.employee_id JOIN project p ON e.project_id = t.employee_id;",
      "SELECT e.employee_name, SUM(w.hours_worked) AS total_hours_worked FROM employee e JOIN work_log w ON e.employee_id = w.employee_id GROUP BY e.employee_name;",
      "SELECT e.employee_name, COUNT(t.timesheet_id) AS number_of_timesheets FROM employee e LEFT JOIN timesheet t ON e.employee_id = t.employee_id GROUP BY e.employee_name;",
      "SELECT department, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY department;",
      "SELECT department, AVG(hours_worked) AS avg_hours_worked FROM employee e JOIN work_log w ON e.employee_id = w.employee_id GROUP BY department;",
      "SELECT department, AVG(total_hours) AS avg_total_hours FROM employee e JOIN timesheet t ON e.employee_id = t.employee_id GROUP BY department;",
      "SELECT department, MAX(hours_worked) AS max_hours_worked FROM employee e JOIN work_log w ON e.employee_id = w.employee_id GROUP BY department;",
      "SELECT department, MIN(hours_worked) AS min_hours_worked FROM employee e JOIN work_log w ON e.employee_id = w.employee_id GROUP BY department;",
      "SELECT DISTINCT department FROM employee;",
      "SELECT department, AVG(total_hours) AS avg_total_hours, MAX(total_hours) AS max_total_hours, MIN(total_hours) AS min_total_hours FROM timesheet t JOIN employee e ON t.employee_id = e.employee_id GROUP BY department;",
      "SELECT department, project_name, SUM(hours_worked) AS total_hours_worked FROM employee e JOIN work_log w ON e.employee_id = w.employee_id JOIN project p ON e.department = p.project_name GROUP BY department, project_name;",
      "SELECT project_name, AVG(total_hours) AS avg_total_hours FROM project p JOIN timesheet t ON p.project_id = t.employee_id GROUP BY project_name;",
      "SELECT e.employee_name, t.week_start_date FROM employee e CROSS JOIN timesheet t;",
      "SELECT e.employee_name AS employee, w.log_date AS log_date, t.total_hours AS total_hours FROM employee e JOIN work_log w ON e.employee_id = w.employee_id JOIN timesheet t ON e.employee_id = t.employee_id;",
      "SELECT e.employee_name, w.log_date, t.total_hours, p.project_name FROM employee e JOIN work_log w ON e.employee_id = w.employee_id JOIN timesheet t ON e.employee_id = t.employee_id JOIN project p ON e.department = p.project_name ORDER BY e.employee_name ASC, w.log_date DESC;",
      "SELECT e.employee_name, w.log_date, t.total_hours, p.project_name FROM employee e JOIN work_log w ON e.employee_id = w.employee_id JOIN timesheet t ON e.employee_id = t.employee_id JOIN project p ON e.department = p.project_name LIMIT 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employee_details;",
      "SELECT employee_name, department FROM employee_details;",
      "SELECT * FROM work_logs;",
      "SELECT log_date, hours_worked FROM work_logs;",
      "SELECT * FROM timesheets;",
      "SELECT start_date, end_date, total_hours FROM timesheets;",
      "SELECT * FROM projects;",
      "SELECT project_name FROM projects;",
      "SELECT * FROM employee_projects;",
      "SELECT employee_id, project_id FROM employee_projects;",
      "SELECT employee_name, project_name FROM employee_details JOIN employee_projects ON employee_details.employee_id = employee_projects.employee_id JOIN projects ON employee_projects.project_id = projects.project_id;",
      "SELECT employee_name, project_name FROM employee_details JOIN employee_projects ON employee_details.employee_id = employee_projects.employee_id JOIN projects ON employee_projects.project_id = projects.project_id WHERE employee_details.department = 'IT';",
      "SELECT COUNT(*) as total_projects FROM projects;",
      "SELECT AVG(hours_worked) as average_hours_worked FROM work_logs;",
      "SELECT employee_id, SUM(total_hours) as total_hours_worked FROM timesheets GROUP BY employee_id;",
      "SELECT project_id, COUNT(employee_id) as total_employees_assigned FROM employee_projects GROUP BY project_id;",
      "SELECT employee_id, department, SUM(total_hours) as total_hours_worked FROM employee_details JOIN timesheets ON employee_details.employee_id = timesheets.employee_id GROUP BY employee_id;",
      "SELECT project_id, project_name, COUNT(employee_id) as total_employees_assigned FROM projects LEFT JOIN employee_projects ON projects.project_id = employee_projects.project_id GROUP BY project_id;",
      "SELECT employee_name, start_date, end_date FROM employee_details JOIN timesheets ON employee_details.employee_id = timesheets.employee_id;",
      "SELECT employee_id, project_id, start_date, end_date FROM employee_projects JOIN timesheets ON employee_projects.employee_id = timesheets.employee_id AND employee_projects.project_id = timesheets.project_id;",
      "SELECT * FROM employee_details;",
      "SELECT employee_id, employee_name, department FROM employee_details WHERE employee_id = 1;",
      "SELECT e.employee_name, w.log_date, w.hours_worked FROM employee_details e JOIN work_logs w ON e.employee_id = w.employee_id;",
      "SELECT e.employee_name, w.log_date, w.hours_worked FROM employee_details e JOIN work_logs w ON e.employee_id = w.employee_id WHERE e.employee_id = 1;",
      "SELECT e.employee_name, t.total_hours FROM employee_details e JOIN timesheets t ON e.employee_id = t.employee_id ORDER BY t.total_hours DESC;",
      "SELECT e.employee_name, t.total_hours FROM employee_details e JOIN timesheets t ON e.employee_id = t.employee_id ORDER BY t.total_hours ASC;",
      "SELECT e.employee_name, w.log_date, w.hours_worked FROM employee_details e JOIN work_logs w ON e.employee_id = w.employee_id WHERE w.hours_worked > 8;",
      "SELECT e.employee_name, t.start_date, t.end_date, t.total_hours FROM employee_details e JOIN timesheets t ON e.employee_id = t.employee_id WHERE t.total_hours > 40;",
      "SELECT e.employee_name, p.project_name FROM employee_details e JOIN employee_projects ep ON e.employee_id = ep.employee_id JOIN projects p ON ep.project_id = p.project_id;",
      "SELECT e.employee_name, p.project_name FROM employee_details e JOIN employee_projects ep ON e.employee_id = ep.employee_id JOIN projects p ON ep.project_id = p.project_id WHERE e.employee_id = 1;",
      "SELECT e.employee_name, p.project_name FROM employee_details e LEFT JOIN employee_projects ep ON e.employee_id = ep.employee_id LEFT JOIN projects p ON ep.project_id = p.project_id;",
      "SELECT e.employee_name, SUM(w.hours_worked) AS total_hours_worked FROM employee_details e JOIN work_logs w ON e.employee_id = w.employee_id GROUP BY e.employee_name;",
      "SELECT e.employee_name, COUNT(t.timesheet_id) AS num_timesheets FROM employee_details e JOIN timesheets t ON e.employee_id = t.employee_id GROUP BY e.employee_name;",
      "SELECT e.employee_name, MAX(t.total_hours) AS max_hours FROM employee_details e JOIN timesheets t ON e.employee_id = t.employee_id GROUP BY e.employee_name;",
      "SELECT e.employee_id, e.employee_name, p.project_id, p.project_name FROM employee_details e CROSS JOIN projects p;",
      "SELECT e.employee_name, p.project_name FROM employee_details e JOIN employee_projects ep ON e.employee_id = ep.employee_id JOIN projects p ON ep.project_id = p.project_id WHERE p.project_name LIKE '%Project%';",
      "SELECT e.employee_name, t.start_date, t.end_date FROM employee_details e JOIN timesheets t ON e.employee_id = t.employee_id WHERE t.start_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT e.employee_name, p.project_name, COUNT(ep.employee_id) AS num_employees FROM employee_details e JOIN employee_projects ep ON e.employee_id = ep.employee_id JOIN projects p ON ep.project_id = p.project_id GROUP BY p.project_name;",
      "SELECT e.employee_name, w.log_date, w.hours_worked FROM employee_details e JOIN work_logs w ON e.employee_id = w.employee_id ORDER BY w.log_date DESC;",
      "SELECT e.employee_name, t.start_date, t.end_date, t.total_hours FROM employee_details e JOIN timesheets t ON e.employee_id = t.employee_id GROUP BY e.employee_name HAVING SUM(t.total_hours) > 100;"
    ]
  }
]