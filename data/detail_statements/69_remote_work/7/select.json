[
  {
    "statements": [
      "SELECT * FROM equipment_inventory;",
      "SELECT equipment_name, quantity FROM equipment_inventory;",
      "SELECT equipment_name, equipment_type, quantity FROM equipment_inventory WHERE quantity > 0;",
      "SELECT * FROM equipment_inventory WHERE location = 'Room A';",
      "SELECT equipment_name, quantity FROM equipment_inventory WHERE location = 'Warehouse';",
      "SELECT * FROM equipment_inventory WHERE equipment_type = 'Laptop';",
      "SELECT equipment_name, location FROM equipment_inventory WHERE allocated_to IS NULL;",
      "SELECT equipment_name, allocated_to FROM equipment_inventory WHERE allocated_to = 'John Doe';",
      "SELECT equipment_name, quantity FROM equipment_inventory ORDER BY quantity DESC;",
      "SELECT equipment_name, location FROM equipment_inventory WHERE equipment_type = 'Printer' AND quantity > 0;",
      "SELECT equipment_name, equipment_type, location FROM equipment_inventory WHERE quantity < 5;",
      "SELECT equipment_name, allocated_to FROM equipment_inventory WHERE equipment_type = 'Desktop';",
      "SELECT equipment_name, equipment_type, quantity FROM equipment_inventory WHERE allocated_to IS NOT NULL;",
      "SELECT equipment_name, quantity FROM equipment_inventory WHERE location <> 'Office';",
      "SELECT * FROM equipment_inventory WHERE location = 'Server Room' AND allocated_to = 'Jane Doe';",
      "SELECT COUNT(*) AS total_count FROM equipment_inventory;",
      "SELECT equipment_type, COUNT(*) AS type_count FROM equipment_inventory GROUP BY equipment_type;",
      "SELECT SUM(quantity) AS total_quantity FROM equipment_inventory;",
      "SELECT AVG(quantity) AS avg_quantity FROM equipment_inventory;",
      "SELECT DISTINCT location FROM equipment_inventory;",
      "SELECT * FROM equipment_inventory WHERE quantity > 10",
      "SELECT equipment_id, equipment_name FROM equipment_inventory WHERE location = 'Warehouse A'",
      "SELECT equipment_name, allocated_to FROM equipment_inventory WHERE equipment_type = 'Computer'",
      "SELECT COUNT(*) FROM equipment_inventory WHERE equipment_type IN ('Chair', 'Desk')",
      "SELECT equipment_name, location FROM equipment_inventory WHERE quantity BETWEEN 5 AND 10",
      "SELECT equipment_id, equipment_type FROM equipment_inventory WHERE allocated_to IS NULL",
      "SELECT * FROM equipment_inventory WHERE equipment_name LIKE '%Printer%'",
      "SELECT SUM(quantity) FROM equipment_inventory WHERE location = 'Storage Room'",
      "SELECT equipment_name, allocated_to FROM equipment_inventory WHERE quantity < 5 AND location <> 'Office'",
      "SELECT equipment_id, location FROM equipment_inventory ORDER BY equipment_id DESC LIMIT 5",
      "SELECT DISTINCT equipment_type FROM equipment_inventory",
      "SELECT equipment_name, COUNT(*) FROM equipment_inventory GROUP BY equipment_name HAVING COUNT(*) > 3",
      "SELECT MAX(quantity) FROM equipment_inventory WHERE equipment_type = 'Office Supplies'",
      "SELECT equipment_id, location FROM equipment_inventory WHERE allocated_to LIKE '%Tom%'",
      "SELECT * FROM equipment_inventory WHERE equipment_name = 'Laptop' OR (equipment_type = 'Computer' AND quantity <= 20)",
      "SELECT equipment_name, location FROM equipment_inventory WHERE equipment_type IN ('Printer', 'Scanner')",
      "SELECT AVG(quantity) FROM equipment_inventory",
      "SELECT equipment_id, equipment_type FROM equipment_inventory WHERE location = 'Warehouse B' ORDER BY equipment_type ASC",
      "SELECT MIN(quantity) FROM equipment_inventory WHERE equipment_name = 'Chair'",
      "SELECT equipment_id, location FROM equipment_inventory WHERE allocated_to = 'John Doe'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM equipment_inventory;",
      "SELECT equipment_id, equipment_name FROM equipment_inventory;",
      "SELECT equipment_id, quantity FROM equipment_inventory;",
      "SELECT equipment_name, location FROM equipment_inventory;",
      "SELECT equipment_id, status FROM equipment_inventory;",
      "SELECT * FROM equipment_allocations;",
      "SELECT allocation_id, equipment_id, employee_id FROM equipment_allocations;",
      "SELECT equipment_id, allocation_date, return_date FROM equipment_allocations;",
      "SELECT * FROM equipment_inventory WHERE quantity > 5;",
      "SELECT equipment_name, location FROM equipment_inventory WHERE status = 'Available';",
      "SELECT * FROM equipment_allocations WHERE return_date IS NULL;",
      "SELECT equipment_id, allocation_date FROM equipment_allocations WHERE employee_id = 123;",
      "SELECT equipment_name, quantity FROM equipment_inventory WHERE quantity < 10;",
      "SELECT equipment_id, employee_id FROM equipment_allocations WHERE allocation_date > '2022-01-01';",
      "SELECT * FROM equipment_inventory ORDER BY equipment_name ASC;",
      "SELECT equipment_name, quantity FROM equipment_inventory ORDER BY quantity DESC;",
      "SELECT equipment_id, status FROM equipment_inventory WHERE location = 'Warehouse';",
      "SELECT equipment_id, allocation_date FROM equipment_allocations WHERE return_date IS NOT NULL;",
      "SELECT equipment_name, location FROM equipment_inventory WHERE status = 'In Use';",
      "SELECT * FROM equipment_inventory WHERE quantity BETWEEN 5 AND 10;",
      "SELECT * FROM equipment_inventory WHERE equipment_name LIKE 'Computer%' AND quantity > 5;",
      "SELECT equipment_name, location FROM equipment_inventory WHERE quantity < 10 AND status = 'Available';",
      "SELECT equipment_name, location, allocation_date FROM equipment_inventory INNER JOIN equipment_allocations ON equipment_inventory.equipment_id = equipment_allocations.equipment_id WHERE allocation_date > '2022-01-01';",
      "SELECT equipment_name, location, status FROM equipment_inventory WHERE location IN ('Room A', 'Room B') AND status IN ('Available', 'Maintenance');",
      "SELECT COUNT(*) AS total_inventory FROM equipment_inventory;",
      "SELECT equipment_name, SUM(quantity) AS total_quantity FROM equipment_inventory GROUP BY equipment_name HAVING total_quantity > 20;",
      "SELECT e.equipment_name, a.employee_id, a.allocation_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE a.return_date IS NULL;",
      "SELECT equipment_name, location FROM equipment_inventory WHERE equipment_id BETWEEN 100 AND 200;",
      "SELECT equipment_name, location FROM equipment_inventory WHERE status = 'Maintenance' OR status = 'Repair';",
      "SELECT DISTINCT location FROM equipment_inventory;",
      "SELECT equipment_name, location FROM equipment_inventory WHERE quantity <= 3 ORDER BY location DESC;",
      "SELECT equipment_name, allocation_date, return_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE allocation_date >= '2022-03-01' AND return_date IS NULL;",
      "SELECT equipment_name, SUM(quantity) AS total_quantity FROM equipment_inventory WHERE location = 'Warehouse' GROUP BY equipment_name;",
      "SELECT equipment_name, allocation_date, return_date FROM equipment_inventory e LEFT JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE allocation_date IS NULL;",
      "SELECT equipment_name, location, status FROM equipment_inventory WHERE status IN ('Available', 'Maintenance') AND location NOT LIKE '%Room%';",
      "SELECT e.equipment_name, a.employee_id, a.allocation_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE a.allocation_date BETWEEN '2022-04-01' AND '2022-04-30';",
      "SELECT equipment_name, quantity, location FROM equipment_inventory WHERE quantity = (SELECT MAX(quantity) FROM equipment_inventory);",
      "SELECT equipment_name, location FROM equipment_inventory WHERE status = 'Available' UNION SELECT equipment_name, location FROM equipment_inventory WHERE status = 'Maintenance';",
      "SELECT equipment_name, allocation_date, return_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE a.return_date < CURRENT_DATE;",
      "SELECT equipment_name, location, status FROM equipment_inventory WHERE equipment_id IN (SELECT DISTINCT equipment_id FROM equipment_allocations);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM equipment_inventory;",
      "SELECT equipment_name, quantity FROM equipment_inventory;",
      "SELECT equipment_name, category, purchase_date FROM equipment_inventory;",
      "SELECT id, equipment_name, quantity, location FROM equipment_inventory;",
      "SELECT * FROM employee;",
      "SELECT name, email, department FROM employee;",
      "SELECT * FROM equipment_allocation;",
      "SELECT equipment_id, employee_id, allocation_date FROM equipment_allocation;",
      "SELECT equipment_name, employee.name, allocation_date FROM equipment_inventory JOIN employee ON equipment_allocation.employee_id = employee.id;",
      "SELECT category, employee.name, allocation_date FROM equipment_inventory JOIN employee ON equipment_allocation.employee_id = employee.id;",
      "SELECT * FROM equipment_inventory WHERE location='Warehouse';",
      "SELECT * FROM employee WHERE department='IT Department';",
      "SELECT * FROM equipment_inventory WHERE purchase_date='2022-10-15';",
      "SELECT * FROM equipment_allocation WHERE return_date IS NULL;",
      "SELECT equipment_name, quantity FROM equipment_inventory WHERE quantity > 5;",
      "SELECT equipment_name, quantity FROM equipment_inventory WHERE category='Electronics';",
      "SELECT employee.name, department, equipment_name FROM employee JOIN equipment_allocation ON employee.id = equipment_allocation.employee_id JOIN equipment_inventory ON equipment_allocation.equipment_id = equipment_inventory.id;",
      "SELECT equipment_name, allocation_date FROM equipment_inventory JOIN equipment_allocation ON equipment_inventory.id = equipment_allocation.equipment_id WHERE employee_id=1;",
      "SELECT * FROM equipment_allocation WHERE allocation_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT employee.name, equipment_name, allocation_date, return_date FROM equipment_allocation JOIN employee ON equipment_allocation.employee_id = employee.id JOIN equipment_inventory ON equipment_allocation.equipment_id = equipment_inventory.id;",
      "SELECT * FROM equipment_inventory;",
      "SELECT equipment_name, quantity, location FROM equipment_inventory WHERE category = 'Computers' AND quantity > 5;",
      "SELECT * FROM equipment_allocation JOIN employee ON equipment_allocation.employee_id = employee.id;",
      "SELECT equipment_name, allocation_date, e.name AS employee_name FROM equipment_inventory ei JOIN equipment_allocation ea ON ei.id = ea.equipment_id JOIN employee e ON ea.employee_id = e.id;",
      "SELECT DISTINCT category FROM equipment_inventory;",
      "SELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id GROUP BY e.name;",
      "SELECT equipment_name, allocation_date, e.name AS employee_name FROM equipment_inventory ei JOIN equipment_allocation ea ON ei.id = ea.equipment_id JOIN employee e ON ea.employee_id = e.id WHERE allocation_date BETWEEN '2021-01-01' AND '2021-06-30';",
      "SELECT equipment_name, allocation_date, e.name AS employee_name FROM equipment_inventory ei JOIN equipment_allocation ea ON ei.id = ea.equipment_id JOIN employee e ON ea.employee_id = e.id WHERE ei.quantity > 0;",
      "SELECT category, AVG(quantity) AS avg_quantity FROM equipment_inventory GROUP BY category;",
      "SELECT department, COUNT(DISTINCT e.id) AS total_employees FROM employee e GROUP BY department;",
      "SELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id GROUP BY e.name HAVING total_allocations > 5;",
      "SELECT category, SUM(quantity) AS total_quantity FROM equipment_inventory GROUP BY category ORDER BY total_quantity DESC;",
      "SELECT department, AVG(ea.return_date - ea.allocation_date) AS avg_allocation_duration FROM employee e JOIN equipment_allocation ea ON e.id = ea.employee_id GROUP BY department;",
      "SELECT department, category, SUM(quantity) AS total_quantity FROM equipment_inventory ei JOIN employee e ON ei.id = e.id GROUP BY department, category;",
      "SELECT * FROM equipment_inventory WHERE purchase_date < (SELECT MIN(allocation_date) FROM equipment_allocation);",
      "SELECT equipment_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN equipment_inventory ei ON ea.equipment_id = ei.id GROUP BY equipment_name ORDER BY total_allocations DESC LIMIT 5;",
      "SELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id WHERE allocation_date >= '2022-01-01' GROUP BY e.name HAVING total_allocations > 3;",
      "SELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id WHERE allocation_date >= '2022-01-01' AND allocation_date <= '2022-12-31' GROUP BY e.name HAVING total_allocations > 3;",
      "SELECT department, AVG(quantity) AS avg_quantity FROM equipment_inventory ei JOIN employee e ON ei.id = e.id GROUP BY department HAVING avg_quantity > 10;",
      "SELECT COUNT(*) AS total_allocations, SUM(quantity) AS total_quantity FROM equipment_allocation ea JOIN equipment_inventory ei ON ea.equipment_id = ei.id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM equipment_inventory;",
      "SELECT equipment_id, equipment_name FROM equipment_inventory;",
      "SELECT * FROM employee;",
      "SELECT name, role FROM employee;",
      "SELECT * FROM allocation;",
      "SELECT equipment_id, employee_id, allocation_date FROM allocation;",
      "SELECT * FROM department;",
      "SELECT department_name FROM department;",
      "SELECT equipment_id, equipment_name, quantity, location FROM equipment_inventory WHERE quantity > 0;",
      "SELECT equipment_id, equipment_name, quantity, location FROM equipment_inventory WHERE location='Warehouse';",
      "SELECT equipment_id, equipment_name, quantity, location FROM equipment_inventory WHERE location LIKE '%Office%';",
      "SELECT name, role, department FROM employee WHERE role='Manager';",
      "SELECT name, role, department FROM employee WHERE department='HR';",
      "SELECT equipment_id, employee_id, allocation_date FROM allocation WHERE allocation_date>'2022-01-01';",
      "SELECT equipment_id, employee_id, allocation_date FROM allocation WHERE employee_id=101;",
      "SELECT equipment_id, employee_id, allocation_date FROM allocation WHERE equipment_id=201;",
      "SELECT department_name FROM department WHERE location='Headquarters';",
      "SELECT department_name FROM department WHERE department_name LIKE '%Sales%';",
      "SELECT * FROM equipment_inventory ORDER BY quantity DESC;",
      "SELECT * FROM employee ORDER BY name ASC;",
      "SELECT * FROM equipment_inventory;",
      "SELECT equipment_id, equipment_name, quantity FROM equipment_inventory WHERE quantity > 10;",
      "SELECT e.name, e.role, d.department_name FROM employee e JOIN department d ON e.department = d.department_name;",
      "SELECT e.name, ei.equipment_name, a.allocation_date FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id;",
      "SELECT d.department_name, COUNT(*) AS total_allocation FROM allocation a JOIN employee e ON a.employee_id = e.employee_id JOIN department d ON e.department = d.department_name GROUP BY d.department_name;",
      "SELECT e.name, COUNT(*) AS total_allocations FROM employee e LEFT JOIN allocation a ON e.employee_id = a.employee_id GROUP BY e.employee_id HAVING COUNT(*) > 0;",
      "SELECT e.name, COUNT(*) AS total_allocations FROM employee e LEFT JOIN allocation a ON e.employee_id = a.employee_id WHERE e.role = 'Manager' GROUP BY e.employee_id;",
      "SELECT ei.equipment_name, SUM(a.quantity) AS total_quantity_allocated FROM allocation a JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id GROUP BY ei.equipment_name;",
      "SELECT e.name, d.location AS employee_location, d.department_name FROM employee e JOIN department d ON e.department = d.department_name WHERE e.name LIKE 'J%';",
      "SELECT e.name, e.role, a.allocation_date FROM employee e JOIN allocation a ON e.employee_id = a.employee_id WHERE YEAR(a.allocation_date) = 2022;",
      "SELECT e.name, SUM(ei.quantity) AS total_quantity_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id GROUP BY e.employee_id;",
      "SELECT e.name, d.location AS employee_location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN department d ON e.department = d.department_name GROUP BY e.employee_id;",
      "SELECT e.name, d.department_name, SUM(ei.quantity) AS total_quantity_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id JOIN department d ON e.department = d.department_name GROUP BY e.employee_id;",
      "SELECT COUNT(DISTINCT e.employee_id) AS total_employees_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id;",
      "SELECT d.department_name, AVG(ei.quantity) AS avg_quantity_allocated FROM equipment_inventory ei JOIN allocation a ON ei.equipment_id = a.equipment_id JOIN employee e ON a.employee_id = e.employee_id JOIN department d ON e.department = d.department_name GROUP BY d.department_name;",
      "SELECT e.name, d.location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN department d ON e.department = d.department_name WHERE d.location = 'Main Office' GROUP BY e.employee_id;",
      "SELECT e.name, d.department_name, SUM(ei.quantity) AS total_quantity_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id JOIN department d ON e.department = d.department_name WHERE a.allocation_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY e.employee_id;",
      "SELECT e.name, d.location AS employee_location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN department d ON e.department = d.department_name WHERE d.location = 'Remote Office' GROUP BY e.employee_id;",
      "SELECT e.name, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id WHERE e.role <> 'Manager' GROUP BY e.employee_id;",
      "SELECT d.department_name, AVG(ei.quantity) AS avg_quantity_allocated FROM equipment_inventory ei JOIN allocation a ON ei.equipment_id = a.equipment_id JOIN employee e ON a.employee_id = e.employee_id JOIN department d ON e.department = d.department_name WHERE a.allocation_date > '2022-06-01' GROUP BY d.department_name;",
      "SELECT e.name, ei.equipment_name, d.location AS employee_location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id JOIN department d ON e.department = d.department_name WHERE ei.quantity > 5 GROUP BY e.employee_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM equipment;",
      "SELECT id, name, quantity FROM equipment;",
      "SELECT name, status FROM equipment;",
      "SELECT * FROM employees;",
      "SELECT employee_id, name, email FROM employees;",
      "SELECT name, department FROM employees;",
      "SELECT * FROM allocations;",
      "SELECT allocation_id, employee_id, equipment_id FROM allocations;",
      "SELECT employee_id, allocation_date FROM allocations;",
      "SELECT * FROM departments;",
      "SELECT department_id, name FROM departments;",
      "SELECT name, location FROM departments;",
      "SELECT * FROM history;",
      "SELECT allocation_id, action FROM history;",
      "SELECT history_id, allocation_id FROM history;",
      "SELECT allocation_id, timestamp FROM history;",
      "SELECT id, name, quantity, status FROM equipment WHERE quantity > 10;",
      "SELECT * FROM employees WHERE department = 'IT';",
      "SELECT allocation_id, employee_id, equipment_id, allocation_date FROM allocations WHERE allocation_date >= '2022-01-01';",
      "SELECT * FROM departments WHERE location = 'New York';",
      "SELECT * FROM equipment;",
      "SELECT name, quantity FROM equipment WHERE quantity > 10;",
      "SELECT name, status FROM equipment WHERE status = 'available';",
      "SELECT * FROM employees WHERE department = 'IT';",
      "SELECT name, email FROM employees WHERE name LIKE 'A%';",
      "SELECT * FROM allocations WHERE allocation_date >= '2022-01-01';",
      "SELECT equipment.name, departments.location FROM equipment JOIN departments ON equipment.id = departments.department_id;",
      "SELECT DISTINCT department FROM employees;",
      "SELECT equipment.name, allocations.allocation_date FROM equipment JOIN allocations ON equipment.id = allocations.equipment_id;",
      "SELECT name, action FROM employees JOIN allocations ON employees.employee_id = allocations.employee_id JOIN history ON allocations.allocation_id = history.allocation_id WHERE action = 'returned';",
      "SELECT name, quantity FROM equipment WHERE quantity BETWEEN 5 AND 10;",
      "SELECT department, COUNT(employee_id) AS employee_count FROM employees GROUP BY department;",
      "SELECT AVG(quantity) AS average_quantity, department FROM equipment JOIN employees ON equipment.id = employees.employee_id GROUP BY department;",
      "SELECT MAX(quantity) AS max_quantity, department FROM equipment JOIN employees ON equipment.id = employees.employee_id GROUP BY department;",
      "SELECT department.name, SUM(equipment.quantity) AS total_quantity FROM department JOIN employees ON department.id = employees.department_id JOIN equipment ON employees.employee_id = equipment.id GROUP BY department.name;",
      "SELECT * FROM equipment ORDER BY quantity DESC LIMIT 5;",
      "SELECT name, timestamp FROM employees JOIN history ON employees.employee_id = history.allocation_id WHERE action = 'allocated' ORDER BY timestamp DESC;",
      "SELECT DISTINCT name FROM employees WHERE employee_id IN (SELECT employee_id FROM allocations WHERE equipment_id = 1);",
      "SELECT department, AVG(quantity) AS average_quantity FROM equipment JOIN employees ON equipment.id = employees.employee_id GROUP BY department HAVING AVG(quantity) > 5;",
      "SELECT * FROM allocations WHERE allocation_date BETWEEN '2022-01-01' AND '2022-12-31';"
    ]
  }
]