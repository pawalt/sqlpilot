[
  {
    "statements": [
      "SELECT * FROM User_Payment_Information;",
      "SELECT user_id, payment_method FROM User_Payment_Information;",
      "SELECT card_number, expiry_date FROM User_Payment_Information;",
      "SELECT * FROM User_Payment_Information WHERE user_id = 123;",
      "SELECT payment_method FROM User_Payment_Information WHERE card_number = '1234567890123456';",
      "SELECT * FROM User_Payment_Information WHERE expiry_date > '2022-01-01';",
      "SELECT user_id, cvv FROM User_Payment_Information WHERE payment_method = 'Credit Card';",
      "SELECT billing_address FROM User_Payment_Information WHERE user_id = 456;",
      "SELECT * FROM User_Payment_Information WHERE billing_address LIKE '%California%';",
      "SELECT payment_method FROM User_Payment_Information WHERE cvv = 123;",
      "SELECT * FROM User_Payment_Information WHERE card_number LIKE '1234%';",
      "SELECT * FROM User_Payment_Information WHERE payment_method = 'PayPal' AND expiry_date > '2023-01-01';",
      "SELECT user_id, billing_address FROM User_Payment_Information WHERE payment_method = 'Debit Card';",
      "SELECT * FROM User_Payment_Information WHERE cvv = 456 AND billing_address LIKE '%New York%';",
      "SELECT DISTINCT payment_method FROM User_Payment_Information;",
      "SELECT COUNT(*) FROM User_Payment_Information;",
      "SELECT AVG(cvv) FROM User_Payment_Information;",
      "SELECT MAX(cvv) FROM User_Payment_Information;",
      "SELECT MIN(cvv) FROM User_Payment_Information;",
      "SELECT user_id, COUNT(*) FROM User_Payment_Information GROUP BY user_id;",
      "SELECT * FROM User_Payment_Information WHERE user_id = 123;",
      "SELECT user_id, payment_method FROM User_Payment_Information WHERE card_number LIKE '%1234%';",
      "SELECT * FROM User_Payment_Information WHERE expiry_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT payment_method, COUNT(*) AS num_users FROM User_Payment_Information GROUP BY payment_method HAVING COUNT(*) > 1;",
      "SELECT * FROM User_Payment_Information WHERE cvv = 1234 AND billing_address LIKE '%Street%';",
      "SELECT DISTINCT payment_method FROM User_Payment_Information ORDER BY payment_method DESC;",
      "SELECT user_id, payment_method, card_number FROM User_Payment_Information WHERE card_number IS NOT NULL;",
      "SELECT * FROM User_Payment_Information WHERE LENGTH(billing_address) > 50;",
      "SELECT user_id, MAX(cvv) AS max_cvv FROM User_Payment_Information GROUP BY user_id;",
      "SELECT COUNT(*) AS num_entries FROM User_Payment_Information;",
      "SELECT * FROM User_Payment_Information WHERE payment_method IN ('Credit Card', 'PayPal');",
      "SELECT AVG(cvv) AS avg_cvv FROM User_Payment_Information;",
      "SELECT user_id, COUNT(*) AS num_payments FROM User_Payment_Information GROUP BY user_id HAVING COUNT(*) >= 2;",
      "SELECT * FROM User_Payment_Information ORDER BY user_id, payment_method DESC;",
      "SELECT DISTINCT payment_method, billing_address FROM User_Payment_Information;",
      "SELECT user_id, card_number, DATE_FORMAT(expiry_date, '%Y-%m') AS expiry_month FROM User_Payment_Information;",
      "SELECT * FROM User_Payment_Information WHERE payment_method LIKE 'Visa%' OR payment_method LIKE 'Master%';",
      "SELECT user_id, payment_method, billing_address FROM User_Payment_Information WHERE card_number LIKE '5%' OR card_number LIKE '6%';",
      "SELECT DISTINCT payment_method, COUNT(*) AS num_entries FROM User_Payment_Information GROUP BY payment_method;",
      "SELECT * FROM User_Payment_Information WHERE user_id IN (SELECT user_id FROM Users WHERE age >= 18);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_payment_information;",
      "SELECT user_id, payment_method FROM user_payment_information WHERE user_id = 1;",
      "SELECT * FROM user_payment_information WHERE payment_amount > 100;",
      "SELECT user_id, SUM(payment_amount) AS total_payment FROM user_payment_information GROUP BY user_id;",
      "SELECT * FROM user_payment_information ORDER BY payment_amount DESC;",
      "SELECT * FROM user_payment_information LIMIT 5;",
      "SELECT transaction_date, transaction_amount FROM transaction_history;",
      "SELECT user_id, COUNT(transaction_id) AS transaction_count FROM transaction_history GROUP BY user_id;",
      "SELECT * FROM transaction_history WHERE status = 'success';",
      "SELECT user_id, MAX(transaction_amount) AS max_transaction_amount FROM transaction_history GROUP BY user_id;",
      "SELECT t.*, u.payment_method FROM transaction_history t JOIN user_payment_information u ON t.user_id = u.user_id;",
      "SELECT SUM(payment_amount) AS total_payment_amount FROM user_payment_information;",
      "SELECT user_id, AVG(transaction_amount) AS avg_transaction_amount FROM transaction_history GROUP BY user_id;",
      "SELECT user_id, MIN(transaction_amount) AS min_transaction_amount FROM transaction_history GROUP BY user_id;",
      "SELECT * FROM user_payment_information WHERE card_number LIKE '****1234%';",
      "SELECT user_id, AVG(payment_amount) AS avg_payment_amount FROM user_payment_information GROUP BY user_id;",
      "SELECT user_id, transaction_amount FROM transaction_history WHERE transaction_amount BETWEEN 100 AND 500;",
      "SELECT user_id, payment_method, transaction_amount FROM user_payment_information JOIN transaction_history ON user_payment_information.user_id = transaction_history.user_id;",
      "SELECT COUNT(*) AS total_transactions FROM transaction_history;",
      "SELECT user_id, AVG(payment_amount) AS avg_payment_amount FROM user_payment_information WHERE payment_method = 'credit card' GROUP BY user_id;",
      "SELECT user_id, payment_method FROM user_payment_information WHERE payment_amount > 1000",
      "SELECT user_id, SUM(payment_amount) AS total_payment FROM user_payment_information GROUP BY user_id",
      "SELECT user_id, COUNT(transaction_id) AS total_transactions FROM transaction_history GROUP BY user_id",
      "SELECT user_id, MAX(payment_amount) AS max_payment FROM user_payment_information GROUP BY user_id",
      "SELECT user_id, AVG(payment_amount) AS avg_payment FROM user_payment_information GROUP BY user_id",
      "SELECT user_id, payment_method, payment_amount FROM user_payment_information WHERE payment_amount > 500 AND payment_method = 'Credit Card'",
      "SELECT user_id, payment_method, payment_amount FROM user_payment_information WHERE payment_amount BETWEEN 100 AND 500",
      "SELECT user_id, SUM(payment_amount) AS total_payment FROM user_payment_information WHERE payment_method = 'PayPal' GROUP BY user_id",
      "SELECT user_id, payment_method FROM user_payment_information WHERE payment_method LIKE 'Visa%'",
      "SELECT user_id, COUNT(transaction_id) AS total_transactions FROM transaction_history WHERE status = 'Success' GROUP BY user_id",
      "SELECT user_id, payment_amount FROM user_payment_information WHERE payment_amount = (SELECT MAX(payment_amount) FROM user_payment_information)",
      "SELECT user_id, payment_amount FROM user_payment_information WHERE user_id IN (SELECT user_id FROM transaction_history WHERE status = 'Pending')",
      "SELECT user_id, payment_amount FROM user_payment_information WHERE user_id NOT IN (SELECT user_id FROM transaction_history)",
      "SELECT user_id, payment_method, transaction_date FROM user_payment_information JOIN transaction_history ON user_payment_information.user_id = transaction_history.user_id",
      "SELECT user_id, payment_amount FROM user_payment_information WHERE user_id IN (SELECT user_id FROM user_payment_information GROUP BY user_id HAVING COUNT(user_id) > 1)",
      "SELECT user_id, payment_amount FROM user_payment_information WHERE user_id = 1001",
      "SELECT user_id, transaction_amount FROM transaction_history WHERE user_id = 1001",
      "SELECT user_id, payment_amount FROM user_payment_information ORDER BY payment_amount DESC LIMIT 10",
      "SELECT user_id, SUM(payment_amount) AS total_payment FROM user_payment_information WHERE payment_amount > 0 GROUP BY user_id HAVING total_payment > 2000",
      "SELECT user_id, MIN(payment_amount) AS min_payment FROM user_payment_information GROUP BY user_id",
      "SELECT user_id, AVG(transaction_amount) AS avg_transaction_amount FROM transaction_history WHERE status = 'Success' GROUP BY user_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT user_id, email FROM users WHERE username = 'john_doe';",
      "SELECT * FROM payments;",
      "SELECT payment_id, amount FROM payments WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, status, transaction_date FROM transactions WHERE payment_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT user_id, MAX(amount) FROM payments GROUP BY user_id;",
      "SELECT payment_id, COUNT(*) FROM transactions GROUP BY payment_id;",
      "SELECT user_id, AVG(amount) FROM payments GROUP BY user_id HAVING AVG(amount) > 100;",
      "SELECT MAX(amount) AS max_amount FROM payments;",
      "SELECT MIN(amount) AS min_amount FROM payments;",
      "SELECT user_id, SUM(amount) AS total_amount FROM payments GROUP BY user_id;",
      "SELECT user_id, COUNT(DISTINCT payment_id) AS total_payments FROM payments GROUP BY user_id;",
      "SELECT username, payment_date FROM users INNER JOIN payments ON users.user_id = payments.user_id;",
      "SELECT u.username, p.amount, t.status FROM users u INNER JOIN payments p ON u.user_id = p.user_id INNER JOIN transactions t ON p.payment_id = t.payment_id;",
      "SELECT COUNT(*) AS total_transactions FROM transactions;",
      "SELECT AVG(amount) AS avg_amount FROM payments WHERE amount > 50;",
      "SELECT * FROM payments ORDER BY amount DESC;",
      "SELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM users WHERE username = 'john_doe';",
      "SELECT users.username, payments.amount FROM users JOIN payments ON users.user_id = payments.user_id WHERE payments.amount > 1000;",
      "SELECT users.username, payments.amount, transactions.status FROM users JOIN payments ON users.user_id = payments.user_id JOIN transactions ON payments.payment_id = transactions.payment_id WHERE transactions.status = 'completed';",
      "SELECT users.username, COUNT(payments.payment_id) AS num_payments FROM users JOIN payments ON users.user_id = payments.user_id GROUP BY users.username;",
      "SELECT users.username, SUM(payments.amount) AS total_amount FROM users JOIN payments ON users.user_id = payments.user_id GROUP BY users.username;",
      "SELECT DISTINCT users.username FROM users JOIN payments ON users.user_id = payments.user_id;",
      "SELECT users.username, payments.amount, transactions..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users;",
      "SELECT * FROM payment_methods;",
      "SELECT method_id, user_id FROM payment_methods;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, user_id FROM transactions;",
      "SELECT * FROM payment_history;",
      "SELECT history_id, user_id, transaction_id FROM payment_history;",
      "SELECT username, email FROM users WHERE user_id = 1;",
      "SELECT username, email FROM users WHERE username = 'john_doe';",
      "SELECT * FROM payment_methods WHERE user_id = 2;",
      "SELECT card_number, expiration_date FROM payment_methods WHERE user_id = 2;",
      "SELECT amount FROM transactions WHERE user_id = 1;",
      "SELECT amount, timestamp FROM transactions WHERE amount > 100;",
      "SELECT * FROM payment_history WHERE user_id = 3;",
      "SELECT transaction_id, timestamp FROM payment_history WHERE user_id = 3;",
      "SELECT u.username, p.card_number FROM users u JOIN payment_methods p ON u.user_id = p.user_id;",
      "SELECT u.username, t.amount FROM users u JOIN transactions t ON u.user_id = t.user_id;",
      "SELECT u.username, ph.timestamp FROM users u JOIN payment_history ph ON u.user_id = ph.user_id;",
      "SELECT * FROM users WHERE user_id = 1;",
      "SELECT username, email FROM users WHERE username LIKE 'A%';",
      "SELECT user_id, username, email FROM users WHERE user_id BETWEEN 1 AND 10;",
      "SELECT * FROM payment_methods WHERE card_number LIKE '%1234';",
      "SELECT user_id, method_id, card_number FROM payment_methods WHERE user_id = 1;",
      "SELECT user_id, transaction_id, amount FROM transactions WHERE user_id = 1 AND amount > 100;",
      "SELECT * FROM transactions WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM payment_history WHERE user_id = 1 ORDER BY timestamp DESC;",
      "SELECT users.username, transactions.amount FROM users INNER JOIN transactions ON users.user_id = transactions.user_id;",
      "SELECT users.username, payment_history.history_id FROM users LEFT JOIN payment_history ON users.user_id = payment_history.user_id;",
      "SELECT COUNT(*) AS total_transactions FROM transactions;",
      "SELECT AVG(amount) AS avg_transaction_amount FROM transactions WHERE user_id = 1;",
      "SELECT users.username, payment_methods.card_number FROM users JOIN payment_methods ON users.user_id = payment_methods.user_id;",
      "SELECT users.username, payment_methods.card_number, transactions.amount FROM users, payment_methods, transactions WHERE users.user_id = payment_methods.user_id AND users.user_id = transactions.user_id;",
      "SELECT username, email FROM users WHERE email LIKE '%@domain.com';",
      "SELECT * FROM transactions WHERE amount IN (50.00, 75.00, 100.00);",
      "SELECT COUNT(DISTINCT user_id) AS unique_users FROM transactions;",
      "SELECT username, SUM(amount) AS total_amount FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY users.username;",
      "SELECT user_id, MAX(timestamp) AS last_transaction FROM transactions GROUP BY user_id;",
      "SELECT COUNT(*) AS total_payments FROM (SELECT DISTINCT transaction_id FROM payment_history) AS unique_payments;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT username, email FROM users WHERE username = 'JohnDoe';",
      "SELECT * FROM credit_cards;",
      "SELECT card_number, expiration_date FROM credit_cards;",
      "SELECT * FROM transactions;",
      "SELECT amount, transaction_date FROM transactions;",
      "SELECT * FROM payment_methods;",
      "SELECT method_type, account_number FROM payment_methods;",
      "SELECT * FROM billing_addresses;",
      "SELECT street_address, city, state, zip_code FROM billing_addresses;",
      "SELECT username, email, password FROM users WHERE email = 'example@gmail.com';",
      "SELECT card_number, expiration_date FROM credit_cards WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT amount FROM transactions WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT method_type, account_number FROM payment_methods WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT street_address, city, state, zip_code FROM billing_addresses WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM users JOIN credit_cards ON users.user_id = credit_cards.user_id;",
      "SELECT * FROM users JOIN transactions ON users.user_id = transactions.user_id;",
      "SELECT * FROM users JOIN payment_methods ON users.user_id = payment_methods.user_id;",
      "SELECT * FROM users JOIN billing_addresses ON users.user_id = billing_addresses.user_id;",
      "SELECT * FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT username, email FROM users WHERE email LIKE '%gmail.com';",
      "SELECT card_id, card_number, expiration_date FROM credit_cards WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT transaction_id, amount FROM transactions WHERE user_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY transaction_date DESC;",
      "SELECT method_id, method_type FROM payment_methods WHERE account_number IS NULL;",
      "SELECT * FROM billing_addresses WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT users.username, transactions.amount FROM users JOIN transactions ON users.user_id = transactions.user_id;",
      "SELECT users.username, payment_methods.method_type FROM users JOIN payment_methods ON users.user_id = payment_methods.user_id WHERE payment_methods.method_type = 'credit card';",
      "SELECT users.username, billing_addresses.city FROM users JOIN billing_addresses ON users.user_id = billing_addresses.user_id WHERE billing_addresses.state = 'California';",
      "SELECT users.username, credit_cards.card_number, credit_cards.expiration_date FROM users JOIN credit_cards ON users.user_id = credit_cards.user_id ORDER BY credit_cards.expiration_date ASC;",
      "SELECT users.username, payment_methods.method_type, billing_addresses.zip_code FROM users JOIN payment_methods ON users.user_id = payment_methods.user_id JOIN billing_addresses ON users.user_id = billing_addresses.user_id;",
      "SELECT COUNT(*) AS total_users FROM users;",
      "SELECT AVG(amount) AS average_amount FROM transactions GROUP BY user_id;",
      "SELECT MAX(amount) AS max_transaction_amount FROM transactions;",
      "SELECT MIN(amount) AS min_transaction_amount FROM transactions;",
      "SELECT SUM(amount) AS total_transaction_amount FROM transactions;",
      "SELECT DISTINCT city FROM billing_addresses;",
      "SELECT users.username, SUM(transactions.amount) AS total_spent FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY users.username;",
      "SELECT billing_addresses.city, COUNT(*) AS total_users FROM billing_addresses GROUP BY billing_addresses.city HAVING COUNT(*) > 1;",
      "SELECT users.username, credit_cards.card_number, payment_methods.method_type FROM users JOIN credit_cards ON users.user_id = credit_cards.user_id JOIN payment_methods ON users.user_id = payment_methods.user_id WHERE payment_methods.method_type = 'debit card';"
    ]
  }
]