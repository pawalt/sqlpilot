[
  {
    "statements": [
      "SELECT * FROM TicketSales;",
      "SELECT event_name, ticket_price FROM TicketSales;",
      "SELECT * FROM TicketSales WHERE event_date > '2022-12-31';",
      "SELECT event_name, seat_section FROM TicketSales WHERE event_date = '2022-12-25';",
      "SELECT * FROM TicketSales WHERE seat_section = 'VIP';",
      "SELECT event_name, seat_number FROM TicketSales WHERE ticket_price > 100;",
      "SELECT * FROM TicketSales WHERE seat_section = 'General Admission' AND event_date >= '2022-09-01';",
      "SELECT DISTINCT event_name FROM TicketSales;",
      "SELECT COUNT(*) FROM TicketSales;",
      "SELECT AVG(ticket_price) FROM TicketSales;",
      "SELECT MAX(seat_number) FROM TicketSales;",
      "SELECT MIN(ticket_price) FROM TicketSales;",
      "SELECT event_name, COUNT(*) FROM TicketSales GROUP BY event_name;",
      "SELECT event_name, AVG(ticket_price) FROM TicketSales GROUP BY event_name;",
      "SELECT seat_section, COUNT(*) FROM TicketSales GROUP BY seat_section;",
      "SELECT seat_section, MAX(ticket_price) FROM TicketSales GROUP BY seat_section;",
      "SELECT event_name, MAX(ticket_price) FROM TicketSales WHERE seat_section = 'VIP';",
      "SELECT * FROM TicketSales ORDER BY event_date DESC;",
      "SELECT * FROM TicketSales ORDER BY ticket_price ASC;",
      "SELECT event_name, seat_number FROM TicketSales WHERE seat_section = 'Front Row' ORDER BY seat_number ASC;",
      "SELECT * FROM TicketSales WHERE event_name='Concert' AND ticket_price > 50",
      "SELECT ticket_id, event_name, seat_section FROM TicketSales WHERE event_date >= '2022-10-10'",
      "SELECT * FROM TicketSales WHERE seat_section='VIP' AND seat_number BETWEEN 1 AND 10",
      "SELECT SUM(ticket_price) AS total_revenue FROM TicketSales WHERE event_name='Sports Game'",
      "SELECT AVG(ticket_price) AS avg_price, MAX(ticket_price) AS max_price FROM TicketSales WHERE event_name='Theater Play'",
      "SELECT COUNT(ticket_id) AS total_tickets FROM TicketSales WHERE event_date='2022-12-25'",
      "SELECT event_name, COUNT(ticket_id) AS total_tickets FROM TicketSales GROUP BY event_name HAVING COUNT(ticket_id) > 100",
      "SELECT event_name, MIN(ticket_price) AS min_price, MAX(ticket_price) AS max_price FROM TicketSales GROUP BY event_name",
      "SELECT event_name, seat_section, COUNT(*) AS total_tickets FROM TicketSales GROUP BY event_name, seat_section",
      "SELECT DISTINCT event_name FROM TicketSales",
      "SELECT event_name, AVG(ticket_price) AS avg_price FROM TicketSales GROUP BY event_name ORDER BY avg_price DESC",
      "SELECT event_name, seat_section, AVG(ticket_price) AS avg_price FROM TicketSales GROUP BY event_name, seat_section ORDER BY avg_price DESC",
      "SELECT event_name, event_date, seat_section, seat_number FROM TicketSales WHERE event_name LIKE '%Movie%'",
      "SELECT event_name, event_date, seat_section FROM TicketSales WHERE event_date < '2023-01-01' AND event_name NOT LIKE '%Festival%' ORDER BY event_date",
      "SELECT event_name, COUNT(DISTINCT seat_section) AS total_sections FROM TicketSales GROUP BY event_name",
      "SELECT event_name, COUNT(DISTINCT seat_number) AS total_seats FROM TicketSales GROUP BY event_name",
      "SELECT event_name, AVG(ticket_price) AS avg_price_per_seat FROM TicketSales GROUP BY event_name",
      "SELECT event_name, AVG(ticket_price) AS avg_price, COUNT(*) AS total_sales FROM TicketSales GROUP BY event_name HAVING COUNT(*) > 50",
      "SELECT event_name, seat_section, COUNT(*) AS total_tickets FROM TicketSales WHERE ticket_price >= 100 GROUP BY event_name, seat_section HAVING COUNT(*) > 10",
      "SELECT event_name, MIN(ticket_price) AS min_price, MAX(ticket_price) AS max_price FROM TicketSales WHERE event_date BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY event_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM EventTickets;",
      "SELECT event_name, ticket_price FROM EventTickets;",
      "SELECT event_name, seat_number FROM EventTickets WHERE ticket_price > 50;",
      "SELECT * FROM SeatingArrangements;",
      "SELECT seat_section, seat_status FROM SeatingArrangements;",
      "SELECT seat_number FROM SeatingArrangements WHERE seat_status = 'available';",
      "SELECT seat_id, seat_number FROM SeatingArrangements ORDER BY seat_number ASC;",
      "SELECT event_name, ticket_price, seat_number FROM EventTickets INNER JOIN SeatingArrangements ON EventTickets.seat_number = SeatingArrangements.seat_number;",
      "SELECT event_name, ticket_price, seat_section FROM EventTickets INNER JOIN SeatingArrangements ON EventTickets.seat_number = SeatingArrangements.seat_number WHERE seat_status = 'available';",
      "SELECT * FROM EventTickets WHERE event_name LIKE '%Concert%';",
      "SELECT * FROM EventTickets WHERE ticket_price BETWEEN 50 AND 100;",
      "SELECT event_name, seat_number FROM EventTickets WHERE ticket_price = (SELECT MAX(ticket_price) FROM EventTickets);",
      "SELECT COUNT(*) FROM EventTickets;",
      "SELECT COUNT(*) AS total_tickets FROM EventTickets;",
      "SELECT AVG(ticket_price) AS average_price FROM EventTickets;",
      "SELECT DISTINCT event_name FROM EventTickets;",
      "SELECT event_name, COUNT(*) AS total_tickets FROM EventTickets GROUP BY event_name;",
      "SELECT seat_section, COUNT(*) AS total_seats FROM SeatingArrangements GROUP BY seat_section;",
      "SELECT seat_section, AVG(seat_number) AS average_seat_number FROM SeatingArrangements GROUP BY seat_section;",
      "SELECT event_name, SUM(ticket_price) AS total_revenue FROM EventTickets GROUP BY event_name;",
      "SELECT * FROM EventTickets WHERE ticket_price > 100",
      "SELECT event_name, ticket_price FROM EventTickets WHERE event_name LIKE 'Concert%'",
      "SELECT COUNT(ticket_id) FROM EventTickets",
      "SELECT event_name, ticket_price, seat_number FROM EventTickets LEFT JOIN SeatingArrangements ON EventTickets.seat_number = SeatingArrangements.seat_number",
      "SELECT AVG(ticket_price) FROM EventTickets",
      "SELECT event_name, seat_section FROM EventTickets INNER JOIN SeatingArrangements ON EventTickets.seat_number = SeatingArrangements.seat_number WHERE SeatingArrangements.seat_status = 'Available'",
      "SELECT event_name, COUNT(*) AS total_tickets FROM EventTickets GROUP BY event_name HAVING total_tickets > 50",
      "SELECT event_name, MAX(ticket_price) FROM EventTickets GROUP BY event_name",
      "SELECT event_name, MIN(ticket_price) FROM EventTickets WHERE seat_number IS NOT NULL",
      "SELECT event_name, SUM(ticket_price) FROM EventTickets GROUP BY event_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM event;",
      "SELECT event_name, event_date FROM event;",
      "SELECT * FROM ticket;",
      "SELECT seat_number, price FROM ticket;",
      "SELECT * FROM customer;",
      "SELECT customer_name, email, phone_number FROM customer;",
      "SELECT event_id, event_name, event_date FROM event WHERE event_id = 1;",
      "SELECT ticket_id, seat_number, price FROM ticket WHERE event_id = 1;",
      "SELECT customer_id, customer_name, email FROM customer WHERE customer_id = 1;",
      "SELECT event_name, event_date FROM event WHERE event_id = 1;",
      "SELECT event_name, event_date FROM event WHERE event_date > '2022-01-01';",
      "SELECT event.event_name, ticket.seat_number, ticket.price FROM event JOIN ticket ON event.event_id = ticket.event_id;",
      "SELECT customer.customer_name, event.event_name FROM customer JOIN ticket ON ticket.event_id = event.event_id JOIN customer ON ticket.customer_id = customer.customer_id;",
      "SELECT event_name, COUNT(*) AS total_tickets FROM ticket WHERE price > 50 GROUP BY event_name;",
      "SELECT customer_name, email, phone_number FROM customer WHERE customer_id IN (SELECT customer_id FROM ticket GROUP BY customer_id HAVING COUNT(*) > 1);",
      "SELECT event_name, AVG(price) AS average_price FROM event JOIN ticket ON event.event_id = ticket.event_id GROUP BY event_name;",
      "SELECT event_name, MAX(price) AS highest_price FROM event JOIN ticket ON event.event_id = ticket.event_id GROUP BY event_name;",
      "SELECT event_name, MIN(price) AS lowest_price FROM event JOIN ticket ON event.event_id = ticket.event_id GROUP BY event_name;",
      "SELECT event.event_name, COUNT(ticket.ticket_id) AS total_tickets FROM event LEFT JOIN ticket ON event.event_id = ticket.event_id GROUP BY event.event_name;",
      "SELECT * FROM event WHERE event_date >= '2022-01-01'",
      "SELECT event_name, event_date FROM event WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT * FROM event INNER JOIN ticket ON event.event_id = ticket.event_id",
      "SELECT event.event_name, ticket.seat_number FROM event LEFT JOIN ticket ON event.event_id = ticket.event_id",
      "SELECT customer_name, email FROM customer WHERE phone_number LIKE '%555%'",
      "SELECT event.event_name, ticket.price FROM event JOIN ticket ON event.event_id = ticket.event_id WHERE ticket.price <= 50.00",
      "SELECT customer_name, event.event_name, ticket.seat_number FROM customer JOIN ticket ON customer.customer_id = ticket.ticket_id JOIN event ON ticket.event_id = event.event_id",
      "SELECT event.event_name, COUNT(ticket.ticket_id) AS total_tickets FROM event LEFT JOIN ticket ON event.event_id = ticket.event_id GROUP BY event.event_name",
      "SELECT event.event_name, AVG(ticket.price) AS avg_price FROM event JOIN ticket ON event.event_id = ticket.event_id GROUP BY event.event_name",
      "SELECT customer_name, SUM(ticket.price) AS total_spent FROM customer JOIN ticket ON customer.customer_id = ticket.ticket_id GROUP BY customer_name",
      "SELECT DISTINCT event.event_name, customer.customer_name FROM event JOIN ticket ON event.event_id = ticket.event_id JOIN customer ON ticket.ticket_id = customer.customer_id",
      "SELECT event.event_name AS Event, customer.customer_name AS Customer, ticket.price AS Price FROM event JOIN ticket ON event.event_id = ticket.event_id JOIN customer ON ticket.ticket_id = customer.customer_id WHERE ticket.price > 100.00",
      "SELECT event.event_name, MAX(ticket.price) AS max_price FROM event JOIN ticket ON event.event_id = ticket.event_id GROUP BY event.event_name",
      "SELECT customer.customer_name, MIN(ticket.price) AS min_price FROM customer JOIN ticket ON customer.customer_id = ticket.ticket_id GROUP BY customer.customer_name",
      "SELECT event.event_name, ticket.seat_number, customer.email FROM event JOIN ticket ON event.event_id = ticket.event_id JOIN customer ON ticket.ticket_id = customer.customer_id",
      "SELECT customer.customer_name AS Customer, event.event_name AS Event, ticket.seat_number AS Seat, ticket.price AS Price  FROM customer JOIN ticket ON customer.customer_id = ticket.ticket_id JOIN event ON ticket.event_id = event.event_id",
      "SELECT event.event_name, COUNT(ticket.ticket_id) AS total_tickets, MAX(ticket.price) AS max_price, MIN(ticket.price) AS min_price, AVG(ticket.price) AS avg_price FROM event LEFT JOIN ticket ON event.event_id = ticket.event_id GROUP BY event.event_name",
      "SELECT customer.customer_name, SUM(ticket.price) AS total_spent, AVG(ticket.price) AS avg_price FROM customer JOIN ticket ON customer.customer_id = ticket.ticket_id GROUP BY customer.customer_name",
      "SELECT customer.customer_name, event.event_name, ticket.seat_number, ticket.price FROM customer JOIN ticket ON customer.customer_id = ticket.ticket_id JOIN event ON ticket.event_id = event.event_id WHERE event.event_date >= '2022-06-01'",
      "SELECT event.event_name, customer.customer_name, ticket.seat_number, ticket.price FROM event JOIN ticket ON event.event_id = ticket.event_id JOIN customer ON ticket.ticket_id = customer.customer_id WHERE customer.email LIKE '%@domain.com'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM tickets;",
      "SELECT ticket_id, ticket_price FROM tickets;",
      "SELECT event_id, seat_number FROM tickets;",
      "SELECT ticket_id, event_id, seat_number, ticket_price FROM tickets WHERE ticket_price > 50;",
      "SELECT * FROM events;",
      "SELECT event_id, event_name, event_date FROM events;",
      "SELECT event_id, total_seats FROM events;",
      "SELECT * FROM customers;",
      "SELECT customer_id, customer_name FROM customers;",
      "SELECT customer_id, email, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT * FROM bookings;",
      "SELECT booking_id, event_id, customer_id FROM bookings;",
      "SELECT booking_id, num_tickets, booking_date FROM bookings;",
      "SELECT booking_id, event_id, num_tickets, booking_date FROM bookings WHERE booking_date >= '2022-01-01';",
      "SELECT t.ticket_id, t.event_id, e.event_name FROM tickets t JOIN events e ON t.event_id = e.event_id;",
      "SELECT c.customer_id, c.customer_name, b.booking_id FROM customers c JOIN bookings b ON c.customer_id = b.customer_id;",
      "SELECT e.event_id, e.event_name, b.booking_id, b.num_tickets FROM events e JOIN bookings b ON e.event_id = b.event_id;",
      "SELECT t.ticket_id, t.ticket_price, e.event_name, b.num_tickets FROM tickets t JOIN events e ON t.event_id = e.event_id JOIN bookings b ON t.event_id = b.event_id;",
      "SELECT t.ticket_id, t.ticket_price, c.customer_name, b.booking_date FROM tickets t JOIN bookings b ON t.event_id = b.event_id JOIN customers c ON b.customer_id = c.customer_id;",
      "SELECT e.event_name, c.customer_name, b.booking_date, b.num_tickets FROM events e JOIN bookings b ON e.event_id = b.event_id JOIN customers c ON b.customer_id = c.customer_id;",
      "SELECT * FROM tickets WHERE ticket_price > 100",
      "SELECT event_name, event_date FROM events WHERE event_date > '2022-01-01'",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id = 1",
      "SELECT event_id, customer_id, num_tickets FROM bookings WHERE booking_date > '2022-06-01'",
      "SELECT event_name, total_seats FROM events WHERE total_seats < 100",
      "SELECT * FROM tickets INNER JOIN events ON tickets.event_id = events.event_id",
      "SELECT customer_name, email, phone_number FROM customers WHERE email LIKE '%gmail.com'",
      "SELECT * FROM bookings WHERE num_tickets > 5",
      "SELECT event_name, event_date, total_seats FROM events ORDER BY event_date DESC",
      "SELECT SUM(ticket_price) AS total_sales FROM tickets",
      "SELECT event_name, AVG(ticket_price) AS avg_ticket_price FROM events INNER JOIN tickets ON events.event_id = tickets.event_id GROUP BY event_name",
      "SELECT * FROM bookings WHERE booking_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT event_name, COUNT(*) AS total_bookings FROM events INNER JOIN bookings ON events.event_id = bookings.event_id GROUP BY event_name",
      "SELECT customer_id, customer_name, SUM(num_tickets) AS total_tickets FROM bookings GROUP BY customer_id, customer_name",
      "SELECT event_name, AVG(num_tickets) AS avg_tickets_per_booking FROM events INNER JOIN bookings ON events.event_id = bookings.event_id GROUP BY event_name",
      "SELECT DISTINCT event_name FROM events",
      "SELECT customer_name, AVG(ticket_price) AS avg_ticket_price FROM customers INNER JOIN bookings ON customers.customer_id = bookings.customer_id INNER JOIN tickets ON bookings.event_id = tickets.event_id GROUP BY customer_name",
      "SELECT * FROM tickets WHERE ticket_price >= (SELECT AVG(ticket_price) FROM tickets)",
      "SELECT event_date, COUNT(*) AS total_tickets_sold FROM events INNER JOIN bookings ON events.event_id = bookings.event_id GROUP BY event_date",
      "SELECT customer_name, COUNT(*) AS total_bookings FROM customers INNER JOIN bookings ON customers.customer_id = bookings.customer_id GROUP BY customer_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Event;",
      "SELECT event_name, event_date FROM Event;",
      "SELECT venue_name, capacity FROM Venue;",
      "SELECT * FROM Ticket;",
      "SELECT seat_number, price FROM Ticket;",
      "SELECT first_name, last_name, email FROM Customer;",
      "SELECT * FROM Booking;",
      "SELECT booking_date FROM Booking;",
      "SELECT event_name, venue_name, capacity FROM Event JOIN Venue ON Event.event_id = Venue.venue_id;",
      "SELECT event_name, seat_number, price FROM Event JOIN Ticket ON Event.event_id = Ticket.event_id;",
      "SELECT first_name, last_name, event_name FROM Customer JOIN Booking ON Customer.customer_id = Booking.customer_id JOIN Event ON Booking.event_id = Event.event_id;",
      "SELECT event_name, booking_date FROM Event JOIN Booking ON Event.event_id = Booking.event_id;",
      "SELECT venue_name, event_date FROM Venue JOIN Event ON Venue.venue_id = Event.event_id;",
      "SELECT event_name, event_date FROM Event WHERE event_date > '2022-01-01';",
      "SELECT event_name, event_date FROM Event WHERE event_name LIKE 'Concert%';",
      "SELECT first_name, last_name FROM Customer WHERE email = 'example@email.com';",
      "SELECT event_name, price FROM Event JOIN Ticket ON Event.event_id = Ticket.event_id WHERE price > 50;",
      "SELECT COUNT(*) AS total_events FROM Event;",
      "SELECT MAX(capacity) AS max_capacity FROM Venue;",
      "SELECT MIN(price) AS min_price FROM Ticket;",
      "SELECT * FROM Event WHERE event_date > '2021-01-01';",
      "SELECT event_name, event_date FROM Event WHERE event_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT event_name, venue_name, capacity FROM Event JOIN Venue ON Event.event_id = Venue.venue_id;",
      "SELECT customer_id, first_name, last_name, email FROM Customer WHERE email LIKE '%gmail.com';",
      "SELECT event_name, seat_number, price FROM Event JOIN Ticket ON Event.event_id = Ticket.event_id;",
      "SELECT * FROM Booking ORDER BY booking_date DESC;",
      "SELECT first_name, last_name, booking_id FROM Customer JOIN Booking ON Customer.customer_id = Booking.customer_id;",
      "SELECT customer_id, SUM(price) AS total_spent FROM Customer JOIN Booking ON Customer.customer_id = Booking.customer_id JOIN Ticket ON Booking.ticket_id = Ticket.ticket_id GROUP BY customer_id;",
      "SELECT event_name, COUNT(ticket_id) AS total_tickets_sold FROM Event JOIN Ticket ON Event.event_id = Ticket.event_id GROUP BY event_name;",
      "SELECT event_name, COUNT(*) AS total_bookings FROM Event JOIN Booking ON Event.event_id = Booking.event_id GROUP BY event_name;",
      "SELECT MAX(price) AS max_price FROM Ticket;",
      "SELECT venue_name, AVG(capacity) AS avg_capacity FROM Venue;",
      "SELECT customer_id, first_name, last_name, COUNT(ticket_id) AS total_tickets_purchased FROM Customer JOIN Booking ON Customer.customer_id = Booking.customer_id GROUP BY customer_id, first_name, last_name;",
      "SELECT event_name, AVG(price) AS avg_ticket_price FROM Event JOIN Ticket ON Event.event_id = Ticket.event_id GROUP BY event_name;",
      "SELECT event_name, MIN(price) AS min_ticket_price FROM Event JOIN Ticket ON Event.event_id = Ticket.event_id GROUP BY event_name;",
      "SELECT DISTINCT event_name FROM Event;",
      "SELECT * FROM Customer WHERE customer_id IN (SELECT customer_id FROM Booking WHERE booking_date = '2021-10-15');",
      "SELECT customer_id, event_name, booking_date FROM Customer JOIN Booking ON Customer.customer_id = Booking.customer_id JOIN Event ON Booking.event_id = Event.event_id;",
      "SELECT venue_name, COUNT(ticket_id) AS total_tickets_sold FROM Venue JOIN Event ON Venue.venue_id = Event.event_id JOIN Ticket ON Event.event_id = Ticket.event_id GROUP BY venue_name;",
      "SELECT customer_id, AVG(price) FROM Customer JOIN Booking ON Customer.customer_id = Booking.customer_id JOIN Ticket ON Booking.ticket_id = Ticket.ticket_id GROUP BY customer_id;"
    ]
  }
]