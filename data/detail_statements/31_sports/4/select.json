[
  {
    "statements": [
      "SELECT * FROM sports_events;",
      "SELECT event_name, event_date FROM sports_events;",
      "SELECT event_name, location FROM sports_events;",
      "SELECT * FROM sports_events WHERE event_date > '2021-01-01';",
      "SELECT * FROM sports_events WHERE location = 'London';",
      "SELECT event_name, winner FROM sports_events WHERE event_date >= '2021-01-01';",
      "SELECT * FROM sports_events WHERE winner IS NOT NULL;",
      "SELECT COUNT(*) FROM sports_events;",
      "SELECT MAX(event_date) FROM sports_events;",
      "SELECT event_name, event_date FROM sports_events ORDER BY event_date DESC;",
      "SELECT location, COUNT(*) FROM sports_events GROUP BY location;",
      "SELECT location, MAX(event_date) FROM sports_events GROUP BY location;",
      "SELECT location, COUNT(*) FROM sports_events WHERE event_date >= '2021-01-01' GROUP BY location;",
      "SELECT DISTINCT location FROM sports_events;",
      "SELECT event_name, event_date, winner FROM sports_events WHERE event_name LIKE '%final%';",
      "SELECT * FROM sports_events WHERE event_name IN ('Football', 'Basketball');",
      "SELECT * FROM sports_events WHERE event_name NOT LIKE '%final%';",
      "SELECT AVG(event_date) FROM sports_events;",
      "SELECT event_date, COUNT(*) FROM sports_events GROUP BY event_date;",
      "SELECT event_name, event_date, winner FROM sports_events WHERE event_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM sports_events WHERE event_date > '2022-01-01' AND winner IS NOT NULL;",
      "SELECT event_name, location FROM sports_events WHERE location = 'New York' ORDER BY event_date DESC;",
      "SELECT COUNT(*) AS total_events FROM sports_events WHERE winner IS NOT NULL;",
      "SELECT event_name, location, winner FROM sports_events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT event_name, COUNT(*) AS total_wins FROM sports_events WHERE winner = 'Team A';",
      "SELECT event_name, location FROM sports_events WHERE winner IN ('Team A', 'Team B');",
      "SELECT DISTINCT location FROM sports_events;",
      "SELECT event_name, location FROM sports_events WHERE winner LIKE '%A';",
      "SELECT event_name, location FROM sports_events WHERE event_date = CURDATE();",
      "SELECT event_name, location FROM sports_events WHERE event_name LIKE 'Football%' ORDER BY event_date DESC;",
      "SELECT event_name, location FROM sports_events WHERE location LIKE '%City%' ORDER BY event_date ASC;",
      "SELECT event_name, location, winner FROM sports_events WHERE event_date = '2022-06-15';",
      "SELECT event_name, location FROM sports_events WHERE event_date >= '2022-01-01' AND event_date <= '2022-12-31' ORDER BY event_date;",
      "SELECT AVG(DATEDIFF(CURDATE(), event_date)) AS avg_days_since_event FROM sports_events WHERE winner IS NOT NULL;",
      "SELECT event_name, location FROM sports_events WHERE winner IS NULL;",
      "SELECT event_name, location, DATEDIFF(CURDATE(), event_date) AS days_since_event FROM sports_events WHERE winner IS NULL;",
      "SELECT event_name, winner FROM sports_events WHERE winner IS NOT NULL GROUP BY winner HAVING COUNT(*) > 1;",
      "SELECT event_name, location, winner FROM sports_events WHERE winner LIKE 'Team%' OR location LIKE '%Stadium%' ORDER BY event_date;",
      "SELECT event_name, location, winner FROM sports_events WHERE event_name NOT LIKE 'Basketball%' AND location != 'Los Angeles';",
      "SELECT location, COUNT(*) AS total_events FROM sports_events GROUP BY location HAVING total_events > 1;",
      "SELECT event_name, location, winner FROM sports_events WHERE event_name = 'Football' AND event_date > '2022-01-01';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sports_events",
      "SELECT event_id, event_name, event_location FROM sports_events",
      "SELECT event_name, event_date FROM sports_events",
      "SELECT * FROM event_results",
      "SELECT event_id, winner_team, losing_score FROM event_results",
      "SELECT event_id, winner_team, loser_team, winning_score, losing_score FROM event_results",
      "SELECT event_date, winner_team FROM event_results",
      "SELECT event_name, winner_team, losing_score FROM sports_events JOIN event_results ON sports_events.event_id = event_results.event_id",
      "SELECT event_name, winner_team, winning_score FROM sports_events JOIN event_results ON sports_events.event_id = event_results.event_id",
      "SELECT event_name, loser_team, losing_score FROM sports_events JOIN event_results ON sports_events.event_id = event_results.event_id",
      "SELECT event_id, event_name, event_location, winner_team, losing_score FROM sports_events JOIN event_results ON sports_events.event_id = event_results.event_id",
      "SELECT * FROM sports_events WHERE event_date = '2022-05-15'",
      "SELECT * FROM event_results WHERE event_date >= '2022-06-01'",
      "SELECT event_id, event_name, event_location FROM sports_events WHERE event_location = 'Stadium A'",
      "SELECT * FROM event_results WHERE winner_team = 'Team A'",
      "SELECT * FROM event_results WHERE winning_score > 50",
      "SELECT event_id, event_name, event_location FROM sports_events WHERE event_date >= '2022-07-01' AND event_date <= '2022-08-31'",
      "SELECT event_id, event_name FROM sports_events WHERE event_name LIKE '%olympics%'",
      "SELECT * FROM event_results WHERE winner_team LIKE '%United%'",
      "SELECT * FROM event_results WHERE event_date BETWEEN '2022-09-01' AND '2022-09-30'",
      "SELECT * FROM sports_events;",
      "SELECT event_name, event_location FROM sports_events;",
      "SELECT * FROM event_results WHERE winner_team = 'TeamA';",
      "SELECT event_name, winner_team, losing_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id;",
      "SELECT event_name, winning_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id WHERE event_date > '2022-01-01';",
      "SELECT event_name, winner_team, event_location FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id WHERE event_results.winning_score > 100;",
      "SELECT event_location, winning_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id WHERE event_results.event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT DISTINCT event_location FROM sports_events;",
      "SELECT event_name, event_location FROM sports_events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT COUNT(*) AS total_events FROM sports_events;",
      "SELECT AVG(winning_score) AS average_score FROM event_results;",
      "SELECT event_name, MAX(winning_score) AS highest_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id;",
      "SELECT event_name, MIN(losing_score) AS lowest_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id;",
      "SELECT COUNT(*) AS total_results FROM event_results WHERE event_date < '2022-11-30';",
      "SELECT event_name, COUNT(*) AS total_results FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id GROUP BY event_name HAVING COUNT(*) > 1;",
      "SELECT event_name, AVG(winning_score) AS avg_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id GROUP BY event_name;",
      "SELECT event_name, SUM(winning_score) AS total_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id GROUP BY event_name HAVING SUM(winning_score) > 500;",
      "SELECT event_name, winner_team, winning_score, losing_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id ORDER BY event_date DESC LIMIT 5;",
      "SELECT event_name, winner_team, losing_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id WHERE winner_team = 'TeamB' ORDER BY event_date ASC LIMIT 10;",
      "SELECT event_name, winner_team, loser_team, winning_score, losing_score FROM sports_events INNER JOIN event_results ON sports_events.event_id = event_results.event_id WHERE event_name LIKE '%Championship%' ORDER BY event_date ASC LIMIT 3;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sports_events;",
      "SELECT event_name, event_date, location FROM sports_events;",
      "SELECT event_id, event_name FROM sports_events;",
      "SELECT * FROM event_participants;",
      "SELECT participant_name, participant_country FROM event_participants;",
      "SELECT participant_id, participant_name, participant_age FROM event_participants;",
      "SELECT * FROM event_results;",
      "SELECT result_id, event_id, participant_id FROM event_results;",
      "SELECT result_description FROM event_results;",
      "SELECT result_id, result_score FROM event_results;",
      "SELECT event_id, participant_id FROM event_results;",
      "SELECT e.event_name, p.participant_name, r.result_description FROM sports_events e JOIN event_participants p ON e.event_id = p.event_id JOIN event_results r ON r.event_id = e.event_id;",
      "SELECT e.event_name, p.participant_name, r.result_score FROM sports_events e JOIN event_participants p ON e.event_id = p.event_id JOIN event_results r ON r.event_id = e.event_id;",
      "SELECT e.event_name, p.participant_name, r.result_description, r.result_score FROM sports_events e JOIN event_participants p ON e.event_id = p.event_id JOIN event_results r ON r.event_id = e.event_id;",
      "SELECT e.event_name, p.participant_country, r.result_description FROM sports_events e JOIN event_participants p ON e.event_id = p.event_id JOIN event_results r ON r.event_id = e.event_id;",
      "SELECT e.event_name, p.participant_country, r.result_score FROM sports_events e JOIN event_participants p ON e.event_id = p.event_id JOIN event_results r ON r.event_id = e.event_id;",
      "SELECT e.event_name, p.participant_country, r.result_description, r.result_score FROM sports_events e JOIN event_participants p ON e.event_id = p.event_id JOIN event_results r ON r.event_id = e.event_id;",
      "SELECT COUNT(*) AS event_count FROM sports_events;",
      "SELECT AVG(participant_age) AS avg_age FROM event_participants;",
      "SELECT MAX(result_score) AS max_score FROM event_results;",
      "SELECT * FROM sports_events;",
      "SELECT event_name, event_date, location FROM sports_events WHERE event_type = 'Football';",
      "SELECT event_name, event_date, participant_name, participant_country FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id;",
      "SELECT event_name, event_date, location, participant_name, participant_country FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id WHERE event_date >= '2022-01-01';",
      "SELECT event_name, event_date, location, participant_name, participant_country, result_description, result_score FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id JOIN event_results ON sports_events.event_id = event_results.event_id;",
      "SELECT event_name, participant_name, result_description, result_score FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id JOIN event_results ON sports_events.event_id = event_results.event_id WHERE event_date >= '2022-01-01';",
      "SELECT COUNT(*) AS total_events FROM sports_events;",
      "SELECT MAX(result_score) AS highest_score FROM event_results;",
      "SELECT MIN(result_score) AS lowest_score FROM event_results;",
      "SELECT AVG(result_score) AS average_score FROM event_results;",
      "SELECT event_name, COUNT(participant_id) AS total_participants FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id GROUP BY sports_events.event_id;",
      "SELECT participant_country, COUNT(participant_id) AS total_participants FROM event_participants GROUP BY participant_country;",
      "SELECT event_name, event_date, location, CASE WHEN event_type IS NULL THEN 'Not Specified' ELSE event_type END AS event_type FROM sports_events;",
      "SELECT event_name, event_date, location, CASE WHEN participant_age < 18 THEN 'Minor' ELSE 'Adult' END AS participant_category FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id;",
      "SELECT participant_name, SUM(result_score) AS total_score FROM event_participants JOIN event_results ON event_participants.participant_id = event_results.participant_id GROUP BY event_participants.participant_id;",
      "SELECT event_type, AVG(result_score) AS average_score FROM sports_events JOIN event_results ON sports_events.event_id = event_results.event_id GROUP BY event_type;",
      "SELECT event_name, event_date, location, participant_name, result_description, result_score FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id JOIN event_results ON sports_events.event_id = event_results.event_id ORDER BY result_score DESC;",
      "SELECT event_name, event_date, location, participant_name, result_description, result_score FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id JOIN event_results ON sports_events.event_id = event_results.event_id ORDER BY event_date ASC, result_score DESC;",
      "SELECT event_name, event_date, location, participant_name, result_description, result_score FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id JOIN event_results ON sports_events.event_id = event_results.event_id WHERE event_type IN ('Football', 'Basketball', 'Tennis');",
      "SELECT event_name, event_date, location, participant_name, result_description, result_score FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id JOIN event_results ON sports_events.event_id = event_results.event_id WHERE participant_age > 25;",
      "SELECT event_name, event_date, location, participant_name, result_description, result_score FROM sports_events JOIN event_participants ON sports_events.event_id = event_participants.event_id JOIN event_results ON sports_events.event_id = event_results.event_id WHERE participant_country = 'USA';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sports_events",
      "SELECT event_name, event_date FROM sports_events",
      "SELECT * FROM teams",
      "SELECT team_name, team_sport FROM teams",
      "SELECT * FROM players",
      "SELECT player_name, player_position FROM players",
      "SELECT * FROM results",
      "SELECT event_id, winning_team_id, losing_team_id FROM results",
      "SELECT event_name, event_location FROM sports_events",
      "SELECT team_name, team_sport FROM teams",
      "SELECT player_name, player_position FROM players",
      "SELECT event_id, event_name, event_date FROM sports_events",
      "SELECT team_id, team_name FROM teams",
      "SELECT player_id, player_name FROM players",
      "SELECT result_id, event_id FROM results",
      "SELECT event_name, event_date, event_location FROM sports_events",
      "SELECT team_name, team_sport, player_position FROM teams, players",
      "SELECT event_id, winning_team_id, losing_team_id FROM results",
      "SELECT event_name, event_date, event_location, team_name FROM sports_events, teams",
      "SELECT player_name, player_position, team_name FROM players, teams",
      "SELECT * FROM sports_events WHERE event_date = '2022-10-15';",
      "SELECT event_name, event_location FROM sports_events WHERE event_date > '2023-01-01';",
      "SELECT event_name, event_location FROM sports_events WHERE event_date BETWEEN '2022-11-01' AND '2022-12-01';",
      "SELECT * FROM teams WHERE team_sport = 'Football';",
      "SELECT team_name FROM teams WHERE team_id = 5;",
      "SELECT * FROM players WHERE player_team_id = 10;",
      "SELECT player_name, player_position FROM players WHERE player_position IS NOT NULL;",
      "SELECT r.*, e.event_name FROM results r INNER JOIN sports_events e ON r.event_id = e.event_id;",
      "SELECT p.player_name, t.team_name FROM players p LEFT JOIN teams t ON p.player_team_id = t.team_id;",
      "SELECT e.event_name, t1.team_name AS 'winning_team', t2.team_name AS 'losing_team' FROM results r INNER JOIN sports_events e ON r.event_id = e.event_id INNER JOIN teams t1 ON r.winning_team_id = t1.team_id INNER JOIN teams t2 ON r.losing_team_id = t2.team_id;",
      "SELECT * FROM sports_events WHERE event_location LIKE '%Stadium%';",
      "SELECT team_name, COUNT(*) AS 'player_count' FROM players GROUP BY player_team_id;",
      "SELECT t.team_name, COUNT(r.result_id) AS 'result_count' FROM teams t LEFT JOIN results r ON t.team_id = r.winning_team_id GROUP BY t.team_name;",
      "SELECT e.event_name, t.team_name AS 'winning_team' FROM results r INNER JOIN sports_events e ON r.event_id = e.event_id INNER JOIN teams t ON r.winning_team_id = t.team_id WHERE t.team_sport = 'Basketball';",
      "SELECT p.player_name, COUNT(r.result_id) AS 'win_count' FROM players p LEFT JOIN results r ON p.player_team_id = r.winning_team_id GROUP BY p.player_name HAVING COUNT(r.result_id) > 5;",
      "SELECT e.event_name, t1.team_name AS 'winning_team', t2.team_name AS 'losing_team' FROM results r INNER JOIN sports_events e ON r.event_id = e.event_id INNER JOIN teams t1 ON r.winning_team_id = t1.team_id INNER JOIN teams t2 ON r.losing_team_id = t2.team_id WHERE t1.team_sport = 'Soccer' AND t2.team_sport = 'Football';",
      "SELECT event_name, event_date, event_location, COUNT(r.result_id) AS 'result_count' FROM sports_events e LEFT JOIN results r ON e.event_id = r.event_id GROUP BY event_name, event_date, event_location;",
      "SELECT t.team_name, AVG(r.result_id) AS 'avg_result_id' FROM teams t LEFT JOIN results r ON t.team_id = r.winning_team_id GROUP BY t.team_name HAVING AVG(r.result_id) > 10;",
      "SELECT e.event_name, t1.team_name AS 'winning_team', t2.team_name AS 'losing_team' FROM results r INNER JOIN sports_events e ON r.event_id = e.event_id INNER JOIN teams t1 ON r.winning_team_id = t1.team_id INNER JOIN teams t2 ON r.losing_team_id = t2.team_id ORDER BY e.event_date DESC;",
      "SELECT p.player_name, t.team_name AS 'team_name', COUNT(r.result_id) FROM players p INNER JOIN teams t ON p.player_team_id = t.team_id LEFT JOIN results r ON p.player_team_id = r.winning_team_id GROUP BY p.player_name, t.team_name ORDER BY COUNT(r.result_id) DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM past_sporting_events;",
      "SELECT event_name, event_date, event_location FROM past_sporting_events;",
      "SELECT * FROM event_participants;",
      "SELECT participant_name, participant_country FROM event_participants;",
      "SELECT * FROM event_results;",
      "SELECT winner_id, loser_id, result_description FROM event_results;",
      "SELECT * FROM event_statistics;",
      "SELECT participant_id, points_scored, rebounds, assists, steals FROM event_statistics;",
      "SELECT * FROM event_comments;",
      "SELECT comment_text, comment_date, commenter_name FROM event_comments;",
      "SELECT pst.event_name, ep.participant_name FROM past_sporting_events pst JOIN event_participants ep ON pst.event_id = ep.event_id;",
      "SELECT esp.event_name, er.winner_id, er.loser_id FROM past_sporting_events esp JOIN event_results er ON esp.event_id = er.event_id;",
      "SELECT pst.event_name, es.points_scored, es.rebounds FROM past_sporting_events pst JOIN event_statistics es ON pst.event_id = es.event_id;",
      "SELECT er.result_description, ec.comment_text FROM event_results er JOIN event_comments ec ON er.event_id = ec.event_id;",
      "SELECT pst.event_name, ep.participant_name, ec.comment_date FROM past_sporting_events pst JOIN event_participants ep ON pst.event_id = ep.event_id JOIN event_comments ec ON pst.event_id = ec.event_id;",
      "SELECT pst.event_name, ep.participant_name, es.points_scored, es.rebounds FROM past_sporting_events pst JOIN event_participants ep ON pst.event_id = ep.event_id JOIN event_statistics es ON pst.event_id = es.event_id;",
      "SELECT pst.event_name, ep.participant_name, er.winner_id, ec.comment_text FROM past_sporting_events pst JOIN event_participants ep ON pst.event_id = ep.event_id JOIN event_results er ON pst.event_id = er.event_id JOIN event_comments ec ON pst.event_id = ec.event_id;",
      "SELECT pst.event_name, es.points_scored, es.assists, ec.comment_date FROM past_sporting_events pst JOIN event_statistics es ON pst.event_id = es.event_id JOIN event_comments ec ON pst.event_id = ec.event_id;",
      "SELECT ep.participant_name, er.result_description, ec.comment_text FROM event_participants ep JOIN event_results er ON ep.participant_id = er.winner_id JOIN event_comments ec ON ep.event_id = ec.event_id;",
      "SELECT pst.event_name, ep.participant_name, er.winner_id, es.assists, ec.comment_date FROM past_sporting_events pst JOIN event_participants ep ON pst.event_id = ep.event_id JOIN event_results er ON ep.event_id = er.event_id JOIN event_statistics es ON pst.event_id = es.event_id JOIN event_comments ec ON pst.event_id = ec.event_id;",
      "SELECT pst.event_name, ep.participant_name, er.result_description, es.points_scored, ec.comment_text FROM past_sporting_events pst JOIN event_participants ep ON pst.event_id = ep.event_id JOIN event_results er ON ep.event_id = er.event_id JOIN event_statistics es ON er.loser_id = es.participant_id JOIN event_comments ec ON ec.event_id = pst.event_id;",
      "SELECT event_name, event_date, event_location FROM past_sporting_events;",
      "SELECT event_name, event_date, event_location, participant_name FROM past_sporting_events JOIN event_participants ON past_sporting_events.event_id = event_participants.event_id;",
      "SELECT event_name, event_date, event_location, winner_id, loser_id FROM past_sporting_events JOIN event_results ON past_sporting_events.event_id = event_results.event_id;",
      "SELECT event_name, event_date, event_location, points_scored, rebounds, assists, steals FROM past_sporting_events JOIN event_statistics ON past_sporting_events.event_id = event_statistics.event_id;",
      "SELECT event_name, event_date, event_location, comment_text, comment_date, commenter_name FROM past_sporting_events JOIN event_comments ON past_sporting_events.event_id = event_comments.event_id;",
      "SELECT comment_text, comment_date, commenter_name FROM event_comments WHERE event_id = 1;",
      "SELECT event_participants.participant_name, event_results.result_description FROM event_participants JOIN event_results ON event_participants.participant_id = event_results.winner_id;",
      "SELECT event_participants.participant_name, event_statistics.points_scored, event_statistics.rebounds FROM event_participants JOIN event_statistics ON event_participants.participant_id = event_statistics.participant_id;",
      "SELECT event_participants.participant_name, event_results.result_description FROM event_participants JOIN event_results ON event_participants.participant_id = event_results.loser_id;",
      "SELECT event_name, event_date, event_location, COUNT(*) AS participants_count FROM past_sporting_events JOIN event_participants ON past_sporting_events.event_id = event_participants.event_id GROUP BY past_sporting_events.event_id;",
      "SELECT event_name, event_date, event_location FROM past_sporting_events WHERE event_date > '2022-01-01';",
      "SELECT event_name, event_date, event_location FROM past_sporting_events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT participant_name, event_name FROM event_participants JOIN past_sporting_events ON event_participants.event_id = past_sporting_events.event_id ORDER BY participant_name ASC, event_name DESC;",
      "SELECT event_name, AVG(points_scored) AS avg_points, AVG(rebounds) AS avg_rebounds, AVG(assists) AS avg_assists FROM past_sporting_events JOIN event_statistics ON past_sporting_events.event_id = event_statistics.event_id GROUP BY past_sporting_events.event_id;",
      "SELECT event_name, CONCAT(participant_name, ' - ', comment_text) AS participant_comment FROM past_sporting_events JOIN event_comments ON past_sporting_events.event_id = event_comments.event_id JOIN event_participants ON event_comments.commenter_name = event_participants.participant_name;",
      "SELECT event_name, SUM(points_scored) AS total_points, SUM(rebounds) AS total_rebounds FROM past_sporting_events JOIN event_statistics ON past_sporting_events.event_id = event_statistics.event_id GROUP BY past_sporting_events.event_id;",
      "SELECT event_name, event_date, event_location, event_results.result_description FROM past_sporting_events JOIN event_results ON past_sporting_events.event_id = event_results.event_id WHERE event_results.result_description LIKE '%exciting%';",
      "SELECT event_name, event_date, event_location, participant_name, points_scored, rebounds, assists FROM past_sporting_events JOIN event_statistics ON past_sporting_events.event_id = event_statistics.event_id JOIN event_participants ON event_statistics.participant_id = event_participants.participant_id;",
      "SELECT event_name, event_date, event_location FROM past_sporting_events ORDER BY event_date ASC LIMIT 10;",
      "SELECT event_name, event_date, event_location FROM past_sporting_events ORDER BY event_date DESC LIMIT 5;"
    ]
  }
]