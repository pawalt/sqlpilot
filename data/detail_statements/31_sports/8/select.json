[
  {
    "statements": [
      "SELECT * FROM fan_engagement WHERE fan_id = 1;",
      "SELECT fan_name, email FROM fan_engagement WHERE engagement_level > 50;",
      "SELECT phone_number FROM fan_engagement WHERE last_interaction_date = '2022-02-28';",
      "SELECT * FROM fan_engagement WHERE fan_name LIKE 'J%';",
      "SELECT fan_name, engagement_level FROM fan_engagement WHERE fan_id BETWEEN 10 AND 20;",
      "SELECT * FROM fan_engagement WHERE email = 'example@email.com';",
      "SELECT fan_id, fan_name, engagement_level FROM fan_engagement WHERE phone_number IS NOT NULL;",
      "SELECT COUNT(*) FROM fan_engagement;",
      "SELECT DISTINCT fan_name FROM fan_engagement;",
      "SELECT fan_id, MAX(engagement_level) AS max_level FROM fan_engagement;",
      "SELECT MIN(engagement_level) AS min_level, AVG(engagement_level) AS avg_level FROM fan_engagement;",
      "SELECT fan_id, fan_name, engagement_level FROM fan_engagement ORDER BY engagement_level DESC LIMIT 5;",
      "SELECT AVG(engagement_level) AS avg_level FROM fan_engagement WHERE last_interaction_date > '2022-01-01';",
      "SELECT fan_name, phone_number FROM fan_engagement WHERE engagement_level < 30 ORDER BY last_interaction_date DESC;",
      "SELECT * FROM fan_engagement WHERE fan_id = 5 OR fan_id = 10 OR fan_id = 15;",
      "SELECT fan_id, fan_name FROM fan_engagement WHERE email LIKE '%@domain.com';",
      "SELECT fan_name, engagement_level FROM fan_engagement WHERE last_interaction_date >= '2022-03-01' AND last_interaction_date <= '2022-03-31';",
      "SELECT fan_id, fan_name, engagement_level FROM fan_engagement WHERE last_interaction_date > '2022-04-15' ORDER BY last_interaction_date ASC;",
      "SELECT fan_id, fan_name, engagement_level FROM fan_engagement WHERE engagement_level > 75 AND last_interaction_date < '2022-05-01';",
      "SELECT fan_id, fan_name, engagement_level FROM fan_engagement WHERE fan_name = 'Alice' AND engagement_level < 40;",
      "SELECT * FROM fan_engagement WHERE engagement_level > 50;",
      "SELECT fan_name, email, last_interaction_date FROM fan_engagement WHERE engagement_level > 75;",
      "SELECT fan_name, phone_number FROM fan_engagement WHERE fan_id IN (1, 3, 5);",
      "SELECT SUM(engagement_level) AS total_engagement FROM fan_engagement;",
      "SELECT fan_name, email FROM fan_engagement WHERE last_interaction_date < '2022-01-01';",
      "SELECT fan_name, engagement_level FROM fan_engagement WHERE engagement_level BETWEEN 30 AND 60;",
      "SELECT COUNT(*) AS total_fans FROM fan_engagement WHERE engagement_level < 40;",
      "SELECT AVG(engagement_level) AS avg_engagement FROM fan_engagement WHERE last_interaction_date > '2022-03-01';",
      "SELECT fan_name, email, phone_number FROM fan_engagement WHERE fan_name LIKE 'A%';",
      "SELECT fan_name, engagement_level FROM fan_engagement WHERE phone_number LIKE '%555%';",
      "SELECT fan_name, last_interaction_date FROM fan_engagement ORDER BY last_interaction_date DESC;",
      "SELECT fan_name, phone_number FROM fan_engagement ORDER BY fan_name ASC;",
      "SELECT DISTINCT fan_name FROM fan_engagement;",
      "SELECT COUNT(DISTINCT email) AS unique_emails FROM fan_engagement;",
      "SELECT fan_name, engagement_level FROM fan_engagement WHERE engagement_level > (SELECT AVG(engagement_level) FROM fan_engagement);",
      "SELECT fan_name, email FROM fan_engagement WHERE fan_id = (SELECT MAX(fan_id) FROM fan_engagement);",
      "SELECT * FROM fan_engagement WHERE last_interaction_date = (SELECT MAX(last_interaction_date) FROM fan_engagement);",
      "SELECT fan_name, email FROM fan_engagement WHERE fan_id BETWEEN 10 AND 20;",
      "SELECT fan_name, email, phone_number FROM fan_engagement WHERE last_interaction_date < '2022-02-15' AND engagement_level > 60;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM fans;",
      "SELECT fan_id, fan_name, email FROM fans;",
      "SELECT fan_name FROM fans WHERE engagement_score > 50;",
      "SELECT fan_id, email FROM fans WHERE registration_date > '2021-01-01';",
      "SELECT * FROM interactions;",
      "SELECT fan_id, interaction_type FROM interactions;",
      "SELECT * FROM fans f JOIN interactions i ON f.fan_id = i.fan_id;",
      "SELECT fan_name, interaction_date FROM fans f JOIN interactions i ON f.fan_id = i.fan_id;",
      "SELECT fan_name, interaction_date FROM fans f INNER JOIN interactions i ON f.fan_id = i.fan_id;",
      "SELECT f.fan_id, i.interaction_details FROM fans f LEFT JOIN interactions i ON f.fan_id = i.fan_id;",
      "SELECT f.fan_name, COUNT(i.interaction_id) AS total_interactions FROM fans f LEFT JOIN interactions i ON f.fan_id = i.fan_id GROUP BY f.fan_name;",
      "SELECT f.fan_name, MAX(i.interaction_date) AS last_interaction_date FROM fans f LEFT JOIN interactions i ON f.fan_id = i.fan_id GROUP BY f.fan_name;",
      "SELECT fan_name, AVG(engagement_score) AS avg_engagement_score FROM fans GROUP BY fan_name;",
      "SELECT fan_name, SUM(engagement_score) AS total_engagement_score FROM fans GROUP BY fan_name;",
      "SELECT fan_name, interaction_type, interaction_date FROM fans f JOIN interactions i ON f.fan_id = i.fan_id WHERE f.engagement_score > 50;",
      "SELECT fan_name, interaction_type, interaction_date FROM fans f JOIN interactions i ON f.fan_id = i.fan_id WHERE i.interaction_date > '2021-01-01';",
      "SELECT fan_name, interaction_type, interaction_details FROM fans f JOIN interactions i ON f.fan_id = i.fan_id WHERE i.interaction_type = 'like';",
      "SELECT DISTINCT(fan_name) FROM fans;",
      "SELECT fan_name, COUNT(*) AS total_interactions FROM fans f JOIN interactions i ON f.fan_id = i.fan_id GROUP BY fan_name HAVING COUNT(*) > 3;",
      "SELECT fan_name, interaction_date FROM fans f JOIN interactions i ON f.fan_id = i.fan_id WHERE i.interaction_type IN ('like', 'comment');",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE engagement_score > 100;",
      "SELECT * FROM fans WHERE registration_date >= '2022-01-01';",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE registration_date < '2022-01-01';",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE registration_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans ORDER BY engagement_score DESC;",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans ORDER BY registration_date ASC;",
      "SELECT fan_id, fan_name, email, COUNT(interaction_id) AS total_interactions FROM fans LEFT JOIN interactions ON fans.fan_id = interactions.fan_id GROUP BY fan_id;",
      "SELECT fan_name, SUM(engagement_score) AS total_engagement FROM fans GROUP BY fan_name;",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE fan_id IN (SELECT fan_id FROM interactions WHERE interaction_type = 'like');",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE fan_id IN (SELECT fan_id FROM interactions WHERE interaction_type = 'comment') AND engagement_score > 50;",
      "SELECT fans.fan_id, fan_name, email, engagement_score, interaction_type, interaction_date, interaction_details FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id;",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE engagement_score > (SELECT AVG(engagement_score) FROM fans);",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE registration_date >= (SELECT MIN(registration_date) FROM fans);",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE fan_name LIKE 'A%';",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE fan_name NOT LIKE 'J%';",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE registration_date >= '2022-01-01' AND engagement_score > 50;",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE engagement_score > 100 OR registration_date < '2022-01-01';",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE registration_date < '2022-01-01' AND engagement_score > 50;",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE engagement_score > 100 AND fan_id IN (SELECT fan_id FROM interactions WHERE interaction_type = 'share');",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE registration_date BETWEEN '2022-01-01' AND '2022-06-30' AND engagement_score < 50;",
      "SELECT fan_id, fan_name, email, engagement_score FROM fans WHERE registration_date BETWEEN '2022-01-01' AND '2022-06-30' AND engagement_score >= 50;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Fans;",
      "SELECT fan_name, fan_email FROM Fans;",
      "SELECT fan_id, fan_name FROM Fans WHERE fan_age > 18;",
      "SELECT * FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id;",
      "SELECT fan_name, interaction_type FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id;",
      "SELECT fan_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id WHERE Interactions.interaction_type = 'like';",
      "SELECT fan_name, campaign_name FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id;",
      "SELECT fan_name, interaction_date, campaign_start_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id;",
      "SELECT campaign_name, COUNT(interaction_id) AS total_interactions FROM Campaigns JOIN Interactions ON Campaigns.campaign_id = Interactions.campaign_id GROUP BY campaign_name;",
      "SELECT fan_name, AVG(fan_age) AS average_age FROM Fans GROUP BY fan_name;",
      "SELECT campaign_name, DATEDIFF(campaign_end_date, campaign_start_date) AS campaign_duration FROM Campaigns;",
      "SELECT fan_name, interaction_date, TIMESTAMPDIFF(MINUTE, interaction_date, NOW()) AS minutes_since_interaction FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id;",
      "SELECT fan_name, COUNT(DISTINCT campaign_id) AS total_campaigns_interacted FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id GROUP BY fan_name;",
      "SELECT fan_name, SUM(CASE WHEN interaction_type = 'like' THEN 1 ELSE 0 END) AS total_likes, SUM(CASE WHEN interaction_type = 'comment' THEN 1 ELSE 0 END) AS total_comments FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id GROUP BY fan_name;",
      "SELECT fan_name, MAX(fan_age) AS max_age, MIN(fan_age) AS min_age FROM Fans GROUP BY fan_name;",
      "SELECT fan_name, AVG(DATEDIFF(NOW(), interaction_date)) AS average_days_since_interaction FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id GROUP BY fan_name;",
      "SELECT campaign_name, COUNT(interaction_id) AS total_interactions, SUM(CASE WHEN interaction_type = 'like' THEN 1 ELSE 0 END) AS total_likes, SUM(CASE WHEN interaction_type = 'comment' THEN 1 ELSE 0 END) AS total_comments FROM Campaigns JOIN Interactions ON Campaigns.campaign_id = Interactions.campaign_id  GROUP BY campaign_name;",
      "SELECT fan_name, COUNT(campaign_id) AS total_campaigns_interacted, SUM(CASE WHEN interaction_type = 'like' THEN 1 ELSE 0 END) AS total_likes, SUM(CASE WHEN interaction_type = 'comment' THEN 1 ELSE 0 END) AS total_comments FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id GROUP BY fan_name;",
      "SELECT fan_name, AVG(fan_age) AS average_age, AVG(DATEDIFF(NOW(), interaction_date)) AS average_days_since_interaction FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id GROUP BY fan_name;",
      "SELECT fan_name, COUNT(DISTINCT campaign_id) AS total_campaigns_interacted, AVG(DATEDIFF(NOW(), interaction_date)) AS average_days_since_interaction FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id GROUP BY fan_name;",
      "SELECT * FROM Fans;",
      "SELECT fan_name, fan_email FROM Fans WHERE fan_age > 30;",
      "SELECT COUNT(*) FROM Fans;",
      "SELECT fan_id, fan_name FROM Fans WHERE fan_email LIKE '%gmail%';",
      "SELECT COUNT(DISTINCT fan_id) FROM Interactions WHERE interaction_date >= DATE('2022-01-01');",
      "SELECT fan_name, campaign_name FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id;",
      "SELECT fan_name, interaction_type, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id WHERE interaction_type = 'like';",
      "SELECT fan_name, COUNT(interaction_id) AS total_interactions FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id GROUP BY fan_name;",
      "SELECT fan_name, campaign_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id WHERE interaction_date BETWEEN TIMESTAMP('2022-01-01 00:00:00') AND TIMESTAMP('2022-02-01 00:00:00');",
      "SELECT fan_name, campaign_name, COUNT(interaction_id) AS total_interactions FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id GROUP BY fan_name, campaign_name;",
      "SELECT fan_name, campaign_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id WHERE fan_age >= 25 AND campaign_start_date >= DATE('2022-03-01');",
      "SELECT DISTINCT fan_name FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id WHERE interaction_type IN ('like', 'comment');",
      "SELECT fan_name, campaign_name, interaction_type, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id WHERE fan_name LIKE '%John%';",
      "SELECT fan_name, campaign_name, DATEDIFF(campaign_end_date, campaign_start_date) AS campaign_duration FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id;",
      "SELECT fan_name, campaign_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id ORDER BY interaction_date DESC;",
      "SELECT fan_name, campaign_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id LIMIT 10;",
      "SELECT fan_name, campaign_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id OFFSET 5;",
      "SELECT fan_id, AVG(fan_age) AS avg_age FROM Fans GROUP BY fan_id HAVING avg_age > 30;",
      "SELECT fan_name, campaign_name, interaction_date, interaction_type FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id WHERE fan_id = 1;",
      "SELECT fan_name, campaign_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id UNION SELECT fan_name, campaign_name, interaction_date FROM Fans JOIN Interactions ON Fans.fan_id = Interactions.fan_id JOIN Campaigns ON Interactions.campaign_id = Campaigns.campaign_id WHERE interaction_type = 'like';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM fans;",
      "SELECT fan_id, fan_name FROM fans WHERE age > 20;",
      "SELECT fan_id, email FROM fans WHERE fan_name LIKE 'A%';",
      "SELECT COUNT(*) FROM fans;",
      "SELECT * FROM campaigns WHERE start_date > '2022-01-01';",
      "SELECT campaign_name, end_date FROM campaigns WHERE end_date < '2022-12-31';",
      "SELECT * FROM interactions WHERE interaction_type = 'click';",
      "SELECT fan_id, SUM(likes) AS total_likes FROM engagement GROUP BY fan_id;",
      "SELECT fan_id, campaign_id, interaction_date FROM interactions WHERE campaign_id = 1 ORDER BY interaction_date DESC;",
      "SELECT fan_name, likes FROM fans INNER JOIN engagement ON fans.fan_id = engagement.fan_id;",
      "SELECT fan_name, campaign_name, likes, shares FROM fans INNER JOIN engagement ON fans.fan_id = engagement.fan_id INNER JOIN campaigns ON engagement.campaign_id = campaigns.campaign_id;",
      "SELECT fan_id, COUNT(*) AS total_interactions FROM interactions GROUP BY fan_id;",
      "SELECT fan_name, SUM(likes) AS total_likes, SUM(comments) AS total_comments FROM fans INNER JOIN engagement ON fans.fan_id = engagement.fan_id GROUP BY fan_id;",
      "SELECT fan_name, campaign_id, interaction_date FROM fans CROSS JOIN interactions WHERE fans.age > 25;",
      "SELECT fan_name, engagement_id, likes FROM fans LEFT JOIN engagement ON fans.fan_id = engagement.fan_id;",
      "SELECT campaign_name, SUM(shares) AS total_shares FROM campaigns INNER JOIN engagement ON campaigns.campaign_id = engagement.campaign_id GROUP BY campaign_name;",
      "SELECT fan_id, AVG(comments) AS avg_comments FROM engagement GROUP BY fan_id HAVING avg_comments > 5;",
      "SELECT fan_id, campaign_id, interaction_date FROM interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT fan_id, MAX(shares) AS max_shares FROM engagement GROUP BY fan_id;",
      "SELECT fan_id, COUNT(DISTINCT interaction_type) AS unique_interactions FROM interactions GROUP BY fan_id;",
      "SELECT * FROM fans;",
      "SELECT fan_id, fan_name FROM fans WHERE age > 30;",
      "SELECT fan_name, email FROM fans WHERE age BETWEEN 20 AND 40;",
      "SELECT fans.fan_name, engagement.likes FROM fans JOIN engagement ON fans.fan_id = engagement.fan_id;",
      "SELECT fan_name, campaign_name FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id JOIN campaigns ON interactions.campaign_id = campaigns.campaign_id;",
      "SELECT fan_name, engagement.likes, engagement.comments FROM fans JOIN engagement ON fans.fan_id = engagement.fan_id WHERE engagement.likes > 10;",
      "SELECT DISTINCT fan_name FROM fans;",
      "SELECT fan_name, SUM(engagement.likes) AS total_likes FROM fans JOIN engagement ON fans.fan_id = engagement.fan_id GROUP BY fan_name;",
      "SELECT fan_name, AVG(engagement.likes) AS avg_likes FROM fans JOIN engagement ON fans.fan_id = engagement.fan_id GROUP BY fan_name HAVING AVG(engagement.likes) > 5;",
      "SELECT fan_name, COUNT(DISTINCT engagement.campaign_id) AS total_campaigns FROM fans JOIN engagement ON fans.fan_id = engagement.fan_id;",
      "SELECT fan_name, interaction_type, interaction_date FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id;",
      "SELECT fan_name, campaign_name, start_date, end_date FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id JOIN campaigns ON interactions.campaign_id = campaigns.campaign_id;",
      "SELECT COUNT(*) AS total_engagement FROM engagement;",
      "SELECT fan_name, email FROM fans WHERE email LIKE '%gmail.com';",
      "SELECT fan_name, campaign_name FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id JOIN campaigns ON interactions.campaign_id = campaigns.campaign_id WHERE interaction_type = 'click';",
      "SELECT fan_name, campaign_name FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id JOIN campaigns ON interactions.campaign_id = campaigns.campaign_id WHERE interaction_date >= '2022-01-01';",
      "SELECT fan_name, campaign_name, interaction_type, interaction_date FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id JOIN campaigns ON interactions.campaign_id = campaigns.campaign_id WHERE interaction_type = 'like' AND interaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT fan_name, SUM(engagement.likes) AS total_likes, SUM(engagement.comments) AS total_comments FROM fans JOIN engagement ON fans.fan_id = engagement.fan_id GROUP BY fan_name HAVING total_likes > 20;",
      "SELECT fan_name, COUNT(*) AS total_interactions FROM fans JOIN interactions ON fans.fan_id = interactions.fan_id GROUP BY fan_name;",
      "SELECT fan_name, MAX(engagement.likes) AS max_likes FROM fans JOIN engagement ON fans.fan_id = engagement.fan_id GROUP BY fan_name HAVING max_likes > 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Fans;",
      "SELECT fan_name, email FROM Fans WHERE gender = 'Male';",
      "SELECT fan_name, gender FROM Fans WHERE birthdate = '1990-01-01';",
      "SELECT * FROM Teams WHERE city = 'New York';",
      "SELECT team_name, sport FROM Teams WHERE city = 'Los Angeles';",
      "SELECT * FROM Interactions WHERE interaction_type = 'Purchase';",
      "SELECT fan_id, interaction_date FROM Interactions WHERE team_id = '123e4567-e89b-12d3-a456-426614174002';",
      "SELECT * FROM Campaigns WHERE start_date > '2022-01-01';",
      "SELECT campaign_name, end_date FROM Campaigns WHERE start_date < '2022-02-01';",
      "SELECT * FROM Campaign_Results WHERE fan_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT campaign_id, interaction_id FROM Campaign_Results WHERE result = 'Success';",
      "SELECT fan_name, result FROM Fans f INNER JOIN Campaign_Results cr ON f.fan_id = cr.fan_id;",
      "SELECT team_name, interaction_date FROM Teams t INNER JOIN Interactions i ON t.team_id = i.team_id;",
      "SELECT c.campaign_name, cr.result FROM Campaigns c INNER JOIN Campaign_Results cr ON c.campaign_id = cr.campaign_id;",
      "SELECT fan_name, team_name FROM Fans f INNER JOIN Interactions i ON f.fan_id = i.fan_id INNER JOIN Teams t ON i.team_id = t.team_id;",
      "SELECT team_name, COUNT(*) AS total_interactions FROM Teams t INNER JOIN Interactions i ON t.team_id = i.team_id GROUP BY team_name;",
      "SELECT fan_name, MIN(interaction_date) AS first_interaction FROM Fans f INNER JOIN Interactions i ON f.fan_id = i.fan_id GROUP BY fan_name;",
      "SELECT team_name, COUNT(*) AS total_fans FROM Teams t INNER JOIN Interactions i ON t.team_id = i.team_id INNER JOIN Fans f ON i.fan_id = f.fan_id GROUP BY team_name;",
      "SELECT f.fan_name, cr.result FROM (SELECT fan_id, MAX(interaction_date) AS latest_interaction FROM Interactions GROUP BY fan_id) AS latest INNER JOIN Fans f ON latest.fan_id = f.fan_id INNER JOIN Campaign_Results cr ON f.fan_id = cr.fan_id;",
      "SELECT team_name, AVG(DATEDIFF(end_date, start_date)) AS avg_campaign_duration FROM Teams t INNER JOIN Interactions i ON t.team_id = i.team_id INNER JOIN Campaign_Results cr ON i.interaction_id = cr.interaction_id INNER JOIN Campaigns c ON cr.campaign_id = c.campaign_id GROUP BY team_name;",
      "SELECT * FROM Fans WHERE gender = 'Male';",
      "SELECT fan_name, email FROM Fans WHERE birthdate >= '1990-01-01';",
      "SELECT team_name, city FROM Teams WHERE sport = 'Basketball';",
      "SELECT * FROM Interactions WHERE interaction_date >= '2022-01-01' AND interaction_type = 'Like';",
      "SELECT fan_name, email FROM Fans INNER JOIN Interactions ON Fans.fan_id = Interactions.fan_id WHERE Interactions.team_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT campaign_name, start_date, end_date FROM Campaigns WHERE start_date <= '2023-01-01' AND end_date >= '2023-01-01';",
      "SELECT * FROM Fans WHERE fan_id IN (SELECT fan_id FROM Interactions WHERE team_id = '123e4567-e89b-12d3-a456-426614174001' AND interaction_type = 'Share');",
      "SELECT fan_name, email FROM Fans WHERE fan_id NOT IN (SELECT fan_id FROM Campaign_Results WHERE campaign_id = '123e4567-e89b-12d3-a456-426614174002' AND result = 'Successful');",
      "SELECT team_name, city FROM Teams WHERE team_id = '123e4567-e89b-12d3-a456-426614174003';",
      "SELECT * FROM Interactions WHERE interaction_date >= '2023-01-01' AND TEAM_ID = '123e4567-e89b-12d3-a456-426614174004';",
      "SELECT * FROM Fans WHERE birthdate BETWEEN '1990-01-01' AND '1995-01-01';",
      "SELECT fan_name, email FROM Fans WHERE fan_id = '123e4567-e89b-12d3-a456-426614174005';",
      "SELECT campaign_name, start_date, end_date FROM Campaigns WHERE campaign_id = '123e4567-e89b-12d3-a456-426614174006';",
      "SELECT * FROM Interactions WHERE fan_id = '123e4567-e89b-12d3-a456-426614174007';",
      "SELECT fan_name, email FROM Fans INNER JOIN Interactions ON Fans.fan_id = Interactions.fan_id WHERE Interactions.interaction_date BETWEEN '2023-01-01' AND '2023-02-01';",
      "SELECT team_name, city FROM Teams WHERE sport = 'Football';",
      "SELECT * FROM Interactions WHERE interaction_date >= '2023-02-01' AND interaction_type = 'Comment';",
      "SELECT fan_name, email FROM Fans INNER JOIN Interactions ON Fans.fan_id = Interactions.fan_id WHERE Interactions.interaction_type = 'Share' AND Interactions.team_id = '123e4567-e89b-12d3-a456-426614174008';",
      "SELECT campaign_name, start_date, end_date FROM Campaigns WHERE start_date >= '2023-01-01' AND end_date <= '2023-02-28';",
      "SELECT * FROM Campaign_Results WHERE result = 'Successful';"
    ]
  }
]