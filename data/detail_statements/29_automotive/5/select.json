[
  {
    "statements": [
      "SELECT * FROM vehicle_tracking;",
      "SELECT vehicle_id, driver_name FROM vehicle_tracking;",
      "SELECT driver_name, gps_latitude, gps_longitude FROM vehicle_tracking;",
      "SELECT * FROM vehicle_tracking WHERE vehicle_id = 1;",
      "SELECT * FROM vehicle_tracking WHERE driver_name = 'John Doe';",
      "SELECT vehicle_id, gps_latitude FROM vehicle_tracking WHERE gps_longitude < 0;",
      "SELECT driver_name, timestamp FROM vehicle_tracking WHERE gps_latitude BETWEEN 30.0 AND 40.0;",
      "SELECT * FROM vehicle_tracking ORDER BY timestamp DESC;",
      "SELECT * FROM vehicle_tracking ORDER BY gps_latitude ASC;",
      "SELECT * FROM vehicle_tracking WHERE timestamp > '2022-01-01 00:00:00';",
      "SELECT vehicle_id, driver_name FROM vehicle_tracking WHERE gps_longitude < 0 ORDER BY timestamp DESC;",
      "SELECT COUNT(vehicle_id) AS total_vehicles FROM vehicle_tracking;",
      "SELECT MIN(gps_latitude) AS min_latitude, MAX(gps_latitude) AS max_latitude FROM vehicle_tracking;",
      "SELECT AVG(gps_longitude) AS avg_longitude FROM vehicle_tracking;",
      "SELECT driver_name, TIMESTAMPDIFF(MINUTE, timestamp, NOW()) AS minutes_since_update FROM vehicle_tracking;",
      "SELECT DISTINCT driver_name FROM vehicle_tracking;",
      "SELECT * FROM vehicle_tracking WHERE driver_name LIKE 'M%';",
      "SELECT * FROM vehicle_tracking WHERE gps_latitude IS NOT NULL AND gps_longitude IS NOT NULL;",
      "SELECT * FROM vehicle_tracking WHERE timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-02-01 00:00:00';",
      "SELECT vehicle_id, driver_name, gps_latitude, gps_longitude, timestamp FROM vehicle_tracking WHERE driver_name = 'Alice' AND gps_longitude < 0;",
      "SELECT * FROM vehicle_tracking WHERE vehicle_id = 1;",
      "SELECT driver_name, gps_latitude, gps_longitude FROM vehicle_tracking WHERE timestamp > '2022-01-01';",
      "SELECT COUNT(vehicle_id) AS total_vehicles FROM vehicle_tracking;",
      "SELECT driver_name, gps_latitude, gps_longitude, timestamp FROM vehicle_tracking WHERE gps_latitude > 40 AND gps_longitude < -100;",
      "SELECT driver_name, COUNT(*) AS total_records FROM vehicle_tracking GROUP BY driver_name;",
      "SELECT MAX(gps_longitude) AS max_longitude FROM vehicle_tracking;",
      "SELECT driver_name, COUNT(*) AS total_entries FROM vehicle_tracking WHERE driver_name LIKE '%Smith%';",
      "SELECT driver_name, timestamp FROM vehicle_tracking ORDER BY timestamp DESC LIMIT 10;",
      "SELECT COUNT(DISTINCT driver_name) AS unique_drivers FROM vehicle_tracking;",
      "SELECT AVG(gps_latitude) AS avg_latitude, AVG(gps_longitude) AS avg_longitude FROM vehicle_tracking;",
      "SELECT * FROM vehicle_tracking WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT driver_name, COUNT(*) AS total_records FROM vehicle_tracking WHERE driver_name = 'John Doe';",
      "SELECT driver_name, gps_latitude, gps_longitude, timestamp FROM vehicle_tracking WHERE gps_latitude < -30 OR gps_longitude > 50;",
      "SELECT driver_name, gps_latitude, gps_longitude, timestamp FROM vehicle_tracking WHERE driver_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT MIN(gps_latitude) AS min_latitude, MAX(gps_latitude) AS max_latitude FROM vehicle_tracking;",
      "SELECT AVG(gps_latitude) AS avg_latitude, COUNT(*) AS total_records FROM vehicle_tracking GROUP BY driver_name HAVING COUNT(*) > 5;",
      "SELECT DISTINCT driver_name FROM vehicle_tracking ORDER BY driver_name ASC;",
      "SELECT driver_name, TIMESTAMPDIFF(HOUR, timestamp, NOW()) AS hours_elapsed FROM vehicle_tracking;",
      "SELECT driver_name, gps_latitude, gps_longitude FROM vehicle_tracking WHERE timestamp = (SELECT MAX(timestamp) FROM vehicle_tracking);",
      "SELECT driver_name, gps_latitude, gps_longitude FROM vehicle_tracking WHERE vehicle_id IN (SELECT vehicle_id FROM vehicle_tracking WHERE driver_name = 'Alice');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT vehicle_name, vehicle_type FROM vehicles;",
      "SELECT DISTINCT vehicle_type FROM vehicles;",
      "SELECT * FROM routes;",
      "SELECT driver_name, start_location, end_location FROM routes;",
      "SELECT route_id, start_timestamp, end_timestamp FROM routes;",
      "SELECT * FROM vehicles WHERE vehicle_type = 'car';",
      "SELECT * FROM routes WHERE distance_traveled > 100;",
      "SELECT vehicle_name, last_known_location FROM vehicles WHERE last_update_timestamp > '2022-01-01';",
      "SELECT * FROM vehicles WHERE vehicle_id = 123;",
      "SELECT route_id, start_timestamp, end_timestamp FROM routes WHERE end_timestamp < '2022-06-30';",
      "SELECT vehicle_name, last_known_location FROM vehicles WHERE vehicle_type = 'truck';",
      "SELECT driver_name, start_location, end_location FROM routes WHERE distance_traveled < 50;",
      "SELECT * FROM vehicles ORDER BY vehicle_name ASC;",
      "SELECT * FROM routes ORDER BY start_timestamp DESC;",
      "SELECT vehicle_name, last_known_location FROM vehicles WHERE last_known_location LIKE '%City%';",
      "SELECT COUNT(*) AS vehicle_count FROM vehicles;",
      "SELECT AVG(distance_traveled) AS avg_distance FROM routes;",
      "SELECT MAX(distance_traveled) AS max_distance FROM routes;",
      "SELECT DISTINCT driver_name FROM routes;",
      "SELECT vehicle_name, vehicle_type FROM vehicles WHERE vehicle_type IN ('car', 'bus');",
      "SELECT * FROM vehicles;",
      "SELECT vehicle_id, vehicle_name FROM vehicles WHERE vehicle_type = 'Car';",
      "SELECT route_id, driver_name, start_location, end_location FROM routes WHERE distance_traveled > 100;",
      "SELECT * FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id;",
      "SELECT v.vehicle_id, v.vehicle_name, r.driver_name FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id WHERE r.distance_traveled > 200;",
      "SELECT v.vehicle_name, r.start_location, r.end_location FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id WHERE r.start_timestamp BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT vehicle_id, COUNT(*) AS num_routes FROM routes GROUP BY vehicle_id HAVING num_routes > 5;",
      "SELECT v.vehicle_type, COUNT(*) AS num_vehicles FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id GROUP BY v.vehicle_type;",
      "SELECT vehicle_id, MAX(distance_traveled) AS max_distance FROM routes GROUP BY vehicle_id;",
      "SELECT v.vehicle_name, AVG(distance_traveled) AS avg_distance FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id GROUP BY v.vehicle_name;",
      "SELECT * FROM vehicles WHERE last_update_timestamp < NOW();",
      "SELECT vehicle_id, COUNT(*) AS num_routes FROM routes WHERE start_timestamp < '2021-06-01' GROUP BY vehicle_id;",
      "SELECT vehicle_id, driver_name, start_location, end_location FROM routes WHERE end_location LIKE '%City%';",
      "SELECT v.vehicle_name, r.distance_traveled FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id WHERE r.end_timestamp IS NULL;",
      "SELECT vehicle_id, driver_name, start_timestamp, end_timestamp FROM routes WHERE DATE(start_timestamp) = '2022-01-15';",
      "SELECT * FROM vehicles WHERE vehicle_id IN (SELECT vehicle_id FROM routes WHERE distance_traveled > 500);",
      "SELECT vehicle_id, SUM(distance_traveled) AS total_distance FROM routes GROUP BY vehicle_id HAVING total_distance > 1000;",
      "SELECT v.vehicle_name, r.driver_name, r.distance_traveled FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id WHERE r.start_timestamp < '2021-10-01' AND r.end_timestamp > '2021-12-31';",
      "SELECT vehicle_id, AVG(distance_traveled) AS avg_distance FROM routes GROUP BY vehicle_id HAVING avg_distance < 150;",
      "SELECT v.vehicle_name, r.start_timestamp, r.end_timestamp FROM vehicles v JOIN routes r ON v.vehicle_id = r.vehicle_id WHERE TIMEDIFF(r.end_timestamp, r.start_timestamp) > '02:00:00';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT vehicle_id, vehicle_type, vehicle_model FROM vehicles WHERE driver_id = 1;",
      "SELECT driver_name, driver_phone_number FROM drivers WHERE driver_status = 'active';",
      "SELECT * FROM gps_data WHERE speed > 100;",
      "SELECT vehicle_id, latitude, longitude FROM gps_data WHERE longitude < -80;",
      "SELECT driver_name, driver_phone_number, driver_license_number FROM drivers;",
      "SELECT vehicle_type, vehicle_model, last_known_location FROM vehicles WHERE last_known_timestamp > '2022-01-01';",
      "SELECT driver_name, driver_status FROM drivers WHERE driver_id = 3;",
      "SELECT vehicle_id, vehicle_type, last_known_location FROM vehicles WHERE last_known_location LIKE 'New York%';",
      "SELECT driver_name, driver_status FROM drivers WHERE driver_name LIKE 'John%';",
      "SELECT vehicle_id, latitude, longitude, speed FROM gps_data WHERE vehicle_id = 101;",
      "SELECT driver_name, driver_license_number, driver_phone_number FROM drivers WHERE driver_status = 'available';",
      "SELECT * FROM vehicles WHERE vehicle_type = 'SUV';",
      "SELECT * FROM gps_data WHERE timestamp BETWEEN '2022-06-01' AND '2022-06-30';",
      "SELECT vehicle_id, vehicle_type, vehicle_model, last_known_location FROM vehicles WHERE driver_id IS NULL;",
      "SELECT driver_id, driver_name FROM drivers WHERE driver_phone_number = '123-456-7890';",
      "SELECT vehicle_id, latitude, longitude FROM gps_data WHERE latitude BETWEEN 40.0 AND 45.0;",
      "SELECT vehicle_id, vehicle_type, last_known_location FROM vehicles WHERE vehicle_id = 201;",
      "SELECT vehicle_id, latitude, longitude, timestamp FROM gps_data WHERE vehicle_id = 102 AND speed < 50;",
      "SELECT driver_name, driver_status FROM drivers WHERE driver_id = 2;",
      "SELECT * FROM vehicles WHERE vehicle_type = 'SUV';",
      "SELECT vehicle_id, vehicle_type, driver_id FROM vehicles WHERE driver_id IS NOT NULL;",
      "SELECT vehicle_id, vehicle_model FROM vehicles WHERE last_known_location LIKE '%New York%';",
      "SELECT vehicle_id, vehicle_type, last_known_location FROM vehicles WHERE last_known_timestamp > '2022-01-01';",
      "SELECT driver_name, driver_license_number, driver_phone_number FROM drivers WHERE driver_status = 'Active';",
      "SELECT v.vehicle_id, v.vehicle_type, d.driver_name FROM vehicles v LEFT JOIN drivers d ON v.driver_id = d.driver_id;",
      "SELECT v.vehicle_id, v.vehicle_type, g.latitude, g.longitude FROM vehicles v INNER JOIN gps_data g ON v.vehicle_id = g.vehicle_id WHERE g.speed > 80;",
      "SELECT d.driver_name, v.vehicle_model, g.timestamp FROM drivers d INNER JOIN vehicles v ON d.driver_id = v.driver_id INNER JOIN gps_data g ON v.vehicle_id = g.vehicle_id;",
      "SELECT COUNT(*) AS total_vehicles FROM vehicles;",
      "SELECT MAX(speed) AS max_speed FROM gps_data;",
      "SELECT AVG(speed) AS avg_speed FROM gps_data WHERE timestamp > '2022-01-01';",
      "SELECT MIN(speed) AS min_speed, MAX(speed) AS max_speed FROM gps_data WHERE vehicle_id = 123;",
      "SELECT DISTINCT vehicle_type FROM vehicles;",
      "SELECT vehicle_id, COUNT(*) AS total_gps_records FROM gps_data GROUP BY vehicle_id HAVING COUNT(*) > 10;",
      "SELECT vehicle_id, AVG(speed) AS avg_speed FROM gps_data GROUP BY vehicle_id HAVING AVG(speed) > 70;",
      "SELECT driver_name, COUNT(*) AS total_vehicles_assigned FROM drivers d INNER JOIN vehicles v ON d.driver_id = v.driver_id GROUP BY driver_name;",
      "SELECT driver_name, SUM(speed) AS total_speed FROM drivers d INNER JOIN vehicles v ON d.driver_id = v.driver_id INNER JOIN gps_data g ON v.vehicle_id = g.vehicle_id GROUP BY driver_name;",
      "SELECT vehicle_type, COUNT(*) AS total_vehicles FROM vehicles GROUP BY vehicle_type ORDER BY total_vehicles DESC;",
      "SELECT v.vehicle_id, d.driver_name, COUNT(*) AS total_gps_records FROM vehicles v LEFT JOIN drivers d ON v.driver_id = d.driver_id LEFT JOIN gps_data g ON v.vehicle_id = g.vehicle_id GROUP BY v.vehicle_id, d.driver_name HAVING COUNT(*) > 5;",
      "SELECT * FROM vehicles WHERE vehicle_id IN (SELECT vehicle_id FROM gps_data WHERE latitude > 40.0);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT vehicle_id, vehicle_type, manufacturer FROM vehicles;",
      "SELECT manufacturer, model, year FROM vehicles;",
      "SELECT * FROM drivers;",
      "SELECT first_name, last_name, phone_number FROM drivers;",
      "SELECT * FROM routes;",
      "SELECT start_location, end_location, distance FROM routes;",
      "SELECT * FROM tracking_data;",
      "SELECT tracking_id, vehicle_id, route_id FROM tracking_data;",
      "SELECT timestamp, latitude, longitude FROM tracking_data;",
      "SELECT vehicle_id FROM tracking_data WHERE route_id = 1;",
      "SELECT start_location, end_location FROM routes WHERE distance > 100;",
      "SELECT vehicle_type, manufacturer FROM vehicles WHERE year > 2010;",
      "SELECT first_name, last_name FROM drivers WHERE email = 'example@email.com';",
      "SELECT * FROM drivers ORDER BY last_name ASC;",
      "SELECT * FROM vehicles ORDER BY year DESC;",
      "SELECT COUNT(*) FROM vehicles;",
      "SELECT AVG(estimated_time) FROM routes;",
      "SELECT vehicle_id, COUNT(tracking_id) FROM tracking_data GROUP BY vehicle_id;",
      "SELECT manufacturer, COUNT(*) FROM vehicles GROUP BY manufacturer;",
      "SELECT * FROM vehicles WHERE manufacturer = 'Toyota';",
      "SELECT first_name, last_name, phone_number FROM drivers WHERE email LIKE '%@company.com';",
      "SELECT route_id, start_location, end_location, distance FROM routes WHERE distance > 100;",
      "SELECT manufacturer, model, year FROM vehicles WHERE year < 2010 AND vehicle_type = 'SUV';",
      "SELECT * FROM tracking_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT DISTINCT manufacturer FROM vehicles;",
      "SELECT vehicle_id, route_id, latitude, longitude FROM tracking_data WHERE route_id = 12345;",
      "SELECT AVG(distance) as avg_distance FROM routes;",
      "SELECT manufacturer, COUNT(*) as total_vehicles FROM vehicles GROUP BY manufacturer;",
      "SELECT start_location, end_location, SUM(distance) as total_distance FROM routes GROUP BY start_location, end_location;",
      "SELECT first_name, last_name, email FROM drivers WHERE phone_number = '123-456-7890';",
      "SELECT manufacturer, model, year FROM vehicles ORDER BY year DESC;",
      "SELECT * FROM drivers WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT route_id, start_location, end_location, timestamp FROM routes INNER JOIN tracking_data ON routes.route_id = tracking_data.route_id;",
      "SELECT manufacturer, COUNT(*), AVG(year) as avg_year FROM vehicles GROUP BY manufacturer HAVING COUNT(*) > 2;",
      "SELECT MAX(distance) as max_distance FROM routes;",
      "SELECT driver_id, CONCAT(first_name, ' ', last_name) as full_name FROM drivers;",
      "SELECT * FROM tracking_data WHERE vehicle_id IN (SELECT vehicle_id FROM vehicles WHERE manufacturer = 'Ford');",
      "SELECT SUM(distance) as total_distance FROM routes WHERE start_location = 'City A' OR start_location = 'City B';",
      "SELECT AVG(estimated_time) as avg_time FROM routes;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT vehicle_name, vehicle_type FROM vehicles;",
      "SELECT vehicle_name, last_known_location FROM vehicles WHERE vehicle_type='Car';",
      "SELECT driver_name, driver_phone_number FROM drivers;",
      "SELECT start_location, end_location, distance_km FROM routes;",
      "SELECT route_id, start_location, end_location FROM routes WHERE distance_km > 100;",
      "SELECT delivery_id, route_id, vehicle_id, driver_id, timestamp FROM deliveries;",
      "SELECT delivery_id, vehicle_id, timestamp FROM deliveries WHERE timestamp > '2022-01-01';",
      "SELECT * FROM sensor_data;",
      "SELECT vehicle_id, temperature_celsius, location, timestamp FROM sensor_data WHERE speed_km_per_hr > 80;",
      "SELECT * FROM vehicles JOIN deliveries ON vehicles.vehicle_id = deliveries.vehicle_id;",
      "SELECT vehicle_name, driver_name FROM vehicles INNER JOIN drivers ON vehicles.vehicle_id = drivers.driver_id;",
      "SELECT route_id, start_location, end_location, vehicle_name FROM routes INNER JOIN vehicles ON routes.route_id = vehicles.vehicle_id;",
      "SELECT data_id, speed_km_per_hr, temperature_celsius, location, timestamp FROM sensor_data JOIN vehicles ON sensor_data.vehicle_id = vehicles.vehicle_id;",
      "SELECT vehicle_name, delivery_id, timestamp FROM vehicles LEFT JOIN deliveries ON vehicles.vehicle_id = deliveries.vehicle_id;",
      "SELECT driver_name, delivery_id, timestamp FROM drivers RIGHT JOIN deliveries ON drivers.driver_id = deliveries.driver_id;",
      "SELECT driver_name, start_location, end_location, distance_km FROM drivers FULL JOIN routes ON drivers.driver_id = routes.route_id;",
      "SELECT delivery_id, vehicle_id, timestamp FROM deliveries WHERE vehicle_id IN (SELECT vehicle_id FROM vehicles WHERE vehicle_type='Truck');",
      "SELECT driver_name, start_location, end_location FROM drivers CROSS JOIN routes;",
      "SELECT delivery_id, vehicle_name, SUM(distance_km) AS total_distance FROM deliveries JOIN routes ON deliveries.route_id = routes.route_id JOIN vehicles ON deliveries.vehicle_id = vehicles.vehicle_id GROUP BY delivery_id, vehicle_name;",
      "SELECT * FROM vehicles;",
      "SELECT vehicle_name, vehicle_type FROM vehicles WHERE vehicle_type = 'Car';",
      "SELECT d.driver_name, v.vehicle_name, r.start_location, r.end_location FROM drivers d JOIN vehicles v ON d.driver_id = v.vehicle_id JOIN routes r ON v.vehicle_id = r.route_id;",
      "SELECT MAX(distance_km) AS max_distance FROM routes;",
      "SELECT vehicle_name, COUNT(delivery_id) AS num_deliveries FROM vehicles LEFT JOIN deliveries ON vehicles.vehicle_id = deliveries.vehicle_id GROUP BY vehicle_name;",
      "SELECT * FROM sensor_data WHERE speed_km_per_hr > 100 AND temperature_celsius < 10 ORDER BY timestamp DESC;",
      "SELECT d.driver_name, r.start_location, r.end_location, COUNT(delivery_id) AS num_deliveries FROM drivers d JOIN deliveries ON d.driver_id = deliveries.driver_id JOIN routes r ON deliveries.route_id = r.route_id GROUP BY d.driver_name, r.start_location, r.end_location HAVING num_deliveries > 5;",
      "SELECT DISTINCT vehicle_type FROM vehicles;",
      "SELECT d.driver_name, AVG(speed_km_per_hr) AS avg_speed FROM drivers d JOIN sensor_data s ON d.driver_id = s.vehicle_id GROUP BY d.driver_name ORDER BY avg_speed DESC;",
      "SELECT vehicle_name, last_known_location FROM vehicles WHERE last_known_timestamp >= '2022-01-01';",
      "SELECT SUM(distance_km) AS total_distance, AVG(distance_km) AS avg_distance FROM routes;",
      "SELECT driver_name, MAX(temperature_celsius) AS max_temperature FROM drivers JOIN sensor_data ON drivers.driver_id = sensor_data.vehicle_id GROUP BY driver_name;",
      "SELECT vehicle_name, COUNT(data_id) AS num_records FROM vehicles LEFT JOIN sensor_data ON vehicles.vehicle_id = sensor_data.vehicle_id GROUP BY vehicle_name HAVING num_records < 100;",
      "SELECT r.start_location, r.end_location, COUNT(delivery_id) AS num_deliveries, SUM(distance_km) AS total_distance FROM routes r JOIN deliveries d ON r.route_id = d.route_id GROUP BY r.start_location, r.end_location ORDER BY total_distance DESC;",
      "SELECT s.location, COUNT(data_id) AS num_records FROM sensor_data s JOIN vehicles v ON s.vehicle_id = v.vehicle_id WHERE v.vehicle_type = 'Truck' GROUP BY s.location HAVING num_records > 10;",
      "SELECT MAX(distance_km) AS max_distance FROM (SELECT distance_km FROM routes WHERE start_location = 'City A' UNION SELECT distance_km FROM routes WHERE end_location = 'City B');",
      "SELECT vehicle_name, AVG(speed_km_per_hr) AS avg_speed, AVG(temperature_celsius) AS avg_temperature FROM sensor_data s JOIN vehicles v ON s.vehicle_id = v.vehicle_id GROUP BY vehicle_name;",
      "SELECT d.driver_name, v.vehicle_name, r.start_location, r.end_location FROM drivers d JOIN deliveries dl ON d.driver_id = dl.driver_id JOIN routes r ON dl.route_id = r.route_id JOIN vehicles v ON dl.vehicle_id = v.vehicle_id;",
      "SELECT vehicle_name, COUNT(data_id) AS num_records FROM vehicles v LEFT JOIN sensor_data s ON v.vehicle_id = s.vehicle_id GROUP BY vehicle_name ORDER BY num_records DESC LIMIT 5;",
      "SELECT vehicle_name, COUNT(delivery_id) AS num_deliveries FROM (SELECT * FROM vehicles WHERE vehicle_type = 'Motorcycle') v LEFT JOIN deliveries d ON v.vehicle_id = d.vehicle_id GROUP BY vehicle_name;"
    ]
  }
]