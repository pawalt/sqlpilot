[
  {
    "statements": [
      "SELECT * FROM car_sales;",
      "SELECT car_model, sales_date FROM car_sales;",
      "SELECT id, sales_amount FROM car_sales;",
      "SELECT * FROM car_sales WHERE id = 1;",
      "SELECT * FROM car_sales WHERE sales_date > '2022-01-01';",
      "SELECT AVG(sales_amount) FROM car_sales;",
      "SELECT MAX(sales_amount) FROM car_sales;",
      "SELECT MIN(sales_amount) FROM car_sales;",
      "SELECT SUM(sales_amount) FROM car_sales;",
      "SELECT COUNT(*) FROM car_sales;",
      "SELECT car_model, COUNT(*) FROM car_sales GROUP BY car_model;",
      "SELECT * FROM car_sales ORDER BY sales_date DESC;",
      "SELECT * FROM car_sales WHERE car_model LIKE '%sedan%';",
      "SELECT * FROM car_sales WHERE sales_amount BETWEEN 5000 AND 10000;",
      "SELECT * FROM car_sales LIMIT 10;",
      "SELECT * FROM car_sales WHERE sales_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT car_model, AVG(sales_amount) FROM car_sales GROUP BY car_model;",
      "SELECT DISTINCT car_model FROM car_sales;",
      "SELECT id, car_model, sales_date, sales_amount FROM car_sales;",
      "SELECT * FROM car_sales WHERE car_model = 'Toyota';",
      "SELECT * FROM car_sales WHERE sales_amount > 10000",
      "SELECT car_model, SUM(sales_amount) FROM car_sales GROUP BY car_model",
      "SELECT car_model, COUNT(*) FROM car_sales GROUP BY car_model HAVING COUNT(*) > 1",
      "SELECT AVG(sales_amount) FROM car_sales WHERE sales_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT car_model, MAX(sales_amount), MIN(sales_amount) FROM car_sales GROUP BY car_model",
      "SELECT car_model, SUM(sales_amount) AS total_sales FROM car_sales WHERE sales_date >= CURDATE() - INTERVAL 1 MONTH",
      "SELECT * FROM car_sales WHERE car_model LIKE 'Toyota%'",
      "SELECT car_model, sales_amount FROM car_sales ORDER BY sales_amount DESC LIMIT 5",
      "SELECT car_model, sales_date FROM car_sales WHERE YEAR(sales_date) = 2022 ORDER BY sales_date ASC",
      "SELECT car_model, AVG(sales_amount) FROM car_sales GROUP BY car_model HAVING AVG(sales_amount) > 5000",
      "SELECT DISTINCT car_model FROM car_sales",
      "SELECT car_model, sales_amount FROM car_sales WHERE sales_date >= '2022-01-01' AND sales_date <= '2022-06-30'",
      "SELECT car_model, sales_date, sales_amount FROM car_sales WHERE MONTH(sales_date) = 1",
      "SELECT car_model, COUNT(*) AS total_sales FROM car_sales WHERE sales_amount > 20000 GROUP BY car_model",
      "SELECT car_model, sales_date, sales_amount FROM car_sales ORDER BY sales_date DESC LIMIT 10",
      "SELECT car_model, ROUND(AVG(sales_amount), 2) AS avg_sales FROM car_sales GROUP BY car_model",
      "SELECT car_model, SUM(sales_amount) AS total_sales FROM car_sales WHERE sales_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY car_model ORDER BY total_sales DESC",
      "SELECT car_model, sales_amount FROM car_sales WHERE DATE(sales_date) = CURDATE()",
      "SELECT car_model, sales_amount FROM car_sales WHERE sales_amount IN (SELECT MAX(sales_amount) FROM car_sales)",
      "SELECT car_model, COUNT(DISTINCT sales_date) AS unique_dates FROM car_sales GROUP BY car_model HAVING unique_dates > 1"
    ]
  },
  {
    "statements": [
      "SELECT * FROM car_dealership_sales;",
      "SELECT car_model, sale_date, sale_amount FROM car_dealership_sales;",
      "SELECT sale_id, sale_date FROM car_dealership_sales;",
      "SELECT * FROM demand_forecast;",
      "SELECT car_model, forecast_date, forecasted_demand FROM demand_forecast;",
      "SELECT forecast_id, car_model FROM demand_forecast;",
      "SELECT * FROM car_dealership_sales WHERE sale_amount > 5000;",
      "SELECT car_model, sale_date FROM car_dealership_sales WHERE sale_amount BETWEEN 3000 AND 5000;",
      "SELECT * FROM demand_forecast WHERE forecasted_demand < 100;",
      "SELECT car_model, forecast_date FROM demand_forecast WHERE forecasted_demand >= 200;",
      "SELECT * FROM car_dealership_sales ORDER BY sale_date DESC;",
      "SELECT car_model, sale_amount FROM car_dealership_sales ORDER BY sale_amount ASC;",
      "SELECT * FROM demand_forecast ORDER BY forecast_date DESC;",
      "SELECT car_model, forecasted_demand FROM demand_forecast ORDER BY forecasted_demand ASC;",
      "SELECT car_model, sale_date, sale_amount FROM car_dealership_sales WHERE sale_amount > 5000 ORDER BY sale_amount DESC;",
      "SELECT * FROM car_dealership_sales WHERE sale_date >= '2021-01-01' AND sale_date <= '2021-12-31';",
      "SELECT car_model, forecast_date, forecasted_demand FROM demand_forecast WHERE car_model = 'SUV';",
      "SELECT COUNT(*) FROM car_dealership_sales;",
      "SELECT MAX(sale_amount) FROM car_dealership_sales;",
      "SELECT AVG(forecasted_demand) FROM demand_forecast;",
      "SELECT * FROM car_dealership_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT car_model, sale_amount FROM car_dealership_sales WHERE sale_amount > 50000;",
      "SELECT car_model, sale_date FROM car_dealership_sales WHERE sale_amount IN (SELECT MAX(sale_amount) FROM car_dealership_sales);",
      "SELECT car_model, SUM(sale_amount) AS total_sales FROM car_dealership_sales GROUP BY car_model;",
      "SELECT DISTINCT car_model FROM car_dealership_sales;",
      "SELECT car_model, COUNT(sale_id) AS total_sales_count FROM car_dealership_sales GROUP BY car_model HAVING COUNT(sale_id) >= 5;",
      "SELECT c.car_model, c.sale_date, d.forecasted_demand FROM car_dealership_sales c JOIN demand_forecast d ON c.car_model = d.car_model;",
      "SELECT c.car_model, c.sale_date, d.forecasted_demand FROM car_dealership_sales c LEFT JOIN demand_forecast d ON c.car_model = d.car_model;",
      "SELECT car_model, forecasted_demand FROM demand_forecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT car_model, AVG(forecasted_demand) AS average_demand FROM demand_forecast GROUP BY car_model;",
      "SELECT car_model, COUNT(forecast_id) AS total_forecasts FROM demand_forecast GROUP BY car_model;",
      "SELECT car_model, MAX(forecasted_demand) AS max_demand FROM demand_forecast;",
      "SELECT car_model, MIN(forecasted_demand) AS min_demand FROM demand_forecast;",
      "SELECT c.car_model, c.sale_date, c.sale_amount, d.forecasted_demand FROM car_dealership_sales c JOIN demand_forecast d ON c.car_model = d.car_model WHERE d.forecast_date = '2022-02-14';",
      "SELECT c.car_model, c.sale_date, c.sale_amount, d.forecasted_demand FROM car_dealership_sales c JOIN demand_forecast d ON c.car_model = d.car_model WHERE c.sale_date = '2022-01-15';",
      "SELECT c.car_model, c.sale_date, c.sale_amount, d.forecasted_demand FROM car_dealersdealer_sales c JOIN demand_forecast d ON c.car_model = d.car_model WHERE c.sale_amount > (SELECT AVG(demand) FROM demand_forecast);",
      "SELECT car_model, COUNT(sale_id) AS total_sales_count FROM car_dealership_sales WHERE car_model NOT IN (SELECT car_model FROM demand_forecast);",
      "SELECT car_model, SUM(sale_amount) AS total_sales FROM car_dealership_sales WHERE car_model = 'Toyota' GROUP BY car_model;",
      "SELECT car_model, AVG(sale_amount) AS average_sale_amount FROM car_dealership_sales GROUP BY car_model HAVING AVG(sale_amount) > 30000;",
      "SELECT c.car_model, c.sale_date, c.sale_amount, d.forecasted_demand FROM car_dealership_sales c JOIN demand_forecast d ON c.car_model = d.car_model WHERE c.sale_amount > 40000 AND d.forecasted_demand > 100;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM cars;",
      "SELECT car_name, brand FROM cars WHERE year > 2010;",
      "SELECT car_name, price FROM cars WHERE brand = 'Toyota';",
      "SELECT * FROM sales;",
      "SELECT car_name, sale_date FROM cars INNER JOIN sales ON cars.car_id = sales.car_id;",
      "SELECT customer_id, customer_name, email FROM customers;",
      "SELECT customer_name, phone_number FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT car_name, brand, price FROM cars WHERE price > 20000;",
      "SELECT sale_id, sale_date, sale_amount FROM sales WHERE sale_amount > 5000;",
      "SELECT * FROM cars WHERE brand = 'Honda' AND year > 2015;",
      "SELECT car_name, brand, price FROM cars WHERE year > 2018 ORDER BY price DESC;",
      "SELECT customer_name, phone_number FROM customers WHERE phone_number LIKE '555%';",
      "SELECT car_name, brand, year, price FROM cars;",
      "SELECT sale_date, sale_amount FROM sales WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT customer_name, email FROM customers WHERE email IS NOT NULL;",
      "SELECT car_name, brand, year, price FROM cars ORDER BY year;",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_name LIKE 'S%';",
      "SELECT car_name, brand, price FROM cars WHERE brand IN ('Ford', 'Chevrolet');",
      "SELECT customer_name, email FROM customers ORDER BY customer_name;",
      "SELECT car_name, brand, price FROM cars WHERE price < 15000;",
      "SELECT car_id, car_name, brand, year, price FROM cars WHERE brand = 'Toyota';",
      "SELECT car_id, car_name, year, price FROM cars WHERE year > 2010 AND price < 20000;",
      "SELECT car_id, car_name, brand, year, price FROM cars WHERE brand IN ('Toyota', 'Honda') AND year > 2015;",
      "SELECT car_id, car_name, brand, year, price FROM cars WHERE brand NOT IN ('Ford', 'Chevrolet') AND year BETWEEN 2015 AND 2020;",
      "SELECT car_id, car_name, year FROM cars ORDER BY year DESC LIMIT 5;",
      "SELECT c.customer_id, c.customer_name, s.sale_date, s.sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.customer_id, c.customer_name, s.sale_date, s.sale_amount FROM customers c LEFT JOIN sales s ON c.customer_id = s.customer_id;",
      "SELECT c.customer_name, COUNT(s.sale_id) AS total_sales FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.customer_id;",
      "SELECT c.customer_name, AVG(s.sale_amount) AS avg_sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.customer_id;",
      "SELECT c.customer_name, MAX(s.sale_amount) AS max_sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.customer_id;",
      "SELECT c.customer_name, MIN(s.sale_amount) AS min_sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.customer_id;",
      "SELECT c.customer_name, SUM(s.sale_amount) AS total_sales_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.customer_id;",
      "SELECT c.customer_name, MAX(s.sale_date) AS last_sale_date FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.customer_id;",
      "SELECT c.customer_name, YEAR(s.sale_date) AS sale_year, SUM(s.sale_amount) AS total_sales_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id GROUP BY c.customer_id, sale_year;",
      "SELECT c.customer_name, s.sale_date, s.sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id WHERE s.sale_date > '2020-01-01';",
      "SELECT c.customer_name, s.sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id WHERE s.sale_amount > 5000;",
      "SELECT c.customer_name, s.sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id WHERE s.sale_amount BETWEEN 2000 AND 5000;",
      "SELECT c.customer_id, COUNT(s.sale_id) AS total_sales FROM customers c LEFT JOIN sales s ON c.customer_id = s.customer_id WHERE s.sale_id IS NULL GROUP BY c.customer_id;",
      "SELECT c.customer_name, MAX(s.sale_amount) AS max_sale_amount FROM customers c JOIN sales s ON c.customer_id = s.customer_id WHERE s.sale_amount = (SELECT MAX(sale_amount) FROM sales);"
    ]
  },
  {
    "statements": [
      "SELECT car_name FROM car_dealerships;",
      "SELECT * FROM car_dealerships WHERE sold_date = '2022-10-15';",
      "SELECT rep_name, hire_date FROM sales_representatives WHERE dealership_id = 1;",
      "SELECT dealership_name, location FROM dealerships WHERE dealership_id = 2;",
      "SELECT forecast_date, forecast_value FROM sales_forecast WHERE dealership_id = 3;",
      "SELECT car_id, car_name, sold_price FROM car_dealerships WHERE sold_price > 50000;",
      "SELECT * FROM sales_representatives WHERE hire_date < '2022-08-01';",
      "SELECT dealership_name, location FROM dealerships WHERE location LIKE '%City';",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE sold_price BETWEEN 30000 AND 60000;",
      "SELECT rep_id, rep_name, hire_date FROM sales_representatives ORDER BY hire_date DESC LIMIT 5;",
      "SELECT dealership_name, location FROM dealerships ORDER BY dealership_name ASC;",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE car_name LIKE '%Ford%' OR car_name LIKE '%Chevrolet%';",
      "SELECT * FROM sales_forecast WHERE forecast_date BETWEEN '2022-09-01' AND '2022-09-30';",
      "SELECT rep_name, dealership_name FROM sales_representatives INNER JOIN dealerships ON sales_representatives.dealership_id = dealerships.dealership_id;",
      "SELECT car_id, car_name, sold_date, sold_price FROM car_dealerships WHERE car_name = 'Toyota' AND sold_date < '2022-09-15';",
      "SELECT dealership_name, location FROM dealerships WHERE dealership_id IN (1, 3, 5);",
      "SELECT forecast_date, forecast_value FROM sales_forecast ORDER BY forecast_date DESC;",
      "SELECT COUNT(car_id) AS total_cars FROM car_dealerships;",
      "SELECT AVG(sold_price) AS avg_price FROM car_dealerships;",
      "SELECT MIN(sold_price) AS min_price, MAX(sold_price) AS max_price FROM car_dealerships;",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships;",
      "SELECT rep_name, hire_date FROM sales_representatives;",
      "SELECT car_name, sold_date, sold_price, rep_name, hire_date FROM car_dealerships JOIN sales_representatives ON car_dealerships.car_id = sales_representatives.rep_id;",
      "SELECT car_name, sold_date, sold_price, rep_name, hire_date, dealership_name FROM car_dealerships JOIN sales_representatives ON car_dealerships.car_id = sales_representatives.rep_id JOIN dealerships ON sales_representatives.dealership_id = dealerships.dealership_id;",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE sold_price > 5000;",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE sold_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT rep_name, hire_date FROM sales_representatives WHERE hire_date < '2021-06-01';",
      "SELECT dealership_name, location FROM dealerships WHERE location = 'New York';",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE car_name LIKE '%Toyota%';",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships ORDER BY sold_date DESC;",
      "SELECT car_name, MAX(sold_price) AS max_price FROM car_dealerships GROUP BY car_name;",
      "SELECT rep_name, COUNT(*) AS total_sales FROM sales_representatives JOIN car_dealerships ON sales_representatives.rep_id = car_dealerships.car_id GROUP BY rep_name;",
      "SELECT car_name, SUM(sold_price) AS total_revenue FROM car_dealerships GROUP BY car_name ORDER BY total_revenue DESC;",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE sold_price > (SELECT AVG(sold_price) FROM car_dealerships);",
      "SELECT dealership_name, forecast_date, forecast_value FROM dealerships JOIN sales_forecast ON dealerships.dealership_id = sales_forecast.dealership_id;",
      "SELECT car_name, sold_date, sold_price, rep_name, hire_date FROM car_dealerships JOIN sales_representatives ON car_dealerships.car_id = sales_representatives.rep_id WHERE sold_price > 10000;",
      "SELECT car_name, sold_date, sold_price, rep_name, hire_date FROM car_dealerships JOIN sales_representatives ON car_dealerships.car_id = sales_representatives.rep_id WHERE hire_date < '2021-03-01';",
      "SELECT car_name, sold_date, sold_price, dealership_name, location FROM car_dealerships JOIN sales_representatives ON car_dealerships.car_id = sales_representatives.rep_id JOIN dealerships ON sales_representatives.dealership_id = dealerships.dealership_id WHERE location = 'California';",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE sold_price < (SELECT MIN(sold_price) FROM car_dealerships);",
      "SELECT car_name, sold_date, sold_price FROM car_dealerships WHERE sold_date < '2021-01-01' AND sold_price > 5000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM historical_sales;",
      "SELECT sale_id, sale_date, car_model FROM historical_sales;",
      "SELECT sale_amount FROM historical_sales;",
      "SELECT DISTINCT dealership_id FROM historical_sales;",
      "SELECT * FROM dealerships;",
      "SELECT dealership_name, location FROM dealerships;",
      "SELECT * FROM car_models;",
      "SELECT car_make, car_model, base_price FROM car_models;",
      "SELECT * FROM forecasts;",
      "SELECT model_id, forecast_date FROM forecasts;",
      "SELECT * FROM sales_history;",
      "SELECT sale_amount, sale_date FROM sales_history;",
      "SELECT dealership_id, car_model FROM sales_history;",
      "SELECT dealership_id, car_model, sale_date FROM sales_history;",
      "SELECT * FROM historical_sales WHERE sale_amount > 1000;",
      "SELECT * FROM historical_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM car_models WHERE car_make = 'Toyota';",
      "SELECT * FROM dealerships WHERE location = 'New York';",
      "SELECT car_model, sale_amount FROM sales_history WHERE dealership_id = 1;",
      "SELECT car_model, sale_amount FROM sales_history ORDER BY sale_amount DESC;",
      "SELECT car_make, AVG(base_price) AS average_price FROM car_models GROUP BY car_make;",
      "SELECT * FROM historical_sales JOIN dealerships ON historical_sales.dealership_id = dealerships.dealership_id",
      "SELECT car_model, sale_amount FROM historical_sales WHERE sale_date >= '2022-01-01'",
      "SELECT dealership_name, location, manager_name FROM dealerships WHERE location = 'New York'",
      "SELECT car_make, car_model, base_price FROM car_models WHERE manufacturing_year = 2020",
      "SELECT SUM(sale_amount) AS total_sales FROM historical_sales",
      "SELECT car_model, SUM(sale_amount) AS total_sales FROM historical_sales GROUP BY car_model",
      "SELECT car_model, sale_id FROM historical_sales ORDER BY sale_date DESC LIMIT 5",
      "SELECT * FROM historical_sales WHERE sale_amount > 50000 AND sale_date BETWEEN '2022-01-01' AND '2022-06-30'",
      "SELECT dealership_name, SUM(sale_amount) AS total_sales FROM historical_sales JOIN dealerships ON historical_sales.dealership_id = dealerships.dealership_id GROUP BY dealership_name",
      "SELECT car_make, COUNT(*) AS total_models FROM car_models GROUP BY car_make HAVING COUNT(*) > 1",
      "SELECT car_model, AVG(sale_amount) AS average_sale_amount FROM historical_sales GROUP BY car_model HAVING AVG(sale_amount) > 10000",
      "SELECT car_model, SUM(sale_amount) AS total_sales FROM historical_sales WHERE car_model IN ('SUV', 'Sedan', 'Luxury')",
      "SELECT model_id, forecast_date, demand_forecast FROM forecasts WHERE demand_forecast > 1000",
      "SELECT * FROM sales_history UNION SELECT * FROM historical_sales ORDER BY sale_date DESC LIMIT 10",
      "SELECT car_make, car_model, base_price, demand_forecast FROM car_models JOIN forecasts ON car_models.model_id = forecasts.model_id",
      "SELECT car_model, MAX(sale_amount) AS highest_sale_amount FROM historical_sales GROUP BY car_model ORDER BY highest_sale_amount DESC",
      "SELECT DISTINCT car_make FROM car_models",
      "SELECT * FROM historical_sales INNER JOIN dealerships ON historical_sales.dealership_id = dealerships.dealership_id ORDER BY sale_date DESC LIMIT 5",
      "SELECT car_model, COUNT(*) AS total_sales_count, AVG(sale_amount) AS average_sale_amount FROM historical_sales GROUP BY car_model HAVING COUNT(*) > 2 ORDER BY total_sales_count DESC",
      "SELECT car_model, manufacturing_year FROM car_models WHERE manufacturing_year = (SELECT MAX(manufacturing_year) FROM car_models)",
      "SELECT dealership_name, SUM(sale_amount) AS total_sales FROM historical_sales JOIN dealerships ON historical_sales.dealership_id = dealerships.dealership_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY dealership_name"
    ]
  }
]