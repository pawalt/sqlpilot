[
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT make, model FROM vehicles;",
      "SELECT id, year FROM vehicles WHERE make = 'Toyota';",
      "SELECT * FROM vehicles WHERE year >= 2010;",
      "SELECT make, model, year FROM vehicles WHERE make = 'Honda' OR make = 'Toyota';",
      "SELECT * FROM vehicles ORDER BY year DESC;",
      "SELECT make FROM vehicles WHERE model LIKE 'Civic%';",
      "SELECT id, make, model FROM vehicles WHERE year BETWEEN 2015 AND 2020;",
      "SELECT * FROM vehicles WHERE make = 'Ford' AND model = 'F-150';",
      "SELECT id, make, year FROM vehicles WHERE model LIKE '%SUV%';",
      "SELECT make, model FROM vehicles WHERE year <= 2000;",
      "SELECT * FROM vehicles WHERE make = 'Chevrolet' ORDER BY year ASC;",
      "SELECT id, make, model FROM vehicles WHERE make = 'BMW' AND year > 2010;",
      "SELECT make, model, year FROM vehicles WHERE make = 'Nissan' OR model = 'Altima';",
      "SELECT * FROM vehicles WHERE year NOT IN (2014, 2016, 2018);",
      "SELECT make, model FROM vehicles WHERE make = 'Tesla' AND year >= 2019;",
      "SELECT id, make, year FROM vehicles WHERE model NOT LIKE '%Truck%';",
      "SELECT * FROM vehicles WHERE make = 'Volkswagen' AND year >= 2005;",
      "SELECT make, model FROM vehicles WHERE year = 2015 AND make != 'Toyota';",
      "SELECT id, make, year FROM vehicles WHERE make IN ('Ford', 'Chevrolet', 'Dodge');",
      "SELECT * FROM vehicles WHERE year > 2010;",
      "SELECT make, model FROM vehicles WHERE make = 'Toyota';",
      "SELECT * FROM vehicles WHERE make = 'Ford' AND year >= 2015;",
      "SELECT COUNT(*) FROM vehicles WHERE make = 'Chevrolet';",
      "SELECT make, model FROM vehicles WHERE year BETWEEN 2015 AND 2020;",
      "SELECT AVG(year) FROM vehicles;",
      "SELECT id, make, model, year FROM vehicles ORDER BY year DESC;",
      "SELECT make, COUNT(*) FROM vehicles GROUP BY make;",
      "SELECT * FROM vehicles WHERE make LIKE 'H%';",
      "SELECT make, MAX(year) FROM vehicles;",
      "SELECT make, MIN(year) FROM vehicles WHERE make LIKE 'C%';",
      "SELECT make, SUM(year) FROM vehicles GROUP BY make ORDER BY SUM(year) DESC;",
      "SELECT make, model, year FROM vehicles WHERE year % 2 = 0;",
      "SELECT DISTINCT make FROM vehicles;",
      "SELECT id, make, model FROM vehicles WHERE id > 5 AND id < 10;",
      "SELECT * FROM vehicles WHERE id IN (1, 3, 5, 7);",
      "SELECT make, COUNT(*) FROM vehicles WHERE year < 2010 GROUP BY make HAVING COUNT(*) > 1;",
      "SELECT make, model, year FROM vehicles WHERE make = 'Honda' UNION SELECT make, model, year FROM vehicles WHERE make = 'Toyota';",
      "SELECT make, model, year FROM vehicles WHERE make = 'Fiat' INTERSECT SELECT make, model, year FROM vehicles WHERE make = 'Chevrolet';",
      "SELECT make, model, year FROM vehicles WHERE make = 'Toyota' EXCEPT SELECT make, model, year FROM vehicles WHERE year < 2010;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT make, model FROM vehicles;",
      "SELECT year FROM vehicles WHERE make='Toyota';",
      "SELECT * FROM vehicles WHERE year>2010;",
      "SELECT vehicle_id, make FROM vehicles WHERE year=2015;",
      "SELECT vehicle_id, make, model FROM vehicles WHERE year BETWEEN 2010 AND 2015;",
      "SELECT * FROM dealers;",
      "SELECT name, location FROM dealers;",
      "SELECT * FROM dealers WHERE location='Los Angeles';",
      "SELECT dealer_id, name FROM dealers;",
      "SELECT make, model, year FROM vehicles JOIN dealers ON vehicles.vehicle_id = dealers.dealer_id;",
      "SELECT d.name, v.make, v.model FROM dealers d JOIN vehicles v ON d.dealer_id = v.vehicle_id;",
      "SELECT d.name AS dealer_name, v.make AS vehicle_make FROM dealers d JOIN vehicles v ON d.dealer_id = v.vehicle_id;",
      "SELECT d.name AS dealer_name, v.make AS vehicle_make FROM dealers d JOIN vehicles v ON d.dealer_id = v.vehicle_id WHERE v.year=2015;",
      "SELECT COUNT(*) AS total_vehicles FROM vehicles;",
      "SELECT MAX(year) AS latest_year FROM vehicles;",
      "SELECT MIN(year) AS oldest_year FROM vehicles;",
      "SELECT AVG(year) AS average_year FROM vehicles;",
      "SELECT make, COUNT(*) AS total_count FROM vehicles GROUP BY make;",
      "SELECT location, COUNT(*) AS dealer_count FROM dealers GROUP BY location;",
      "SELECT * FROM vehicles WHERE year > 2010;",
      "SELECT make, model FROM vehicles WHERE make='Toyota';",
      "SELECT name, location FROM dealers WHERE location='New York';",
      "SELECT COUNT(*) FROM vehicles;",
      "SELECT AVG(year) FROM vehicles;",
      "SELECT make, COUNT(*) FROM vehicles GROUP BY make;",
      "SELECT * FROM vehicles INNER JOIN dealers ON vehicles.make = dealers.name;",
      "SELECT * FROM vehicles WHERE year > 2015 ORDER BY year DESC;",
      "SELECT make, model, COUNT(*) FROM vehicles WHERE year > 2015 GROUP BY make, model;",
      "SELECT * FROM vehicles WHERE make='Ford' OR make='Chevrolet';",
      "SELECT * FROM vehicles INNER JOIN dealers ON vehicles.vehicle_id = dealers.dealer_id;",
      "SELECT make, model FROM vehicles WHERE year > 2010 AND make='Honda';",
      "SELECT DISTINCT make FROM vehicles;",
      "SELECT * FROM vehicles WHERE year BETWEEN 2010 AND 2020;",
      "SELECT name, model FROM vehicles INNER JOIN dealers ON vehicles.make = dealers.name;",
      "SELECT make, COUNT(*) FROM vehicles GROUP BY make HAVING COUNT(*) > 1;",
      "SELECT MIN(year) FROM vehicles;",
      "SELECT * FROM vehicles LIMIT 5 OFFSET 10;",
      "SELECT make, model FROM vehicles WHERE year < 2010 OR year > 2015;",
      "SELECT * FROM vehicles WHERE make IN ('Toyota', 'Nissan');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM car_make;",
      "SELECT id, make FROM car_make;",
      "SELECT make FROM car_make WHERE id = 1;",
      "SELECT * FROM car_model;",
      "SELECT id, model FROM car_model;",
      "SELECT model FROM car_model WHERE id = 1;",
      "SELECT * FROM car_year;",
      "SELECT id, year FROM car_year;",
      "SELECT year FROM car_year WHERE id = 1;",
      "SELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id;",
      "SELECT * FROM car_make WHERE make LIKE 'Toyota%';",
      "SELECT * FROM car_model WHERE make_id = 1;",
      "SELECT c.make, m.model FROM car_make c JOIN car_model m ON c.id = m.make_id WHERE c.make = 'Honda';",
      "SELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id WHERE y.year = 2020;",
      "SELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id WHERE c.make = 'Ford' AND y.year = 2019;",
      "SELECT c.make, COUNT(m.id) AS models_count FROM car_make c LEFT JOIN car_model m ON c.id = m.make_id GROUP BY c.make;",
      "SELECT c.make, AVG (y.year) AS avg_year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id GROUP BY c.make;",
      "SELECT c.make, MAX(y.year) AS latest_year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id GROUP BY c.make;",
      "SELECT c.make, MIN(y.year) AS oldest_year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id GROUP BY c.make;",
      "SELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id ORDER BY y.year DESC;",
      "SELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id ORDER BY c.make ASC,y.year DESC;",
      "SELECT make FROM car_make",
      "SELECT * FROM car_model INNER JOIN car_make ON car_model.make_id = car_make.id",
      "SELECT model FROM car_model WHERE make_id = 1",
      "SELECT year FROM car_year INNER JOIN car_model ON car_year.model_id = car_model.id",
      "SELECT * FROM car_make WHERE make = 'Toyota'",
      "SELECT model FROM car_model WHERE make_id IN (SELECT id FROM car_make WHERE make = 'Honda')",
      "SELECT * FROM car_make WHERE id IN (SELECT make_id FROM car_model)",
      "SELECT year FROM car_year INNER JOIN car_model ON car_year.model_id = car_model.id WHERE car_model.make_id = (SELECT id FROM car_make WHERE make = 'Ford')",
      "SELECT make, model FROM car_make INNER JOIN car_model ON car_make.id = car_model.make_id",
      "SELECT * FROM car_model INNER JOIN car_make ON car_model.make_id = car_make.id WHERE car_make.id = (SELECT id FROM car_make WHERE make = 'Chevrolet')",
      "SELECT year FROM car_year INNER JOIN car_model ON car_year.model_id = car_model.id INNER JOIN car_make ON car_model.make_id = car_make.id WHERE car_make.make = 'Ford'",
      "SELECT make FROM car_make WHERE id IN (SELECT make_id FROM car_model WHERE id IN (SELECT model_id FROM car_year WHERE year = 2020))",
      "SELECT * FROM car_model WHERE make_id IN (SELECT id FROM car_make WHERE make IN ('Toyota', 'Honda'))",
      "SELECT year FROM car_year WHERE model_id IN (SELECT id FROM car_model WHERE make_id = 1)",
      "SELECT make, model FROM car_make INNER JOIN car_model ON car_make.id = car_model.make_id INNER JOIN car_year ON car_model.id = car_year.model_id WHERE car_year.year = 2010",
      "SELECT * FROM car_model INNER JOIN car_year ON car_model.id = car_year.model_id WHERE car_year.year > 2015",
      "SELECT make FROM car_make WHERE id = (SELECT make_id FROM car_model WHERE id = (SELECT model_id FROM car_year WHERE year = 2012))",
      "SELECT model FROM car_model WHERE id NOT IN (SELECT model_id FROM car_year WHERE year = 2015)",
      "SELECT make, model FROM car_make INNER JOIN car_model ON car_make.id = car_model.make_id WHERE car_model.id NOT IN (SELECT model_id FROM car_year WHERE year < 2010)",
      "SELECT year FROM car_year WHERE model_id IN (SELECT id FROM car_model WHERE make_id = (SELECT id FROM car_make WHERE make = 'Ford'))"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT make, model FROM vehicles;",
      "SELECT make, model, year FROM vehicles WHERE year > 2010;",
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers;",
      "SELECT * FROM sales;",
      "SELECT sale_id, sale_date FROM sales WHERE sale_date >= '2022-01-01';",
      "SELECT vehicle_id, customer_id FROM sales;",
      "SELECT * FROM dealerships;",
      "SELECT name, location FROM dealerships;",
      "SELECT dealership_id FROM dealerships WHERE location = 'New York';",
      "SELECT vehicles.make, customers.name FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id JOIN customers ON sales.customer_id = customers.customer_id;",
      "SELECT customers.name, dealerships.location FROM sales JOIN customers ON sales.customer_id = customers.customer_id JOIN dealerships ON customers.name = dealerships.name;",
      "SELECT vehicles.make, COUNT(sales.vehicle_id) AS total_sales FROM sales JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY vehicles.make;",
      "SELECT dealerships.location, AVG(sales.sale_id) AS avg_sale_id FROM sales JOIN dealerships ON sales.customer_id = dealerships.dealership_id GROUP BY dealerships.location;",
      "SELECT make, model, year FROM vehicles WHERE make = 'Toyota' AND year > 2018;",
      "SELECT name, email FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT * FROM sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT COUNT(*) AS total_customers FROM customers;",
      "SELECT MAX(year) AS latest_year FROM vehicles;",
      "SELECT MIN(year) AS earliest_year FROM vehicles;",
      "SELECT * FROM vehicles WHERE year > 2010;",
      "SELECT make, model, year FROM vehicles WHERE make = 'Toyota';",
      "SELECT customers.name, vehicles.make, vehicles.model FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id;",
      "SELECT customers.name, sales.sale_date, vehicles.make, vehicles.model FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id WHERE sales.sale_date BETWEEN '2020-01-01' AND '2020-12-31';",
      "SELECT customers.name, customers.email, dealerships.name AS dealership_name FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN dealerships ON dealerships.dealership_id = sales.dealership_id;",
      "SELECT vehicles.make, COUNT(*) AS total_sales FROM sales JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY vehicles.make;",
      "SELECT dealerships.name, COUNT(*) AS total_sales FROM sales JOIN dealerships ON sales.dealership_id = dealerships.dealership_id GROUP BY dealerships.name;",
      "SELECT customers.name, customers.email FROM customers WHERE EXISTS (SELECT * FROM sales WHERE sales.customer_id = customers.customer_id);",
      "SELECT customers.name, customers.email FROM customers WHERE NOT EXISTS (SELECT * FROM sales WHERE sales.customer_id = customers.customer_id);",
      "SELECT dealerships.name, AVG(vehicles.year) AS avg_year FROM sales JOIN vehicles ON sales.vehicle_id = vehicles.id JOIN dealerships ON sales.dealership_id = dealerships.dealership_id GROUP BY dealerships.name;",
      "SELECT customers.name, COUNT(sales.sale_id) AS total_sales FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customers.name;",
      "SELECT customers.name, MAX(vehicles.year) AS max_year FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY customers.name;",
      "SELECT vehicles.make, COUNT(sales.sale_id) AS total_sales FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id GROUP BY vehicles.make;",
      "SELECT dealerships.name, MIN(vehicles.year) AS min_year FROM dealerships JOIN sales ON dealerships.dealership_id = sales.dealership_id JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY dealerships.name;",
      "SELECT dealerships.name, vehicles.make, vehicles.model, sales.sale_date FROM dealerships JOIN sales ON dealerships.dealership_id = sales.dealership_id JOIN vehicles ON sales.vehicle_id = vehicles.id WHERE sales.sale_date < '2023-01-01';",
      "SELECT customers.name, dealerships.name, vehicles.make, vehicles.model, sales.sale_date FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id JOIN dealerships ON sales.dealership_id = dealerships.dealership_id;",
      "SELECT customers.name, COUNT(*) AS total_sales FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customers.name HAVING total_sales > 1;",
      "SELECT customers.name, SUM(vehicles.year) AS total_year FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY customers.name;",
      "SELECT vehicles.make, vehicles.model, SUM(sales.sale_id) AS total_sales FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id GROUP BY vehicles.make, vehicles.model;",
      "SELECT vehicles.make, vehicles.model, SUM(vehicles.year) AS total_year FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id GROUP BY vehicles.make, vehicles.model;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT make, model FROM vehicles;",
      "SELECT id, year FROM vehicles;",
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT id, email FROM customers;",
      "SELECT * FROM orders;",
      "SELECT vehicle_id, customer_id FROM orders;",
      "SELECT id, order_date FROM orders;",
      "SELECT * FROM payments;",
      "SELECT order_id, amount FROM payments;",
      "SELECT id, payment_date FROM payments;",
      "SELECT * FROM reviews;",
      "SELECT vehicle_id, customer_id FROM reviews;",
      "SELECT rating, review_text FROM reviews;",
      "SELECT vehicles.make, customers.first_name FROM vehicles JOIN customers ON vehicles.id = customers.id;",
      "SELECT vehicles.make, customers.first_name, payments.amount FROM vehicles JOIN customers ON vehicles.id = customers.id JOIN orders ON vehicles.id = orders.vehicle_id JOIN payments ON orders.id = payments.order_id;",
      "SELECT vehicles.make, reviews.rating, reviews.review_text FROM vehicles JOIN reviews ON vehicles.id = reviews.vehicle_id;",
      "SELECT customers.first_name, SUM(payments.amount) AS total_payment FROM customers JOIN orders ON customers.id = orders.customer_id JOIN payments ON orders.id = payments.order_id GROUP BY customers.first_name;",
      "SELECT vehicles.make, COUNT(reviews.id) AS num_reviews FROM vehicles JOIN reviews ON vehicles.id = reviews.vehicle_id GROUP BY vehicles.make HAVING COUNT(reviews.id) > 2;",
      "SELECT * FROM vehicles WHERE make = 'Toyota';",
      "SELECT first_name, last_name FROM customers WHERE id = 1;",
      "SELECT make, model, year FROM vehicles WHERE year > 2010;",
      "SELECT c.first_name, v.make, v.model FROM customers c INNER JOIN vehicles v ON c.id = v.id;",
      "SELECT c.first_name, v.make, v.model, r.rating FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN reviews r ON v.id = r.vehicle_id;",
      "SELECT c.first_name, v.make, v.model, o.order_date FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN orders o ON v.id = o.vehicle_id;",
      "SELECT c.first_name, v.make, v.model, p.amount FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN orders o ON v.id = o.vehicle_id INNER JOIN payments p ON o.id = p.order_id;",
      "SELECT c.first_name, v.make, v.model, p.amount, r.rating FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN orders o ON v.id = o.vehicle_id INNER JOIN payments p ON o.id = p.order_id INNER JOIN reviews r ON v.id = r.vehicle_id;",
      "SELECT DISTINCT make FROM vehicles;",
      "SELECT AVG(rating) AS average_rating FROM reviews;",
      "SELECT v.make, COUNT(order_id) AS num_orders FROM vehicles v INNER JOIN orders o ON v.id = o.vehicle_id GROUP BY v.make;",
      "SELECT c.first_name, SUM(amount) AS total_payments FROM customers c INNER JOIN orders o ON c.id = o.customer_id INNER JOIN payments p ON o.id = p.order_id GROUP BY c.first_name;",
      "SELECT c.first_name, COUNT(order_id) AS num_orders, SUM(amount) AS total_payments FROM customers c INNER JOIN orders o ON c.id = o.customer_id INNER JOIN payments p ON o.id = p.order_id GROUP BY c.first_name;",
      "SELECT v.make, r.rating, AVG(rating) AS avg_rating FROM vehicles v LEFT JOIN reviews r ON v.id = r.vehicle_id GROUP BY v.make, r.rating;",
      "SELECT make, model, year FROM vehicles WHERE year BETWEEN 2010 AND 2020;",
      "SELECT make, model, year FROM vehicles WHERE year IN (2015, 2016, 2017);",
      "SELECT make, model, year FROM vehicles WHERE make LIKE 'Ho%';",
      "SELECT * FROM orders WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT make, model, year FROM vehicles ORDER BY year DESC;",
      "SELECT c.first_name, v.make, v.model, r.rating FROM customers c INNER JOIN vehicles v ON c.id = v.id LEFT JOIN reviews r ON v.id = r.vehicle_id;"
    ]
  }
]