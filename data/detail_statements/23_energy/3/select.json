[
  {
    "statements": [
      "SELECT * FROM EnergyDemandForecast;",
      "SELECT forecast_id, date, energy_demand FROM EnergyDemandForecast;",
      "SELECT date, energy_demand FROM EnergyDemandForecast WHERE forecast_id = 1;",
      "SELECT * FROM EnergyDemandForecast WHERE date = '2022-12-31';",
      "SELECT * FROM EnergyDemandForecast ORDER BY date DESC;",
      "SELECT * FROM EnergyDemandForecast WHERE energy_demand > 100;",
      "SELECT COUNT(*) FROM EnergyDemandForecast;",
      "SELECT AVG(energy_demand) FROM EnergyDemandForecast;",
      "SELECT MAX(energy_demand) FROM EnergyDemandForecast;",
      "SELECT MIN(energy_demand) FROM EnergyDemandForecast;",
      "SELECT SUM(energy_demand) FROM EnergyDemandForecast;",
      "SELECT * FROM EnergyDemandForecast LIMIT 5;",
      "SELECT * FROM EnergyDemandForecast WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM EnergyDemandForecast WHERE energy_demand BETWEEN 50 AND 100;",
      "SELECT * FROM EnergyDemandForecast WHERE energy_demand < 50 OR energy_demand > 150;",
      "SELECT AVG(energy_demand) AS avg_demand, MAX(energy_demand) AS max_demand FROM EnergyDemandForecast;",
      "SELECT DATE_FORMAT(date, '%Y-%m-%d') AS formatted_date FROM EnergyDemandForecast;",
      "SELECT DATE_ADD(date, INTERVAL 1 DAY) AS next_day FROM EnergyDemandForecast WHERE forecast_id = 1;",
      "SELECT COUNT(DISTINCT date) AS unique_dates FROM EnergyDemandForecast;",
      "SELECT * FROM EnergyDemandForecast WHERE DATE(date) = CURDATE();",
      "SELECT * FROM EnergyDemandForecast WHERE energy_demand > 100",
      "SELECT forecast_id, date FROM EnergyDemandForecast WHERE date BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT AVG(energy_demand) AS avg_demand FROM EnergyDemandForecast WHERE date = '2022-02-15'",
      "SELECT forecast_id, SUM(energy_demand) AS total_demand FROM EnergyDemandForecast GROUP BY forecast_id HAVING total_demand > 500",
      "SELECT COUNT(*) AS total_forecasts FROM EnergyDemandForecast",
      "SELECT forecast_id, date, time FROM EnergyDemandForecast WHERE energy_demand > (SELECT AVG(energy_demand) FROM EnergyDemandForecast)",
      "SELECT MAX(energy_demand) AS max_demand FROM EnergyDemandForecast",
      "SELECT forecast_id, energy_demand FROM EnergyDemandForecast ORDER BY energy_demand DESC",
      "SELECT * FROM EnergyDemandForecast WHERE date = (SELECT MAX(date) FROM EnergyDemandForecast)",
      "SELECT forecast_id, date, energy_demand FROM EnergyDemandForecast WHERE energy_demand BETWEEN 50 AND 100",
      "SELECT forecast_id, energy_demand FROM EnergyDemandForecast WHERE date > '2022-03-01' AND time > '12:00:00'",
      "SELECT forecast_id, SUM(energy_demand) AS total_demand FROM EnergyDemandForecast GROUP BY forecast_id ORDER BY total_demand DESC",
      "SELECT forecast_id, AVG(energy_demand) AS avg_demand FROM EnergyDemandForecast GROUP BY forecast_id HAVING avg_demand > 80",
      "SELECT forecast_id, date, energy_demand FROM EnergyDemandForecast WHERE date = '2022-02-28' AND time < '08:00:00'",
      "SELECT forecast_id, COUNT(*) AS occurrences FROM EnergyDemandForecast GROUP BY forecast_id HAVING occurrences > 3",
      "SELECT forecast_id, date, energy_demand FROM EnergyDemandForecast WHERE forecast_id IN (1, 5, 10)",
      "SELECT MIN(energy_demand) AS min_demand FROM EnergyDemandForecast",
      "SELECT forecast_id, MAX(energy_demand) AS max_demand FROM EnergyDemandForecast GROUP BY forecast_id",
      "SELECT AVG(energy_demand) AS avg_demand FROM EnergyDemandForecast WHERE date >= '2022-01-01' AND date <= '2022-01-31'",
      "SELECT DISTINCT date FROM EnergyDemandForecast",
      "SELECT forecast_id, date, energy_demand FROM EnergyDemandForecast WHERE energy_demand < 50"
    ]
  },
  {
    "statements": [
      "SELECT * FROM EnergyDemandForecast;",
      "SELECT date, time, demand FROM EnergyDemandForecast;",
      "SELECT id, date, demand FROM EnergyDemandForecast WHERE time BETWEEN '12:00:00' AND '18:00:00';",
      "SELECT id, date, time, demand FROM EnergyDemandForecast WHERE date = '2022-10-15';",
      "SELECT AVG(demand) AS average_demand FROM EnergyDemandForecast;",
      "SELECT MAX(demand) AS max_demand FROM EnergyDemandForecast;",
      "SELECT MIN(demand) AS min_demand FROM EnergyDemandForecast;",
      "SELECT resource_name, resource_type, quantity FROM ResourceNeeds;",
      "SELECT id, resource_name, quantity FROM ResourceNeeds WHERE resource_type = 'Renewable';",
      "SELECT id, resource_name, quantity FROM ResourceNeeds WHERE quantity > 1000;",
      "SELECT SUM(quantity) AS total_quantity FROM ResourceNeeds;",
      "SELECT AVG(quantity) AS average_quantity FROM ResourceNeeds;",
      "SELECT DISTINCT resource_type FROM ResourceNeeds;",
      "SELECT id, resource_name, resource_type, quantity FROM ResourceNeeds ORDER BY quantity DESC;",
      "SELECT id, date, time, demand FROM EnergyDemandForecast WHERE demand > (SELECT AVG(demand) FROM EnergyDemandForecast);",
      "SELECT r.id, r.resource_name, r.resource_type, r.quantity, e.date, e.time, e.demand FROM ResourceNeeds r JOIN EnergyDemandForecast e ON r.id = e.id;",
      "SELECT r.resource_name, r.resource_type, r.quantity, e.date, e.time, e.demand FROM ResourceNeeds r LEFT JOIN EnergyDemandForecast e ON r.id = e.id;",
      "SELECT r.resource_name, r.resource_type, r.quantity, e.date, e.time, e.demand FROM ResourceNeeds r RIGHT JOIN EnergyDemandForecast e ON r.id = e.id;",
      "SELECT r.resource_name, r.resource_type, r.quantity, e.date, e.time, e.demand FROM ResourceNeeds r INNER JOIN EnergyDemandForecast e ON r.id = e.id;",
      "SELECT r.resource_name, r.resource_type, r.quantity, e.date, e.time, e.demand FROM ResourceNeeds r FULL OUTER JOIN EnergyDemandForecast e ON r.id = e.id;",
      "SELECT id, date, time, demand FROM EnergyDemandForecast WHERE demand > 100",
      "SELECT date, SUM(demand) AS total_demand FROM EnergyDemandForecast GROUP BY date",
      "SELECT resource_name, resource_type, quantity FROM ResourceNeeds WHERE resource_type = 'electricity'",
      "SELECT MIN(demand) AS min_demand, MAX(demand) AS max_demand FROM EnergyDemandForecast",
      "SELECT date, time, demand FROM EnergyDemandForecast WHERE date BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT resource_name, COUNT(*) AS total_resources FROM ResourceNeeds GROUP BY resource_name",
      "SELECT AVG(demand) AS average_demand FROM EnergyDemandForecast",
      "SELECT resource_name, SUM(quantity) AS total_quantity FROM ResourceNeeds GROUP BY resource_name",
      "SELECT * FROM EnergyDemandForecast JOIN ResourceNeeds ON EnergyDemandForecast.id = ResourceNeeds.id",
      "SELECT date, SUM(demand) AS total_demand, AVG(demand) AS average_demand FROM EnergyDemandForecast GROUP BY date",
      "SELECT resource_type, AVG(quantity) AS average_quantity FROM ResourceNeeds GROUP BY resource_type",
      "SELECT id, date, time, demand FROM EnergyDemandForecast ORDER BY demand DESC",
      "SELECT DISTINCT resource_name FROM ResourceNeeds",
      "SELECT AVG(demand) AS average_demand, MAX(demand) AS max_demand, MIN(demand) AS min_demand FROM EnergyDemandForecast",
      "SELECT resource_type, SUM(quantity) AS total_quantity FROM ResourceNeeds GROUP BY resource_type",
      "SELECT date, time, demand FROM EnergyDemandForecast WHERE demand < 50 OR demand > 200",
      "SELECT date, COUNT(*) AS total_records FROM EnergyDemandForecast GROUP BY date",
      "SELECT resource_name, resource_type, SUM(quantity) AS total_quantity FROM ResourceNeeds GROUP BY resource_name, resource_type",
      "SELECT * FROM EnergyDemandForecast WHERE DATE(date) = '2022-01-01'",
      "SELECT resource_type, MAX(quantity) AS max_quantity FROM ResourceNeeds GROUP BY resource_type",
      "SELECT id, date, time, demand FROM EnergyDemandForecast WHERE date = '2022-01-01'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM energy_demand_forecast;",
      "SELECT id, date FROM energy_demand_forecast;",
      "SELECT resource_name, resource_type FROM resource_needs;",
      "SELECT * FROM resource_availability;",
      "SELECT id, date, resource_qty FROM resource_availability;",
      "SELECT id, date, energy_demand FROM energy_demand_forecast;",
      "SELECT id, resource_name, resource_type FROM resource_needs;",
      "SELECT date, energy_demand FROM energy_demand_forecast WHERE date = '2022-09-01';",
      "SELECT resource_name, resource_qty FROM resource_needs JOIN resource_availability ON resource_needs.resource_name = resource_availability.resource_name;",
      "SELECT date, resource_qty FROM resource_availability WHERE date BETWEEN '2022-09-01' AND '2022-09-30';",
      "SELECT SUM(energy_demand) AS total_energy_demand FROM energy_demand_forecast;",
      "SELECT AVG(resource_qty) AS avg_resource_qty FROM resource_availability;",
      "SELECT COUNT(*) AS total_records FROM energy_demand_forecast;",
      "SELECT MAX(resource_qty) AS max_resource_qty FROM resource_availability;",
      "SELECT MIN(energy_demand) AS min_energy_demand FROM energy_demand_forecast;",
      "SELECT id, resource_name, resource_type, resource_qty FROM resource_needs LEFT JOIN resource_availability ON resource_needs.resource_name = resource_availability.resource_name;",
      "SELECT id, resource_name, resource_type, resource_qty FROM resource_needs RIGHT JOIN resource_availability ON resource_needs.resource_name = resource_availability.resource_name;",
      "SELECT id, energy_demand FROM energy_demand_forecast ORDER BY date DESC;",
      "SELECT resource_name, resource_type, SUM(resource_qty) AS total_qty FROM resource_needs JOIN resource_availability ON resource_needs.resource_name = resource_availability.resource_name GROUP BY resource_name, resource_type;",
      "SELECT date, SUM(energy_demand) AS total_energy_demand FROM energy_demand_forecast GROUP BY date HAVING total_energy_demand > 1000;",
      "SELECT * FROM energy_demand_forecast WHERE energy_demand > 100",
      "SELECT date, energy_demand FROM energy_demand_forecast WHERE date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT * FROM resource_needs WHERE resource_type = 'Renewable'",
      "SELECT resource_name, COUNT(*) FROM resource_needs GROUP BY resource_name",
      "SELECT SUM(resource_qty) FROM resource_availability WHERE date = '2022-08-15'",
      "SELECT date, resource_qty FROM resource_availability WHERE resource_qty > 50 ORDER BY date DESC",
      "SELECT * FROM energy_demand_forecast AS E JOIN resource_availability AS R ON E.date = R.date",
      "SELECT E.date, E.energy_demand, R.resource_qty FROM energy_demand_forecast AS E JOIN resource_availability AS R ON E.date = R.date ORDER BY R.resource_qty DESC",
      "SELECT R.resource_name, SUM(R.resource_qty) AS total_qty FROM resource_needs AS N JOIN resource_availability AS R ON N.resource_name = R.resource_name GROUP BY R.resource_name",
      "SELECT date, AVG(energy_demand) FROM energy_demand_forecast GROUP BY date",
      "SELECT * FROM energy_demand_forecast WHERE date = (SELECT MAX(date) FROM energy_demand_forecast)",
      "SELECT E.date, E.energy_demand, R.resource_qty, N.resource_type FROM energy_demand_forecast AS E JOIN resource_availability AS R ON E.date = R.date JOIN resource_needs AS N ON N.resource_name = R.resource_name",
      "SELECT date, CASE WHEN energy_demand < 50 THEN 'Low' WHEN energy_demand >= 50 AND energy_demand < 100 THEN 'Medium' ELSE 'High' END AS demand_level FROM energy_demand_forecast",
      "SELECT * FROM energy_demand_forecast WHERE date BETWEEN '2022-01-01' AND '2022-06-30' UNION SELECT * FROM energy_demand_forecast WHERE date BETWEEN '2022-07-01' AND '2022-12-31'",
      "SELECT R.resource_name, R.resource_type, A.resource_qty FROM resource_needs AS R LEFT JOIN resource_availability AS A ON R.resource_name = A.resource_name",
      "SELECT date, energy_demand, resource_type FROM energy_demand_forecast AS E JOIN resource_needs AS N ON E.energy_demand = N.resource_name",
      "SELECT date, energy_demand, resource_qty FROM energy_demand_forecast AS E JOIN resource_availability AS A ON E.date = A.date WHERE energy_demand > resource_qty",
      "SELECT * FROM energy_demand_forecast WHERE energy_demand > (SELECT AVG(energy_demand) FROM energy_demand_forecast)",
      "SELECT date, resource_qty FROM resource_availability WHERE date = (SELECT MIN(date) FROM resource_availability)",
      "SELECT R.resource_name, R.resource_type, A.date, A.resource_qty FROM resource_needs AS R JOIN resource_availability AS A ON R.resource_name = A.resource_name ORDER BY A.date DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM EnergyConsumptionForecast;",
      "SELECT location, forecasted_demand FROM EnergyConsumptionForecast;",
      "SELECT id, forecast_date FROM EnergyConsumptionForecast;",
      "SELECT * FROM WeatherData;",
      "SELECT city, temperature FROM WeatherData;",
      "SELECT id, humidity FROM WeatherData;",
      "SELECT * FROM ResourceAvailability;",
      "SELECT location, available_quantity FROM ResourceAvailability;",
      "SELECT id, resource_type FROM ResourceAvailability;",
      "SELECT * FROM EnergyDemandProjection;",
      "SELECT forecast_date, projected_demand FROM EnergyDemandProjection;",
      "SELECT id, resource_need FROM EnergyDemandProjection;",
      "SELECT * FROM EnergyConsumptionForecast JOIN WeatherData ON EnergyConsumptionForecast.location = WeatherData.city;",
      "SELECT * FROM EnergyConsumptionForecast JOIN ResourceAvailability ON EnergyConsumptionForecast.location = ResourceAvailability.location;",
      "SELECT * FROM EnergyConsumptionForecast JOIN EnergyDemandProjection ON EnergyConsumptionForecast.forecast_date = EnergyDemandProjection.forecast_date;",
      "SELECT * FROM WeatherData JOIN ResourceAvailability ON WeatherData.city = ResourceAvailability.location;",
      "SELECT * FROM WeatherData JOIN EnergyDemandProjection ON WeatherData.city = EnergyDemandProjection.resource_need;",
      "SELECT * FROM ResourceAvailability JOIN EnergyDemandProjection ON ResourceAvailability.location = EnergyDemandProjection.resource_need;",
      "SELECT location, temperature, available_quantity FROM WeatherData JOIN ResourceAvailability ON WeatherData.city = ResourceAvailability.location;",
      "SELECT forecast_date, projected_demand, resource_need FROM EnergyDemandProjection JOIN EnergyConsumptionForecast ON EnergyDemandProjection.forecast_date = EnergyConsumptionForecast.forecast_date;",
      "SELECT city, temperature, humidity FROM WeatherData WHERE temperature > 25;",
      "SELECT * FROM EnergyConsumptionForecast WHERE location='New York';",
      "SELECT city, temperature FROM WeatherData WHERE temperature > 25;",
      "SELECT SUM(available_quantity) FROM ResourceAvailability GROUP BY location;",
      "SELECT forecast_date, projected_demand FROM EnergyDemandProjection WHERE projected_demand > 500;",
      "SELECT forecast_date, forecasted_demand FROM EnergyConsumptionForecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT city, temperature, humidity FROM WeatherData WHERE city='London' AND temperature < 20 AND humidity > 70;",
      "SELECT location, forecast_date FROM EnergyConsumptionForecast JOIN EnergyDemandProjection ON EnergyConsumptionForecast.forecast_date = EnergyDemandProjection.forecast_date;",
      "SELECT city, temperature, SUM(available_quantity) AS total_quantity FROM WeatherData JOIN ResourceAvailability ON WeatherData.city = ResourceAvailability.location GROUP BY city;",
      "SELECT location, SUM(available_quantity * humidity) AS total_resource FROM ResourceAvailability JOIN WeatherData ON ResourceAvailability.location = WeatherData.city GROUP BY location;",
      "SELECT city, AVG(temperature) AS avg_temp FROM WeatherData GROUP BY city HAVING AVG(temperature) > 20;",
      "SELECT location, AVG(projected_demand) AS avg_demand FROM EnergyDemandProjection WHERE forecast_date > '2022-05-01' GROUP BY location HAVING AVG(projected_demand) < 1000;",
      "SELECT city, forecast_date, projected_demand FROM EnergyDemandProjection JOIN WeatherData ON EnergyDemandProjection.forecast_date = WeatherData.city;",
      "SELECT forecast_date, SUM(projected_demand) AS total_demand FROM EnergyDemandProjection GROUP BY forecast_date HAVING SUM(projected_demand) > 2000;",
      "SELECT city, SUM(forecasted_demand) AS total_demand FROM EnergyConsumptionForecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY city HAVING SUM(forecasted_demand) > 5000;",
      "SELECT city, AVG(temperature) AS avg_temp, AVG(humidity) AS avg_humidity FROM WeatherData GROUP BY city HAVING AVG(temperature) > 15 AND AVG(humidity) < 60;",
      "SELECT location, resource_type, available_quantity FROM ResourceAvailability WHERE location='Paris' AND resource_type='electricity';",
      "SELECT city, temperature, humidity FROM WeatherData WHERE city IN ('New York', 'London', 'Paris');",
      "SELECT location, COUNT(*) AS total_records FROM ResourceAvailability GROUP BY location HAVING COUNT(*) > 5;",
      "SELECT city, MAX(temperature) AS max_temp FROM WeatherData GROUP BY city ORDER BY max_temp DESC;",
      "SELECT location, MIN(available_quantity) AS min_quantity FROM ResourceAvailability GROUP BY location ORDER BY min_quantity ASC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM EnergyConsumption;",
      "SELECT timestamp, location, demand FROM EnergyConsumption;",
      "SELECT * FROM WeatherForecast;",
      "SELECT timestamp, temperature FROM WeatherForecast;",
      "SELECT * FROM EnergyProduction;",
      "SELECT timestamp, location, production FROM EnergyProduction;",
      "SELECT * FROM DemandForecast;",
      "SELECT timestamp, demand_forecast FROM DemandForecast;",
      "SELECT * FROM ResourceAllocation;",
      "SELECT timestamp, resource_alloc FROM ResourceAllocation;",
      "SELECT timestamp, location, demand, production FROM EnergyConsumption JOIN EnergyProduction ON EnergyConsumption.timestamp = EnergyProduction.timestamp;",
      "SELECT timestamp, location, demand, temperature FROM EnergyConsumption JOIN WeatherForecast ON EnergyConsumption.timestamp = WeatherForecast.timestamp;",
      "SELECT timestamp, location, demand, demand_forecast FROM EnergyConsumption JOIN DemandForecast ON EnergyConsumption.timestamp = DemandForecast.timestamp;",
      "SELECT timestamp, location, production, resource_alloc FROM EnergyProduction JOIN ResourceAllocation ON EnergyProduction.timestamp = ResourceAllocation.timestamp;",
      "SELECT timestamp, location, demand, production, resource_alloc FROM EnergyConsumption JOIN EnergyProduction ON EnergyConsumption.timestamp = EnergyProduction.timestamp JOIN ResourceAllocation ON EnergyProduction.timestamp = ResourceAllocation.timestamp;",
      "SELECT timestamp, location, demand, temperature, humidity FROM EnergyConsumption JOIN WeatherForecast ON EnergyConsumption.timestamp = WeatherForecast.timestamp;",
      "SELECT DISTINCT location FROM EnergyConsumption;",
      "SELECT location, SUM(demand) AS total_demand FROM EnergyConsumption GROUP BY location;",
      "SELECT location, AVG(production) AS avg_production FROM EnergyProduction GROUP BY location;",
      "SELECT location, MAX(demand_forecast) AS max_demand_forecast FROM DemandForecast GROUP BY location;",
      "SELECT timestamp, location, production FROM EnergyProduction WHERE production > 100;",
      "SELECT * FROM EnergyConsumption WHERE location = 'New York';",
      "SELECT location, demand FROM EnergyConsumption WHERE timestamp > '2022-01-01' AND timestamp < '2022-01-31';",
      "SELECT MAX(demand) AS max_demand FROM EnergyConsumption;",
      "SELECT location, SUM(demand) AS total_demand FROM EnergyConsumption GROUP BY location;",
      "SELECT * FROM WeatherForecast JOIN EnergyConsumption ON WeatherForecast.location = EnergyConsumption.location;",
      "SELECT EF.location, EF.temperature, EC.demand FROM EnergyConsumption EC JOIN WeatherForecast EF ON EC.location = EF.location WHERE EF.timestamp = '2022-02-15';",
      "SELECT EP.location, EP.production, DA.location, DA.resource_alloc FROM EnergyProduction EP JOIN ResourceAllocation DA ON EP.location = DA.location WHERE EP.timestamp = '2022-03-01';",
      "SELECT DISTINCT location FROM EnergyConsumption;",
      "SELECT * FROM EnergyConsumption WHERE demand > (SELECT AVG(demand) FROM EnergyConsumption);",
      "SELECT location, demand FROM EnergyConsumption WHERE location = 'California' UNION SELECT location, production FROM EnergyProduction WHERE location = 'California';",
      "SELECT * FROM EnergyConsumption WHERE location IN ('New York', 'California');",
      "SELECT location, MAX(demand) AS max_demand FROM EnergyConsumption WHERE timestamp > '2022-01-01' GROUP BY location;",
      "SELECT * FROM EnergyConsumption WHERE timestamp > '2022-01-01' LIMIT 5;",
      "SELECT EP.location, EP.production, RF.timestamp, RF.demand_forecast FROM EnergyProduction EP JOIN DemandForecast RF ON EP.location = RF.location WHERE EP.timestamp = RF.timestamp;",
      "SELECT location, AVG(demand) AS avg_demand FROM EnergyConsumption GROUP BY location HAVING AVG(demand) > 100;",
      "SELECT EP.location, SUM(EP.production) AS total_production FROM EnergyProduction EP GROUP BY EP.location HAVING SUM(EP.production) > 500;",
      "SELECT location, demand, humidity FROM EnergyConsumption EC JOIN WeatherForecast WF ON EC.location = WF.location WHERE EC.timestamp = '2022-02-28';",
      "SELECT timestamp, location, production FROM EnergyProduction UNION SELECT timestamp, location, demand_forecast FROM DemandForecast ORDER BY timestamp ASC;",
      "SELECT location, SUM(demand) AS total_demand, SUM(demand_forecast) AS total_forecast FROM EnergyConsumption EC JOIN DemandForecast DF ON EC.location = DF.location GROUP BY location;",
      "SELECT location, MAX(demand), MAX(demand_forecast) FROM EnergyConsumption EC JOIN DemandForecast DF ON EC.location = DF.location GROUP BY location;"
    ]
  }
]