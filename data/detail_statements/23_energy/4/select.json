[
  {
    "statements": [
      "SELECT * FROM power_grid_performance;",
      "SELECT id, location FROM power_grid_performance;",
      "SELECT location, power_consumed FROM power_grid_performance;",
      "SELECT * FROM power_grid_performance WHERE id = 1;",
      "SELECT location FROM power_grid_performance WHERE power_consumed > 1000;",
      "SELECT id, latency FROM power_grid_performance WHERE location = 'New York';",
      "SELECT * FROM power_grid_performance ORDER BY power_consumed DESC;",
      "SELECT AVG(power_consumed) FROM power_grid_performance;",
      "SELECT MAX(latency) FROM power_grid_performance;",
      "SELECT COUNT(*) FROM power_grid_performance;",
      "SELECT id, location, power_consumed FROM power_grid_performance LIMIT 5;",
      "SELECT * FROM power_grid_performance WHERE power_consumed BETWEEN 500 AND 1000;",
      "SELECT DISTINCT location FROM power_grid_performance;",
      "SELECT * FROM power_grid_performance WHERE location LIKE 'L%';",
      "SELECT SUM(power_consumed) FROM power_grid_performance;",
      "SELECT * FROM power_grid_performance WHERE latency IS NULL;",
      "SELECT MIN(power_consumed) FROM power_grid_performance;",
      "SELECT id, power_consumed FROM power_grid_performance WHERE latency < 0.005;",
      "SELECT location, latency FROM power_grid_performance WHERE power_consumed < 500;",
      "SELECT id, location FROM power_grid_performance WHERE power_consumed = (SELECT MAX(power_consumed) FROM power_grid_performance);",
      "SELECT * FROM power_grid_performance WHERE location = 'New York' AND power_consumed > 1000",
      "SELECT id, location FROM power_grid_performance WHERE power_consumed < 500 AND latency < 0.5",
      "SELECT location, AVG(power_consumed) AS avg_power_consumed FROM power_grid_performance GROUP BY location",
      "SELECT COUNT(*) AS total_records FROM power_grid_performance",
      "SELECT location, SUM(power_consumed) AS total_power_consumed FROM power_grid_performance GROUP BY location HAVING total_power_consumed > 5000",
      "SELECT * FROM power_grid_performance ORDER BY power_consumed DESC",
      "SELECT location, power_consumed, latency FROM power_grid_performance WHERE power_consumed > 500 ORDER BY latency ASC",
      "SELECT * FROM power_grid_performance WHERE location IN ('California', 'Texas', 'Florida')",
      "SELECT DISTINCT location FROM power_grid_performance",
      "SELECT location, MAX(power_consumed) AS max_power_consumed FROM power_grid_performance GROUP BY location",
      "SELECT location, power_consumed FROM power_grid_performance WHERE power_consumed BETWEEN 1000 AND 2000",
      "SELECT location, power_consumed, latency FROM power_grid_performance WHERE location LIKE 'A%'",
      "SELECT * FROM power_grid_performance WHERE power_consumed BETWEEN 500 AND 1500 AND latency < 1.0",
      "SELECT location, AVG(latency) AS avg_latency FROM power_grid_performance GROUP BY location HAVING avg_latency > 0.2",
      "SELECT id, location, power_consumed, latency FROM power_grid_performance LIMIT 5",
      "SELECT location, MIN(power_consumed) AS min_power_consumed FROM power_grid_performance GROUP BY location",
      "SELECT COUNT(DISTINCT location) AS unique_locations FROM power_grid_performance",
      "SELECT location, STDDEV(power_consumed) AS power_consumed_std_dev FROM power_grid_performance GROUP BY location",
      "SELECT location, COUNT(*) AS record_count FROM power_grid_performance GROUP BY location ORDER BY record_count DESC",
      "SELECT location, MAX(power_consumed) - MIN(power_consumed) AS power_consumed_range FROM power_grid_performance GROUP BY location"
    ]
  },
  {
    "statements": [
      "SELECT * FROM power_grid_performance;",
      "SELECT id, location FROM power_grid_performance;",
      "SELECT id, power_consumption FROM power_grid_performance;",
      "SELECT * FROM outages_prevention;",
      "SELECT grid_id, prevention_method FROM outages_prevention;",
      "SELECT id, success_rate FROM outages_prevention;",
      "SELECT id, location, power_consumption FROM power_grid_performance;",
      "SELECT id, grid_id, prevention_method FROM outages_prevention;",
      "SELECT location, power_consumption, voltage FROM power_grid_performance;",
      "SELECT prevention_method, success_rate FROM outages_prevention;",
      "SELECT id, location, power_consumption, voltage FROM power_grid_performance;",
      "SELECT grid_id, prevention_method, success_rate FROM outages_prevention;",
      "SELECT * FROM power_grid_performance WHERE location = 'New York';",
      "SELECT * FROM power_grid_performance WHERE voltage > 220;",
      "SELECT * FROM power_grid_performance WHERE location = 'California' AND power_consumption < 100;",
      "SELECT * FROM outages_prevention WHERE success_rate > 0.8;",
      "SELECT * FROM outages_prevention WHERE prevention_method = 'Monitoring Systems';",
      "SELECT id, location FROM power_grid_performance WHERE power_consumption > 500;",
      "SELECT grid_id, prevention_method FROM outages_prevention WHERE success_rate < 0.5;",
      "SELECT id, location, power_consumption FROM power_grid_performance WHERE voltage BETWEEN 200 AND 250;",
      "SELECT * FROM power_grid_performance WHERE power_consumption > 1000 AND voltage < 500",
      "SELECT AVG(power_consumption) AS avg_power_consumption, MAX(voltage) AS max_voltage FROM power_grid_performance",
      "SELECT location, SUM(power_consumption) AS total_power_consumption FROM power_grid_performance GROUP BY location",
      "SELECT pp.location, op.prevention_method FROM power_grid_performance pp JOIN outages_prevention op ON pp.id = op.grid_id",
      "SELECT location, COUNT(*) AS total_outages FROM power_grid_performance WHERE power_consumption < 500 GROUP BY location HAVING COUNT(*) > 1",
      "SELECT prevention_method, AVG(success_rate) AS avg_success_rate FROM outages_prevention GROUP BY prevention_method",
      "SELECT * FROM power_grid_performance WHERE location LIKE '%City%' AND power_consumption BETWEEN 500 AND 1000",
      "SELECT COUNT(*) AS total_power_grids FROM power_grid_performance",
      "SELECT AVG(power_consumption) AS avg_power_consumption, SUM(voltage) AS total_voltage FROM power_grid_performance",
      "SELECT pp.location, SUM(pp.power_consumption) AS total_power_consumption, MIN(op.success_rate) AS min_success_rate FROM power_grid_performance pp JOIN outages_prevention op ON pp.id = op.grid_id",
      "SELECT * FROM outages_prevention WHERE success_rate > 0.8 AND grid_id IN (SELECT id FROM power_grid_performance WHERE voltage > 600)",
      "SELECT pp.location, COUNT(*) AS total_prevention_methods FROM power_grid_performance pp JOIN outages_prevention op ON pp.id = op.grid_id GROUP BY pp.location",
      "SELECT * FROM power_grid_performance ORDER BY power_consumption DESC, voltage ASC",
      "SELECT location, AVG(voltage) AS avg_voltage FROM power_grid_performance GROUP BY location HAVING AVG(voltage) > 600",
      "SELECT * FROM power_grid_performance WHERE id = (SELECT MAX(id) FROM power_grid_performance)",
      "SELECT pp.location, COUNT(*) AS total_outages FROM power_grid_performance pp LEFT JOIN outages_prevention op ON pp.id = op.grid_id WHERE op.id IS NULL GROUP BY pp.location",
      "SELECT AVG(power_consumption) AS avg_power_consumption, AVG(voltage) AS avg_voltage FROM power_grid_performance WHERE location = 'Suburb'",
      "SELECT * FROM outages_prevention WHERE prevention_method IN ('Weather Forecasting', 'Grid Maintenance')",
      "SELECT pp.location, MAX(op.success_rate) AS max_success_rate FROM power_grid_performance pp JOIN outages_prevention op ON pp.id = op.grid_id GROUP BY pp.location",
      "SELECT location, SUM(voltage) AS total_voltage FROM power_grid_performance GROUP BY location HAVING SUM(voltage) > 2000",
      "SELECT * FROM power_grid_performance WHERE power_consumption > (SELECT AVG(power_consumption) FROM power_grid_performance)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM power_grid_locations;",
      "SELECT location_name, city, state FROM power_grid_locations;",
      "SELECT * FROM power_grid_devices;",
      "SELECT device_name, location_id, device_type FROM power_grid_devices;",
      "SELECT * FROM power_grid_readings;",
      "SELECT device_id, reading_value, timestamp FROM power_grid_readings;",
      "SELECT location_name, city, state, device_name, device_type FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id;",
      "SELECT device_name, device_type, reading_value, timestamp FROM power_grid_devices JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id;",
      "SELECT location_name, city, state, device_name, device_type, reading_value, timestamp FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id;",
      "SELECT location_id, AVG(reading_value) AS avg_reading_value FROM power_grid_readings GROUP BY location_id;",
      "SELECT state, COUNT(*) AS device_count FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id GROUP BY state;",
      "SELECT device_name, MAX(reading_value) AS max_reading_value FROM power_grid_devices JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id GROUP BY device_id;",
      "SELECT * FROM power_grid_locations WHERE state = 'California';",
      "SELECT * FROM power_grid_devices WHERE device_type LIKE '%meter%';",
      "SELECT * FROM power_grid_readings WHERE reading_value > 100;",
      "SELECT location_name, city, state, device_name, device_type, reading_value, timestamp FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id WHERE reading_value < 50;",
      "SELECT device_name, COUNT(*) AS reading_count FROM power_grid_devices JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id GROUP BY device_name HAVING reading_count > 5;",
      "SELECT city, state, COUNT(*) AS device_count FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id GROUP BY city, state HAVING device_count >= 3;",
      "SELECT location_name, MAX(reading_value) AS max_reading_value FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id GROUP BY location_name;",
      "SELECT location_name, MIN(reading_value) AS min_reading_value FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id GROUP BY location_name;",
      "SELECT city, state, AVG(reading_value) AS avg_reading_value FROM power_grid_locations JOIN power_grid_devices ON power_grid_locations.location_id = power_grid_devices.location_id JOIN power_grid_readings ON power_grid_devices.device_id = power_grid_readings.device_id GROUP BY city, state HAVING avg_reading_value > 50;",
      "SELECT * FROM power_grid_locations WHERE state = 'California';",
      "SELECT device_name, location_name, city FROM power_grid_devices d JOIN power_grid_locations l ON d.location_id = l.location_id;",
      "SELECT device_name, reading_value, timestamp FROM power_grid_devices d JOIN power_grid_readings r ON d.device_id = r.device_id WHERE r.reading_value > 100;",
      "SELECT AVG(reading_value) AS avg_reading_value, MAX(reading_value) AS max_reading_value FROM power_grid_readings;",
      "SELECT device_name, reading_value, timestamp FROM power_grid_devices d JOIN power_grid_readings r ON d.device_id = r.device_id WHERE DATE(timestamp) = '2021-10-15' ORDER BY reading_value DESC;",
      "SELECT city, AVG(reading_value) AS avg_reading_value FROM power_grid_locations l JOIN power_grid_devices d ON l.location_id = d.location_id JOIN power_grid_readings r ON d.device_id = r.device_id GROUP BY city;",
      "SELECT * FROM power_grid_devices d WHERE NOT EXISTS (SELECT 1 FROM power_grid_readings r WHERE r.device_id = d.device_id);",
      "SELECT MAX(reading_value) AS max_reading_value, city FROM power_grid_locations l JOIN power_grid_devices d ON l.location_id = d..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM PowerPlants;",
      "SELECT plant_name, location FROM PowerPlants;",
      "SELECT * FROM Transformers;",
      "SELECT transformer_name, location, capacity FROM Transformers;",
      "SELECT * FROM GridLines;",
      "SELECT line_name, length FROM GridLines;",
      "SELECT * FROM GridOutages;",
      "SELECT outage_date, duration, affected_area FROM GridOutages;",
      "SELECT PowerPlants.plant_id, plant_name, location, capacity FROM PowerPlants JOIN Transformers ON PowerPlants.plant_id = Transformers.power_plant_id;",
      "SELECT Transformers.transformer_id, transformer_name, location, capacity, power_plant_id, plant_name FROM Transformers JOIN PowerPlants ON Transformers.power_plant_id = PowerPlants.plant_id;",
      "SELECT GridOutages.outage_id, outage_date, duration, affected_area, line_id, line_name FROM GridOutages JOIN GridLines ON GridOutages.line_id = GridLines.line_id;",
      "SELECT GridLines.line_id, line_name, length, power_capacity FROM GridLines JOIN Transformers ON GridLines.line_id = Transformers.power_plant_id;",
      "SELECT plant_id, plant_name, location, capacity FROM PowerPlants WHERE capacity > 1000;",
      "SELECT transformer_id, transformer_name, location, capacity FROM Transformers WHERE capacity < 500;",
      "SELECT line_id, line_name, length, power_capacity FROM GridLines WHERE power_capacity > 5000;",
      "SELECT outage_id, outage_date, duration, affected_area FROM GridOutages WHERE duration > 5;",
      "SELECT * FROM PowerPlants WHERE location = 'New York';",
      "SELECT * FROM Transformers WHERE location = 'California';",
      "SELECT * FROM GridLines WHERE line_name LIKE '%main%';",
      "SELECT * FROM GridOutages WHERE affected_area LIKE '%downtown%';",
      "SELECT * FROM PowerPlants WHERE location = 'New York';",
      "SELECT transformer_name, capacity FROM Transformers WHERE location = 'California' ORDER BY capacity DESC;",
      "SELECT plant_name, capacity, location FROM PowerPlants JOIN Transformers ON PowerPlants.plant_id = Transformers.power_plant_id WHERE Transformers.location = 'Texas';",
      "SELECT * FROM GridLines WHERE length > 100 ORDER BY power_capacity DESC;",
      "SELECT outage_date, affected_area FROM GridOutages WHERE outage_date >= '2022-01-01' AND outage_date <= '2022-12-31';",
      "SELECT plant_name, location, capacity FROM PowerPlants WHERE capacity > 5000 UNION SELECT transformer_name, location, capacity FROM Transformers WHERE capacity > 2000;",
      "SELECT line_name, length, power_capacity FROM GridLines GL JOIN GridOutages GO ON GL.line_id = GO.line_id WHERE GO.duration > 10 ORDER BY length ASC;",
      "SELECT COUNT(*) AS total_plants FROM PowerPlants;",
      "SELECT MAX(length) AS longest_line_length FROM GridLines;",
      "SELECT AVG(duration) AS average_outage_duration FROM GridOutages;",
      "SELECT plant_name, location, SUM(capacity) AS total_capacity FROM PowerPlants GROUP BY plant_name, location;",
      "SELECT transformer_name, location, SUM(capacity) AS total_capacity FROM Transformers GROUP BY transformer_name, location;",
      "SELECT COUNT(*) AS total_outages FROM GridOutages;",
      "SELECT COUNT(DISTINCT affected_area) AS unique_affected_areas FROM GridOutages;",
      "SELECT plant_name, location, COUNT(*) AS total_outages FROM PowerPlants JOIN Transformers ON PowerPlants.plant_id = Transformers.power_plant_id JOIN GridOutages ON Transformers.location = GridOutages.affected_area GROUP BY plant_name, location;",
      "SELECT plant_name, location, outage_date FROM PowerPlants JOIN Transformers ON PowerPlants.plant_id = Transformers.power_plant_id JOIN GridOutages ON Transformers.location = GridOutages.affected_area WHERE outage_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT plant_name, transformer_name, line_name FROM PowerPlants JOIN Transformers ON PowerPlants.plant_id = Transformers.power_plant_id JOIN GridLines ON Transformers.location = GridLines.line_name;",
      "SELECT plant_name, transformer_name, outage_date, duration FROM PowerPlants JOIN Transformers ON PowerPlants.plant_id = Transformers.power_plant_id JOIN GridOutages ON Transformers.location = GridOutages.affected_area ORDER BY outage_date ASC;",
      "SELECT plant_name, AVG(duration) AS average_outage_duration FROM PowerPlants JOIN Transformers ON PowerPlants.plant_id = Transformers.power_plant_id JOIN GridOutages ON Transformers.location = GridOutages.affected_area GROUP BY plant_name;",
      "SELECT plant_name, location, capacity FROM PowerPlants WHERE location LIKE '%ia%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM power_plants;",
      "SELECT plant_id, plant_name FROM power_plants;",
      "SELECT location FROM power_plants;",
      "SELECT capacity FROM power_plants;",
      "SELECT * FROM substations;",
      "SELECT substation_id, substation_name FROM substations;",
      "SELECT location FROM substations;",
      "SELECT power_level FROM substations;",
      "SELECT * FROM transmission_lines;",
      "SELECT line_id, line_name FROM transmission_lines;",
      "SELECT length FROM transmission_lines;",
      "SELECT status FROM transmission_lines;",
      "SELECT * FROM grid_outages;",
      "SELECT outage_id, outage_start FROM grid_outages;",
      "SELECT outage_end FROM grid_outages;",
      "SELECT affected_area FROM grid_outages;",
      "SELECT * FROM monitoring_data;",
      "SELECT data_id, timestamp FROM monitoring_data;",
      "SELECT voltage FROM monitoring_data;",
      "SELECT current FROM monitoring_data;",
      "SELECT status FROM monitoring_data;",
      "SELECT * FROM power_plants WHERE capacity > 1000",
      "SELECT plant_name, location FROM power_plants WHERE capacity > 5000 ORDER BY capacity DESC",
      "SELECT * FROM substations WHERE power_level < 500",
      "SELECT substation_name, location FROM substations WHERE location = 'CityA' OR location = 'CityB'",
      "SELECT line_name, length FROM transmission_lines WHERE length > 50 AND status = TRUE",
      "SELECT * FROM grid_outages WHERE outage_end > '2022-01-01 00:00:00'",
      "SELECT location, AVG(capacity) AS avg_capacity FROM power_plants GROUP BY location",
      "SELECT location, COUNT(*) AS num_substations FROM substations GROUP BY location HAVING num_substations > 3",
      "SELECT substation_name, location FROM substations JOIN transmission_lines ON substations.substation_id = transmission_lines.line_id",
      "SELECT * FROM power_plants p JOIN monitoring_data m ON p.plant_id = m.data_id WHERE m.voltage > 100",
      "SELECT outage_id, affected_area FROM grid_outages WHERE outage_start BETWEEN '2021-01-01 00:00:00' AND '2021-12-31 23:59:59'",
      "SELECT * FROM transmission_lines WHERE status = FALSE",
      "SELECT plant_name, substation_name FROM power_plants p JOIN substations s ON p.plant_id = s.substation_id",
      "SELECT DISTINCT location FROM power_plants",
      "SELECT MAX(power_level) AS max_power_level FROM substations",
      "SELECT AVG(length) AS avg_length FROM transmission_lines",
      "SELECT COUNT(*) AS total_outages FROM grid_outages WHERE affected_area = 'CityA'",
      "SELECT plant_name, location, voltage FROM power_plants p JOIN monitoring_data m ON p.plant_id = m.data_id WHERE m.status = FALSE",
      "SELECT plant_name, SUM(capacity) AS total_capacity FROM power_plants GROUP BY plant_name",
      "SELECT outage_id, MAX(affected_area) AS max_area FROM grid_outages",
      "SELECT DISTINCT location, COUNT(*) AS num_plants FROM power_plants GROUP BY location HAVING num_plants > 2"
    ]
  }
]