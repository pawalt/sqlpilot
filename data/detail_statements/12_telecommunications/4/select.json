[
  {
    "statements": [
      "SELECT * FROM data_usage_patterns WHERE user_id = 1",
      "SELECT user_id, data_usage FROM data_usage_patterns WHERE data_plan = 'Unlimited'",
      "SELECT user_id, plan_cost FROM data_usage_patterns WHERE data_usage > 100",
      "SELECT * FROM data_usage_patterns WHERE plan_cost < 50",
      "SELECT user_id, data_plan FROM data_usage_patterns WHERE plan_cost BETWEEN 50 AND 100",
      "SELECT * FROM data_usage_patterns ORDER BY user_id ASC",
      "SELECT user_id, data_usage FROM data_usage_patterns ORDER BY data_usage DESC",
      "SELECT DISTINCT plan_cost FROM data_usage_patterns",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns WHERE data_plan LIKE '%2GB%'",
      "SELECT * FROM data_usage_patterns WHERE data_usage IS NULL",
      "SELECT user_id, data_plan FROM data_usage_patterns WHERE plan_cost = 0",
      "SELECT COUNT(user_id) FROM data_usage_patterns",
      "SELECT MAX(data_usage) FROM data_usage_patterns",
      "SELECT AVG(plan_cost) FROM data_usage_patterns",
      "SELECT SUM(data_usage) FROM data_usage_patterns",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns LIMIT 5",
      "SELECT user_id, SUM(data_usage) AS total_usage FROM data_usage_patterns GROUP BY user_id",
      "SELECT data_plan, AVG(plan_cost) AS avg_cost FROM data_usage_patterns GROUP BY data_plan",
      "SELECT user_id, data_usage, data_plan, plan_cost FROM data_usage_patterns WHERE plan_cost > AVG(plan_cost)",
      "SELECT * FROM data_usage_patterns WHERE data_plan = '2GB' OR data_plan = '5GB'",
      "SELECT * FROM data_usage_patterns WHERE data_usage > 100;",
      "SELECT user_id, data_usage FROM data_usage_patterns WHERE data_usage > 500;",
      "SELECT user_id, data_plan FROM data_usage_patterns WHERE data_usage BETWEEN 100 AND 500;",
      "SELECT * FROM data_usage_patterns WHERE data_plan LIKE '%unlimited%';",
      "SELECT user_id, SUM(data_usage) AS total_data_usage FROM data_usage_patterns GROUP BY user_id;",
      "SELECT data_plan, AVG(data_usage) AS average_data_usage FROM data_usage_patterns GROUP BY data_plan;",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns WHERE plan_cost > 50 ORDER BY plan_cost DESC;",
      "SELECT COUNT(user_id) AS user_count, data_plan FROM data_usage_patterns GROUP BY data_plan;",
      "SELECT SUM(data_usage) AS total_usage, AVG(plan_cost) AS average_cost FROM data_usage_patterns WHERE data_usage > 200;",
      "SELECT data_plan, COUNT(user_id) AS user_count, SUM(data_usage) AS total_usage FROM data_usage_patterns WHERE data_usage > 300 GROUP BY data_plan;",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns WHERE data_plan = 'Premium';",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns WHERE data_plan IN ('Basic', 'Premium');",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns WHERE data_plan NOT IN ('Basic', 'Free');",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns WHERE data_plan = 'Unlimited' AND data_usage > 500;",
      "SELECT data_plan, MAX(plan_cost) AS max_cost FROM data_usage_patterns GROUP BY data_plan;",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns ORDER BY data_usage DESC, plan_cost DESC;",
      "SELECT * FROM data_usage_patterns WHERE data_plan = 'Basic' OR (data_usage > 200 AND plan_cost < 50);",
      "SELECT user_id, data_plan, plan_cost FROM data_usage_patterns WHERE data_plan LIKE '%Business%' AND plan_cost > 100;",
      "SELECT user_id, data_usage, data_plan, plan_cost FROM data_usage_patterns WHERE data_usage < 50 UNION SELECT user_id, data_usage, data_plan, plan_cost FROM data_usage_patterns WHERE plan_cost < 20;",
      "SELECT data_plan, COUNT(user_id) AS user_count FROM data_usage_patterns GROUP BY data_plan HAVING user_count > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM user_data;",
      "SELECT user_id, data_usage FROM user_data;",
      "SELECT data_plan FROM user_data WHERE user_id = 1;",
      "SELECT plan_name, data_limit FROM data_plans;",
      "SELECT user_id, data_usage FROM user_data WHERE data_usage > 100;",
      "SELECT * FROM user_data WHERE data_plan = 'Basic';",
      "SELECT user_id, data_usage, data_plan FROM user_data WHERE user_id = 2;",
      "SELECT * FROM user_data JOIN data_plans ON user_data.data_plan = data_plans.plan_name;",
      "SELECT user_id, plan_name, data_limit FROM user_data JOIN data_plans ON user_data.data_plan = data_plans.plan_name;",
      "SELECT COUNT(*) FROM user_data;",
      "SELECT AVG(data_usage) FROM user_data;",
      "SELECT MAX(data_limit) FROM data_plans;",
      "SELECT user_id, SUM(data_usage) FROM user_data GROUP BY user_id;",
      "SELECT data_plan, AVG(data_usage) FROM user_data GROUP BY data_plan;",
      "SELECT * FROM user_data ORDER BY data_usage DESC;",
      "SELECT user_id, plan_name, data_limit FROM user_data INNER JOIN data_plans ON user_data.data_plan = data_plans.plan_name;",
      "SELECT user_id, data_usage FROM user_data WHERE data_plan IN ('Basic', 'Pro');",
      "SELECT user_id FROM user_data WHERE data_usage BETWEEN 50 AND 100;",
      "SELECT user_id, plan_name FROM user_data LEFT JOIN data_plans ON user_data.data_plan = data_plans.plan_name;",
      "SELECT * FROM user_data WHERE user_id = (SELECT MAX(user_id) FROM user_data);",
      "SELECT * FROM user_data WHERE data_usage > 100",
      "SELECT user_id, data_usage, data_plan FROM user_data WHERE data_usage < 50",
      "SELECT user_id, SUM(data_usage) AS total_data_usage FROM user_data GROUP BY user_id",
      "SELECT u.user_id, u.data_usage, d.plan_name FROM user_data u JOIN data_plans d ON u.data_plan = d.plan_name",
      "SELECT MAX(data_usage) AS max_data_usage FROM user_data",
      "SELECT plan_name, AVG(data_limit) AS avg_data_limit FROM data_plans GROUP BY plan_name",
      "SELECT COUNT(*), AVG(data_usage) FROM user_data",
      "SELECT * FROM user_data u LEFT JOIN data_plans d ON u.data_plan = d.plan_name",
      "SELECT COUNT(DISTINCT data_plan) AS number_of_plans FROM user_data",
      "SELECT user_id, CASE WHEN data_usage > data_limit THEN 'Exceeded' ELSE 'Within Limit' END AS status FROM user_data JOIN data_plans ON user_data.data_plan = data_plans.plan_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Usage_Patterns",
      "SELECT user_id, data_usage FROM Usage_Patterns",
      "SELECT data_usage FROM Usage_Patterns WHERE user_id = 1",
      "SELECT MAX(data_usage) FROM Usage_Patterns",
      "SELECT MIN(data_usage) FROM Usage_Patterns",
      "SELECT AVG(data_usage) FROM Usage_Patterns",
      "SELECT SUM(data_usage) FROM Usage_Patterns",
      "SELECT user_id, data_usage, last_usage_date FROM Usage_Patterns WHERE data_usage > 5",
      "SELECT * FROM Data_Plans",
      "SELECT plan_id, data_limit FROM Data_Plans",
      "SELECT data_limit FROM Data_Plans WHERE plan_id = 1",
      "SELECT MAX(data_limit) FROM Data_Plans",
      "SELECT MIN(data_limit) FROM Data_Plans",
      "SELECT AVG(data_limit) FROM Data_Plans",
      "SELECT SUM(data_limit) FROM Data_Plans",
      "SELECT * FROM Personalized_Plans",
      "SELECT user_id, plan_id FROM Personalized_Plans",
      "SELECT plan_id FROM Personalized_Plans WHERE user_id = 1",
      "SELECT * FROM Usage_Patterns JOIN Personalized_Plans ON Usage_Patterns.user_id = Personalized_Plans.user_id",
      "SELECT * FROM Data_Plans JOIN Personalized_Plans ON Data_Plans.plan_id = Personalized_Plans.plan_id",
      "SELECT * FROM Usage_Patterns UP JOIN Data_Plans DP ON UP.data_usage < DP.data_limit",
      "SELECT * FROM Usage_Patterns LIMIT 10;",
      "SELECT user_id, data_usage FROM Usage_Patterns WHERE data_usage > 100;",
      "SELECT user_id, data_usage FROM Usage_Patterns WHERE last_usage_date > '2022-01-01';",
      "SELECT u.user_id, u.data_usage, p.plan_cost FROM Usage_Patterns u JOIN Personalized_Plans pp ON u.user_id = pp.user_id JOIN Data_Plans p ON pp.plan_id = p.plan_id;",
      "SELECT p.plan_id, p.plan_cost, COUNT(pp.user_id) AS total_users FROM Data_Plans p LEFT JOIN Personalized_Plans pp ON p.plan_id = pp.plan_id GROUP BY p.plan_id, p.plan_cost;",
      "SELECT u.user_id, u.data_usage, p.plan_cost FROM Usage_Patterns u INNER JOIN Personalized_Plans pp ON u.user_id = pp.user_id INNER JOIN Data_Plans p ON pp.plan_id = p.plan_id WHERE u.data_usage > p.data_limit;",
      "SELECT u.user_id, u.data_usage, p.plan_cost FROM Usage_Patterns u LEFT JOIN Personalized_Plans pp ON u.user_id = pp.user_id LEFT JOIN Data_Plans p ON pp.plan_id = p.plan_id WHERE u.data_usage > p.data_limit;",
      "SELECT p.plan_id, p.data_limit, AVG(u.data_usage) AS avg_data_usage FROM Data_Plans p JOIN Personalized_Plans pp ON p.plan_id = pp.plan_id JOIN Usage_Patterns u ON pp.user_id = u.user_id GROUP BY p.plan_id, p.data_limit;",
      "SELECT u.user_id, u.last_usage_date FROM Usage_Patterns u WHERE u.user_id IN (SELECT user_id FROM Personalized_Plans);",
      "SELECT u.user_id, u.data_usage FROM Usage_Patterns u WHERE NOT EXISTS (SELECT 1 FROM Personalized_Plans WHERE user_id = u.user_id);",
      "SELECT DISTINCT u.user_id, p.plan_id FROM Usage_Patterns u JOIN Personalized_Plans pp ON u.user_id = pp.user_id JOIN Data_Plans p ON pp.plan_id = p.plan_id;",
      "SELECT u.user_id, u.data_usage, p.plan_cost, DENSE_RANK() OVER (ORDER BY p.plan_cost DESC) AS plan_rank FROM Usage_Patterns u JOIN Personalized_Plans pp ON u.user_id = pp.user_id JOIN Data_Plans p ON pp.plan_id = p.plan_id;",
      "SELECT u.user_id, u.data_usage, p.plan_cost, ROW_NUMBER() OVER (PARTITION BY p.plan_id ORDER BY u.data_usage DESC) AS user_row FROM Usage_Patterns u JOIN Personalized_Plans pp ON u.user_id = pp.user_id JOIN Data_Plans p ON pp.plan_id = p.plan_id;",
      "SELECT u.user_id, u.data_usage, p.plan_cost, LEAD(u.data_usage) OVER (PARTITION BY pp.plan_id ORDER BY u.user_id) AS next_data_usage FROM Usage_Patterns u JOIN Personalized_Plans pp ON u.user_id = pp.user_id JOIN Data_Plans p ON pp.plan_id = p.plan_id;",
      "SELECT user_id, SUM(data_usage) AS total_usage FROM Usage_Patterns GROUP BY user_id HAVING SUM(data_usage) > 500;",
      "SELECT user_id, AVG(data_usage) AS avg_usage FROM Usage_Patterns GROUP BY user_id HAVING AVG(data_usage) > 200;",
      "SELECT user_id, MAX(data_usage) AS max_usage FROM Usage_Patterns GROUP BY user_id HAVING MAX(data_usage) < 1000;",
      "SELECT u.user_id, u.data_usage, p.data_limit FROM Usage_Patterns u JOIN Personalized_Plans pp ON u.user_id = pp.user_id JOIN Data_Plans p ON pp.plan_id = p.plan_id WHERE u.data_usage > 0.8 * p.data_limit;",
      "SELECT u.user_id, u.data_usage, p.plan_cost FROM Usage_Patterns u CROSS JOIN Data_Plans p LEFT JOIN Personalized_Plans pp ON u.user_id = pp.user_id AND p.plan_id = pp.plan_id;",
      "SELECT DISTINCT p.plan_id, p.data_limit, COUNT(u.user_id) AS total_users FROM Data_Plans p LEFT JOIN Personalized_Plans pp ON p.plan_id = pp.plan_id LEFT JOIN Usage_Patterns u ON pp.user_id = u.user_id GROUP BY p.plan_id, p.data_limit;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users;",
      "SELECT user_id, age FROM users;",
      "SELECT * FROM data_plans;",
      "SELECT plan_name, price FROM data_plans;",
      "SELECT plan_id, data_limit FROM data_plans;",
      "SELECT * FROM usage_data;",
      "SELECT user_id, used_data_amount FROM usage_data;",
      "SELECT usage_id, date FROM usage_data;",
      "SELECT * FROM personalized_plans;",
      "SELECT user_id, personalized_price FROM personalized_plans;",
      "SELECT plan_id, customized_plan_name FROM personalized_plans;",
      "SELECT u.username, pd.customized_plan_name, dp.plan_name FROM users u, personalized_plans pd, data_plans dp WHERE u.user_id = pd.user_id AND pd.plan_id = dp.plan_id;",
      "SELECT u.username, ud.used_data_amount, ud.date FROM users u, usage_data ud WHERE u.user_id = ud.user_id;",
      "SELECT d.plan_name, pp.customized_plan_name, pp.personalized_price FROM data_plans d, personalized_plans pp WHERE d.plan_id = pp.plan_id;",
      "SELECT u.username, up.customized_plan_name, d.price FROM users u, personalized_plans up, data_plans d WHERE u.user_id = up.user_id AND d.plan_id = up.plan_id;",
      "SELECT u.username, u.email, dp.plan_name, ud.used_data_amount, pp.personalized_price FROM users u, data_plans dp, usage_data ud, personalized_plans pp WHERE u.user_id = ud.user_id AND dp.plan_id = pp.plan_id;",
      "SELECT * FROM users WHERE age > 30;",
      "SELECT * FROM data_plans WHERE price < 50.00;",
      "SELECT * FROM personalized_plans WHERE personalized_price > 100.00;",
      "SELECT * FROM users WHERE age > 30;",
      "SELECT username, email FROM users WHERE age BETWEEN 20 AND 40;",
      "SELECT * FROM usage_data ud JOIN users u ON ud.user_id = u.user_id WHERE u.username = 'john_doe';",
      "SELECT u.username, p.customized_plan_name FROM personalized_plans p JOIN users u ON p.user_id = u.user_id;",
      "SELECT u.username, d.plan_name FROM users u JOIN data_plans d ON u.user_id = d.plan_id;",
      "SELECT COUNT(*) AS total_users FROM users;",
      "SELECT COUNT(*) AS total_plans FROM data_plans;",
      "SELECT MAX(age) AS max_age, MIN(age) AS min_age FROM users;",
      "SELECT AVG(data_limit) AS average_data_limit FROM data_plans;",
      "SELECT u.username, SUM(ud.used_data_amount) AS total_data_used FROM usage_data ud JOIN users u ON ud.user_id = u.user_id GROUP BY u.username;",
      "SELECT u.username, d.plan_name, p.customized_plan_name FROM users u LEFT JOIN data_plans d ON u.user_id = d.plan_id LEFT JOIN personalized_plans p ON u.user_id = p.user_id;",
      "SELECT u.username, d.plan_name, p.customized_plan_name FROM users u RIGHT JOIN data_plans d ON u.user_id = d.plan_id RIGHT JOIN personalized_plans p ON u.user_id = p.user_id;",
      "SELECT * FROM users WHERE username LIKE '%doe%';",
      "SELECT * FROM personalized_plans WHERE personalized_price > 50.00;",
      "SELECT * FROM data_plans WHERE price < 100.00;",
      "SELECT u.username, d.plan_name, p.customized_plan_name FROM users u INNER JOIN data_plans d ON u.user_id = d.plan_id INNER JOIN personalized_plans p ON u.user_id = p.user_id;",
      "SELECT AVG(used_data_amount) AS average_data_usage FROM usage_data;",
      "SELECT u.username, COUNT(*) AS total_personalized_plans FROM users u JOIN personalized_plans p ON u.user_id = p.user_id GROUP BY u.username;",
      "SELECT * FROM users ORDER BY age DESC;",
      "SELECT * FROM data_plans ORDER BY price ASC, data_limit DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users;",
      "SELECT user_id, email FROM users WHERE user_id = 1;",
      "SELECT * FROM data_plans;",
      "SELECT plan_id, plan_name, price FROM data_plans WHERE price < 50.00;",
      "SELECT * FROM data_usage;",
      "SELECT usage_id, user_id, data_used FROM data_usage WHERE user_id = 2;",
      "SELECT recommendation_id, user_id, reason FROM data_recommendations;",
      "SELECT * FROM data_consumption_patterns;",
      "SELECT user_id, data_consumption_pattern FROM data_consumption_patterns WHERE user_id = 3;",
      "SELECT u.username, d.plan_name FROM users u JOIN data_recommendations r ON u.user_id = r.user_id JOIN data_plans d ON r.recommended_plan_id = d.plan_id;",
      "SELECT u.username, d.plan_name FROM users u JOIN data_recommendations r ON u.user_id = r.user_id JOIN data_plans d ON r.recommended_plan_id = d.plan_id WHERE r.reason = 'Low Data Usage';",
      "SELECT u.username, SUM(du.data_used) AS total_data_used FROM users u JOIN data_usage du ON u.user_id = du.user_id GROUP BY u.username;",
      "SELECT u.username, COUNT(dr.recommendation_id) AS total_recommendations FROM users u LEFT JOIN data_recommendations dr ON u.user_id = dr.user_id GROUP BY u.username;",
      "SELECT u.username, dp.plan_name, du.date_used FROM users u JOIN data_usage du ON u.user_id = du.user_id JOIN data_plans dp ON du.plan_id = dp.plan_id WHERE du.data_used > dp.data_limit;",
      "SELECT u.username, dp.plan_name, dcp.data_consumption_pattern->>'peak_hours' AS peak_hours FROM users u JOIN data_consumption_patterns dcp ON u.user_id = dcp.user_id JOIN data_plans dp ON dcp.data_consumption_pattern->>'plan_id'::int = dp.plan_id;",
      "SELECT * FROM users;",
      "SELECT username, email FROM users WHERE date_registered > '2022-01-01';",
      "SELECT user_id, plan_id, data_used FROM data_usage WHERE data_used > 1000;",
      "SELECT user_id, username, plan_name, price FROM users JOIN data_recommendations ON users.user_id = data_recommendations.user_id JOIN data_plans ON data_recommendations.recommended_plan_id = data_plans.plan_id;",
      "SELECT user_id, SUM(data_used) AS total_data_used FROM data_usage GROUP BY user_id;",
      "SELECT user_id, AVG(data_used) AS average_data_used FROM data_usage GROUP BY user_id HAVING AVG(data_used) > 500;",
      "SELECT user_id, jsonb_array_elements_text(data_consumption_pattern) AS pattern FROM data_consumption_patterns;",
      "SELECT user_id, recommended_plan_id, COUNT(*) AS num_recommendations FROM data_recommendations GROUP BY user_id, recommended_plan_id;",
      "SELECT user_id, username, data_limit, price FROM users JOIN data_plans ON users.user_id = data_plans.plan_id WHERE data_limit >= 500;",
      "SELECT user_id, email, date_used FROM users JOIN data_usage ON users.user_id = data_usage.user_id WHERE data_used > 1000 AND date_used > '2022-01-01';",
      "SELECT user_id, username, plan_id, data_used, data_consumption_pattern FROM users JOIN data_usage ON users.user_id = data_usage.user_id JOIN data_consumption_patterns ON users.user_id = data_consumption_patterns.user_id;",
      "SELECT user_id, username, plan_name, data_used, date_used FROM users JOIN data_usage ON users.user_id = data_usage.user_id JOIN data_plans ON data_usage.plan_id = data_plans.plan_id WHERE date_used > '2022-01-01';",
      "SELECT user_id, recommended_plan_id, reason FROM data_recommendations WHERE reason LIKE '%upgrade%';",
      "SELECT user_id, plan_id, data_used FROM data_usage WHERE date_used BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT user_id, plan_id, data_used FROM data_usage WHERE plan_id IN (SELECT plan_id FROM data_plans WHERE data_limit >= 500);",
      "SELECT user_id, username, data_consumption_pattern->'high_usage' AS high_usage FROM users JOIN data_consumption_patterns ON users.user_id = data_consumption_patterns.user_id;",
      "SELECT username, COUNT(*) AS total_recommendations FROM data_recommendations JOIN users ON data_recommendations.user_id = users.user_id GROUP BY username;",
      "SELECT user_id, username, data_consumption_pattern FROM users WHERE EXISTS (SELECT 1 FROM data_consumption_patterns WHERE users.user_id = data_consumption_patterns.user_id);",
      "SELECT user_id, username, plan_id, data_used, data_consumption_pattern FROM users JOIN data_usage ON users.user_id = data_usage.user_id JOIN data_consumption_patterns ON users.user_id = data_consumption_patterns.user_id WHERE data_used > 1000;",
      "SELECT user_id, plan_id, data_used, data_consumption_pattern FROM data_usage JOIN data_consumption_patterns ON data_usage.user_id = data_consumption_patterns.user_id WHERE data_consumption_pattern @> '{\"high_usage\": true}';"
    ]
  }
]