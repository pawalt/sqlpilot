[
  {
    "statements": [
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (1, 'Data 1', 101, 'External Data 1') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 1', external_id = 101, external_data = 'Updated External Data 1';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (2, 'Data 2', 102, 'External Data 2') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 2', external_id = 102, external_data = 'Updated External Data 2';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (3, 'Data 3', 103, 'External Data 3') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 3', external_id = 103, external_data = 'Updated External Data 3';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (4, 'Data 4', 104, 'External Data 4') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 4', external_id = 104, external_data = 'Updated External Data 4';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (5, 'Data 5', 105, 'External Data 5') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 5', external_id = 105, external_data = 'Updated External Data 5';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (6, 'Data 6', 106, 'External Data 6') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 6', external_id = 106, external_data = 'Updated External Data 6';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (7, 'Data 7', 107, 'External Data 7') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 7', external_id = 107, external_data = 'Updated External Data 7';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (8, 'Data 8', 108, 'External Data 8') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 8', external_id = 108, external_data = 'Updated External Data 8';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (9, 'Data 9', 109, 'External Data 9') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 9', external_id = 109, external_data = 'Updated External Data 9';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (10, 'Data 10', 110, 'External Data 10') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 10', external_id = 110, external_data = 'Updated External Data 10';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (11, 'Data 11', 111, 'External Data 11') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 11', external_id = 111, external_data = 'Updated External Data 11';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (12, 'Data 12', 112, 'External Data 12') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 12', external_id = 112, external_data = 'Updated External Data 12';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (13, 'Data 13', 113, 'External Data 13') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 13', external_id = 113, external_data = 'Updated External Data 13';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (14, 'Data 14', 114, 'External Data 14') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 14', external_id = 114, external_data = 'Updated External Data 14';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (15, 'Data 15', 115, 'External Data 15') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 15', external_id = 115, external_data = 'Updated External Data 15';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (16, 'Data 16', 116, 'External Data 16') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 16', external_id = 116, external_data = 'Updated External Data 16';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (17, 'Data 17', 117, 'External Data 17') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 17', external_id = 117, external_data = 'Updated External Data 17';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (18, 'Data 18', 118, 'External Data 18') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 18', external_id = 118, external_data = 'Updated External Data 18';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (19, 'Data 19', 119, 'External Data 19') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 19', external_id = 119, external_data = 'Updated External Data 19';",
      "INSERT INTO reconciliation_data (internal_id, internal_data, external_id, external_data) VALUES (20, 'Data 20', 120, 'External Data 20') ON CONFLICT (internal_id) DO UPDATE SET internal_data = 'Updated Data 20', external_id = 120, external_data = 'Updated External Data 20';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (1, 'Data 1', 101, 'External Data 1') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 1', external_data = 'Updated External Data 1';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (2, 'Data 2', 102, 'External Data 2') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 2', external_data = 'Updated External Data 2';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (3, 'Data 3', 103, 'External Data 3') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 3', external_data = 'Updated External Data 3';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (4, 'Data 4', 104, 'External Data 4') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 4', external_data = 'Updated External Data 4';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (5, 'Data 5', 105, 'External Data 5') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 5', external_data = 'Updated External Data 5';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (6, 'Data 6', 106, 'External Data 6') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 6', external_data = 'Updated External Data 6';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (7, 'Data 7', 107, 'External Data 7') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 7', external_data = 'Updated External Data 7';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (8, 'Data 8', 108, 'External Data 8') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 8', external_data = 'Updated External Data 8';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (9, 'Data 9', 109, 'External Data 9') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 9', external_data = 'Updated External Data 9';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (10, 'Data 10', 110, 'External Data 10') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 10', external_data = 'Updated External Data 10';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (11, 'Data 11', 111, 'External Data 11') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 11', external_data = 'Updated External Data 11';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (12, 'Data 12', 112, 'External Data 12') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 12', external_data = 'Updated External Data 12';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (13, 'Data 13', 113, 'External Data 13') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 13', external_data = 'Updated External Data 13';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (14, 'Data 14', 114, 'External Data 14') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 14', external_data = 'Updated External Data 14';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (15, 'Data 15', 115, 'External Data 15') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 15', external_data = 'Updated External Data 15';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (16, 'Data 16', 116, 'External Data 16') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 16', external_data = 'Updated External Data 16';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (17, 'Data 17', 117, 'External Data 17') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 17', external_data = 'Updated External Data 17';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (18, 'Data 18', 118, 'External Data 18') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 18', external_data = 'Updated External Data 18';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (19, 'Data 19', 119, 'External Data 19') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 19', external_data = 'Updated External Data 19';",
      "UPSERT INTO reconciliation_data(internal_id, internal_data, external_id, external_data) VALUES (20, 'Data 20', 120, 'External Data 20') ON CONFLICT(internal_id) DO UPDATE SET internal_data = 'Updated Data 20', external_data = 'Updated External Data 20';"
    ]
  },
  {
    "statements": [
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (1, 'Internal 1', 'External 1') ON CONFLICT (id) DO UPDATE SET internal_data = excluded.internal_data, external_data = excluded.external_data;",
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (2, 'Internal 2', 'External 2') ON CONFLICT (id) DO UPDATE SET internal_data = excluded.internal_data, external_data = excluded.external_data;",
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (3, 'Internal 3', 'External 3') ON CONFLICT (id) DO UPDATE SET internal_data = excluded.internal_data, external_data = excluded.external_data;",
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (4, 'Internal 4', 'External 4') ON CONFLICT (id) DO UPDATE SET internal_data = excluded.internal_data, external_data = excluded.external_data;",
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (5, 'Internal 5', 'External 5') ON CONFLICT (id) DO UPDATE SET internal_data = excluded.internal_data, external_data = excluded.external_data;",
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (6, 'Internal 6', 'External 6') ON CONFLICT (id) DO UPDATE SET internal_data = excluded.internal_data, external_data = excluded.external_data;",
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (7, 'Internal 7', 'External 7') ON CONFLICT (id) DO UPDATE SET internal_data = excluded.internal_data, external_data = excluded.external_data;",
      "UPSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (8, 'Internal 8', 'External 8') ON CO...",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (1, 'data1', 'dataA') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (2, 'data2', 'dataB') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (3, 'data3', 'dataC') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (4, 'data4', 'dataD') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (5, 'data5', 'dataE') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (6, 'data6', 'dataF') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (7, 'data7', 'dataG') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (8, 'data8', 'dataH') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (9, 'data9', 'dataI') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_data_sources (id, internal_data, external_data) VALUES (10, 'data10', 'dataJ') ON CONFLICT (id) DO UPDATE SET internal_data = EXCLUDED.internal_data, external_data = EXCLUDED.external_data;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (1, 'action1', '2023-01-01 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (2, 'action2', '2023-01-02 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (3, 'action3', '2023-01-03 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (4, 'action4', '2023-01-04 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (5, 'action5', '2023-01-05 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (6, 'action6', '2023-01-06 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (7, 'action7', '2023-01-07 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (8, 'action8', '2023-01-08 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (9, 'action9', '2023-01-09 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO reconciliation_logs (log_id, action, timestamp) VALUES (10, 'action10', '2023-01-10 12:00:00') ON CONFLICT (log_id) DO NOTHING;"
    ]
  },
  {
    "statements": [
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (1, 'Internal Data 1', '2022-03-15 10:30:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 1 Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (2, 'Internal Data 2', '2022-03-15 11:45:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 2 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (1, 'External Data 1', '2022-03-15 12:00:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 1 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (2, 'External Data 2', '2022-03-15 13:15:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 2 Updated';",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (1, 'Type A', 'Success', '2022-03-15 14:30:00') ON DUPLICATE KEY UPDATE status = 'Success Updated';",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (2, 'Type B', 'Failed', '2022-03-15 15:45:00') ON DUPLICATE KEY UPDATE status = 'Failed Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (3, 'Internal Data 3', '2022-03-15 16:00:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 3 Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (4, 'Internal Data 4', '2022-03-15 17:15:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 4 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (3, 'External Data 3', '2022-03-15 18:30:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 3 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (4, 'External Data 4', '2022-03-15 19:45:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 4 Updated';",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (3, 'Type C', 'Pending', '2022-03-15 20:00:00') ON DUPLICATE KEY UPDATE status = 'Pending Updated';",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (4, 'Type D', 'Incomplete', '2022-03-15 21:15:00') ON DUPLICATE KEY UPDATE status = 'Incomplete Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (5, 'Internal Data 5', '2022-03-15 22:30:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 5 Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (6, 'Internal Data 6', '2022-03-15 23:45:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 6 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (5, 'External Data 5', '2022-03-16 00:00:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 5 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (6, 'External Data 6', '2022-03-16 01:15:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 6 Updated';",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (5, 'Type E', 'Success', '2022-03-16 02:30:00') ON DUPLICATE KEY UPDATE status = 'Success Updated';",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (6, 'Type F', 'Failed', '2022-03-16 03:45:00') ON DUPLICATE KEY UPDATE status = 'Failed Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (7, 'Internal Data 7', '2022-03-16 04:00:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 7 Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (8, 'Internal Data 8', '2022-03-16 05:15:00') ON DUPLICATE KEY UPDATE internal_data = 'Internal Data 8 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (7, 'External Data 7', '2022-03-16 06:30:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 7 Updated';",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (8, 'External Data 8', '2022-03-16 07:45:00') ON DUPLICATE KEY UPDATE external_data = 'External Data 8 Updated';",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (1, 'Internal Data 1', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE internal_data = 'Updated Internal Data 1', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (2, 'Internal Data 2', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE internal_data = 'Updated Internal Data 2', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (1, 'External Data 1', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE external_data = 'Updated External Data 1', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (2, 'External Data 2', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE external_data = 'Updated External Data 2', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (1, 'Type A', 'Success', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE reconciliation_type = 'Updated Type A', status = 'Updated Success', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (2, 'Type B', 'Failed', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE reconciliation_type = 'Updated Type B', status = 'Updated Failed', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (3, 'Internal Data 3', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE internal_data = 'Updated Internal Data 3', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (3, 'External Data 3', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE external_data = 'Updated External Data 3', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (3, 'Type C', 'In Progress', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE reconciliation_type = 'Updated Type C', status = 'Updated In Progress', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (4, 'Internal Data 4', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE internal_data = 'Updated Internal Data 4', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (4, 'External Data 4', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE external_data = 'Updated External Data 4', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (4, 'Type D', 'Completed', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE reconciliation_type = 'Updated Type D', status = 'Updated Completed', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (5, 'Internal Data 5', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE internal_data = 'Updated Internal Data 5', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (5, 'External Data 5', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE external_data = 'Updated External Data 5', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (5, 'Type E', 'Pending', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE reconciliation_type = 'Updated Type E', status = 'Updated Pending', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (6, 'Internal Data 6', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE internal_data = 'Updated Internal Data 6', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (6, 'External Data 6', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE external_data = 'Updated External Data 6', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_type, status, timestamp) VALUES (6, 'Type F', 'Cancelled', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE reconciliation_type = 'Updated Type F', status = 'Updated Cancelled', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_internal_data (id, internal_data, timestamp) VALUES (7, 'Internal Data 7', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE internal_data = 'Updated Internal Data 7', timestamp = CURRENT_TIMESTAMP",
      "UPSERT INTO reconciliation_external_data (id, external_data, timestamp) VALUES (7, 'External Data 7', CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE external_data = 'Updated External Data 7', timestamp = CURRENT_TIMESTAMP"
    ]
  },
  {
    "statements": [
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (1, 'Internal Source 1', 'Type A', '2022-01-01 08:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (1, 'External Source 1', 'Type B', '2022-02-01 10:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (1, 1, 1, 'Pending', '2022-03-01 12:00:00') ON CONFLICT (job_id) DO UPDATE SET internal_source_id = excluded.internal_source_id, external_source_id = excluded.external_source_id, status = excluded.status, created_at = excluded.created_at;",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (1, 1, 'Reconciliation job 1 initiated', '2022-03-01 12:01:00') ON CONFLICT (log_id) DO UPDATE SET job_id = excluded.job_id, message = excluded.message, log_timestamp = excluded.log_timestamp;",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (2, 'Internal Source 2', 'Type B', '2022-01-15 09:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (2, 'External Source 2', 'Type C', '2022-02-15 11:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (2, 2, 2, 'Completed', '2022-03-15 13:00:00') ON CONFLICT (job_id) DO UPDATE SET internal_source_id = excluded.internal_source_id, external_source_id = excluded.external_source_id, status = excluded.status, created_at = excluded.created_at;",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (2, 2, 'Reconciliation job 2 completed successfully', '2022-03-15 13:01:00') ON CONFLICT (log_id) DO UPDATE SET job_id = excluded.job_id, message = excluded.message, log_timestamp = excluded.log_timestamp;",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (3, 'Internal Source 3', 'Type A', '2022-01-30 10:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (3, 'External Source 3', 'Type B', '2022-02-28 12:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (3, 3, 3, 'InProgress', '2022-03-30 14:00:00') ON CONFLICT (job_id) DO UPDATE SET internal_source_id = excluded.internal_source_id, external_source_id = excluded.external_source_id, status = excluded.status, created_at = excluded.created_at;",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (3, 3, 'Reconciliation job 3 in progress', '2022-03-30 14:01:00') ON CONFLICT (log_id) DO UPDATE SET job_id = excluded.job_id, message = excluded.message, log_timestamp = excluded.log_timestamp;",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (4, 'Internal Source 4', 'Type C', '2022-02-10 11:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (4, 'External Source 4', 'Type A', '2022-03-10 13:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (4, 4, 4, 'Failed', '2022-04-10 15:00:00') ON CONFLICT (job_id) DO UPDATE SET internal_source_id = excluded.internal_source_id, external_source_id = excluded.external_source_id, status = excluded.status, created_at = excluded.created_at;",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (4, 4, 'Reconciliation job 4 failed due to data mismatch', '2022-04-10 15:01:00') ON CONFLICT (log_id) DO UPDATE SET job_id = excluded.job_id, message = excluded.message, log_timestamp = excluded.log_timestamp;",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (5, 'Internal Source 5', 'Type A', '2022-02-20 12:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (5, 'External Source 5', 'Type B', '2022-03-20 14:00:00') ON CONFLICT (id) DO UPDATE SET source_name = excluded.source_name, data_type = excluded.data_type, last_updated = excluded.last_updated;",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (5, 5, 5, 'Completed', '2022-04-20 16:00:00') ON CONFLICT (job_id) DO UPDATE SET internal_source_id = excluded.internal_source_id, external_source_id = excluded.external_source_id, status = excluded.status, created_at = excluded.created_at;",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (5, 5, 'Reconciliation job 5 completed successfully', '2022-04-20 16:01:00') ON CONFLICT (log_id) DO UPDATE SET job_id = excluded.job_id, message = excluded.message, log_timestamp = excluded.log_timestamp;",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (1, 'Internal Source 1', 'CSV', '2022-03-01 00:00:00') ON DUPLICATE KEY UPDATE source_name='Updated Internal Source 1';",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (1, 'External Source 1', 'API', '2022-03-01 12:00:00') ON DUPLICATE KEY UPDATE data_type='Updated API';",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (1, 1, 1, 'Pending', '2022-03-01 08:00:00') ON DUPLICATE KEY UPDATE status='InProgress';",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (1, 1, 'Reconciliation started', '2022-03-01 08:05:00') ON DUPLICATE KEY UPDATE message='Reconciliation in progress';",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (2, 'Internal Source 2', 'Excel', '2022-03-02 00:00:00') ON DUPLICATE KEY UPDATE source_name='Updated Internal Source 2';",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (2, 'External Source 2', 'Database', '2022-03-02 12:00:00') ON DUPLICATE KEY UPDATE data_type='Updated Database';",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (2, 2, 2, 'Completed', '2022-03-02 08:00:00') ON DUPLICATE KEY UPDATE status='Failed';",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (2, 2, 'Reconciliation failed', '2022-03-02 08:05:00') ON DUPLICATE KEY UPDATE message='Reconciliation failed';",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (3, 'Internal Source 3', 'XML', '2022-03-03 00:00:00') ON DUPLICATE KEY UPDATE source_name='Updated Internal Source 3';",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (3, 'External Source 3', 'JSON', '2022-03-03 12:00:00') ON DUPLICATE KEY UPDATE data_type='Updated JSON';",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (3, 3, 3, 'InQueue', '2022-03-03 08:00:00') ON DUPLICATE KEY UPDATE status='InProgress';",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (3, 3, 'Reconciliation in progress', '2022-03-03 08:05:00') ON DUPLICATE KEY UPDATE message='Reconciliation in progress';",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (4, 'Internal Source 4', 'JSON', '2022-03-04 00:00:00') ON DUPLICATE KEY UPDATE source_name='Updated Internal Source 4';",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (4, 'External Source 4', 'XML', '2022-03-04 12:00:00') ON DUPLICATE KEY UPDATE data_type='Updated XML';",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (4, 4, 4, 'Failed', '2022-03-04 08:00:00') ON DUPLICATE KEY UPDATE status='Completed';",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (4, 4, 'Reconciliation completed', '2022-03-04 08:05:00') ON DUPLICATE KEY UPDATE message='Reconciliation completed';",
      "INSERT INTO internal_data_sources (id, source_name, data_type, last_updated) VALUES (5, 'Internal Source 5', 'CSV', '2022-03-05 00:00:00') ON DUPLICATE KEY UPDATE source_name='Updated Internal Source 5';",
      "INSERT INTO external_data_sources (id, source_name, data_type, last_updated) VALUES (5, 'External Source 5', 'API', '2022-03-05 12:00:00') ON DUPLICATE KEY UPDATE data_type='Updated API';",
      "INSERT INTO reconciliation_jobs (job_id, internal_source_id, external_source_id, status, created_at) VALUES (5, 5, 5, 'InProgress', '2022-03-05 08:00:00') ON DUPLICATE KEY UPDATE status='Pending';",
      "INSERT INTO reconciliation_logs (log_id, job_id, message, log_timestamp) VALUES (5, 5, 'Reconciliation pending', '2022-03-05 08:05:00') ON DUPLICATE KEY UPDATE message='Reconciliation pending';"
    ]
  },
  {
    "statements": [
      "INSERT INTO internal_data_sources (id, source_name, connection_string) VALUES (1, 'Internal Source 1', 'jdbc:mysql://localhost:3306/internal_db');",
      "INSERT INTO internal_data_sources (id, source_name, connection_string) VALUES (2, 'Internal Source 2', 'jdbc:postgresql://localhost:5432/internal_db');",
      "INSERT INTO external_data_sources (id, source_name, api_key, endpoint_url) VALUES (1, 'External Source 1', 'api_key_123', 'https://api.example.com/data');",
      "INSERT INTO external_data_sources (id, source_name, api_key, endpoint_url) VALUES (2, 'External Source 2', 'api_key_456', 'https://api.demo.com/data');",
      "INSERT INTO reconciliation_logs (log_id, reconciliation_date, status, error_message) VALUES (1, '2022-05-15', 'Success', NULL);",
      "INSERT INTO reconciliation_logs (log_id, reconciliation_date, status, error_message) VALUES (2, '2022-06-20', 'Error', 'Connection timed out');",
      "INSERT INTO reconciliation_results (result_id, log_id, internal_source_id, external_source_id, match_result) VALUES (1, 1, 1, 1, TRUE);",
      "INSERT INTO reconciliation_results (result_id, log_id, internal_source_id, external_source_id, match_result) VALUES (2, 2, 2, 2, FALSE);",
      "INSERT INTO reconciliation_settings (setting_id, rule_name, match_threshold) VALUES (1, 'Rule 1', 80);",
      "INSERT INTO reconciliation_settings (setting_id, rule_name, match_threshold) VALUES (2, 'Rule 2', 90);",
      "UPSERT INTO internal_data_sources (id, source_name, connection_string) VALUES (1, 'Internal Source A', 'mysql://localhost/internaldb') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), connection_string = VALUES(connection_string);",
      "UPSERT INTO external_data_sources (id, source_name, api_key, endpoint_url) VALUES (1, 'External Source A', 'apikey123', 'https://api.external.com') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), api_key = VALUES(api_key), endpoint_url = VALUES(endpoint_url);",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_date, status, error_message) VALUES (1, '2022-01-01', 'SUCCESS', 'No errors') ON DUPLICATE KEY UPDATE reconciliation_date = VALUES(reconciliation_date), status = VALUES(status), error_message = VALUES(error_message);",
      "UPSERT INTO reconciliation_results (result_id, log_id, internal_source_id, external_source_id, match_result) VALUES (1, 1, 1, 1, TRUE) ON DUPLICATE KEY UPDATE log_id = VALUES(log_id), internal_source_id = VALUES(internal_source_id), external_source_id = VALUES(external_source_id), match_result = VALUES(match_result);",
      "UPSERT INTO reconciliation_settings (setting_id, rule_name, match_threshold) VALUES (1, 'Matching Rule 1', 80) ON DUPLICATE KEY UPDATE rule_name = VALUES(rule_name), match_threshold = VALUES(match_threshold);",
      "UPSERT INTO internal_data_sources (id, source_name, connection_string) VALUES (2, 'Internal Source B', 'postgresql://localhost/internaldb') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), connection_string = VALUES(connection_string);",
      "UPSERT INTO external_data_sources (id, source_name, api_key, endpoint_url) VALUES (2, 'External Source B', 'apikey456', 'https://api2.external.com') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), api_key = VALUES(api_key), endpoint_url = VALUES(endpoint_url);",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_date, status, error_message) VALUES (2, '2022-01-02', 'ERROR', 'An error occurred during reconciliation') ON DUPLICATE KEY UPDATE reconciliation_date = VALUES(reconciliation_date), status = VALUES(status), error_message = VALUES(error_message);",
      "UPSERT INTO reconciliation_results (result_id, log_id, internal_source_id, external_source_id, match_result) VALUES (2, 2, 2, 2, FALSE) ON DUPLICATE KEY UPDATE log_id = VALUES(log_id), internal_source_id = VALUES(internal_source_id), external_source_id = VALUES(external_source_id), match_result = VALUES(match_result);",
      "UPSERT INTO reconciliation_settings (setting_id, rule_name, match_threshold) VALUES (2, 'Matching Rule 2', 90) ON DUPLICATE KEY UPDATE rule_name = VALUES(rule_name), match_threshold = VALUES(match_threshold);",
      "UPSERT INTO internal_data_sources (id, source_name, connection_string) VALUES (3, 'Internal Source C', 'mongodb://localhost/internaldb') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), connection_string = VALUES(connection_string);",
      "UPSERT INTO external_data_sources (id, source_name, api_key, endpoint_url) VALUES (3, 'External Source C', 'apikey789', 'https://api3.external.com') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), api_key = VALUES(api_key), endpoint_url = VALUES(endpoint_url);",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_date, status, error_message) VALUES (3, '2022-01-03', 'SUCCESS', 'No errors') ON DUPLICATE KEY UPDATE reconciliation_date = VALUES(reconciliation_date), status = VALUES(status), error_message = VALUES(error_message);",
      "UPSERT INTO reconciliation_results (result_id, log_id, internal_source_id, external_source_id, match_result) VALUES (3, 3, 3, 3, TRUE) ON DUPLICATE KEY UPDATE log_id = VALUES(log_id), internal_source_id = VALUES(internal_source_id), external_source_id = VALUES(external_source_id), match_result = VALUES(match_result);",
      "UPSERT INTO reconciliation_settings (setting_id, rule_name, match_threshold) VALUES (3, 'Matching Rule 3', 70) ON DUPLICATE KEY UPDATE rule_name = VALUES(rule_name), match_threshold = VALUES(match_threshold);",
      "UPSERT INTO internal_data_sources (id, source_name, connection_string) VALUES (4, 'Internal Source D', 'redis://localhost/internaldb') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), connection_string = VALUES(connection_string);",
      "UPSERT INTO external_data_sources (id, source_name, api_key, endpoint_url) VALUES (4, 'External Source D', 'apikey987', 'https://api4.external.com') ON DUPLICATE KEY UPDATE source_name = VALUES(source_name), api_key = VALUES(api_key), endpoint_url = VALUES(endpoint_url);",
      "UPSERT INTO reconciliation_logs (log_id, reconciliation_date, status, error_message) VALUES (4, '2022-01-04', 'SUCCESS', 'No errors') ON DUPLICATE KEY UPDATE reconciliation_date = VALUES(reconciliation_date), status = VALUES(status), error_message = VALUES(error_message);",
      "UPSERT INTO reconciliation_results (result_id, log_id, internal_source_id, external_source_id, match_result) VALUES (4, 4, 4, 4, TRUE) ON DUPLICATE KEY UPDATE log_id = VALUES(log_id), internal_source_id = VALUES(internal_source_id), external_source_id = VALUES(external_source_id), match_result = VALUES(match_result);",
      "UPSERT INTO reconciliation_settings (setting_id, rule_name, match_threshold) VALUES (4, 'Matching Rule 4', 85) ON DUPLICATE KEY UPDATE rule_name = VALUES(rule_name), match_threshold = VALUES(match_threshold);"
    ]
  }
]