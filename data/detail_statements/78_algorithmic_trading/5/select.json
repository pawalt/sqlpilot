[
  {
    "statements": [
      "SELECT * FROM risk_metrics;",
      "SELECT id, risk_type FROM risk_metrics;",
      "SELECT risk_value FROM risk_metrics WHERE id = 1;",
      "SELECT * FROM risk_metrics WHERE risk_type = 'Credit Risk';",
      "SELECT timestamp FROM risk_metrics WHERE risk_type = 'Operational Risk';",
      "SELECT id, risk_value FROM risk_metrics WHERE timestamp >= '2022-01-01';",
      "SELECT * FROM risk_metrics WHERE risk_type LIKE '%Risk%';",
      "SELECT id, risk_value FROM risk_metrics WHERE timestamp >= '2022-01-01' AND risk_type = 'Market Risk';",
      "SELECT AVG(risk_value) FROM risk_metrics;",
      "SELECT MAX(risk_value) FROM risk_metrics WHERE risk_type = 'Credit Risk';",
      "SELECT MIN(risk_value) FROM risk_metrics WHERE risk_type = 'Operational Risk';",
      "SELECT COUNT(*) FROM risk_metrics;",
      "SELECT DISTINCT risk_type FROM risk_metrics;",
      "SELECT id, risk_type, risk_value, timestamp FROM risk_metrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT id, risk_type, ROUND(risk_value, 2) AS rounded_value FROM risk_metrics;",
      "SELECT id, risk_type, risk_value, timestamp FROM risk_metrics ORDER BY timestamp DESC;",
      "SELECT id, risk_type, risk_value, timestamp FROM risk_metrics ORDER BY risk_value ASC;",
      "SELECT id, risk_type, risk_value, timestamp FROM risk_metrics ORDER BY risk_type, timestamp;",
      "SELECT id, risk_type, risk_value, DATE(timestamp) AS date_only FROM risk_metrics;",
      "SELECT id, risk_type, risk_value, timestamp FROM risk_metrics WHERE id IN (1, 3, 5, 7);",
      "SELECT * FROM risk_metrics WHERE risk_type = 'credit' AND risk_value > 0.5 ORDER BY timestamp DESC LIMIT 10",
      "SELECT risk_type, AVG(risk_value) AS avg_risk_value FROM risk_metrics GROUP BY risk_type HAVING avg_risk_value > 0.3",
      "SELECT COUNT(*) AS total_records FROM risk_metrics WHERE risk_type IN ('credit', 'market')",
      "SELECT * FROM risk_metrics WHERE TIMESTAMP BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:58:59'",
      "SELECT risk_type, COUNT(*) AS total_records FROM risk_metrics GROUP BY risk_type ORDER BY total_records DESC LIMIT 5",
      "SELECT DISTINCT risk_type FROM risk_metrics",
      "SELECT * FROM risk_metrics WHERE id = (SELECT MAX(id) FROM risk_metrics)",
      "SELECT risk_type, SUM(risk_value) AS total_risk_value FROM risk_metrics WHERE risk_type = 'operational' GROUP BY risk_type",
      "SELECT risk_type, MAX(risk_value) AS max_risk_value, MIN(risk_value) AS min_risk_value FROM risk_metrics WHERE risk_type = 'credit'",
      "SELECT risk_type, AVG(risk_value) AS avg_risk_value, COUNT(*) AS total_records FROM risk_metrics GROUP BY risk_type HAVING avg_risk_value > 0.3 AND total_records > 5",
      "SELECT * FROM risk_metrics WHERE risk_type LIKE 'market%'",
      "SELECT * FROM risk_metrics WHERE timestamp > CURRENT_TIMESTAMP - INTERVAL 1 DAY",
      "SELECT risk_type, COUNT(*) AS total_records FROM risk_metrics WHERE risk_value < 0.2 GROUP BY risk_type HAVING total_records > 3",
      "SELECT risk_type, AVG(risk_value) AS avg_risk_value, MAX(risk_value) AS max_risk_value FROM risk_metrics WHERE timestamp > '2022-01-01 00:00:00' GROUP BY risk_type",
      "SELECT risk_type, risk_value, TIMESTAMP FROM risk_metrics WHERE risk_type = 'credit' AND TIMESTAMP < '2022-03-01' ORDER BY TIMESTAMP ASC",
      "SELECT risk_type, MAX(risk_value) - MIN(risk_value) AS risk_range FROM risk_metrics GROUP BY risk_type",
      "SELECT * FROM risk_metrics WHERE timestamp >= '2022-01-01 00:00:00' AND timestamp < '2022-02-01 00:00:00' ORDER BY timestamp",
      "SELECT risk_type, COUNT(*) AS total_records FROM risk_metrics WHERE risk_value IS NULL GROUP BY risk_type HAVING total_records > 0",
      "SELECT risk_type, AVG(risk_value) AS avg_risk_value FROM risk_metrics WHERE timestamp > '2022-01-01' GROUP BY risk_type",
      "SELECT risk_type, risk_value, TIMESTAMP FROM risk_metrics WHERE risk_type = 'market' AND risk_value < 0.3 ORDER BY TIMESTAMP DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM risk_metrics;",
      "SELECT metric_name, metric_value FROM risk_metrics;",
      "SELECT id, metric_name, timestamp FROM risk_metrics;",
      "SELECT * FROM trading_operations;",
      "SELECT trade_type, trade_amount, risk_score FROM trading_operations;",
      "SELECT operation_id, trade_amount, operation_date FROM trading_operations;",
      "SELECT id, metric_name, timestamp FROM risk_metrics WHERE id = 1;",
      "SELECT * FROM trading_operations WHERE risk_score > 80;",
      "SELECT * FROM risk_metrics WHERE metric_name LIKE '%risk%';",
      "SELECT * FROM risk_metrics WHERE metric_value >= 100;",
      "SELECT * FROM trading_operations WHERE trade_type = 'buy';",
      "SELECT * FROM trading_operations WHERE trade_amount < 500;",
      "SELECT id, metric_name, timestamp FROM risk_metrics ORDER BY id DESC;",
      "SELECT * FROM trading_operations ORDER BY operation_date ASC;",
      "SELECT AVG(metric_value) FROM risk_metrics;",
      "SELECT COUNT(*) FROM risk_metrics;",
      "SELECT SUM(trade_amount) FROM trading_operations;",
      "SELECT MAX(risk_score) FROM trading_operations;",
      "SELECT MIN(metric_value) FROM risk_metrics;",
      "SELECT * FROM risk_metrics LIMIT 5;",
      "SELECT * FROM trading_operations LIMIT 10;",
      "SELECT * FROM risk_metrics WHERE metric_name = 'Volatility' AND metric_value > 0.5",
      "SELECT metric_name, AVG(metric_value) AS average_value FROM risk_metrics GROUP BY metric_name",
      "SELECT MAX(metric_value) AS max_value FROM risk_metrics",
      "SELECT * FROM risk_metrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT tm.operation_id, tm.trade_type, tm.trade_amount, tr.metric_name FROM trading_operations tm JOIN risk_metrics tr ON tm.risk_score = tr.id",
      "SELECT COUNT(*) AS total_operations FROM trading_operations",
      "SELECT operation_id, trade_type, trade_amount FROM trading_operations WHERE trade_amount > 1000 ORDER BY trade_amount DESC",
      "SELECT * FROM trading_operations WHERE trade_type LIKE 'Buy%'",
      "SELECT tm.trade_type, tm.trade_amount, tr.metric_value FROM trading_operations tm LEFT JOIN risk_metrics tr ON tm.risk_score = tr.id",
      "SELECT AVG(metric_value) AS avg_value FROM risk_metrics WHERE timestamp >= '2022-01-01'",
      "SELECT operation_id, trade_type, trade_amount, operation_date FROM trading_operations WHERE operation_date < '2022-03-01'",
      "SELECT COUNT(DISTINCT metric_name) AS unique_metrics FROM risk_metrics",
      "SELECT * FROM risk_metrics ORDER BY timestamp DESC LIMIT 5",
      "SELECT operation_id, trade_type, trade_amount, risk_score FROM trading_operations WHERE trade_amount > 500 AND risk_score > 3",
      "SELECT tm.operation_id, tm.trade_type, tm.trade_amount, tr.metric_value FROM trading_operations tm RIGHT JOIN risk_metrics tr ON tm.risk_score = tr.id",
      "SELECT MIN(metric_value) AS min_value FROM risk_metrics",
      "SELECT * FROM trading_operations WHERE operation_date = '2022-02-14'",
      "SELECT AVG(risk_score) AS avg_score FROM trading_operations",
      "SELECT DISTINCT metric_name FROM risk_metrics",
      "SELECT operation_id, trade_type, trade_amount FROM trading_operations WHERE trade_type IN ('Buy', 'Sell')"
    ]
  },
  {
    "statements": [
      "SELECT * FROM RiskMetrics;",
      "SELECT metric_name, value FROM RiskMetrics WHERE value > 100;",
      "SELECT * FROM TradeOperations;",
      "SELECT trade_id, operation_type FROM TradeOperations WHERE operation_type = 'BUY';",
      "SELECT * FROM Exposure;",
      "SELECT operation_id, exposure_value FROM Exposure WHERE exposure_value < 50;",
      "SELECT metric_name, value, timestamp FROM RiskMetrics WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-02-01';",
      "SELECT operation_type, trade_amount, timestamp FROM TradeOperations WHERE timestamp >= '2022-03-01';",
      "SELECT exposure_value, timestamp FROM Exposure WHERE timestamp <= '2022-04-01';",
      "SELECT metric_name, value FROM RiskMetrics WHERE metric_name LIKE 'Risk%';",
      "SELECT operation_type, trade_amount FROM TradeOperations WHERE trade_amount > 5000;",
      "SELECT exposure_value FROM Exposure WHERE exposure_value >= 1000;",
      "SELECT metric_name, value, timestamp FROM RiskMetrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT operation_type, trade_amount, timestamp FROM TradeOperations WHERE timestamp BETWEEN '2022-03-01' AND '2022-04-01';",
      "SELECT exposure_value, timestamp FROM Exposure WHERE timestamp BETWEEN '2022-05-01' AND '2022-06-01';",
      "SELECT * FROM RiskMetrics ORDER BY timestamp DESC;",
      "SELECT * FROM TradeOperations ORDER BY trade_amount ASC;",
      "SELECT * FROM Exposure ORDER BY exposure_value DESC;",
      "SELECT AVG(value) FROM RiskMetrics;",
      "SELECT MAX(trade_amount) FROM TradeOperations;",
      "SELECT * FROM RiskMetrics;",
      "SELECT metric_name, value FROM RiskMetrics WHERE value > 100;",
      "SELECT * FROM TradeOperations WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT id, trade_id, operation_type FROM TradeOperations WHERE operation_type = 'BUY';",
      "SELECT e.exposure_value, r.metric_name FROM Exposure e INNER JOIN RiskMetrics r ON e.risk_metric_id = r.id;",
      "SELECT id, trade_id, trade_amount FROM TradeOperations WHERE trade_amount > 5000 ORDER BY timestamp DESC;",
      "SELECT SUM(value) AS total_value FROM RiskMetrics;",
      "SELECT operation_id, risk_metric_id, exposure_value FROM Exposure WHERE timestamp > '2022-02-15' AND exposure_value < 1000;",
      "SELECT r.metric_name, e.exposure_value FROM RiskMetrics r INNER JOIN Exposure e ON r.id = e.risk_metric_id WHERE e.exposure_value > 500;",
      "SELECT trade_id, SUM(trade_amount) AS total_amount FROM TradeOperations GROUP BY trade_id ORDER BY total_amount DESC;",
      "SELECT * FROM RiskMetrics WHERE metric_name LIKE '%VaR%';",
      "SELECT id, trade_id, timestamp FROM TradeOperations WHERE trade_id IN (SELECT id FROM TradeOperations WHERE operation_type = 'SELL');",
      "SELECT AVG(value) AS avg_value FROM RiskMetrics WHERE timestamp > '2022-02-01';",
      "SELECT operation_id, trade_id, timestamp FROM TradeOperations WHERE trade_id IN (SELECT trade_id FROM Exposure WHERE exposure_value > 1000);",
      "SELECT r.metric_name, SUM(e.exposure_value) AS total_exposure FROM RiskMetrics r INNER JOIN Exposure e ON r.id = e.risk_metric_id GROUP BY r.metric_name;",
      "SELECT id, metric_name, value, timestamp FROM RiskMetrics WHERE timestamp = (SELECT MAX(timestamp) FROM RiskMetrics);",
      "SELECT trade_id, COUNT(*) AS num_operations FROM TradeOperations GROUP BY trade_id HAVING COUNT(*) > 5;",
      "SELECT * FROM Exposure WHERE exposure_value = (SELECT MAX(exposure_value) FROM Exposure);",
      "SELECT * FROM RiskMetrics ORDER BY value DESC LIMIT 5;",
      "SELECT r.metric_name, COUNT(*) AS num_exposures FROM RiskMetrics r INNER JOIN Exposure e ON r.id = e.risk_metric_id GROUP BY r.metric_name HAVING COUNT(*) > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM risk_metrics;",
      "SELECT metric_name, metric_value FROM risk_metrics;",
      "SELECT id, metric_name, metric_value FROM risk_metrics;",
      "SELECT * FROM trading_operations;",
      "SELECT operation_id, operation_type FROM trading_operations;",
      "SELECT operation_date, operation_amount FROM trading_operations;",
      "SELECT * FROM exposure_assessment;",
      "SELECT assessment_id, assessment_date FROM exposure_assessment;",
      "SELECT assessment_rating, assessed_by FROM exposure_assessment;",
      "SELECT * FROM risk_exposure;",
      "SELECT exposure_id, operation_id, assessment_id FROM risk_exposure;",
      "SELECT exposure_level FROM risk_exposure;",
      "SELECT rm.metric_name, re.exposure_level FROM risk_metrics rm JOIN risk_exposure re ON rm.id = re.operation_id;",
      "SELECT to.operation_type, ea.assessment_rating FROM trading_operations to JOIN exposure_assessment ea ON to.operation_id = ea.assessment_id;",
      "SELECT rm.metric_name, re.exposure_level, ra.assessment_rating FROM risk_metrics rm JOIN risk_exposure re ON rm.id = re.operation_id JOIN exposure_assessment ra ON ra.assessment_id = re.assessment_id;",
      "SELECT * FROM risk_metrics WHERE metric_value > 100;",
      "SELECT * FROM trading_operations WHERE operation_amount < 500;",
      "SELECT * FROM exposure_assessment WHERE assessment_date = '2022-05-20';",
      "SELECT * FROM risk_exposure WHERE exposure_level >= 0.5 LIMIT 10;",
      "SELECT * FROM risk_metrics ORDER BY metric_value DESC LIMIT 5;",
      "SELECT * FROM risk_metrics;",
      "SELECT metric_name, metric_value FROM risk_metrics WHERE metric_value > 100;",
      "SELECT * FROM trading_operations ORDER BY operation_date DESC;",
      "SELECT operation_type, SUM(operation_amount) AS total_amount FROM trading_operations GROUP BY operation_type;",
      "SELECT * FROM exposure_assessment WHERE assessment_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT operation_id, assessment_rating FROM risk_exposure JOIN exposure_assessment ON risk_exposure.assessment_id = exposure_assessment.assessment_id;",
      "SELECT operation_id, assessment_rating FROM risk_exposure JOIN exposure_assessment ON risk_exposure.assessment_id = exposure_assessment.assessment_id WHERE exposure_level < 0.5;",
      "SELECT metric_name, metric_value FROM risk_metrics WHERE metric_value BETWEEN 50 AND 100;",
      "SELECT * FROM trading_operations WHERE operation_type = 'BUY' ORDER BY operation_amount DESC;",
      "SELECT assessment_date, COUNT(assessment_id) AS assessment_count FROM exposure_assessment GROUP BY assessment_date;",
      "SELECT * FROM risk_metrics UNION SELECT * FROM trading_operations;",
      "SELECT * FROM risk_exposure WHERE operation_id IN (SELECT operation_id FROM trading_operations WHERE operation_type = 'SELL');",
      "SELECT * FROM risk_metrics WHERE metric_name LIKE '%risk%';",
      "SELECT operation_type, AVG(operation_amount) AS avg_amount FROM trading_operations GROUP BY operation_type HAVING AVG(operation_amount) > 500;",
      "SELECT assessment_date, MAX(assessment_rating) AS highest_rating FROM exposure_assessment GROUP BY assessment_date;",
      "SELECT * FROM risk_metrics AS rm INNER JOIN risk_exposure AS re ON rm.id = re.exposure_id;",
      "SELECT operation_id FROM risk_exposure GROUP BY operation_id HAVING COUNT(*) > 1;",
      "SELECT operation_type, SUM(operation_amount) AS total_amount FROM trading_operations GROUP BY operation_type ORDER BY total_amount DESC;",
      "SELECT * FROM exposure_assessment WHERE assessed_by LIKE '%John%';",
      "SELECT operation_id, assessment_date FROM risk_exposure JOIN exposure_assessment ON risk_exposure.assessment_id = exposure_assessment.assessment_id WHERE assessment_rating = 'High';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM RiskMetrics;",
      "SELECT metric_name, metric_value FROM RiskMetrics;",
      "SELECT metric_name, metric_description FROM RiskMetrics;",
      "SELECT * FROM TradeExposure;",
      "SELECT trade_id, trade_date FROM TradeExposure;",
      "SELECT * FROM RiskFactors;",
      "SELECT factor_name, factor_description FROM RiskFactors;",
      "SELECT * FROM TradingOperations;",
      "SELECT operation_type, operation_amount FROM TradingOperations;",
      "SELECT * FROM ExposureMetrics;",
      "SELECT metric_id, metric_value FROM ExposureMetrics;",
      "SELECT exposure_id, metric_id, metric_value, timestamp FROM ExposureMetrics;",
      "SELECT * FROM RiskMetrics WHERE metric_value > 100;",
      "SELECT * FROM TradeExposure WHERE currency = 'USD';",
      "SELECT * FROM RiskFactors WHERE factor_name LIKE '%market%';",
      "SELECT * FROM TradingOperations WHERE operation_currency = 'EUR';",
      "SELECT trade_id, trade_date, exposure_amount FROM TradeExposure WHERE exposure_amount > 50000;",
      "SELECT * FROM ExposureMetrics WHERE timestamp > '2022-01-01 00:00:00';",
      "SELECT factor_name, factor_description FROM RiskFactors WHERE factor_name = 'interest_rate';",
      "SELECT operation_type, operation_amount, operation_currency FROM TradingOperations WHERE operation_amount < 0;",
      "SELECT metric_name, metric_description, metric_value FROM RiskMetrics WHERE metric_id = 1;",
      "SELECT * FROM RiskMetrics WHERE metric_value > 1000;",
      "SELECT metric_name, metric_description FROM RiskMetrics WHERE metric_id = 5;",
      "SELECT operation_id, operation_type, operation_amount FROM TradingOperations WHERE operation_amount < 0;",
      "SELECT factor_name, factor_description FROM RiskFactors;",
      "SELECT metric_name, metric_description, metric_value FROM RiskMetrics WHERE metric_value BETWEEN 500 AND 1000;",
      "SELECT trade_id, trade_date, exposure_amount, currency FROM TradeExposure WHERE trade_date >= '2022-01-01' AND trade_date <= '2022-01-31';",
      "SELECT factor_name, COUNT(*) AS factor_count FROM RiskFactors GROUP BY factor_name;",
      "SELECT DISTINCT metric_name FROM RiskMetrics;",
      "SELECT operation_date, SUM(operation_amount) AS total_amount FROM TradingOperations WHERE operation_type = 'Buy' GROUP BY operation_date;",
      "SELECT exposure_id, metric_value, timestamp FROM ExposureMetrics WHERE metric_value < 0 ORDER BY timestamp DESC;",
      "SELECT factor_name, factor_description FROM RiskFactors WHERE factor_id IN (1, 3, 5);",
      "SELECT metric_id, AVG(metric_value) AS average_value FROM RiskMetrics GROUP BY metric_id HAVING AVG(metric_value) > 500;",
      "SELECT operation_id, operation_type, operation_date, operation_amount, operation_currency FROM TradingOperations JOIN TradeExposure ON TradingOperations.operation_id = TradeExposure.trade_id;",
      "SELECT factor_name, COUNT(*) AS factor_count FROM RiskFactors WHERE factor_description LIKE '%market%';",
      "SELECT exposure_id, metric_id, metric_value, timestamp FROM ExposureMetrics WHERE timestamp > '2022-03-01' AND timestamp < '2022-03-31';",
      "SELECT trade_id, SUM(exposure_amount) AS total_exposure FROM TradeExposure GROUP BY trade_id HAVING SUM(exposure_amount) > 5000;",
      "SELECT factor_name, factor_description FROM RiskFactors ORDER BY factor_name ASC;",
      "SELECT AVG(metric_value) AS average_value FROM RiskMetrics;",
      "SELECT DISTINCT operation_currency FROM TradingOperations;",
      "SELECT COUNT(*) AS total_trades FROM TradeExposure WHERE trade_date = '2022-02-15';"
    ]
  }
]