[
  {
    "statements": [
      "SELECT * FROM investments;",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_type='Stocks';",
      "SELECT COUNT(*) AS total_investments FROM investments;",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_amount > 1000;",
      "SELECT investment_name, investment_date FROM investments WHERE investment_date > '2022-01-01';",
      "SELECT investment_name, investment_type FROM investments WHERE investment_name LIKE '%Tech%';",
      "SELECT AVG(investment_amount) AS avg_amount FROM investments;",
      "SELECT investment_name, investment_type, investment_amount FROM investments ORDER BY investment_amount DESC;",
      "SELECT investment_name, investment_type FROM investments WHERE investment_id = 5;",
      "SELECT investment_name, investment_date FROM investments WHERE investment_id BETWEEN 3 AND 7;",
      "SELECT DISTINCT investment_type FROM investments;",
      "SELECT investment_name, investment_type, investment_amount FROM investments WHERE investment_type = 'Real Estate';",
      "SELECT investment_name, investment_type, investment_date FROM investments WHERE investment_amount >= 5000 AND investment_date >= '2022-06-01';",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_type IN ('Stocks', 'Bonds');",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT investment_name, investment_type FROM investments WHERE investment_name IN ('Tech Stock A', 'Real Estate Investment B');",
      "SELECT investment_id, investment_amount FROM investments WHERE investment_date < '2022-08-01';",
      "SELECT investment_name, investment_date FROM investments WHERE investment_amount < 500;",
      "SELECT investment_name, investment_type FROM investments WHERE investment_amount <> 0;",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_amount IS NOT NULL;",
      "SELECT * FROM investments WHERE investment_amount > 10000 AND investment_date >= '2021-01-01';",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_type = 'Stocks';",
      "SELECT COUNT(*) AS total_investments FROM investments;",
      "SELECT investment_id, investment_name FROM investments WHERE investment_amount BETWEEN 5000 AND 10000;",
      "SELECT DISTINCT investment_type FROM investments;",
      "SELECT investment_name, SUM(investment_amount) AS total_amount FROM investments GROUP BY investment_name;",
      "SELECT investment_type, AVG(investment_amount) AS average_amount FROM investments GROUP BY investment_type;",
      "SELECT * FROM investments WHERE investment_type = 'Bonds' ORDER BY investment_amount DESC;",
      "SELECT * FROM investments WHERE investment_type = 'Real Estate' ORDER BY investment_date ASC;",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_amount > 20000 AND investment_type = 'Mutual Funds';",
      "SELECT MAX(investment_amount) AS highest_investment FROM investments;",
      "SELECT investment_id, investment_name, investment_date FROM investments WHERE investment_amount = (SELECT MAX(investment_amount) FROM investments);",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT AVG(investment_amount) FROM investments;",
      "SELECT investment_id, investment_name, investment_type, investment_amount FROM investments WHERE investment_amount < (SELECT AVG(investment_amount) FROM investments);",
      "SELECT * FROM investments WHERE investment_name LIKE '%Tech%';",
      "SELECT investment_type, COUNT(*) AS total_investments FROM investments GROUP BY investment_type HAVING COUNT(*) > 2;",
      "SELECT investment_name, investment_date FROM investments WHERE investment_date = (SELECT MAX(investment_date) FROM investments);",
      "SELECT investment_type, MIN(investment_amount) AS lowest_investment FROM investments GROUP BY investment_type;",
      "SELECT * FROM investments WHERE investment_type IN ('Stocks', 'Bonds', 'ETFs');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM portfolio_investments;",
      "SELECT id, investment_name, purchase_date FROM portfolio_investments;",
      "SELECT investment_name, investment_type FROM portfolio_investments;",
      "SELECT * FROM investment_performance;",
      "SELECT id, performance_date FROM investment_performance;",
      "SELECT investment_id, performance FROM investment_performance;",
      "SELECT id, investment_name, purchase_price FROM portfolio_investments WHERE purchase_price > 1000;",
      "SELECT id, performance_date, performance FROM investment_performance WHERE performance > 0.05;",
      "SELECT id, investment_name, current_value FROM portfolio_investments WHERE current_value < 5000;",
      "SELECT id, investment_name, quantity FROM portfolio_investments WHERE quantity >= 100;",
      "SELECT * FROM portfolio_investments WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT id, investment_name, purchase_price FROM portfolio_investments ORDER BY purchase_price DESC;",
      "SELECT id, investment_id, performance_date FROM investment_performance ORDER BY performance_date ASC;",
      "SELECT id, investment_name, quantity FROM portfolio_investments WHERE investment_type = 'Stock';",
      "SELECT id, investment_name, current_value FROM portfolio_investments WHERE quantity * current_value > 10000;",
      "SELECT id, investment_name, quantity FROM portfolio_investments WHERE investment_name LIKE '%Tech%';",
      "SELECT investment_id, AVG(performance) FROM investment_performance GROUP BY investment_id;",
      "SELECT investment_id, COUNT(*) FROM investment_performance GROUP BY investment_id;",
      "SELECT id, investment_name, SUM(quantity) FROM portfolio_investments GROUP BY investment_name;",
      "SELECT COUNT(*), AVG(quantity) FROM portfolio_investments;",
      "SELECT * FROM portfolio_investments;",
      "SELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE purchase_date > '2022-01-01';",
      "SELECT investment_name, investment_type FROM portfolio_investments WHERE investment_type = 'Stocks';",
      "SELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE quantity > 100;",
      "SELECT investment_name, investment_type, purchase_date FROM portfolio_investments WHERE current_value > purchase_price;",
      "SELECT * FROM portfolio_investments WHERE investment_type IN ('Stocks', 'Bonds');",
      "SELECT investment_name, purchase_date, quantity FROM portfolio_investments WHERE purchase_price > 5000;",
      "SELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT investment_name, purchase_price, current_value, quantity FROM portfolio_investments WHERE investment_name LIKE '%Tech%';",
      "SELECT COUNT(id) AS total_investments FROM portfolio_investments;",
      "SELECT AVG(purchase_price) AS average_purchase_price FROM portfolio_investments;",
      "SELECT MIN(current_value) AS min_current_value FROM portfolio_investments;",
      "SELECT investment_name, COUNT(*) AS total_performance_records FROM portfolio_investments LEFT JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id GROUP BY investment_name;",
      "SELECT investment_name, purchase_date, current_value FROM portfolio_investments ORDER BY purchase_date DESC;",
      "SELECT investment_name, current_value, performance FROM portfolio_investments INNER JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id;",
      "SELECT investment_name, MAX(current_value) AS max_current_value, MIN(current_value) AS min_current_value FROM portfolio_investments GROUP BY investment_name;",
      "SELECT investment_name, purchase_date, performance_date, performance FROM portfolio_investments LEFT JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id;",
      "SELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE (purchase_price * quantity) < current_value;",
      "SELECT investment_name, SUM(current_value) AS total_current_value FROM portfolio_investments GROUP BY investment_name;",
      "SELECT investment_name, AVG(performance) AS average_performance FROM portfolio_investments INNER JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id GROUP BY investment_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Investments;",
      "SELECT name, type FROM Investments;",
      "SELECT id, name, amount FROM Investments WHERE amount > 1000;",
      "SELECT * FROM Investments WHERE date_added > '2022-01-01';",
      "SELECT * FROM InvestmentPerformance;",
      "SELECT date, performance FROM InvestmentPerformance WHERE investment_id = 1;",
      "SELECT * FROM Investors;",
      "SELECT name, email FROM Investors WHERE id = 2;",
      "SELECT * FROM Investments ORDER BY amount DESC;",
      "SELECT id, name, amount FROM Investments WHERE type = 'Stock';",
      "SELECT * FROM Investments WHERE amount BETWEEN 5000 AND 10000;",
      "SELECT * FROM InvestmentPerformance WHERE performance > 10;",
      "SELECT SUM(amount) AS total_investments FROM Investments;",
      "SELECT AVG(performance) AS avg_performance FROM InvestmentPerformance;",
      "SELECT DISTINCT type FROM Investments;",
      "SELECT * FROM Investments LIMIT 5;",
      "SELECT * FROM InvestmentPerformance ORDER BY date DESC;",
      "SELECT name, email, phone FROM Investors WHERE email LIKE '%gmail.com%';",
      "SELECT * FROM Investments WHERE amount <= 500 AND type = 'Bond';",
      "SELECT * FROM Investments WHERE date_added BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT * FROM InvestmentPerformance WHERE performance < 5;",
      "SELECT * FROM Investments WHERE amount > 10000",
      "SELECT id, name FROM Investments WHERE date_added BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT id, name, type, amount FROM Investments WHERE type = 'Stocks' AND amount > 5000",
      "SELECT * FROM Investments JOIN InvestmentPerformance ON Investments.id = InvestmentPerformance.investment_id",
      "SELECT Investors.name, Investments.name, Investments.amount FROM Investors INNER JOIN Investments ON Investors.id = Investments.id",
      "SELECT DISTINCT type FROM Investments",
      "SELECT name, SUM(amount) AS total_investment FROM Investments GROUP BY name",
      "SELECT Investors.name, Investments.name, InvestmentPerformance.date, InvestmentPerformance.performance FROM Investors INNER JOIN Investments ON Investors.id = Investments.id INNER JOIN InvestmentPerformance ON Investments.id = InvestmentPerformance.investment_id",
      "SELECT * FROM Investments WHERE amount BETWEEN 5000 AND 10000 AND type = 'Bonds'",
      "SELECT Investors.name, COUNT(Investments.id) AS total_investments FROM Investors INNER JOIN Investments ON Investors.id = Investments.id GROUP BY Investors.name",
      "SELECT Investments.name, AVG(InvestmentPerformance.performance) AS avg_performance FROM Investments LEFT JOIN InvestmentPerformance ON Investments.id = InvestmentPerformance.investment_id GROUP BY Investments.name",
      "SELECT COUNT(*) AS total_investments FROM Investments",
      "SELECT MAX(amount) AS highest_investment FROM Investments",
      "SELECT MIN(amount) AS lowest_investment FROM Investments",
      "SELECT AVG(amount) AS average_investment FROM Investments",
      "SELECT SUM(amount) AS total_invested FROM Investments",
      "SELECT * FROM Investments ORDER BY amount DESC LIMIT 5",
      "SELECT * FROM Investors WHERE email LIKE '%@example.com%'",
      "SELECT name, DATE_FORMAT(date_added, '%Y-%m-%d') AS formatted_date_added FROM Investments",
      "SELECT type, COUNT(*) AS total_count FROM Investments GROUP BY type",
      "SELECT DISTINCT email FROM Investors WHERE phone LIKE '%123%'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM investments;",
      "SELECT investment_name, investment_amount FROM investments;",
      "SELECT * FROM investors;",
      "SELECT investor_name, investor_email FROM investors;",
      "SELECT * FROM performance;",
      "SELECT performance_date, performance_value FROM performance;",
      "SELECT * FROM transactions;",
      "SELECT transaction_date, transaction_amount FROM transactions;",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_type = 'Stock';",
      "SELECT investor_name, investor_email FROM investors WHERE investor_id = 'abc123';",
      "SELECT performance_date, performance_value FROM performance WHERE investment_id = 'xyz456';",
      "SELECT transaction_date, transaction_amount FROM transactions WHERE investor_id = 'def789';",
      "SELECT investment_name, investment_amount FROM investments ORDER BY investment_amount DESC;",
      "SELECT investor_name, investor_email FROM investors ORDER BY investor_name;",
      "SELECT performance_date, performance_value FROM performance WHERE performance_date > '2022-01-01';",
      "SELECT transaction_date, transaction_amount FROM transactions WHERE transaction_amount > 1000;",
      "SELECT investment_name, investment_amount FROM investments WHERE investment_amount BETWEEN 500 AND 1000;",
      "SELECT investor_name, investor_email FROM investors WHERE investor_name LIKE '%John%';",
      "SELECT performance_date, performance_value FROM performance WHERE performance_value < 0;",
      "SELECT transaction_date, transaction_amount FROM transactions WHERE transaction_date < '2022-05-01';",
      "SELECT * FROM investments WHERE investment_type = 'Stocks';",
      "SELECT investment_id, investment_name FROM investments WHERE investment_amount > 10000;",
      "SELECT i.investment_name, t.transaction_amount FROM investments i JOIN transactions t ON i.investment_id = t.investment_id;",
      "SELECT SUM(transaction_amount) AS total_transactions FROM transactions;",
      "SELECT investor_name, investment_name FROM investors JOIN investments ON investors.investment_id = investments.investment_id;",
      "SELECT performance_value, performance_date FROM performance WHERE investment_id IN (SELECT investment_id FROM investments WHERE investment_amount > 5000);",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT MAX(performance_value) AS max_performance FROM performance;",
      "SELECT COUNT(*) AS total_investments FROM investments;",
      "SELECT AVG(performance_value) AS avg_performance FROM performance;",
      "SELECT DISTINCT investor_name FROM investors;",
      "SELECT investment_id, COUNT(*) AS transaction_count FROM transactions GROUP BY investment_id ORDER BY transaction_count DESC;",
      "SELECT investor_name, SUM(transaction_amount) AS total_transactions FROM investors JOIN transactions ON investors.investor_id = transactions.investor_id GROUP BY investor_name;",
      "SELECT i.investment_name, COUNT(*) AS investor_count FROM investments i LEFT JOIN investors t ON i.investment_id = t.investment_id GROUP BY i.investment_name ORDER BY investor_count DESC;",
      "SELECT * FROM investments WHERE investment_id IN (SELECT investment_id FROM transactions GROUP BY investment_id HAVING SUM(transaction_amount) > 5000);",
      "SELECT investment_id, AVG(transaction_amount) AS avg_transaction_amount FROM transactions GROUP BY investment_id HAVING AVG(transaction_amount) > 1000;",
      "SELECT i.investment_name, MAX(performance_value) FROM investments i JOIN performance p ON i.investment_id = p.investment_id GROUP BY i.investment_name;",
      "SELECT AVG(transaction_amount) AS avg_transaction_amount, investment_type FROM transactions JOIN investments ON transactions.investment_id = investments.investment_id GROUP BY investment_type;",
      "SELECT * FROM investments WHERE investment_amount = (SELECT MAX(investment_amount) FROM investments);",
      "SELECT i.investment_name, AVG(transaction_amount) AS avg_transaction_amount FROM investments i JOIN transactions t ON i.investment_id = t.investment_id GROUP BY i.investment_name HAVING AVG(transaction_amount) > 5000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM portfolio;",
      "SELECT id, name FROM portfolio WHERE id = 1;",
      "SELECT * FROM investment;",
      "SELECT symbol, quantity FROM investment WHERE price > 100;",
      "SELECT id, date FROM performance;",
      "SELECT start_value, end_value FROM performance WHERE return > 5.0;",
      "SELECT * FROM sector;",
      "SELECT name FROM sector WHERE id = 2;",
      "SELECT * FROM investment_sector;",
      "SELECT sector_id FROM investment_sector WHERE investment_id = 5;",
      "SELECT name, description FROM portfolio WHERE id = 3;",
      "SELECT symbol, quantity, price FROM investment WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT id, date, start_value FROM performance WHERE end_value > start_value;",
      "SELECT * FROM sector WHERE id IN (1, 3, 5);",
      "SELECT * FROM investment_sector WHERE sector_id IN (2, 4);",
      "SELECT name, description FROM portfolio WHERE name LIKE '%technology%';",
      "SELECT symbol, quantity FROM investment ORDER BY price DESC;",
      "SELECT id, date FROM performance ORDER BY date ASC;",
      "SELECT * FROM investment_sector ORDER BY sector_id;",
      "SELECT name, description FROM portfolio WHERE description IS NOT NULL;",
      "SELECT * FROM portfolio WHERE id = 1;",
      "SELECT name, description FROM portfolio WHERE id = 2;",
      "SELECT * FROM investment WHERE quantity > 100;",
      "SELECT symbol, price FROM investment WHERE date >= '2022-01-01';",
      "SELECT * FROM performance WHERE start_value < end_value;",
      "SELECT date, return FROM performance WHERE investment_id = 3;",
      "SELECT name, symbol, quantity FROM portfolio p JOIN investment i ON p.id = i.portfolio_id;",
      "SELECT p.name, i.symbol, i.price FROM portfolio p JOIN investment i ON p.id = i.portfolio_id;",
      "SELECT i.date, s.name FROM investment i JOIN investment_sector isec ON i.id = isec.investment_id JOIN sector s ON isec.sector_id = s.id;",
      "SELECT p.name, i.symbol, p.description, i.quantity FROM portfolio p JOIN investment i ON p.id = i.portfolio_id WHERE i.price > 50;",
      "SELECT p.name AS portfolio_name, i.symbol AS investment_symbol, s.name AS sector_name FROM portfolio p JOIN investment i ON p.id = i.portfolio_id JOIN investment_sector isec ON i.id = isec.investment_id JOIN sector s ON isec.sector_id = s.id;",
      "SELECT DISTINCT i.symbol FROM investment i JOIN investment_sector isec ON i.id = isec.investment_id JOIN sector s ON isec.sector_id = s.id WHERE s.name = 'Technology';",
      "SELECT SUM(quantity) AS total_quantity FROM investment;",
      "SELECT AVG(price) AS average_price FROM investment;",
      "SELECT MAX(end_value) AS highest_return FROM performance;",
      "SELECT MIN(start_value) AS lowest_start_value FROM performance;",
      "SELECT COUNT(*) AS total_investments FROM investment;",
      "SELECT p.name, COUNT(i.id) AS num_investments FROM portfolio p JOIN investment i ON p.id = i.portfolio_id GROUP BY p.name;",
      "SELECT sector_id, COUNT(investment_id) AS num_investments FROM investment_sector GROUP BY sector_id HAVING COUNT(investment_id) > 3;",
      "SELECT * FROM portfolio WHERE id IN (SELECT portfolio_id FROM investment WHERE quantity > 50);"
    ]
  }
]