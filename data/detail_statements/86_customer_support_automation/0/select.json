[
  {
    "statements": [
      "SELECT * FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426655440000';",
      "SELECT name, email FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426655440001';",
      "SELECT * FROM customers WHERE name = 'John Doe';",
      "SELECT customer_id, email FROM customers WHERE name = 'Jane Smith';",
      "SELECT * FROM customers WHERE email = 'john.doe@example.com';",
      "SELECT name, phone_number FROM customers WHERE email = 'jane.smith@example.com';",
      "SELECT * FROM customers WHERE phone_number = '123-456-7890';",
      "SELECT customer_id, email FROM customers WHERE phone_number = '987-654-3210';",
      "SELECT * FROM customers WHERE purchase_history @> '[{\"item\": \"shoes\"}]';",
      "SELECT name, email FROM customers WHERE purchase_history @> '[{\"item\": \"hat\"}]';",
      "SELECT * FROM customers WHERE purchase_history @> '[{\"item\": \"jacket\"}]';",
      "SELECT customer_id, phone_number FROM customers WHERE purchase_history @> '[{\"item\": \"shirt\"}]';",
      "SELECT * FROM customers WHERE name = 'Alice';",
      "SELECT name, email FROM customers WHERE name = 'Bob';",
      "SELECT * FROM customers WHERE email = 'alice@example.com';",
      "SELECT name, phone_number FROM customers WHERE email = 'bob@example.com';",
      "SELECT * FROM customers WHERE phone_number = '111-222-3333';",
      "SELECT customer_id, email FROM customers WHERE phone_number = '444-555-6666';",
      "SELECT * FROM customers WHERE purchase_history @> '[{\"item\": \"jeans\"}]';",
      "SELECT name, email FROM customers WHERE purchase_history @> '[{\"item\": \"dress\"}]';",
      "SELECT name, email FROM customers WHERE name LIKE 'A%' AND length(email) > 10;",
      "SELECT * FROM customers WHERE name LIKE '%son' OR phone_number LIKE '%555%';",
      "SELECT customer_id, name, phone_number FROM customers WHERE purchase_history @> '{\"product\": \"Shoes\"}';",
      "SELECT customer_id, email FROM customers WHERE purchase_history ->> 'category' = 'Electronics' AND purchase_history @> '{\"price\": {\"$gte\": 500}}';",
      "SELECT * FROM customers WHERE name ILIKE '%john%' OR purchase_history -> 'items' @> '[{\"item\": \"T-shirt\"}]' AND purchase_history ->> 'status' = 'completed';",
      "SELECT customer_id, name, phone_number FROM customers WHERE purchase_history -> 'items' @> '[{\"quantity\": {\"$gte\": 2}}]';",
      "SELECT customer_id, email FROM customers WHERE purchase_history ->> 'category' = 'Books' AND purchase_history -> 'items' @> '[{\"item\": \"Book1\"}]';",
      "SELECT * FROM customers WHERE name ILIKE '%michael%' AND purchase_history -> 'items' @> '[{\"price\": {\"$lte\": 50}}]' AND purchase_history ->> 'status' = 'pending';",
      "SELECT customer_id, name FROM customers WHERE email LIKE '%@gmail.com' AND purchase_history @> '{\"category\": \"Clothing\"}';",
      "SELECT customer_id, email FROM customers WHERE purchase_history ->> 'category' = 'Electronics' OR purchase_history @> '{\"price\": {\"$gte\": 1000}}';",
      "SELECT * FROM customers WHERE name ILIKE '%james%' AND purchase_history -> 'items' @> '[{\"item\": \"Headphones\"}]' AND purchase_history @> '{\"status\": \"shipped\"}';",
      "SELECT customer_id, name, phone_number FROM customers WHERE purchase_history @> '{\"category\": \"Accessories\", \"price\": {\"$gte\": 30, \"$lte\": 100}}';",
      "SELECT customer_id, email FROM customers WHERE purchase_history ->> 'category' = 'Electronics' AND purchase_history @> '{\"price\": {\"$gte\": 200}}' AND purchase_history ->> 'status' = 'completed';",
      "SELECT * FROM customers WHERE name ILIKE '%jennifer%' AND purchase_history -> 'items' @> '[{\"item\": \"Watch\"}]' AND purchase_history ->> 'status' = 'completed';",
      "SELECT customer_id, email FROM customers WHERE purchase_history ->> 'category' = 'Toys' AND purchase_history -> 'items' @> '[{\"item\": \"Toy1\"}]';",
      "SELECT customer_id, name, phone_number FROM customers WHERE purchase_history @> '{\"category\": \"Electronics\", \"price\": {\"$gte\": 500}}';",
      "SELECT customer_id, email FROM customers WHERE purchase_history ->> 'category' = 'Clothing' AND purchase_history @> '{\"price\": {\"$lte\": 100}}';",
      "SELECT * FROM customers WHERE name ILIKE '%natalie%' AND purchase_history -> 'items' @> '[{\"item\": \"Laptop\"}]' AND purchase_history @> '{\"status\": \"processing\"}';",
      "SELECT customer_id, name, email FROM customers WHERE purchase_history ->> 'category' = 'Shoes' AND purchase_history -> 'items' @> '[{\"item\": \"Shoe1\"}]';",
      "SELECT * FROM customers WHERE name ILIKE '%robert%' AND purchase_history -> 'items' @> '[{\"item\": \"Sunglasses\"}]' AND purchase_history @> '{\"status\": \"delivered\"}';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, first_name, last_name FROM customers;",
      "SELECT DISTINCT email FROM customers;",
      "SELECT customer_id, purchase_date, total_amount FROM purchases;",
      "SELECT customer_id, first_name, last_name, purchase_history FROM customers;",
      "SELECT customer_id, first_name, last_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT * FROM purchases WHERE total_amount > 1000;",
      "SELECT customer_id, first_name, last_name FROM customers WHERE purchase_history IS NOT NULL;",
      "SELECT customer_id, first_name, last_name FROM customers WHERE purchase_history ->> 'category' = 'electronics';",
      "SELECT customer_id, first_name, last_name FROM customers WHERE phone_number LIKE '(555)%';",
      "SELECT customer_id, first_name, last_name FROM customers ORDER BY last_name ASC;",
      "SELECT customer_id, first_name, last_name FROM customers ORDER BY first_name DESC;",
      "SELECT COUNT(customer_id) AS total_customers FROM customers;",
      "SELECT * FROM customers LIMIT 10;",
      "SELECT * FROM customers OFFSET 5;",
      "SELECT * FROM customers WHERE customer_id BETWEEN 100 AND 200;",
      "SELECT customer_id, first_name, last_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE payment_method = 'credit card';",
      "SELECT DISTINCT payment_method FROM purchases;",
      "SELECT customer_id, first_name, last_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id;",
      "SELECT customer_id, first_name, last_name, MAX(total_amount) AS max_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT first_name, last_name, email FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT customer_id, first_name, last_name, COUNT(*) AS purchase_count FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id, first_name, last_name;",
      "SELECT customer_id, first_name, last_name, SUM(total_amount) AS total_spent FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id, first_name, last_name;",
      "SELECT customer_id, first_name, last_name, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchase_date >= '2022-01-01';",
      "SELECT customer_id, first_name, last_name, SUM(total_amount) AS total_spent FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id, first_name, last_name HAVING SUM(total_amount) > 1000;",
      "SELECT customer_id, first_name, last_name, MAX(total_amount) AS largest_purchase FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id, first_name, last_name;",
      "SELECT customer_id, first_name, last_name, AVG(total_amount) AS avg_purchase_amount FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id, first_name, last_name;",
      "SELECT customer_id, first_name, last_name, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE total_amount > 500;",
      "SELECT first_name, last_name, email FROM customers WHERE first_name LIKE 'J%' AND last_name LIKE 'S%';",
      "SELECT customer_id, first_name, last_name, purchase_date, payment_method FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE payment_method = 'Credit Card';",
      "SELECT customer_id, first_name, last_name, total_amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE total_amount BETWEEN 100 AND 500;",
      "SELECT customer_id, first_name, last_name, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE EXTRACT(MONTH FROM purchase_date) = 3;",
      "SELECT customer_id, first_name, last_name, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE EXTRACT(YEAR FROM purchase_date) = 2022;",
      "SELECT customer_id, first_name, last_name, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchase_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_id, first_name, last_name, purchase_date, SUM(total_amount) AS total_spent FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchase_date >= '2022-01-01' GROUP BY customer_id, first_name, last_name;",
      "SELECT customer_id, first_name, last_name, email, phone_number, purchase_history FROM customers WHERE JSONB_EXISTS(purchase_history, 'product_id');",
      "SELECT customer_id, firstjsonb_build_object('first_name', first_name, 'last_name', last_name) AS full_name FROM customers;",
      "SELECT customer_id, first_name, last_name, jsonb_agg(total_amount) AS purchase_amounts FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id, first_name, last_name;",
      "SELECT customer_id, first_name, last_name, jsonb_pretty(purchase_history) AS formatted_purchase_history FROM customers WHERE customer_id = 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_phone FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders;",
      "SELECT order_date, order_total FROM orders WHERE customer_id = 1;",
      "SELECT * FROM products;",
      "SELECT product_name, product_price FROM products WHERE product_id = 1;",
      "SELECT customer_name, order_date, order_total FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customer_name, order_total, product_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id;",
      "SELECT customer_name, order_date, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id WHERE customer_id = 1;",
      "SELECT customer_name, order_date, order_total, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id WHERE customer_id = 1;",
      "SELECT customer_name, order_date, order_total, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id WHERE customer_name = 'John Smith';",
      "SELECT customer_name, order_date, order_total, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, order_date, order_total, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id ORDER BY order_date DESC;",
      "SELECT customer_name, order_date, order_total, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id ORDER BY order_total ASC;",
      "SELECT customer_name, AVG(order_total) AS avg_order_total FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(order_id) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, MAX(order_total) AS max_order_total FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, SUM(order_total) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(product_id) AS total_products_purchased FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id GROUP BY customer_name;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_phone LIKE '%123%';",
      "SELECT customer_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_total > 1000;",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE order_total > 500);",
      "SELECT customer_name, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.order_id = products.product_id;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(order_id) > 2;",
      "SELECT customer_name, SUM(order_total) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, product_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_name = 'Alice' AND orders.order_date > '2022-01-01';",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%' AND customer_email LIKE '%@gmail.com';",
      "SELECT customer_id, MAX(order_total) AS max_order_total FROM orders GROUP BY customer_id;",
      "SELECT customer_name, AVG(order_total) AS avg_order_total FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING AVG(order_total) > 500;",
      "SELECT customer_name, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_id = 1;",
      "SELECT customer_name, order_date, order_total FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.customer_name = 'Bob' AND orders.order_total > 500;",
      "SELECT customer_name, COUNT(order_id) AS total_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
      "SELECT customer_name, order_date, product_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE orders.order_date BETWEEN '2022-01-01' AND '2023-01-01';",
      "SELECT customer_id, SUM(order_total) AS total_spent FROM orders GROUP BY customer_id HAVING SUM(order_total) > 1000;",
      "SELECT customer_name, product_name, product_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN products ON orders.product_id = products.product_id WHERE customers.customer_name = 'Charlie';",
      "SELECT customer_name, customer_email, order_total FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date < '2022-01-01' ORDER BY order_total DESC;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(order_id) < 5;",
      "SELECT customer_name, AVG(order_total) AS avg_order_total FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING AVG(order_total) < 3000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT first_name, last_name FROM Customers WHERE customer_id = 1;",
      "SELECT email FROM Customers WHERE last_name = 'Smith';",
      "SELECT phone_number, email FROM Customers WHERE first_name = 'John' AND last_name = 'Doe';",
      "SELECT * FROM Addresses;",
      "SELECT street_address, city, state, zip_code FROM Addresses WHERE customer_id = 1;",
      "SELECT * FROM Orders;",
      "SELECT order_date, total_amount FROM Orders WHERE customer_id = 2;",
      "SELECT * FROM Products;",
      "SELECT product_name, category, price FROM Products WHERE product_id = 5;",
      "SELECT first_name, last_name, order_date, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT product_name, category, price FROM Products WHERE price > 100;",
      "SELECT first_name, last_name, street_address, city, state, zip_code FROM Customers JOIN Addresses ON Customers.customer_id = Addresses.customer_id;",
      "SELECT customer_id, COUNT(*) AS order_count FROM Orders GROUP BY customer_id;",
      "SELECT category, AVG(price) AS avg_price FROM Products GROUP BY category;",
      "SELECT first_name, last_name, order_date, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id ORDER BY order_date DESC;",
      "SELECT product_name, price, category FROM Products ORDER BY price ASC;",
      "SELECT first_name, last_name, email, phone_number FROM Customers WHERE email LIKE '%gmail.com';",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM Orders GROUP BY customer_id;",
      "SELECT * FROM Customers WHERE customer_id IN (SELECT customer_id FROM Orders WHERE order_date > '2021-01-01');",
      "SELECT * FROM Customers;",
      "SELECT first_name, last_name, email FROM Customers WHERE customer_id = 1;",
      "SELECT * FROM Addresses JOIN Customers ON Addresses.customer_id = Customers.customer_id;",
      "SELECT Customers.first_name, Addresses.street_address, Addresses.city FROM Customers JOIN Addresses ON Customers.customer_id = Addresses.customer_id;",
      "SELECT Customers.first_name, Orders.order_date, Orders.total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT Orders.order_date, SUM(Orders.total_amount) AS total_sales FROM Orders GROUP BY Orders.order_date;",
      "SELECT COUNT(distinct Orders.customer_id) AS active_customers FROM Orders WHERE Orders.order_date > '2022-01-01';",
      "SELECT first_name, last_name, email FROM Customers WHERE first_name LIKE '%John%' OR last_name LIKE '%Smith%';",
      "SELECT product_name, category, price FROM Products WHERE category = 'Electronics' AND price > 500;",
      "SELECT Customers.first_name, Addresses.city, Orders.total_amount FROM Customers JOIN Addresses ON Customers.customer_id = Addresses.customer_id JOIN Orders ON Orders.customer_id = Addresses.customer_id;",
      "SELECT Customers.first_name, COUNT(Orders.order_id) AS total_orders FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_id;",
      "SELECT first_name, COUNT(order_id) AS total_orders FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY first_name;",
      "SELECT first_name, last_name, order_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id ORDER BY order_date DESC;",
      "SELECT first_name, last_name, SUM(total_amount) AS total_spent FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY first_name, last_name;",
      "SELECT Customers.first_name, Addresses.city, Orders.total_amount FROM Customers JOIN Addresses ON Customers.customer_id = Addresses.customer_id JOIN Orders ON Orders.customer_id = Addresses.customer_id WHERE Orders.total_amount > 1000;",
      "SELECT first_name, last_name, order_date, total_amount FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id ORDER BY order_date;",
      "SELECT Customers.first_name, Addresses.city, Orders.total_amount FROM Customers JOIN Addresses ON Customers.customer_id = Addresses.customer_id JOIN Orders ON Orders.customer_id = Addresses.customer_id WHERE Orders.order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_id, first_name, last_name, email, phone_number FROM Customers WHERE customer_id IN (SELECT customer_id FROM Addresses WHERE state = 'CA');",
      "SELECT customer_id, first_name, last_name, email FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Orders);",
      "SELECT first_name, last_name, SUM(total_amount) AS total_spent FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY first_name, last_name HAVING total_spent > 5000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT * FROM addresses;",
      "SELECT street_address, city, state, zipcode FROM addresses;",
      "SELECT * FROM orders;",
      "SELECT order_date, total_amount FROM orders;",
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products;",
      "SELECT * FROM order_items;",
      "SELECT order_id, product_id, quantity FROM order_items;",
      "SELECT c.customer_name, o.order_date, oi.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id;",
      "SELECT c.customer_name, a.city, p.product_name, oi.quantity FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN order_items oi ON c.customer_id = oi.order_id JOIN products p ON oi.product_id = p.product_id;",
      "SELECT c.customer_name, a.city, o.order_date, p.product_name, oi.quantity FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id;",
      "SELECT c.customer_name, a.city, s.state, o.order_date, p.product_name, oi.quantity FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id JOIN states s ON a.state = s.state;",
      "SELECT c.customer_name, a.city, s.state, o.order_date, p.product_name, oi.quantity FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id JOIN states s ON a.state = s.state WHERE total_amount > 100;",
      "SELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name HAVING total_orders > 5;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_phone LIKE '+1%';",
      "SELECT customer_name, street_address, city, state, zipcode FROM customers c JOIN addresses a ON c.customer_id = a.customer_id;",
      "SELECT customer_name, total_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT product_name, price FROM products WHERE price > 100;",
      "SELECT customer_name, city, state, total_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN addresses a ON c.customer_id = a.customer_id;",
      "SELECT customer_name, order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE o.total_amount > 1000;",
      "SELECT customer_name, order_date, product_name, quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items i ON o.order_id = i.order_id JOIN products p ON i.product_id = p.product_id;",
      "SELECT customer_name, customer_email, product_name, quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items i ON o.order_id = i.order_id JOIN products p ON i.product_id = p.product_id WHERE quantity > 1;",
      "SELECT customer_name, city FROM customers c JOIN addresses a ON c.customer_id = a.customer_id WHERE state = 'CA';",
      "SELECT customer_name, order_date, total_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE order_date >= '2022-06-01';",
      "SELECT DISTINCT city FROM addresses;",
      "SELECT AVG(total_amount) AS avg_total_amount FROM orders;",
      "SELECT customer_name, SUM(price*quantity) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items i ON o.order_id = i.order_id JOIN products p ON i.product_id = p.product_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(*) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name HAVING total_orders > 5;",
      "SELECT customer_name, MAX(total_amount) AS max_total_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name;",
      "SELECT city, COUNT(*) AS total_customers FROM addresses GROUP BY city ORDER BY total_customers DESC LIMIT 5;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name ORDER BY total_spent DESC;",
      "SELECT customer_name, AVG(price) AS avg_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items i ON o.order_id = i.order_id JOIN products p ON i.product_id = p.product_id GROUP BY customer_name;",
      "SELECT customer_name, MAX(price) AS max_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items i ON o.order_id = i.order_id JOIN products p ON i.product_id = p.product_id GROUP BY customer_name;"
    ]
  }
]