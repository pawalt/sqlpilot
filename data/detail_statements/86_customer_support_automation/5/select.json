[
  {
    "statements": [
      "SELECT * FROM customer_support_data WHERE customer_id = 1",
      "SELECT customer_calls FROM customer_support_data WHERE support_tickets > 5",
      "SELECT customer_id, support_notes FROM customer_support_data WHERE customer_calls < 3",
      "SELECT COUNT(*) FROM customer_support_data",
      "SELECT MAX(support_tickets) FROM customer_support_data",
      "SELECT support_notes FROM customer_support_data WHERE customer_id = 10",
      "SELECT AVG(support_tickets) FROM customer_support_data",
      "SELECT MIN(customer_calls) FROM customer_support_data",
      "SELECT customer_id, SUM(support_tickets) FROM customer_support_data GROUP BY customer_id",
      "SELECT * FROM customer_support_data WHERE support_tickets < 10",
      "SELECT customer_id, support_tickets, customer_calls FROM customer_support_data WHERE support_tickets >= 5 AND customer_calls < 5",
      "SELECT DISTINCT support_notes FROM customer_support_data",
      "SELECT COUNT(DISTINCT customer_id) FROM customer_support_data",
      "SELECT * FROM customer_support_data WHERE support_tickets = 0",
      "SELECT support_notes FROM customer_support_data WHERE customer_id = 15",
      "SELECT AVG(customer_calls) FROM customer_support_data",
      "SELECT support_notes AS notes FROM customer_support_data WHERE customer_id = 5",
      "SELECT customer_id, COUNT(*) FROM customer_support_data GROUP BY customer_id",
      "SELECT MAX(customer_calls) FROM customer_support_data",
      "SELECT customer_id, support_tickets FROM customer_support_data WHERE support_notes IS NOT NULL",
      "SELECT * FROM customer_support_data WHERE customer_id = 1234",
      "SELECT customer_id, support_tickets FROM customer_support_data WHERE support_tickets > 5",
      "SELECT customer_id, support_calls FROM customer_support_data WHERE support_calls IS NOT NULL",
      "SELECT * FROM customer_support_data WHERE support_notes LIKE '%urgent%'",
      "SELECT customer_id, SUM(support_tickets) FROM customer_support_data GROUP BY customer_id",
      "SELECT customer_id, AVG(support_calls) FROM customer_support_data GROUP BY customer_id HAVING AVG(support_calls) > 3",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets > 10 AND support_calls > 15",
      "SELECT customer_id, MAX(support_tickets) FROM customer_support_data",
      "SELECT customer_id, COUNT(support_calls) AS total_calls FROM customer_support_data GROUP BY customer_id ORDER BY total_calls DESC",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE customer_id IN (1001, 1002, 1003)",
      "SELECT DISTINCT(customer_id) FROM customer_support_data",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets > support_calls",
      "SELECT customer_id, support_tickets, support_calls, COUNT(support_notes) FROM customer_support_data GROUP BY customer_id",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets <> support_calls",
      "SELECT COUNT(DISTINCT customer_id) FROM customer_support_data",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets BETWEEN 5 AND 10",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets > support_calls * 2",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_notes IS NULL",
      "SELECT customer_id, support_tickets, support_calls FROM customer_support_data ORDER BY support_tickets DESC LIMIT 5",
      "SELECT customer_id, AVG(support_tickets + support_calls) AS avg_support FROM customer_support_data GROUP BY customer_id HAVING avg_support > 5"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_support_data;",
      "SELECT id, issue_description FROM customer_support_data;",
      "SELECT customer_id, ticket_id, timestamp FROM customer_support_data WHERE issue_description = 'Billing';",
      "SELECT * FROM crm_system_data;",
      "SELECT id, account_balance FROM crm_system_data WHERE subscription_status = TRUE;",
      "SELECT customer_id, last_interaction_timestamp, notes FROM crm_system_data WHERE account_balance > 1000;",
      "SELECT * FROM customer_support_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT id, resolution FROM customer_support_data WHERE id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM crm_system_data WHERE subscription_status = FALSE;",
      "SELECT customer_id, account_balance FROM crm_system_data WHERE account_balance < 500;",
      "SELECT id, issue_description FROM customer_support_data WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM customer_support_data WHERE issue_description LIKE '%technical%';",
      "SELECT customer_id, account_balance, subscription_status FROM crm_system_data WHERE last_interaction_timestamp < '2021-12-01';",
      "SELECT id FROM customer_support_data WHERE timestamp = (SELECT MAX(timestamp) FROM customer_support_data);",
      "SELECT * FROM crm_system_data WHERE account_balance > 500 AND subscription_status = TRUE;",
      "SELECT customer_id, last_interaction_timestamp, notes FROM crm_system_data WHERE notes IS NOT NULL;",
      "SELECT id, resolution FROM customer_support_data WHERE resolution IS NULL;",
      "SELECT * FROM customer_support_data ORDER BY timestamp DESC;",
      "SELECT id, account_balance FROM crm_system_data ORDER BY account_balance ASC;",
      "SELECT DISTINCT customer_id FROM crm_system_data;",
      "SELECT * FROM customer_support_data WHERE customer_id = 'abc123' AND resolution IS NOT NULL;",
      "SELECT id, customer_id, timestamp FROM customer_support_data WHERE issue_description LIKE '%error%';",
      "SELECT id, customer_id, account_balance FROM crm_system_data WHERE account_balance > 1000;",
      "SELECT * FROM customer_support_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT customer_id, COUNT(*) AS total_tickets FROM customer_support_data GROUP BY customer_id;",
      "SELECT customer_id, AVG(account_balance) AS avg_balance FROM crm_system_data GROUP BY customer_id HAVING AVG(account_balance) > 500;",
      "SELECT * FROM customer_support_data JOIN crm_system_data ON customer_support_data.customer_id = crm_system_data.customer_id;",
      "SELECT customer_id, MIN(account_balance) AS min_balance FROM crm_system_data GROUP BY customer_id;",
      "SELECT customer_id, MAX(account_balance) AS max_balance FROM crm_system_data GROUP BY customer_id;",
      "SELECT customer_id, AVG(account_balance) AS avg_balance FROM crm_system_data WHERE subscription_status = true GROUP BY customer_id HAVING AVG(account_balance) > 1000;",
      "SELECT customer_id, SUM(account_balance) AS total_balance FROM crm_system_data GROUP BY customer_id;",
      "SELECT customer_id, COUNT(*) AS total_interactions FROM crm_system_data WHERE notes IS NOT NULL GROUP BY customer_id;",
      "SELECT customer_id, MAX(last_interaction_timestamp) AS last_interaction FROM crm_system_data GROUP BY customer_id;",
      "SELECT customer_id, MIN(last_interaction_timestamp) AS first_interaction FROM crm_system_data GROUP BY customer_id;",
      "SELECT customer_id, SUM(account_balance) AS total_balance, MAX(account_balance) AS max_balance, MIN(account_balance) AS min_balance FROM crm_system_data GROUP BY customer_id;",
      "SELECT * FROM customer_support_data WHERE issue_description = 'complaint' OR issue_description = 'refund' ORDER BY timestamp DESC;",
      "SELECT customer_id, COUNT(*) AS total_tickets FROM customer_support_data WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-01-31' GROUP BY customer_id;",
      "SELECT customer_id, MIN(account_balance) AS min_balance FROM crm_system_data WHERE subscription_status = true GROUP BY customer_id;",
      "SELECT customer_id, MAX(account_balance) AS max_balance FROM crm_system_data WHERE subscription_status = true GROUP BY customer_id;",
      "SELECT customer_id, AVG(account_balance) AS avg_balance, SUM(account_balance) AS total_balance FROM crm_system_data GROUP BY customer_id HAVING total_balance > 2000;",
      "SELECT customer_id, COUNT(*) AS total_tickets FROM customer_support_data WHERE resolution IS NULL GROUP BY customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_support_data;",
      "SELECT customer_id, issue_description FROM customer_support_data WHERE customer_id = 10;",
      "SELECT ticket_id, issue_description FROM customer_support_data WHERE ticket_id = 100;",
      "SELECT * FROM crm_system_data;",
      "SELECT customer_name, email_address FROM crm_system_data WHERE customer_id = 20;",
      "SELECT customer_id, customer_name, contact_number FROM crm_system_data WHERE contact_number LIKE '%123%';",
      "SELECT * FROM customer_journey;",
      "SELECT customer_id, touchpoint_description, timestamp FROM customer_journey WHERE customer_id = 30;",
      "SELECT touchpoint_id, timestamp FROM customer_journey WHERE timestamp >= '2022-01-01';",
      "SELECT customer_id, touchpoint_description FROM customer_journey WHERE customer_id = 40;",
      "SELECT customer_id, timestamp FROM customer_journey WHERE customer_id = 50 AND touchpoint_id = 1;",
      "SELECT * FROM customer_support_data ORDER BY ticket_id DESC;",
      "SELECT customer_id, issue_description FROM customer_support_data WHERE issue_description LIKE '%urgent%';",
      "SELECT customer_id, issue_description FROM customer_support_data WHERE ticket_id = 200 AND issue_description = 'Server Down';",
      "SELECT * FROM crm_system_data ORDER BY customer_name;",
      "SELECT customer_id, contact_number FROM crm_system_data WHERE email_address LIKE '%@gmail.com%';",
      "SELECT customer_id, email_address FROM crm_system_data WHERE customer_id = 60;",
      "SELECT * FROM customer_journey ORDER BY timestamp DESC;",
      "SELECT customer_id, touchpoint_description FROM customer_journey WHERE touchpoint_id = 5;",
      "SELECT customer_id, touchpoint_id FROM customer_journey WHERE timestamp >= '2023-01-01';",
      "SELECT customer_id, timestamp FROM customer_journey WHERE customer_id = 70 AND touchpoint_id = 3;",
      "SELECT * FROM customer_support_data WHERE customer_id = 123;",
      "SELECT ticket_id, issue_description FROM customer_support_data WHERE issue_description LIKE '%urgent%';",
      "SELECT customer_name, contact_number FROM crm_system_data WHERE customer_id = 456;",
      "SELECT customer_id, ticket_id, issue_description, timestamp FROM customer_support_data JOIN customer_journey ON customer_support_data.customer_id = customer_journey.customer_id;",
      "SELECT DISTINCT(customer_id) FROM customer_journey WHERE timestamp >= '2022-01-01';",
      "SELECT customer_id, COUNT(ticket_id) AS total_tickets FROM customer_support_data GROUP BY customer_id;",
      "SELECT customer_id, AVG(touchpoint_id) FROM customer_journey GROUP BY customer_id HAVING AVG(touchpoint_id) > 5;",
      "SELECT customer_name, contact_number, email_address FROM crm_system_data WHERE contact_number LIKE '555%';",
      "SELECT customer_id, issue_description, timestamp FROM customer_support_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT customer_id, COUNT(touchpoint_id) AS total_touchpoints FROM customer_journey GROUP BY customer_id;",
      "SELECT customer_id, MAX(touchpoint_id) AS max_touchpoint FROM customer_journey GROUP BY customer_id;",
      "SELECT customer_id, MIN(touchpoint_id) AS min_touchpoint FROM customer_journey GROUP BY customer_id;",
      "SELECT customer_id, COUNT(*) AS total_interactions FROM customer_journey WHERE timestamp BETWEEN '2022-01-01' AND '2022-03-01';",
      "SELECT customer_id, AVG(touchpoint_id) AS avg_touchpoint FROM customer_journey WHERE timestamp >= '2022-01-01' GROUP BY customer_id;",
      "SELECT customer_id, email_address FROM crm_system_data WHERE email_address IS NOT NULL;",
      "SELECT customer_id, COUNT(ticket_id) AS total_tickets FROM customer_support_data WHERE issue_description IS NULL GROUP BY customer_id HAVING COUNT(ticket_id) > 0;",
      "SELECT customer_id, MAX(timestamp) AS latest_interaction FROM customer_journey GROUP BY customer_id;",
      "SELECT customer_id, MIN(timestamp) AS oldest_interaction FROM customer_journey GROUP BY customer_id;",
      "SELECT customer_id, AVG(timestamp) AS avg_interaction_time FROM customer_journey GROUP BY customer_id;",
      "SELECT customer_id, COUNT(ticket_id) AS total_resolved_tickets FROM customer_support_data WHERE issue_description LIKE '%resolved%' GROUP BY customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customer;",
      "SELECT customer_name, customer_email FROM Customer;",
      "SELECT customer_name, customer_phone FROM Customer;",
      "SELECT * FROM Customer WHERE customer_id = 1;",
      "SELECT * FROM Customer WHERE customer_name = 'John Smith';",
      "SELECT * FROM CustomerSupportTickets;",
      "SELECT ticket_description, ticket_status FROM CustomerSupportTickets;",
      "SELECT * FROM CustomerSupportTickets WHERE customer_id = 1;",
      "SELECT * FROM CustomerSupportTickets WHERE ticket_status = 'Open';",
      "SELECT * FROM CRMContacts;",
      "SELECT contact_name, contact_email FROM CRMContacts;",
      "SELECT * FROM CRMContacts WHERE customer_id = 1;",
      "SELECT * FROM CRMInteractions;",
      "SELECT interaction_type, interaction_description FROM CRMInteractions;",
      "SELECT * FROM CRMInteractions WHERE contact_id = 1;",
      "SELECT * FROM CRMInteractions WHERE interaction_type = 'Meeting';",
      "SELECT Customer.customer_name, CRMContacts.contact_name FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id;",
      "SELECT Customer.customer_name, Customer.customer_address, CustomerSupportTickets.ticket_description FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id;",
      "SELECT Customer.customer_name, CRMContacts.contact_name, CRMInteractions.interaction_type FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id;",
      "SELECT Customer.customer_name, CustomerSupportTickets.ticket_status, CRMInteractions.interaction_type FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id JOIN CRMInteractions ON Customer.customer_id = CRMInteractions.customer_id;",
      "SELECT * FROM Customer;",
      "SELECT customer_name, customer_email FROM Customer WHERE customer_id = 1;",
      "SELECT AVG(customer_id) FROM Customer;",
      "SELECT customer_name, COUNT(customer_id) FROM Customer GROUP BY customer_name;",
      "SELECT * FROM Customer WHERE customer_id IN (SELECT customer_id FROM CRMContacts);",
      "SELECT customer_name, contact_name FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id;",
      "SELECT customer_name, ticket_description FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id;",
      "SELECT contact_name, interaction_type FROM CRMContacts JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id;",
      "SELECT customer_name FROM Customer WHERE customer_id IN (SELECT customer_id FROM CustomerSupportTickets WHERE ticket_status = 'Open');",
      "SELECT customer_name, AVG(customer_id) FROM Customer GROUP BY customer_name HAVING AVG(customer_id) > 10;",
      "SELECT customer_name FROM Customer ORDER BY customer_name ASC;",
      "SELECT contact_email, COUNT(interaction_id) FROM CRMContacts JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id GROUP BY contact_email HAVING COUNT(interaction_id) > 5;",
      "SELECT customer_name, interaction_description FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id;",
      "SELECT COUNT(DISTINCT customer_id) FROM Customer;",
      "SELECT customer_name, MAX(customer_id) FROM Customer GROUP BY customer_name;",
      "SELECT customer_name, interaction_created_at FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id WHERE interaction_type = 'Meeting';",
      "SELECT customer_name, ticket_status, DATE(ticket_created_at) FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id;",
      "SELECT contact_name, COUNT(interaction_id) FROM CRMContacts JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id GROUP BY contact_name ORDER BY COUNT(interaction_id) DESC;",
      "SELECT customer_name, AVG(DATE_PART('day', NOW() - interaction_created_at)) AS days_since_last_interaction FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id GROUP BY customer_name;",
      "SELECT customer_name, ticket_description FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id WHERE DATE(ticket_created_at) = CURDATE();"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customer;",
      "SELECT name, email FROM Customer;",
      "SELECT * FROM SupportTicket;",
      "SELECT issue_description, status FROM SupportTicket;",
      "SELECT * FROM CRMSystem;",
      "SELECT system_name, status FROM CRMSystem;",
      "SELECT * FROM CustomerInteraction;",
      "SELECT interaction_type, interaction_date FROM CustomerInteraction;",
      "SELECT * FROM CustomerJourney;",
      "SELECT start_date, end_date FROM CustomerJourney;",
      "SELECT name, email, phone FROM Customer;",
      "SELECT issue_description, status, created_at FROM SupportTicket;",
      "SELECT system_name, integration_key, status FROM CRMSystem;",
      "SELECT interaction_type, interaction_date, description FROM CustomerInteraction;",
      "SELECT start_date, end_date, journey_details FROM CustomerJourney;",
      "SELECT * FROM Customer WHERE id = 1;",
      "SELECT * FROM SupportTicket WHERE status = 'Open';",
      "SELECT * FROM CRMSystem WHERE status = 'Active';",
      "SELECT * FROM CustomerInteraction WHERE interaction_type = 'Call';",
      "SELECT * FROM CustomerJourney WHERE customer_id = 1;",
      "SELECT name, email, address FROM Customer;",
      "SELECT * FROM Customer WHERE id = 1;",
      "SELECT name, email FROM Customer WHERE address LIKE '%Street%';",
      "SELECT * FROM SupportTicket WHERE status = 'Open' ORDER BY created_at DESC;",
      "SELECT system_name FROM CRMSystem WHERE status = 'Active';",
      "SELECT interaction_type, interaction_date FROM CustomerInteraction WHERE customer_id = 5;",
      "SELECT * FROM Customer WHERE email LIKE '%gmail.com';",
      "SELECT COUNT(*) FROM SupportTicket WHERE customer_id = 3;",
      "SELECT DISTINCT status FROM CRMSystem;",
      "SELECT MAX(created_at) FROM SupportTicket WHERE customer_id = 10;",
      "SELECT AVG(id) FROM Customer;",
      "SELECT * FROM CustomerJourney WHERE customer_id = 7 AND start_date >= '2022-01-01';",
      "SELECT interaction_date, description FROM CustomerInteraction WHERE interaction_type = 'Call' ORDER BY interaction_date ASC;",
      "SELECT * FROM SupportTicket JOIN Customer ON SupportTicket.customer_id = Customer.id;",
      "SELECT name, email, system_name FROM Customer JOIN CRMSystem ON Customer.id = CRMSystem.system_id;",
      "SELECT COUNT(*) FROM CustomerInteraction WHERE customer_id = 8 AND DATE(interaction_date) = '2023-05-15';",
      "SELECT MIN(created_at) FROM SupportTicket WHERE status = 'Resolved';",
      "SELECT AVG(journey_id) FROM CustomerJourney;",
      "SELECT * FROM Customer WHERE name LIKE '%John%' OR email LIKE '%yahoo.com';",
      "SELECT system_name, integration_key FROM CRMSystem WHERE status = 'Inactive';",
      "SELECT MAX(id) FROM Customer WHERE phone IS NULL;",
      "SELECT * FROM CustomerInteraction WHERE description IS NOT NULL AND interaction_date >= '2024-01-01';"
    ]
  }
]