[
  {
    "statements": [
      "SELECT * FROM support_tickets;",
      "SELECT ticket_id, ticket_description FROM support_tickets;",
      "SELECT * FROM support_tickets WHERE ticket_id = 1;",
      "SELECT ticket_description FROM support_tickets WHERE agent_id = 5;",
      "SELECT * FROM support_tickets WHERE status = 'Open';",
      "SELECT COUNT(*) FROM support_tickets;",
      "SELECT MAX(ticket_id) FROM support_tickets;",
      "SELECT MIN(ticket_id) FROM support_tickets;",
      "SELECT AVG(agent_id) FROM support_tickets;",
      "SELECT DISTINCT agent_id FROM support_tickets;",
      "SELECT * FROM support_tickets ORDER BY ticket_id DESC;",
      "SELECT * FROM support_tickets ORDER BY agent_id ASC;",
      "SELECT * FROM support_tickets WHERE ticket_id BETWEEN 5 AND 10;",
      "SELECT * FROM support_tickets WHERE agent_id IN (1, 2, 3);",
      "SELECT * FROM support_tickets WHERE status LIKE 'Closed%';",
      "SELECT * FROM support_tickets WHERE agent_id IS NOT NULL;",
      "SELECT * FROM support_tickets WHERE ticket_description IS NULL;",
      "SELECT * FROM support_tickets WHERE ticket_description LIKE '%issue%';",
      "SELECT ticket_id, status FROM support_tickets WHERE status = 'Pending';",
      "SELECT * FROM support_tickets WHERE status = 'Resolved' OR status = 'Closed';",
      "SELECT * FROM support_tickets WHERE agent_id = 1",
      "SELECT ticket_id, ticket_description FROM support_tickets WHERE status = 'Open'",
      "SELECT COUNT(*) FROM support_tickets WHERE status = 'Closed'",
      "SELECT DISTINCT agent_id FROM support_tickets",
      "SELECT ticket_id, status FROM support_tickets WHERE status = 'Resolved'",
      "SELECT * FROM support_tickets WHERE agent_id IS NOT NULL",
      "SELECT agent_id, COUNT(*) FROM support_tickets GROUP BY agent_id",
      "SELECT * FROM support_tickets ORDER BY ticket_id DESC",
      "SELECT AVG(agent_id) AS avg_agent_id FROM support_tickets",
      "SELECT MAX(ticket_id) AS max_ticket_id FROM support_tickets",
      "SELECT MIN(ticket_id) AS min_ticket_id FROM support_tickets",
      "SELECT * FROM support_tickets WHERE ticket_description LIKE '%issue%'",
      "SELECT agent_id, SUM(ticket_id) AS total_tickets FROM support_tickets GROUP BY agent_id",
      "SELECT * FROM support_tickets WHERE agent_id IN (1, 2, 3)",
      "SELECT ticket_id, AVG(agent_id) FROM support_tickets GROUP BY ticket_id",
      "SELECT agent_id, COUNT(*) FROM support_tickets WHERE status = 'Open' GROUP BY agent_id",
      "SELECT * FROM support_tickets WHERE ticket_id > 10",
      "SELECT ticket_id, ticket_description FROM support_tickets WHERE ticket_id BETWEEN 5 AND 10",
      "SELECT agent_id, COUNT(*) FROM support_tickets WHERE status = 'Closed' GROUP BY agent_id",
      "SELECT * FROM support_tickets WHERE status = 'Open' OR status = 'Pending'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM tickets;",
      "SELECT ticket_id, title, status FROM tickets WHERE status = 'Open';",
      "SELECT * FROM agents WHERE name LIKE 'A%';",
      "SELECT ticket_id, title, status FROM tickets WHERE assigned_agent_id IS NULL;",
      "SELECT ticket_id, title, status FROM tickets ORDER BY title ASC;",
      "SELECT agent_id, name, email FROM agents WHERE email LIKE '%@example.com';",
      "SELECT * FROM tickets WHERE description IS NOT NULL;",
      "SELECT ticket_id, title, status FROM tickets WHERE status = 'Closed';",
      "SELECT * FROM agents WHERE agent_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT ticket_id, title, status FROM tickets WHERE description LIKE '%urgent%';",
      "SELECT ticket_id, title, status FROM tickets WHERE assigned_agent_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT agent_id, name, email FROM agents WHERE agent_id = '123e4567-e89b-12d3-a456-426614174001';",
      "SELECT ticket_id, title, status FROM tickets WHERE status IN ('Open', 'InProgress');",
      "SELECT * FROM agents WHERE name = 'John Doe';",
      "SELECT ticket_id, title, status FROM tickets WHERE description LIKE '%important%';",
      "SELECT * FROM tickets WHERE assigned_agent_id IS NOT NULL;",
      "SELECT ticket_id, title, status FROM tickets WHERE status = 'Resolved';",
      "SELECT agent_id, name, email FROM agents WHERE name = 'Alice';",
      "SELECT * FROM tickets WHERE description LIKE '%issue%';",
      "SELECT ticket_id, title, status FROM tickets WHERE assigned_agent_id <> '123e4567-e89b-12d3-a456-426614174001';",
      "SELECT * FROM tickets INNER JOIN agents ON tickets.assigned_agent_id = agents.agent_id WHERE tickets.status = 'Open';",
      "SELECT title, description FROM tickets WHERE assigned_agent_id IS NOT NULL;",
      "SELECT ticket_id, title, agents.name AS agent_name FROM tickets INNER JOIN agents ON tickets.assigned_agent_id = agents.agent_id;",
      "SELECT COUNT(*) AS total_tickets FROM tickets;",
      "SELECT AVG(LENGTH(description)) AS avg_description_length FROM tickets;",
      "SELECT DISTINCT status FROM tickets;",
      "SELECT assigned_agent_id, COUNT(ticket_id) AS total_tickets_assigned FROM tickets GROUP BY assigned_agent_id;",
      "SELECT * FROM tickets WHERE title LIKE '%support%';",
      "SELECT * FROM tickets WHERE title IN ('Bug Report', 'Feature Request');",
      "SELECT agent_id, name, COUNT(ticket_id) AS total_tickets_assigned FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_id;",
      "SELECT agent_id, name, COUNT(ticket_id) AS total_tickets_assigned FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_id HAVING COUNT(ticket_id) > 3;",
      "SELECT agent_id, MAX(total_tickets_assigned) AS max_tickets_assigned FROM (SELECT agent_id, COUNT(ticket_id) AS total_tickets_assigned FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_id) AS agent_ticket_counts;",
      "SELECT * FROM tickets ORDER BY title ASC;",
      "SELECT * FROM tickets ORDER BY title DESC;",
      "SELECT agent_id, AVG(LENGTH(description)) AS avg_description_length FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_id;",
      "SELECT agent_id, name, COUNT(ticket_id) AS total_tickets_assigned FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_id ORDER BY total_tickets_assigned DESC;",
      "SELECT agent_id, name, COUNT(ticket_id) AS total_tickets_assigned FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id WHERE total_tickets_assigned > 1 GROUP BY agent_id;",
      "SELECT status, AVG(LENGTH(description)) AS avg_description_length FROM tickets GROUP BY status HAVING AVG(LENGTH(description)) >= 50;",
      "SELECT COUNT(*) AS total_agents_with_tickets FROM agents WHERE agent_id IN (SELECT DISTINCT assigned_agent_id FROM tickets);",
      "SELECT DATE_TRUNC('month', NOW()) AS current_month;",
      "SELECT EXTRACT(MONTH FROM NOW()) AS current_month;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM tickets WHERE ticket_id = 1;",
      "SELECT ticket_description FROM tickets WHERE ticket_id = 2;",
      "SELECT * FROM agents WHERE agent_id = 1;",
      "SELECT agent_name, department FROM agents WHERE agent_id = 2;",
      "SELECT * FROM ticket_status WHERE status_id = 1;",
      "SELECT status_name FROM ticket_status WHERE status_id = 2;",
      "SELECT ticket_description, assigned_agent_id FROM tickets WHERE status = 'Open';",
      "SELECT agent_name, department FROM agents WHERE department = 'Sales';",
      "SELECT * FROM tickets WHERE status LIKE '%Pending%';",
      "SELECT agent_name FROM agents WHERE agent_id IN (1, 2, 3);",
      "SELECT * FROM ticket_status WHERE status_name = 'Closed';",
      "SELECT COUNT(*) FROM tickets;",
      "SELECT MAX(ticket_id) FROM tickets;",
      "SELECT MIN(agent_id) FROM agents;",
      "SELECT AVG(ticket_id) FROM tickets;",
      "SELECT SUM(agent_id) FROM agents;",
      "SELECT ticket_description FROM tickets WHERE status = 'Closed' AND assigned_agent_id = 1;",
      "SELECT ticket_description, status_name FROM tickets JOIN ticket_status ON tickets.status = ticket_status.status_name;",
      "SELECT a.agent_name, t.ticket_description FROM agents a INNER JOIN tickets t ON a.agent_id = t.assigned_agent_id;",
      "SELECT t.ticket_description, s.status_name FROM tickets t LEFT JOIN ticket_status s ON t.status = s.status_name;",
      "SELECT * FROM tickets JOIN agents ON tickets.assigned_agent_id = agents.agent_id WHERE tickets.status = 'Open';",
      "SELECT ticket_id, ticket_description, agent_name, status_name FROM tickets JOIN agents ON tickets.assigned_agent_id = agents.agent_id JOIN ticket_status ON tickets.status = ticket_status.status_name;",
      "SELECT agent_name, department, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_name, department;",
      "SELECT agent_name, department, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_name, department HAVING COUNT(ticket_id) > 5;",
      "SELECT agent_name, department, AVG(tickets.ticket_id) AS avg_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_name, department;",
      "SELECT agent_name, department, MAX(tickets.ticket_id) AS max_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_name, department;",
      "SELECT agent_name, department, MIN(tickets.ticket_id) AS min_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_name, department;",
      "SELECT agent_name, department, SUM(tickets.ticket_id) AS total_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_name, department;",
      "SELECT agent_name, department, AVG(tickets.ticket_id) AS avg_ticket_id, MAX(tickets.ticket_id) AS max_ticket_id, MIN(tickets.ticket_id) AS min_ticket_id, SUM(tickets.ticket_id) AS total_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id GROUP BY agent_name, department;",
      "SELECT agent_name, department, status_name FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name;",
      "SELECT agent_name, department, status_name, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name GROUP BY agent_name, department, status_name;",
      "SELECT agent_name, department, status_name, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name GROUP BY agent_name, department, status_name HAVING COUNT(ticket_id) > 2;",
      "SELECT agent_name, department, status_name, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name WHERE tickets.ticket_id IN (1, 2, 3);",
      "SELECT agent_name, department, status_name, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name WHERE agent_id = 1;",
      "SELECT agent_name, department, status_name, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name WHERE agent_id = 1 AND tickets.status = 'Closed';",
      "SELECT agent_name, department, status_name, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name WHERE agent_id = 1 OR agent_id = 2;",
      "SELECT agent_name, department, status_name, COUNT(ticket_id) AS total_tickets FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name WHERE agent_id IN (1, 2);",
      "SELECT agent_name, department, status_name, SUM(ticket_id) AS total_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name WHERE agent_id = 1 GROUP BY agent_name, department, status_name HAVING SUM(ticket_id) > 10;",
      "SELECT agent_name, department, status_name, MAX(ticket_id) AS max_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name GROUP BY agent_name, department, status_name HAVING MAX(ticket_id) > 100;",
      "SELECT agent_name, department, status_name, AVG(ticket_id) AS avg_ticket_id FROM agents LEFT JOIN tickets ON agents.agent_id = tickets.assigned_agent_id LEFT JOIN ticket_status ON tickets.status = ticket_status.status_name GROUP BY agent_name, department, status_name HAVING AVG(ticket_id) > 50;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM tickets;",
      "SELECT ticket_id, subject FROM tickets;",
      "SELECT description FROM tickets;",
      "SELECT * FROM agents;",
      "SELECT agent_id, name FROM agents;",
      "SELECT email FROM agents;",
      "SELECT * FROM assignments;",
      "SELECT assignment_id, ticket_id, agent_id FROM assignments;",
      "SELECT assigned_timestamp FROM assignments;",
      "SELECT * FROM ticket_status;",
      "SELECT status_id, status_name FROM ticket_status;",
      "SELECT subject, status FROM tickets;",
      "SELECT name, email FROM agents;",
      "SELECT assignment_id, ticket_id, agent_id, assigned_timestamp FROM assignments;",
      "SELECT status_id FROM ticket_status;",
      "SELECT ticket_id, agent_id FROM assignments;",
      "SELECT ticket_id, subject, description, status FROM tickets;",
      "SELECT agent_id, name, email FROM agents;",
      "SELECT ticket_id, agent_id, assigned_timestamp FROM assignments;",
      "SELECT status_name FROM ticket_status;",
      "SELECT * FROM tickets;",
      "SELECT ticket_id, subject FROM tickets WHERE status = 'Open';",
      "SELECT agent_id, name FROM agents WHERE email LIKE '%example.com';",
      "SELECT COUNT(*) AS total_tickets FROM tickets;",
      "SELECT t.ticket_id, t.subject, a.name AS agent_name FROM tickets t INNER JOIN agents a ON t.agent_id = a.agent_id;",
      "SELECT t.subject, COUNT(*) AS total_assignments FROM tickets t INNER JOIN assignments a ON t.ticket_id = a.ticket_id GROUP BY t.subject;",
      "SELECT t.subject, a.name AS agent_name FROM tickets t LEFT JOIN assignments a ON t.ticket_id = a.ticket_id;",
      "SELECT t.subject, ts.status_name FROM tickets t INNER JOIN ticket_status ts ON t.status = ts.status_name;",
      "SELECT t.subject, COUNT(*) AS total_assignments FROM tickets t WHERE NOT EXISTS (SELECT * FROM assignments a WHERE a.ticket_id = t.ticket_id);",
      "SELECT t.subject, MAX(a.assigned_timestamp) AS latest_assignment FROM tickets t INNER JOIN assignments a ON t.ticket_id = a.ticket_id GROUP BY t.subject;",
      "SELECT a.name AS agent_name, AVG(a.assigned_timestamp) AS avg_assignment_time FROM assignments a INNER JOIN agents ag ON a.agent_id = ag.agent_id GROUP BY a.agent_id;",
      "SELECT t.subject, a.name AS agent_name, a.email FROM tickets t INNER JOIN agents a ON t.agent_id = a.agent_id WHERE t.status = (SELECT status_name FROM ticket_status WHERE status_name = 'Closed');",
      "SELECT t.subject, ts.status_name, COUNT(*) AS total_assignments FROM tickets t INNER JOIN ticket_status ts ON t.status = ts.status_name INNER JOIN assignments a ON t.ticket_id = a.ticket_id GROUP BY t.subject, ts.status_name;",
      "SELECT t.subject, a.name AS agent_name FROM tickets t INNER JOIN assignments a ON t.ticket_id = a.ticket_id WHERE a.assigned_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT agent_id, name, COUNT(*) AS total_tickets_assigned FROM agents a INNER JOIN assignments ass ON a.agent_id = ass.agent_id GROUP BY a.agent_id, a.name;",
      "SELECT a.name AS agent_name, COUNT(*) AS total_tickets_assigned FROM agents a LEFT JOIN assignments ass ON a.agent_id = ass.agent_id GROUP BY a.name;",
      "SELECT COUNT(DISTINCT t.ticket_id) AS total_tickets_assigned, ts.status_name FROM tickets t INNER JOIN ticket_status ts ON t.status = ts.status_name GROUP BY ts.status_name;",
      "SELECT AVG(LENGTH(description)) AS avg_description_length FROM tickets;",
      "SELECT t.subject, COUNT(*) AS total_assignments FROM tickets t INNER JOIN assignments a ON t.ticket_id = a.ticket_id WHERE a.assigned_timestamp IS NOT NULL GROUP BY t.subject;",
      "SELECT a.name AS agent_name, COUNT(*) AS total_tickets_assigned FROM agents a INNER JOIN assignments ass ON a.agent_id = ass.agent_id WHERE ass.assigned_timestamp <= NOW();"
    ]
  },
  {
    "statements": [
      "SELECT * FROM support_tickets;",
      "SELECT ticket_id, ticket_subject FROM support_tickets;",
      "SELECT ticket_id, ticket_description FROM support_tickets WHERE status = 'Open';",
      "SELECT * FROM agents;",
      "SELECT agent_name, department FROM agents;",
      "SELECT * FROM ticket_assignments;",
      "SELECT ticket_id, agent_id FROM ticket_assignments WHERE status = 'Assigned';",
      "SELECT * FROM ticket_comments;",
      "SELECT agent_id, comment_text FROM ticket_comments WHERE ticket_id = 123;",
      "SELECT * FROM ticket_history;",
      "SELECT ticket_id, agent_id, action FROM ticket_history WHERE action = 'Update';",
      "SELECT ticket_id, ticket_description, created_date FROM support_tickets WHERE status = 'Closed';",
      "SELECT agent_name, email FROM agents WHERE department = 'IT Support';",
      "SELECT COUNT(*) FROM ticket_assignments;",
      "SELECT MAX(created_date) FROM support_tickets;",
      "SELECT AVG(LENGTH(comment_text)) FROM ticket_comments;",
      "SELECT ticket_id, COUNT(*) AS num_comments FROM ticket_comments GROUP BY ticket_id;",
      "SELECT agent_id, COUNT(*) AS num_assignments FROM ticket_assignments GROUP BY agent_id;",
      "SELECT ticket_id, MAX(action_date) FROM ticket_history GROUP BY ticket_id;",
      "SELECT agent_id, AVG(DATEDIFF(NOW(), action_date)) AS avg_days_since_action FROM ticket_history GROUP BY agent_id;",
      "SELECT * FROM support_tickets;",
      "SELECT ticket_id, ticket_subject, created_date FROM support_tickets WHERE status = 'Open';",
      "SELECT * FROM agents WHERE department = 'Support';",
      "SELECT agent_name, email FROM agents WHERE agent_id IN (SELECT agent_id FROM ticket_assignments WHERE ticket_id = 1001);",
      "SELECT ticket_id, comment_text, comment_date FROM ticket_comments WHERE agent_id = 2002;",
      "SELECT ticket_id, action, action_date FROM ticket_history WHERE agent_id = 3003;",
      "SELECT t.ticket_id, t.ticket_subject, a.agent_name FROM support_tickets t JOIN ticket_assignments ta ON t.ticket_id = ta.ticket_id JOIN agents a ON ta.agent_id = a.agent_id WHERE t.status = 'Closed' AND a.department = 'Technical Support';",
      "SELECT t.ticket_id, t.ticket_subject, c.comment_text FROM support_tickets t JOIN ticket_comments c ON t.ticket_id = c.ticket_id WHERE c.agent_id = 4004;",
      "SELECT t.ticket_id, t.ticket_subject, h.action FROM support_tickets t JOIN ticket_history h ON t.ticket_id = h.ticket_id WHERE h.agent_id = 5005;",
      "SELECT t.ticket_id, t.ticket_subject, a.agent_name, c.comment_text FROM support_tickets t JOIN ticket_assignments ta ON t.ticket_id = ta.ticket_id JOIN agents a ON ta.agent_id = a.agent_id JOIN ticket_comments c ON t.ticket_id = c.ticket_id WHERE t.status = 'Pending' AND a.department = 'Sales';",
      "SELECT t.ticket_id, t.ticket_description, a.agent_name, h.action FROM support_tickets t JOIN ticket_assignments ta ON t.ticket_id = ta.ticket_id JOIN agents a ON ta.agent_id = a.agent_id JOIN ticket_history h ON t.ticket_id = h.ticket_id WHERE a.department = 'Support' AND t.status = 'Open';",
      "SELECT a.agent_id, a.agent_name, COUNT(ta.ticket_id) AS total_tickets_assigned FROM agents a LEFT JOIN ticket_assignments ta ON a.agent_id = ta.agent_id GROUP BY a.agent_id, a.agent_name;",
      "SELECT a.department, COUNT(DISTINCT ta.ticket_id) AS total_tickets_assigned FROM agents a LEFT JOIN ticket_assignments ta ON a.agent_id = ta.agent_id GROUP BY a.department;",
      "SELECT t.created_date, COUNT(c.comment_id) AS total_comments FROM support_tickets t LEFT JOIN ticket_comments c ON t.ticket_id = c.ticket_id GROUP BY t.created_date;",
      "SELECT t.ticket_id, AVG(DAYOFYEAR(CURDATE()) - DAYOFYEAR(t.created_date)) AS avg_days_open FROM support_tickets t WHERE t.status = 'Closed' GROUP BY t.ticket_id;",
      "SELECT a.agent_id, a.agent_name, COUNT(DISTINCT th.history_id) AS total_actions FROM agents a LEFT JOIN ticket_history th ON a.agent_id = th.agent_id GROUP BY a.agent_id, a.agent_name;",
      "SELECT department, COUNT(DISTINCT ticket_id) AS total_tickets FROM agents a LEFT JOIN ticket_assignments ta ON a.agent_id = ta.agent_id GROUP BY department;",
      "SELECT ticket_id, COUNT(a.assignment_id) AS total_assignments FROM support_tickets t LEFT JOIN ticket_assignments a ON t.ticket_id = a.ticket_id GROUP BY ticket_id;",
      "SELECT department, AVG(DAYOFYEAR(CURDATE()) - DAYOFYEAR(t.created_date)) AS avg_days_assigned FROM agents a LEFT JOIN ticket_assignments ta ON a.agent_id = ta.agent_id LEFT JOIN support_tickets t ON ta.ticket_id = t.ticket_id GROUP BY department;",
      "SELECT t.ticket_id, t.ticket_subject, AVG(DAYOFYEAR(CURDATE()) - DAYOFYEAR(t.created_date)) AS avg_days_open FROM support_tickets t WHERE t.status = 'Open' GROUP BY t.ticket_id, t.ticket_subject;",
      "SELECT a.agent_id, a.agent_name, COUNT(DISTINCT ta.ticket_id) AS total_tickets_assigned, AVG(DAYOFYEAR(CURDATE()) - DAYOFYEAR(t.created_date)) AS avg_days_open FROM agents a LEFT JOIN ticket_assignments ta ON a.agent_id = ta.agent_id LEFT JOIN support_tickets t ON ta.ticket_id = t.ticket_id WHERE t.status = 'Open' GROUP BY a.agent_id, a.agent_name;"
    ]
  }
]