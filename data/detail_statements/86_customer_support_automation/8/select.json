[
  {
    "statements": [
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT name, email FROM customers WHERE age > 30;",
      "SELECT customer_id, name, age FROM customers WHERE behavior_score > 70;",
      "SELECT customer_id, email FROM customers WHERE age < 25;",
      "SELECT name, behavior_score FROM customers WHERE age BETWEEN 35 AND 45;",
      "SELECT customer_id, name, email, age FROM customers WHERE behavior_score >= 80;",
      "SELECT name, preferences FROM customers WHERE behavior_score < 50;",
      "SELECT customer_id, name, email, behavior_score FROM customers WHERE age = 25;",
      "SELECT * FROM customers WHERE behavior_score = 100;",
      "SELECT name, behavior_score FROM customers WHERE age < 30 OR age > 50;",
      "SELECT customer_id, email FROM customers WHERE behavior_score < 60 AND age > 40;",
      "SELECT customer_id, email FROM customers WHERE behavior_score > 90 OR age < 20;",
      "SELECT name, age, behavior_score FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT customer_id, preferences FROM customers WHERE preferences->'color' = 'blue';",
      "SELECT customer_id, name FROM customers WHERE preferences->'category' IN ('electronics', 'clothing');",
      "SELECT * FROM customers WHERE JSON_LENGTH(preferences) > 3;",
      "SELECT name, age FROM customers WHERE JSON_EXTRACT(preferences, '$.subscription') = 'premium';",
      "SELECT customer_id, email FROM customers WHERE JSON_CONTAINS(preferences, '{\"city\": \"New York\"}');",
      "SELECT * FROM customers WHERE JSON_SEARCH(preferences, 'all', 'John') IS NOT NULL;",
      "SELECT customer_id, name, email FROM customers WHERE JSON_SEARCH(preferences, 'all', 'John') IS NULL;",
      "SELECT * FROM customers WHERE age > 30 AND behavior_score > 50",
      "SELECT name, email FROM customers WHERE behavior_score < 20",
      "SELECT * FROM customers WHERE age BETWEEN 25 AND 35",
      "SELECT customer_id, age, preferences FROM customers WHERE behavior_score >= 40",
      "SELECT * FROM customers WHERE name LIKE 'J%'",
      "SELECT * FROM customers WHERE email LIKE '%@gmail.com'",
      "SELECT MAX(age) FROM customers",
      "SELECT AVG(behavior_score) FROM customers WHERE age < 50",
      "SELECT DISTINCT age FROM customers WHERE behavior_score < 30",
      "SELECT * FROM customers ORDER BY behavior_score DESC",
      "SELECT COUNT(*) FROM customers WHERE behavior_score < 10",
      "SELECT AVG(age) FROM customers WHERE behavior_score BETWEEN 20 AND 40",
      "SELECT * FROM customers WHERE preferences->>'theme' = 'Dark'",
      "SELECT * FROM customers WHERE JSON_EXTRACT(preferences, '$.notifications') = 'ON'",
      "SELECT * FROM customers WHERE JSON_CONTAINS(preferences, '{"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CustomerDemographics;",
      "SELECT customer_id, age, location FROM CustomerDemographics;",
      "SELECT gender FROM CustomerDemographics WHERE age > 30;",
      "SELECT * FROM CustomerPreferences;",
      "SELECT customer_id, interest_1, interest_2 FROM CustomerPreferences;",
      "SELECT interest_1 FROM CustomerPreferences WHERE customer_id = 100;",
      "SELECT * FROM CustomerDemographics JOIN CustomerPreferences ON CustomerDemographics.customer_id = CustomerPreferences.customer_id;",
      "SELECT CustomerDemographics.customer_id, CustomerDemographics.location, CustomerPreferences.interest_1 FROM CustomerDemographics LEFT JOIN CustomerPreferences ON CustomerDemographics.customer_id = CustomerPreferences.customer_id;",
      "SELECT * FROM CustomerDemographics WHERE age BETWEEN 25 AND 40;",
      "SELECT customer_id, interest_1 FROM CustomerPreferences WHERE interest_1 = 'Sports';",
      "SELECT COUNT(customer_id) AS total_customers FROM CustomerDemographics;",
      "SELECT AVG(age) AS avg_age FROM CustomerDemographics;",
      "SELECT location, COUNT(customer_id) AS total_customers FROM CustomerDemographics GROUP BY location;",
      "SELECT gender, COUNT(customer_id) AS total_customers FROM CustomerDemographics GROUP BY gender ORDER BY total_customers DESC;",
      "SELECT customer_id, interest_1, interest_2, interest_3 FROM CustomerPreferences WHERE interest_1 IS NOT NULL AND interest_2 IS NOT NULL AND interest_3 IS NOT NULL;",
      "SELECT * FROM CustomerPreferences WHERE interest_1 LIKE '%Music%';",
      "SELECT location, COUNT(customer_id) AS total_customers FROM CustomerDemographics WHERE gender = 'Female' GROUP BY location;",
      "SELECT customer_id, gender, location FROM CustomerDemographics WHERE age < 25;",
      "SELECT customer_id, interest_1 FROM CustomerPreferences WHERE interest_1 = 'Technology' OR interest_2 = 'Technology' OR interest_3 = 'Technology';",
      "SELECT AVG(age) AS avg_age_male, AVG(age) AS avg_age_female FROM CustomerDemographics WHERE gender = 'Male' OR gender = 'Female';",
      "SELECT * FROM CustomerDemographics;",
      "SELECT customer_id, age, gender FROM CustomerDemographics WHERE age > 30 AND gender = 'Female';",
      "SELECT * FROM CustomerPreferences INNER JOIN CustomerDemographics ON CustomerPreferences.customer_id = CustomerDemographics.customer_id;",
      "SELECT CustomerDemographics.customer_id, CustomerDemographics.gender, CustomerPreferences.interest_1 FROM CustomerDemographics JOIN CustomerPreferences ON CustomerDemographics.customer_id = CustomerPreferences.customer_id WHERE CustomerDemographics.age BETWEEN 25 AND 45;",
      "SELECT customer_id, interest_1, interest_2 FROM CustomerPreferences WHERE interest_1 = 'Sports' OR interest_2 = 'Music';",
      "SELECT CustomerDemographics.customer_id, CustomerDemographics.location, CustomerPreferences.interest_3 FROM CustomerDemographics LEFT JOIN CustomerPreferences ON CustomerDemographics.customer_id = CustomerPreferences.customer_id;",
      "SELECT * FROM CustomerDemographics WHERE age < 20 AND location LIKE '%New York%';",
      "SELECT DISTINCT gender FROM CustomerDemographics;",
      "SELECT customer_id, age, location FROM CustomerDemographics WHERE gender IN ('Male', 'Female');",
      "SELECT COUNT(*) AS Total_Customers FROM CustomerDemographics;",
      "SELECT SUM(age) AS Total_Ages FROM CustomerDemographics;",
      "SELECT AVG(age) AS Average_Age FROM CustomerDemographics;",
      "SELECT MAX(age) AS Oldest_Age FROM CustomerDemographics;",
      "SELECT MIN(age) AS Youngest_Age FROM CustomerDemographics;",
      "SELECT customer_id, interest_1 FROM CustomerPreferences WHERE interest_1 IS NOT NULL;",
      "SELECT * FROM CustomerDemographics ORDER BY age DESC;",
      "SELECT COUNT(DISTINCT gender) AS Total_Genders FROM CustomerDemographics;",
      "SELECT customer_id, location FROM CustomerDemographics UNION SELECT customer_id, location FROM CustomerPreferences;",
      "SELECT location, COUNT(*) AS Total_Customers_In_Location FROM CustomerDemographics GROUP BY location HAVING COUNT(*) > 1;",
      "SELECT interest_1, COUNT(*) AS Total_Customers_With_Interest FROM CustomerPreferences GROUP BY interest_1 HAVING COUNT(*) > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, customer_name FROM customers;",
      "SELECT customer_id, customer_segment FROM customers;",
      "SELECT customer_name, behavior_score FROM customers;",
      "SELECT * FROM purchases;",
      "SELECT purchase_id, customer_id, purchase_amount FROM purchases;",
      "SELECT purchase_id, purchase_date FROM purchases;",
      "SELECT * FROM events;",
      "SELECT event_id, customer_id FROM events;",
      "SELECT event_type, event_date FROM events;",
      "SELECT customers.customer_id, customers.customer_name, purchases.purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT customers.customer_id, customers.customer_name, events.event_type FROM customers JOIN events ON customers.customer_id = events.customer_id;",
      "SELECT customers.customer_id, customers.customer_name, purchases.purchase_amount, events.event_type FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN events ON customers.customer_id = events.customer_id;",
      "SELECT * FROM customers WHERE behavior_score > 0.5;",
      "SELECT * FROM purchases WHERE purchase_amount > 1000;",
      "SELECT * FROM events WHERE event_date > '2022-01-01';",
      "SELECT customer_id, AVG(purchase_amount) AS avg_purchase_amount FROM purchases GROUP BY customer_id;",
      "SELECT event_type, COUNT(*) AS total_events FROM events GROUP BY event_type;",
      "SELECT customer_segment, COUNT(*) AS total_customers FROM customers GROUP BY customer_segment HAVING COUNT(*) > 1;",
      "SELECT customer_id, SUM(purchase_amount) AS total_purchase_amount FROM purchases GROUP BY customer_id HAVING SUM(purchase_amount) > 5000;",
      "SELECT * FROM customers WHERE behavior_score > 0.5;",
      "SELECT customer_name, behavior_score FROM customers WHERE customer_segment = 'VIP';",
      "SELECT customer_name, SUM(purchase_amount) AS total_purchases FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY customer_id;",
      "SELECT customer_name, COUNT(*) AS total_events FROM customers c JOIN events e ON c.customer_id = e.customer_id WHERE event_type = 'click';",
      "SELECT customer_name, AVG(behavior_score) AS avg_behavior_score FROM customers GROUP BY customer_segment;",
      "SELECT customer_name, MAX(purchase_amount) AS max_purchase FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY customer_id;",
      "SELECT DISTINCT customer_name FROM customers WHERE behavior_score > 0.7;",
      "SELECT customer_name, AVG(purchase_amount) AS avg_purchase_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY customer_id HAVING AVG(purchase_amount) > 100;",
      "SELECT customer_name, COUNT(*) AS total_purchases FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE purchase_amount > 500 GROUP BY customer_id HAVING COUNT(*) > 2;",
      "SELECT customer_name, behavior_score FROM customers WHERE customer_id IN (SELECT customer_id FROM purchases WHERE purchase_amount > 1000);",
      "SELECT customer_name, event_type, event_date FROM customers c JOIN events e ON c.customer_id = e.customer_id WHERE event_type = 'purchase' ORDER BY event_date DESC;",
      "SELECT customer_name, behavior_score FROM customers WHERE customer_segment = 'Premium' AND behavior_score > (SELECT AVG(behavior_score) FROM customers);",
      "SELECT customer_name, behavior_score FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM events WHERE event_type = 'purchase');",
      "SELECT customer_name, AVG(purchase_amount) AS avg_purchase_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY customer_name HAVING AVG(purchase_amount) > 200;",
      "SELECT customer_name, MAX(purchase_amount) AS max_purchase_amount FROM purchases GROUP BY customer_id HAVING MAX(purchase_amount) > 500;",
      "SELECT customer_name, event_type, COUNT(*) AS total_events FROM customers c JOIN events e ON c.customer_id = e.customer_id WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customer_id;",
      "SELECT customer_name, behavior_score FROM customers WHERE behavior_score > (SELECT MAX(behavior_score) FROM customers);",
      "SELECT customer_name, COUNT(*) AS total_events FROM customers c JOIN events e ON c.customer_id = e.customer_id WHERE event_type = 'signup' GROUP BY customer_id HAVING COUNT(*) >= 1;",
      "SELECT customer_name, behavior_score FROM customers WHERE customer_segment = 'Regular' AND customer_id NOT IN (SELECT customer_id FROM events);",
      "SELECT customer_name, SUM(purchase_amount) AS total_purchases FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE purchase_date >= '2022-01-01' AND purchase_date <= '2022-12-31' GROUP BY customer_id HAVING SUM(purchase_amount) > 1000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, behavior_type FROM customers;",
      "SELECT customer_id, customer_name, behavior_type FROM customers WHERE behavior_type = 'loyal';",
      "SELECT * FROM behavior_types;",
      "SELECT behavior_name FROM behavior_types WHERE behavior_id = 1;",
      "SELECT * FROM preferences;",
      "SELECT preference_name FROM preferences WHERE preference_id = 2;",
      "SELECT * FROM support_strategies;",
      "SELECT strategy_name, target_behavior_id, target_preference_id FROM support_strategies;",
      "SELECT * FROM customers INNER JOIN behavior_types ON customers.behavior_type = behavior_types.behavior_name;",
      "SELECT customers.customer_name, behavior_types.behavior_name FROM customers INNER JOIN behavior_types ON customers.behavior_type = behavior_types.behavior_name;",
      "SELECT * FROM customers LEFT JOIN preferences ON customers.preference_type = preferences.preference_name;",
      "SELECT customers.customer_name, preferences.preference_name FROM customers LEFT JOIN preferences ON customers.preference_type = preferences.preference_name;",
      "SELECT customers.customer_name, behavior_types.behavior_name, support_strategies.strategy_name FROM customers INNER JOIN behavior_types ON customers.behavior_type = behavior_types.behavior_name INNER JOIN support_strategies ON behavior_types.behavior_id = support_strategies.target_behavior_id;",
      "SELECT customers.customer_name, preferences.preference_name, support_strategies.strategy_name FROM customers LEFT JOIN preferences ON customers.preference_type = preferences.preference_name INNER JOIN support_strategies ON preferences.preference_id = support_strategies.target_preference_id;",
      "SELECT customer_name, preference_name, strategy_name FROM customers LEFT JOIN preferences ON customers.preference_type = preferences.preference_name LEFT JOIN support_strategies ON preferences.preference_id = support_strategies.target_preference_id;",
      "SELECT customer_name, behavior_name, strategy_name FROM customers LEFT JOIN behavior_types ON customers.behavior_type = behavior_types.behavior_name LEFT JOIN support_strategies ON behavior_types.behavior_id = support_strategies.target_behavior_id;",
      "SELECT COUNT(customer_id) AS total_customers FROM customers;",
      "SELECT behavior_name, COUNT(behavior_id) AS total_behavior_count FROM behavior_types GROUP BY behavior_name;",
      "SELECT preference_name, COUNT(preference_id) AS total_preference_count FROM preferences GROUP BY preference_name;",
      "SELECT customers.customer_name, behavior_types.behavior_name FROM customers JOIN behavior_types ON customers.behavior_type = behavior_types.behavior_id;",
      "SELECT customers.customer_name, behavior_types.behavior_name, preferences.preference_name FROM customers JOIN behavior_types ON customers.behavior_type = behavior_types.behavior_id JOIN preferences ON customers.preference_type = preferences.preference_id;",
      "SELECT customers.customer_name, support_strategies.strategy_name FROM customers JOIN support_strategies ON customers.behavior_type = support_strategies.target_behavior_id;",
      "SELECT customers.customer_name, behavior_types.behavior_name FROM customers WHERE customers.behavior_type IN (SELECT behavior_id FROM behavior_types WHERE behavior_name = 'Aggressive');",
      "SELECT customers.customer_name, preference_name FROM customers JOIN preferences ON customers.preference_type = preferences.preference_id ORDER BY customers.customer_name DESC;",
      "SELECT MAX(strategy_id..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_segments;",
      "SELECT behavior_segment, preference_segment FROM customer_segments;",
      "SELECT customer_id, behavior_segment FROM customer_segments WHERE behavior_segment = 'High Engagement';",
      "SELECT * FROM customer_behavior;",
      "SELECT behavior_type, behavior_date FROM customer_behavior;",
      "SELECT customer_id FROM customer_behavior WHERE behavior_type = 'Purchase';",
      "SELECT * FROM customer_preferences;",
      "SELECT preference_type, preference_value FROM customer_preferences;",
      "SELECT customer_id FROM customer_preferences WHERE preference_type = 'Email';",
      "SELECT * FROM support_strategies;",
      "SELECT strategy_name FROM support_strategies;",
      "SELECT * FROM customer_support;",
      "SELECT support_type, strategy_id FROM customer_support;",
      "SELECT customer_id FROM customer_support WHERE support_type = 'Phone';",
      "SELECT customer_id, strategy_id FROM customer_support WHERE support_type = 'Chat';",
      "SELECT behavior_segment, preference_segment FROM customer_segments WHERE customer_id = '123e4567-e89b-12d3-a456-426655440000';",
      "SELECT behavior_type, behavior_date FROM customer_behavior WHERE customer_id = '123e4567-e89b-12d3-a456-426655440001';",
      "SELECT preference_type, preference_value FROM customer_preferences WHERE customer_id = '123e4567-e89b-12d3-a456-426655440002';",
      "SELECT strategy_name FROM support_strategies WHERE strategy_id = '123e4567-e89b-12d3-a456-426655440003';",
      "SELECT support_type, customer_id FROM customer_support WHERE strategy_id = '123e4567-e89b-12d3-a456-426655440004';",
      "SELECT * FROM customer_segments WHERE preference_segment='loyal';",
      "SELECT c.customer_id, c.behavior_segment, b.behavior_type FROM customer_segments c INNER JOIN customer_behavior b ON c.customer_id = b.customer_id WHERE b.behavior_date > '2022-01-01';",
      "SELECT p.*, c.behavior_segment FROM customer_preferences p JOIN customer_segments c ON p.customer_id = c.customer_id WHERE p.preference_type='email';",
      "SELECT s.strategy_name, c.support_type FROM support_strategies s JOIN customer_support c ON s.strategy_id = c.strategy_id WHERE s.strategy_name='premium';",
      "SELECT c.customer_id, b.behavior_type, p.preference_value FROM customer_behavior b JOIN customer_preferences p ON b.customer_id = p.customer_id JOIN customer_segments c ON c.customer_id = b.customer_id;",
      "SELECT COUNT(*) FROM customer_support WHERE support_type='chat';",
      "SELECT p.preference_type, COUNT(*) FROM customer_preferences p GROUP BY p.preference_type;",
      "SELECT c.customer_id, c.behavior_segment, p.preference_value FROM customer_segments c LEFT JOIN customer_preferences p ON c.customer_id = p.customer_id;",
      "SELECT SUM(price) FROM orders WHERE order_date > '2022-01-01' AND status='completed';",
      "SELECT AVG(quantity) FROM order_details WHERE product_id='123';",
      "SELECT MAX(support_id) FROM customer_support;",
      "SELECT MIN(behavior_date) FROM customer_behavior;",
      "SELECT DISTINCT behavior_type FROM customer_behavior;",
      "SELECT behavior_segment, COUNT(*) FROM customer_segments GROUP BY behavior_segment HAVING COUNT(*) > 1;",
      "SELECT preference_type, preference_value FROM customer_preferences WHERE customer_id='12345678-1234-1234-1234-123456789012';",
      "SELECT strategy_name, COUNT(*) FROM support_strategies s JOIN customer_support c ON s.strategy_id = c.strategy_id GROUP BY strategy_name;",
      "SELECT behavior_type, AVG(quantity) AS avg_quantity FROM customer_behavior b JOIN order_details o ON b.customer_id = o.customer_id GROUP BY behavior_type;",
      "SELECT p.preference_type, COUNT(*) AS total_count FROM customer_preferences p JOIN customer_behavior b ON p.customer_id = b.customer_id GROUP BY p.preference_type;",
      "SELECT s.strategy_name, COUNT(*) AS total_count FROM customer_support c JOIN support_strategies s ON c.strategy_id = s.strategy_id GROUP BY s.strategy_name;",
      "SELECT behavior_date, COUNT(*) AS total_count FROM customer_behavior GROUP BY behavior_date ORDER BY behavior_date DESC LIMIT 5;"
    ]
  }
]