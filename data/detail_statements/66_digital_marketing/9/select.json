[
  {
    "statements": [
      "SELECT * FROM feedback_sentiment_analysis;",
      "SELECT feedback_id, customer_id FROM feedback_sentiment_analysis;",
      "SELECT platform, COUNT(*) AS total_count FROM feedback_sentiment_analysis GROUP BY platform;",
      "SELECT AVG(sentiment_score) AS avg_score FROM feedback_sentiment_analysis;",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE sentiment_score > 0.5;",
      "SELECT * FROM feedback_sentiment_analysis WHERE platform = 'Twitter';",
      "SELECT feedback_id, customer_id FROM feedback_sentiment_analysis WHERE sentiment_score < 0.2;",
      "SELECT platform, COUNT(*) AS negative_count FROM feedback_sentiment_analysis WHERE sentiment_score < 0;",
      "SELECT customer_id, AVG(sentiment_score) AS avg_score FROM feedback_sentiment_analysis GROUP BY customer_id;",
      "SELECT COUNT(*) AS total_feedbacks FROM feedback_sentiment_analysis;",
      "SELECT * FROM feedback_sentiment_analysis ORDER BY sentiment_score DESC;",
      "SELECT customer_id, platform, sentiment_score FROM feedback_sentiment_analysis WHERE feedback LIKE '%good%';",
      "SELECT DISTINCT customer_id FROM feedback_sentiment_analysis;",
      "SELECT platform, COUNT(*) AS total_count FROM feedback_sentiment_analysis WHERE sentiment_score < 0.5 GROUP BY platform;",
      "SELECT AVG(sentiment_score) AS avg_score, platform FROM feedback_sentiment_analysis GROUP BY platform;",
      "SELECT platform, MAX(sentiment_score) AS max_score FROM feedback_sentiment_analysis GROUP BY platform;",
      "SELECT AVG(sentiment_score) AS avg_score, platform FROM feedback_sentiment_analysis WHERE platform = 'Facebook';",
      "SELECT customer_id, COUNT(*) AS total_feedbacks FROM feedback_sentiment_analysis GROUP BY customer_id;",
      "SELECT * FROM feedback_sentiment_analysis WHERE customer_id = '12345678-1234-1234-1234-123456789abc';",
      "SELECT platform, COUNT(*) AS positive_count FROM feedback_sentiment_analysis WHERE sentiment_score > 0.5 GROUP BY platform;",
      "SELECT platform, AVG(sentiment_score) FROM feedback_sentiment_analysis GROUP BY platform",
      "SELECT customer_id, COUNT(*) FROM feedback_sentiment_analysis GROUP BY customer_id HAVING COUNT(*) > 1",
      "SELECT platform, COUNT(*) FROM feedback_sentiment_analysis WHERE sentiment_score > 0.5 GROUP BY platform",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE sentiment_score < 0.3 ORDER BY customer_id DESC",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform = 'Twitter' ORDER BY feedback_id ASC",
      "SELECT DISTINCT platform FROM feedback_sentiment_analysis",
      "SELECT customer_id, MAX(sentiment_score) FROM feedback_sentiment_analysis GROUP BY customer_id ORDER BY MAX(sentiment_score) DESC",
      "SELECT customer_id, platform, SUM(sentiment_score) FROM feedback_sentiment_analysis GROUP BY customer_id, platform HAVING SUM(sentiment_score) > 5",
      "SELECT customer_id, platform, AVG(sentiment_score) FROM feedback_sentiment_analysis WHERE platform = 'Facebook' GROUP BY customer_id, platform",
      "SELECT customer_id, platform, AVG(sentiment_score) AS average_score FROM feedback_sentiment_analysis GROUP BY customer_id, platform HAVING AVG(sentiment_score) > 0.4",
      "SELECT platform, MAX(sentiment_score) FROM feedback_sentiment_analysis GROUP BY platform",
      "SELECT platform, AVG(sentiment_score) AS average_score FROM feedback_sentiment_analysis GROUP BY platform HAVING AVG(sentiment_score) < 0.5",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE sentiment_score BETWEEN 0.2 AND 0.6",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform = 'Instagram' AND sentiment_score > 0.7",
      "SELECT customer_id, platform, feedback, sentiment_score FROM feedback_sentiment_analysis WHERE feedback_id = 'd2ac6254-bbbd-4cbb-8705-ffb2e0d7ae29'",
      "SELECT customer_id, AVG(sentiment_score) FROM feedback_sentiment_analysis WHERE platform IN ('Facebook', 'Twitter') GROUP BY customer_id HAVING AVG(sentiment_score) > 0.6",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform = 'Twitter' AND feedback LIKE '%good%'",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE LENGTH(feedback) > 100",
      "SELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform IN ('Instagram', 'Facebook') ORDER BY customer_id, platform DESC",
      "SELECT platform, COUNT(DISTINCT customer_id) FROM feedback_sentiment_analysis GROUP BY platform",
      "SELECT platform, AVG(sentiment_score) AS average_score FROM feedback_sentiment_analysis GROUP BY platform HAVING COUNT(*) > 2"
    ]
  },
  {
    "statements": [
      "SELECT feedback_id, platform, feedback_text, sentiment_score FROM customer_feedback;",
      "SELECT * FROM customer_feedback WHERE platform = 'Twitter';",
      "SELECT feedback_id, feedback_text, sentiment_score FROM customer_feedback WHERE sentiment_score > 0.8;",
      "SELECT platform, COUNT(*) FROM customer_feedback GROUP BY platform;",
      "SELECT MAX(sentiment_score) FROM customer_feedback;",
      "SELECT feedback_id, sentiment_result, analysis_timestamp FROM sentiment_analysis;",
      "SELECT feedback_id, sentiment_result FROM sentiment_analysis WHERE sentiment_result = 'positive';",
      "SELECT COUNT(*) FROM sentiment_analysis;",
      "SELECT AVG(sentiment_score) FROM customer_feedback;",
      "SELECT feedback_id, platform FROM customer_feedback WHERE platform = 'Facebook' AND sentiment_score < 0.5;",
      "SELECT platform, COUNT(*) FROM customer_feedback WHERE platform LIKE 'I%' GROUP BY platform;",
      "SELECT MIN(sentiment_score) FROM customer_feedback;",
      "SELECT AVG(sentiment_score) AS average_score FROM customer_feedback;",
      "SELECT feedback_id, feedback_text FROM customer_feedback ORDER BY feedback_id DESC;",
      "SELECT sentiment_result, COUNT(*) FROM sentiment_analysis GROUP BY sentiment_result;",
      "SELECT feedback_id, platform, sentiment_score FROM customer_feedback WHERE feedback_id IN (1, 5, 10);",
      "SELECT platform, AVG(sentiment_score) FROM customer_feedback GROUP BY platform;",
      "SELECT * FROM customer_feedback LIMIT 10 OFFSET 5;",
      "SELECT COUNT(DISTINCT platform) FROM customer_feedback;",
      "SELECT feedback_id, sentiment_score FROM customer_feedback WHERE feedback_id BETWEEN 3 AND 8;",
      "SELECT AVG(sentiment_score) FROM customer_feedback WHERE platform = 'Instagram';",
      "SELECT * FROM customer_feedback WHERE sentiment_score > 0.5;",
      "SELECT platform, COUNT(feedback_id) FROM customer_feedback GROUP BY platform;",
      "SELECT feedback_id, feedback_text FROM customer_feedback WHERE CHAR_LENGTH(feedback_text) > 100;",
      "SELECT * FROM customer_feedback WHERE platform='Twitter' AND sentiment_score < 0.2;",
      "SELECT AVG(sentiment_score) FROM customer_feedback;",
      "SELECT MAX(sentiment_score) FROM customer_feedback WHERE platform='Facebook';",
      "SELECT feedback_id, sentiment_result FROM customer_feedback JOIN sentiment_analysis ON customer_feedback.feedback_id = sentiment_analysis.feedback_id;",
      "SELECT platform, AVG(sentiment_score) FROM customer_feedback GROUP BY platform HAVING AVG(sentiment_score) > 0.4;",
      "SELECT * FROM customer_feedback WHERE feedback_text LIKE '%great%' AND platform='Instagram';",
      "SELECT DISTINCT platform FROM customer_feedback;",
      "SELECT feedback_id, sentiment_result, analysis_timestamp FROM sentiment_analysis WHERE EXTRACT(MONTH FROM analysis_timestamp) = 7;",
      "SELECT COUNT(feedback_id), sentiment_result FROM sentiment_analysis WHERE sentiment_result='Positive' GROUP BY sentiment_result;",
      "SELECT feedback_id, sentiment_result, analysis_timestamp FROM sentiment_analysis ORDER BY analysis_timestamp DESC LIMIT 5;",
      "SELECT platform, COUNT(*) AS total_feedback FROM customer_feedback GROUP BY platform ORDER BY total_feedback DESC;",
      "SELECT platform, AVG(sentiment_score) AS average_score FROM customer_feedback GROUP BY platform ORDER BY average_score DESC LIMIT 3;",
      "SELECT * FROM customer_feedback WHERE feedback_id IN (SELECT feedback_id FROM sentiment_analysis WHERE sentiment_result='Negative');",
      "SELECT platform, SUM(sentiment_score) FROM customer_feedback GROUP BY platform;",
      "SELECT platform, MIN(sentiment_score), MAX(sentiment_score) FROM customer_feedback GROUP BY platform;",
      "SELECT feedback_id, platform, sentiment_result FROM customer_feedback LEFT JOIN sentiment_analysis ON customer_feedback.feedback_id = sentiment_analysis.feedback_id WHERE analysis_timestamp BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT platform, COUNT(feedback_id) FROM customer_feedback WHERE feedback_id IN (SELECT feedback_id FROM sentiment_analysis WHERE sentiment_result='Neutral') GROUP BY platform;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_feedback",
      "SELECT feedback_id, customer_id, sentiment_score FROM customer_feedback",
      "SELECT customer_name, email FROM customer",
      "SELECT * FROM platform",
      "SELECT platform_name, platform_type FROM platform",
      "SELECT feedback_text FROM customer_feedback",
      "SELECT customer_id, phone_number FROM customer",
      "SELECT * FROM customer_feedback WHERE sentiment_score > 0.5",
      "SELECT * FROM customer_feedback WHERE feedback_text LIKE '%good%'",
      "SELECT platform_name, platform_type FROM platform WHERE platform_type = 'Social Media'",
      "SELECT customer_name FROM customer WHERE email = 'example@gmail.com'",
      "SELECT feedback_id, customer_id, sentiment_score FROM customer_feedback WHERE sentiment_score < 0.2",
      "SELECT platform_name FROM platform WHERE platform_type = 'Review Site'",
      "SELECT customer_id, phone_number FROM customer WHERE customer_name = 'John Doe'",
      "SELECT * FROM customer_feedback ORDER BY created_at DESC",
      "SELECT feedback_id, customer_id, sentiment_score FROM customer_feedback LIMIT 5",
      "SELECT customer_name, email FROM customer LIMIT 10",
      "SELECT * FROM platform WHERE platform_type = 'E-commerce'",
      "SELECT platform_name FROM platform WHERE platform_type != 'Social Media'",
      "SELECT customer_name, phone_number FROM customer WHERE email LIKE '%@example.com%'",
      "SELECT * FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE customer.customer_name LIKE 'A%' ORDER BY customer_feedback.created_at DESC LIMIT 5;",
      "SELECT customer_name, email FROM customer WHERE phone_number LIKE '%123%'",
      "SELECT platform_name, platform_type FROM platform WHERE platform_type = 'social_media'",
      "SELECT feedback_text, sentiment_score FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id WHERE sentiment_score > 0.7;",
      "SELECT COUNT(*) FROM customer_feedback",
      "SELECT AVG(sentiment_score) FROM customer_feedback",
      "SELECT customer_name, COUNT(*) AS feedback_count FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id GROUP BY customer_name ORDER BY feedback_count DESC;",
      "SELECT customer_name, AVG(sentiment_score) AS avg_sentiment FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id GROUP BY customer_name ORDER BY avg_sentiment DESC;",
      "SELECT platform_name, AVG(sentiment_score) AS avg_sentiment FROM customer_feedback JOIN platform ON customer_feedback.platform_id = platform.platform_id GROUP BY platform_name ORDER BY avg_sentiment DESC;",
      "SELECT customer_name, COUNT(*) AS feedback_count FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE feedback_text LIKE '%great%' GROUP BY customer_name ORDER BY feedback_count DESC;",
      "SELECT customer_name, AVG(sentiment_score) AS avg_sentiment FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE feedback_text LIKE '%bad%' GROUP BY customer_name ORDER BY avg_sentiment ASC;",
      "SELECT customer.customer_name, platform.platform_name FROM customer_join customer_feedback ON customer.customer_id = customer_feedback.customer_idJOIN platform ON customer_feedback.platform_id = platform.platform_id ORDER BY customer.customer_name, platform.platform_name;",
      "SELECT customer_name, platform_type, COUNT(*) AS feedback_count FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id GROUP BY customer_name, platform_type ORDER BY customer_name, platform_type, feedback_count DESC;",
      "SELECT customer_name, feedback_text FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE platform_id = '12345678-1234-1234-1234-1234567890ab';",
      "SELECT customer_name, feedback_text FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE platform_id IN ('12345678-1234-1234-1234-1234567890ab', '87654321-4321-4321-4321-0987654321ba');",
      "SELECT customer_name, platform_name, sentiment_score FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id WHERE customer_id = 'abcd1234-abcd-abcd-abcd-abcd1234abcd';",
      "SELECT customer_name, platform_name, created_at FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id WHERE created_at >= '2022-01-01' AND created_at <= '2022-12-31';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CustomerFeedback;",
      "SELECT id, feedback_text FROM CustomerFeedback WHERE sentiment_score > 0.5;",
      "SELECT COUNT(*) FROM PlatformFeedback;",
      "SELECT platform_name, feedback_text FROM PlatformFeedback WHERE sentiment_score < -0.5;",
      "SELECT AVG(sentiment_score) AS average_score FROM CustomerFeedback;",
      "SELECT * FROM SentimentAnalysis WHERE analyzed_at > '2022-01-01';",
      "SELECT name, email FROM Customer WHERE id = 1;",
      "SELECT id, platform_name FROM PlatformFeedback WHERE id = 10;",
      "SELECT id, feedback_id, analysis_result FROM SentimentAnalysis WHERE feedback_id = 5;",
      "SELECT MAX(sentiment_score) AS max_score FROM CustomerFeedback;",
      "SELECT platform_name, COUNT(*) AS feedback_count FROM PlatformFeedback GROUP BY platform_name;",
      "SELECT * FROM CustomerFeedback WHERE feedback_text LIKE '%great%';",
      "SELECT AVG(sentiment_score) AS average_score, COUNT(*) AS total_feedbacks FROM CustomerFeedback;",
      "SELECT id, analysis_result FROM SentimentAnalysis WHERE analyzed_at BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT platform_name, AVG(sentiment_score) AS average_score FROM PlatformFeedback GROUP BY platform_name;",
      "SELECT id, feedback_text, sentiment_score FROM CustomerFeedback ORDER BY sentiment_score DESC;",
      "SELECT name, email FROM Customer WHERE email LIKE '%@example.com';",
      "SELECT COUNT(*) AS total_customers FROM Customer;",
      "SELECT platform_name, MAX(sentiment_score) AS max_score FROM PlatformFeedback GROUP BY platform_name;",
      "SELECT id, feedback_text, sentiment_score FROM PlatformFeedback UNION SELECT id, feedback_text, sentiment_score FROM CustomerFeedback;",
      "SELECT * FROM CustomerFeedback WHERE id = 1;",
      "SELECT platform_name, feedback_text FROM PlatformFeedback WHERE sentiment_score > 0.5;",
      "SELECT Customer.name, Customer.email, CustomerFeedback.feedback_text FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id;",
      "SELECT PlatformFeedback.platform_name, SentimentAnalysis.analysis_result FROM SentimentAnalysis JOIN PlatformFeedback ON SentimentAnalysis.feedback_id = PlatformFeedback.id;",
      "SELECT Customer.name, Customer.email, CustomerFeedback.sentiment_score FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id WHERE Customer.name LIKE 'A%';",
      "SELECT Customer.name, COUNT(CustomerFeedback.id) AS num_feedbacks FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id GROUP BY Customer.name;",
      "SELECT CustomerFeedback.id, CustomerFeedback.sentiment_score FROM CustomerFeedback WHERE CustomerFeedback.sentiment_score > (SELECT AVG(sentiment_score) FROM CustomerFeedback);",
      "SELECT Customer.name, Customer.email, COUNT(SentimentAnalysis.id) AS num_analysis FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id GROUP BY Customer.name;",
      "SELECT Customer.name, Customer.email, SentimentAnalysis.analyzed_at FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id ORDER BY SentimentAnalysis.analyzed_at DESC;",
      "SELECT CustomerFeedback.feedback_text, COUNT(SentimentAnalysis.id) AS num_analysis FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id GROUP BY CustomerFeedback.feedback_text HAVING COUNT(SentimentAnalysis.id) > 5;",
      "SELECT Customer.name, Customer.email FROM Customer WHERE Customer.id NOT IN (SELECT feedback_id FROM SentimentAnalysis);",
      "SELECT Customer.name, Customer.email FROM Customer LEFT JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id WHERE CustomerFeedback.id IS NULL;",
      "SELECT Customer.name, Customer.email FROM Customer WHERE Customer.id IN (SELECT id FROM PlatformFeedback WHERE platform_name = 'Twitter');",
      "SELECT Customer.name, Customer.email FROM Customer WHERE Customer.id IN (SELECT feedback_id FROM SentimentAnalysis WHERE analyzed_at BETWEEN '2022-01-01' AND '2022-01-31');",
      "SELECT Customer.name, Customer.email FROM Customer WHERE Customer.id NOT IN (SELECT feedback_id FROM SentimentAnalysis WHERE analysis_result = 'Positive');",
      "SELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analyzed_at FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE CustomerFeedback.sentiment_score = (SELECT MAX(sentiment_score) FROM CustomerFeedback);",
      "SELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analysis_result FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE SentimentAnalysis.analyzed_at = (SELECT MAX(analyzed_at) FROM SentimentAnalysis);",
      "SELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analysis_result FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE CustomerFeedback.sentiment_score = (SELECT MIN(sentiment_score) FROM CustomerFeedback);",
      "SELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analysis_result FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE SentimentAnalysis.analyzed_at = (SELECT MIN(analyzed_at) FROM SentimentAnalysis);",
      "SELECT Customer.name, Customer.email, CustomerFeedback.sentiment_score FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id WHERE CustomerFeedback.id IN (SELECT feedback_id FROM SentimentAnalysis WHERE analysis_result = 'Negative');"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_feedback",
      "SELECT feedback_id, platform, timestamp FROM customer_feedback",
      "SELECT * FROM customer_sentiment_analysis",
      "SELECT analysis_id, sentiment_score, sentiment_label FROM customer_sentiment_analysis",
      "SELECT * FROM customer_platforms",
      "SELECT platform_id, platform_name FROM customer_platforms",
      "SELECT * FROM customer_profiles",
      "SELECT profile_id, platform_id, profile_name FROM customer_profiles",
      "SELECT * FROM customer_responses",
      "SELECT response_id, feedback_id, profile_id FROM customer_responses",
      "SELECT feedback_id, feedback_text FROM customer_feedback WHERE sentiment='positive'",
      "SELECT analysis_id, feedback_id, sentiment_score FROM customer_sentiment_analysis WHERE sentiment_label='happy'",
      "SELECT profile_id, platform_id, profile_name FROM customer_profiles WHERE platform_id = 1",
      "SELECT * FROM customer_feedback ORDER BY timestamp DESC",
      "SELECT profile_id, profile_name FROM customer_profiles WHERE profile_email LIKE '%gmail.com%'",
      "SELECT feedback_id, feedback_text FROM customer_feedback WHERE platform='Twitter'",
      "SELECT analysis_id, sentiment_score FROM customer_sentiment_analysis WHERE sentiment_score > 0.7",
      "SELECT * FROM customer_profiles WHERE profile_name LIKE 'John%'",
      "SELECT count(*) FROM customer_feedback",
      "SELECT platform_name, COUNT(*) FROM customer_profiles JOIN customer_platforms ON customer_profiles.platform_id = customer_platforms.platform_id GROUP BY platform_name",
      "SELECT * FROM customer_feedback;",
      "SELECT feedback_id, platform, sentiment FROM customer_feedback WHERE sentiment='Positive';",
      "SELECT feedback_id, platform, feedback_text FROM customer_feedback WHERE platform='Twitter';",
      "SELECT feedback_id, platform, timestamp FROM customer_feedback ORDER BY timestamp DESC;",
      "SELECT analysis_id, feedback_id, sentiment_score FROM customer_sentiment_analysis WHERE sentiment_score > 0.5;",
      "SELECT analysis_id, sentiment_label, analysis_date FROM customer_sentiment_analysis WHERE analysis_date = '2022-05-01';",
      "SELECT platform_id, platform_name FROM customer_platforms;",
      "SELECT platform_id, platform_name FROM customer_platforms WHERE platform_name LIKE '%book%';",
      "SELECT profile_id, platform_id, profile_name FROM customer_profiles WHERE platform_id = 2;",
      "SELECT profile_id, profile_name, profile_email FROM customer_profiles WHERE profile_id IN (1, 3, 5);",
      "SELECT response_id, feedback_id, profile_id, response_text FROM customer_responses WHERE feedback_id = 10 AND profile_id = 3;",
      "SELECT response_id, feedback_id, profile_id, response_date FROM customer_responses WHERE response_date BETWEEN '2022-04-01' AND '2022-04-30';",
      "SELECT feedback_id, platform FROM customer_feedback JOIN customer_responses ON customer_feedback.feedback_id = customer_responses.feedback_id;",
      "SELECT feedback_id, platform, sentiment_score FROM customer_feedback JOIN customer_sentiment_analysis ON customer_feedback.feedback_id = customer_sentiment_analysis.feedback_id WHERE sentiment_score > 0.7;",
      "SELECT profile_id, profile_name, platform_name FROM customer_profiles JOIN customer_platforms ON customer_profiles.platform_id = customer_platforms.platform_id;",
      "SELECT feedback_id, platform, response_text FROM customer_feedback LEFT JOIN customer_responses ON customer_feedback.feedback_id = customer_responses.feedback_id WHERE response_text IS NULL;",
      "SELECT feedback_id, platform, sentiment FROM customer_feedback WHERE sentiment IN ('Positive', 'Negative');",
      "SELECT analysis_id, analysis_date, sentiment_label FROM customer_sentiment_analysis WHERE sentiment_label NOT LIKE '%Neutral%';",
      "SELECT profile_id, platform_id, profile_name, profile_email FROM customer_profiles WHERE profile_email LIKE '%@gmail.com';",
      "SELECT feedback_id, platform, timestamp FROM customer_feedback WHERE timestamp > '2022-05-01 00:00:00';",
      "SELECT feedback_id, platform, feedback_text FROM customer_feedback WHERE feedback_id NOT IN (SELECT feedback_id FROM customer_responses);"
    ]
  }
]