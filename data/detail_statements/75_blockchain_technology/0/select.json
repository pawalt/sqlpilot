[
  {
    "statements": [
      "SELECT * FROM user_authentication;",
      "SELECT user_id, username FROM user_authentication;",
      "SELECT username, password_hash FROM user_authentication;",
      "SELECT * FROM user_authentication WHERE user_id = 1;",
      "SELECT * FROM user_authentication WHERE username = 'john_doe';",
      "SELECT * FROM user_authentication WHERE password_hash = 'hashedpassword';",
      "SELECT user_id FROM user_authentication WHERE username = 'alice';",
      "SELECT username FROM user_authentication WHERE user_id = 3;",
      "SELECT * FROM user_authentication ORDER BY user_id DESC;",
      "SELECT * FROM user_authentication ORDER BY username ASC;",
      "SELECT * FROM user_authentication WHERE user_id > 10 AND username LIKE 'j%';",
      "SELECT user_id, username FROM user_authentication WHERE user_id BETWEEN 5 AND 10;",
      "SELECT * FROM user_authentication WHERE password_hash IS NOT NULL;",
      "SELECT COUNT(*) FROM user_authentication;",
      "SELECT DISTINCT username FROM user_authentication;",
      "SELECT user_id, COUNT(*) AS total FROM user_authentication GROUP BY user_id;",
      "SELECT AVG(user_id) AS average_user_id FROM user_authentication;",
      "SELECT MIN(user_id) AS min_user_id, MAX(user_id) AS max_user_id FROM user_authentication;",
      "SELECT user_id, LENGTH(password_hash) AS password_length FROM user_authentication;",
      "SELECT * FROM user_authentication LIMIT 5 OFFSET 10;",
      "SELECT * FROM user_authentication WHERE user_id = 1;",
      "SELECT username FROM user_authentication WHERE user_id > 10;",
      "SELECT MAX(user_id) AS max_user_id FROM user_authentication;",
      "SELECT user_id, username FROM user_authentication WHERE username LIKE '%admin%';",
      "SELECT user_id, COUNT(*) AS num_users FROM user_authentication GROUP BY user_id HAVING num_users > 1;",
      "SELECT user_id, public_key FROM user_authentication WHERE LENGTH(public_key) > 100;",
      "SELECT COUNT(*) AS total_users FROM user_authentication;",
      "SELECT DISTINCT username FROM user_authentication;",
      "SELECT user_id, username FROM user_authentication ORDER BY username ASC;",
      "SELECT user_id, username FROM user_authentication ORDER BY user_id DESC LIMIT 5;",
      "SELECT user_id, username FROM user_authentication WHERE user_id BETWEEN 5 AND 10;",
      "SELECT user_id, username FROM user_authentication WHERE username IS NOT NULL;",
      "SELECT user_id, username, password_hash FROM user_authentication WHERE user_id IN (1, 3, 5);",
      "SELECT user_id, username FROM user_authentication WHERE password_hash LIKE '%abc%';",
      "SELECT user_id, username FROM user_authentication WHERE user_id = (SELECT MAX(user_id) FROM user_authentication);",
      "SELECT user_id, username FROM user_authentication WHERE user_id IN (SELECT user_id FROM user_authentication WHERE LENGTH(public_key) > 150);",
      "SELECT COUNT(DISTINCT user_id) AS num_users FROM user_authentication;",
      "SELECT user_id, password_hash FROM user_authentication WHERE LENGTH(password_hash) < 50;",
      "SELECT user_id, username, public_key FROM user_authentication WHERE user_id < 10 AND LENGTH(public_key) > 150;",
      "SELECT AVG(user_id) AS avg_user_id FROM user_authentication;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username, email FROM users;",
      "SELECT user_id, username, email FROM users WHERE user_id = 5;",
      "SELECT user_id, username FROM users WHERE username = 'john_doe';",
      "SELECT * FROM wallets;",
      "SELECT wallet_id, user_id, wallet_name FROM wallets;",
      "SELECT wallet_id, balance FROM wallets WHERE user_id = 5;",
      "SELECT user_id, wallet_name, balance FROM wallets WHERE user_id = 5;",
      "SELECT user_id, wallet_name, balance FROM wallets WHERE balance > 100.00;",
      "SELECT * FROM users JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.user_id, users.username, wallets.wallet_name FROM users JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.user_id, users.username, wallets.wallet_name, wallets.balance FROM users JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.username AS user_name, wallets.wallet_name AS wallet FROM users JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.username AS user_name, wallets.wallet_name AS wallet, wallets.balance FROM users JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.username AS user_name, wallets.wallet_name AS wallet, wallets.balance FROM users LEFT JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.username AS user_name, wallets.wallet_name AS wallet, wallets.balance FROM users RIGHT JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.username AS user_name, wallets.wallet_name AS wallet, wallets.balance FROM users FULL JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT user_id, username, email, wallet_name, balance FROM users LEFT JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT user_id, username, email, wallet_name, balance FROM users RIGHT JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT user_id, username, email, wallet_name, balance FROM users FULL JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT u.username, w.wallet_name, w.balance FROM users u INNER JOIN wallets w ON u.user_id = w.user_id WHERE u.username = 'john_doe' AND w.balance > 1000",
      "SELECT u.username, u.email, w.wallet_name FROM users u LEFT JOIN wallets w ON u.user_id = w.user_id WHERE u.username LIKE 'j%' ORDER BY u.username ASC",
      "SELECT u.username, u.email, SUM(w.balance) AS total_balance FROM users u INNER JOIN wallets w ON u.user_id = w.user_id GROUP BY u.username HAVING total_balance > 5000",
      "SELECT u.username, u.email, MAX(w.balance) AS max_balance FROM users u INNER JOIN wallets w ON u.user_id = w.user_id GROUP BY u.username ORDER BY max_balance DESC",
      "SELECT u.username, u.email, AVG(w.balance) AS avg_balance FROM users u INNER JOIN wallets w ON u.user_id = w.user_id GROUP BY u.username HAVING avg_balance < 2000"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username FROM users WHERE user_id = 'some_user_id';",
      "SELECT user_id, username FROM users WHERE username = 'some_username';",
      "SELECT * FROM wallets;",
      "SELECT wallet_id, wallet_address FROM wallets WHERE user_id = 'some_user_id';",
      "SELECT * FROM sessions;",
      "SELECT session_id, token FROM sessions WHERE user_id = 'some_user_id';",
      "SELECT * FROM users WHERE username LIKE 'A%';",
      "SELECT * FROM wallets WHERE wallet_address = 'some_wallet_address';",
      "SELECT * FROM sessions WHERE expiration_time > '2022-12-31 23:59:59';",
      "SELECT COUNT(*) FROM users;",
      "SELECT MAX(expiration_time) FROM sessions;",
      "SELECT DISTINCT user_id FROM wallets;",
      "SELECT AVG(expiration_time) FROM sessions WHERE user_id = 'some_user_id';",
      "SELECT * FROM users ORDER BY username ASC;",
      "SELECT * FROM wallets ORDER BY wallet_address DESC;",
      "SELECT user_id, COUNT(*) FROM wallets GROUP BY user_id;",
      "SELECT user_id, username, COUNT(*) FROM users JOIN wallets ON users.user_id = wallets.user_id GROUP BY users.user_id;",
      "SELECT user_id, wallet_address FROM wallets UNION SELECT user_id, username FROM users;",
      "SELECT * FROM users LIMIT 5 OFFSET 2;",
      "SELECT * FROM users WHERE username = 'john_doe';",
      "SELECT user_id, username FROM users WHERE password = '123456';",
      "SELECT * FROM wallets WHERE user_id = 'a1b2c3d4';",
      "SELECT user_id, wallet_address FROM wallets WHERE wallet_id = 'wxyz1234';",
      "SELECT * FROM sessions WHERE user_id = '9876abcd';",
      "SELECT session_id, token, expiration_time FROM sessions WHERE user_id = '1234abcd';",
      "SELECT users.user_id, wallets.wallet_address FROM users JOIN wallets ON users.user_id = wallets.user_id;",
      "SELECT users.username, sessions.token FROM users JOIN sessions ON users.user_id = sessions.user_id;",
      "SELECT u.user_id, w.wallet_address, s.token FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN sessions s ON u.user_id = s.user_id;",
      "SELECT u.user_id, w.wallet_address, s.expiration_time FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN sessions s ON u.user_id = s.user_id;",
      "SELECT u.user_id, u.username, w.wallet_address FROM users u LEFT JOIN wallets w ON u.user_id = w.user_id;",
      "SELECT u.user_id, w.wallet_address, s.token FROM users u RIGHT JOIN sessions s ON u.user_id = s.user_id JOIN wallets w ON u.user_id = w.user_id;",
      "SELECT u.user_id, u.username, w.wallet_address, s.token FROM users u FULL OUTER JOIN wallets w ON u.user_id = w.user_id FULL OUTER JOIN sessions s ON u.user_id = s.user_id;",
      "SELECT COUNT(*) FROM users;",
      "SELECT COUNT(wallet_id) FROM wallets WHERE user_id = 'abcd1234';",
      "SELECT MAX(expiration_time) FROM sessions;",
      "SELECT MIN(expiration_time) FROM sessions WHERE user_id = 'abcd1234';",
      "SELECT AVG(expiration_time) FROM sessions;",
      "SELECT DISTINCT user_id FROM wallets;",
      "SELECT user_id, COUNT(wallet_id) FROM wallets GROUP BY user_id HAVING COUNT(wallet_id) > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, user_name FROM users WHERE user_id = 1;",
      "SELECT user_name, wallet_address FROM users WHERE wallet_address IS NOT NULL;",
      "SELECT * FROM wallets;",
      "SELECT wallet_name, balance FROM wallets WHERE user_id = 2;",
      "SELECT * FROM transactions;",
      "SELECT wallet_id, amount FROM transactions WHERE tx_type = 'deposit';",
      "SELECT * FROM user_sessions;",
      "SELECT user_id, session_token FROM user_sessions WHERE session_id = 5;",
      "SELECT user_name, password_hash FROM users WHERE user_id = 3;",
      "SELECT wallet_id, wallet_name FROM wallets WHERE balance > 1000;",
      "SELECT * FROM transactions WHERE amount < 0;",
      "SELECT user_id, wallet_address FROM users WHERE user_name LIKE 'A%';",
      "SELECT session_id, session_token FROM user_sessions WHERE user_id = 4;",
      "SELECT * FROM users u INNER JOIN wallets w ON u.user_id = w.user_id;",
      "SELECT * FROM wallets w LEFT JOIN users u ON w.user_id = u.user_id;",
      "SELECT * FROM users u RIGHT JOIN wallets w ON u.user_id = w.user_id;",
      "SELECT * FROM users u FULL JOIN wallets w ON u.user_id = w.user_id;",
      "SELECT user_id, MAX(amount) FROM transactions GROUP BY user_id;",
      "SELECT * FROM transactions ORDER BY timestamp DESC LIMIT 10;",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.amount > 100",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.tx_type = 'debit'",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.timestamp BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT u.user_name, u.wallet_address, SUM(t.amount) AS total_amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id GROUP BY u.user_name, u.wallet_address HAVING total_amount > 1000",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u LEFT JOIN wallets w ON u.user_id = w.user_id LEFT JOIN transactions t ON w.wallet_id = t.wallet_id WHERE w.balance < 0",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id LEFT JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.amount IS NULL",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.amount > (SELECT AVG(amount) FROM transactions)",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.amount = (SELECT MAX(amount) FROM transactions)",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.tx_type IN ('credit', 'deposit')",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.timestamp > (SELECT MAX(timestamp) FROM transactions)",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE EXISTS (SELECT 1 FROM user_sessions us WHERE us.user_id = u.user_id AND us.session_token = 'token123')",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE NOT EXISTS (SELECT 1 FROM user_sessions us WHERE us.user_id = u.user_id)",
      "SELECT u.user_name, w.wallet_address, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE (w.balance + t.amount) < 0",
      "SELECT u.user_name, w.wallet_name, SUM(t.amount) AS total_amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id GROUP BY u.user_name, w.wallet_name HAVING total_amount > (SELECT SUM(amount) FROM transactions)",
      "SELECT u.user_name, w.wallet_name, SUM(t.amount) AS total_amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id GROUP BY u.user_name, w.wallet_name ORDER BY total_amount DESC",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.tx_type = 'credit' OR (t.tx_type = 'debit' AND t.amount > 100)",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE YEAR(t.timestamp) = 2022",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE MONTH(t.timestamp) = 10",
      "SELECT u1.user_name AS sender, w1.wallet_name AS sender_wallet, u2.user_name AS receiver, w2.wallet_name AS receiver_wallet, t.amount FROM users u1 JOIN wallets w1 ON u1.user_id = w1.user_id JOIN transactions t ON w1.wallet_id = t.wallet_id JOIN wallets w2 ON t.wallet_id = w2.wallet_id JOIN users u2 ON w2.user_id = u2.user_id WHERE t.tx_type = 'transfer'",
      "SELECT u.user_name, w.wallet_name, t.amount FROM users u JOIN wallets w ON u.user_id = w.user_id JOIN transactions t ON w.wallet_id = t.wallet_id WHERE t.amount > (SELECT MIN(amount) FROM transactions)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users WHERE user_id = 1;",
      "SELECT user_id, username, email FROM users WHERE username LIKE 'A%';",
      "SELECT * FROM wallets;",
      "SELECT user_id, balance FROM wallets WHERE user_id = 3;",
      "SELECT * FROM transactions;",
      "SELECT wallet_id, amount, timestamp FROM transactions WHERE amount > 100;",
      "SELECT * FROM access_logs;",
      "SELECT user_id, action, timestamp FROM access_logs WHERE user_id = 5;",
      "SELECT * FROM sessions;",
      "SELECT user_id, token, expiry_timestamp FROM sessions WHERE expiry_timestamp > CURRENT_TIMESTAMP;",
      "SELECT u.username, w.address, w.balance FROM users u INNER JOIN wallets w ON u.user_id = w.user_id;",
      "SELECT u.username, t.amount, t.timestamp FROM users u INNER JOIN transactions t ON u.user_id = t.wallet_id;",
      "SELECT a.action, s.token, s.expiry_timestamp FROM access_logs a INNER JOIN sessions s ON a.user_id = s.user_id;",
      "SELECT u.username AS user, w.balance AS wallet_balance FROM users u LEFT JOIN wallets w ON u.user_id = w.user_id;",
      "SELECT u.username AS user, COUNT(t.transaction_id) AS num_transactions FROM users u LEFT JOIN transactions t ON u.user_id = t.wallet_id GROUP BY u.username;",
      "SELECT t.amount, COUNT(t.transaction_id) AS num_transactions FROM transactions t GROUP BY t.amount HAVING COUNT(t.transaction_id) > 2;",
      "SELECT u.username AS user, SUM(t.amount) AS total_transactions FROM users u LEFT JOIN transactions t ON u.user_id = t.wallet_id GROUP BY u.username;",
      "SELECT MAX(balance) AS max_balance FROM wallets;",
      "SELECT MIN(amount) AS min_amount FROM transactions;",
      "SELECT * FROM users WHERE user_id = 1;",
      "SELECT * FROM users WHERE username = 'john_doe';",
      "SELECT username, email FROM users WHERE user_id = 1;",
      "SELECT * FROM wallets WHERE balance > 1000;",
      "SELECT wallet_id, user_id, balance FROM wallets WHERE user_id = 1;",
      "SELECT * FROM transactions JOIN wallets ON transactions.wallet_id = wallets.wallet_id;",
      "SELECT * FROM transactions WHERE amount > 1000 ORDER BY timestamp DESC;",
      "SELECT * FROM access_logs WHERE action = 'login' AND user_id = 1;",
      "SELECT * FROM sessions WHERE expiry_timestamp < NOW();",
      "SELECT user_id, count(*) FROM access_logs GROUP BY user_id;",
      "SELECT user_id, sum(amount) FROM transactions GROUP BY user_id;",
      "SELECT user_id, count(distinct wallet_id) FROM wallets GROUP BY user_id;",
      "SELECT username, SUM(balance) AS total_balance FROM users JOIN wallets ON users.user_id = wallets.user_id GROUP BY username;",
      "SELECT username, COUNT(*) AS total_transactions FROM users JOIN wallets ON users.user_id = wallets.user_id JOIN transactions ON wallets.wallet_id = transactions.wallet_id GROUP BY username;",
      "SELECT * FROM wallets WHERE balance = (SELECT MAX(balance) FROM wallets);",
      "SELECT username, MAX(balance) AS max_balance FROM users JOIN wallets ON users.user_id = wallets.user_id GROUP BY username;",
      "SELECT username, AVG(balance) AS avg_balance FROM users JOIN wallets ON users.user_id = wallets.user_id GROUP BY username;",
      "SELECT * FROM wallets WHERE user_id IN (SELECT user_id FROM users WHERE email LIKE '%gmail.com');",
      "SELECT * FROM transactions WHERE amount BETWEEN 100 AND 500;"
    ]
  }
]