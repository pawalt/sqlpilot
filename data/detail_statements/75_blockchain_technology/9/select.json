[
  {
    "statements": [
      "SELECT * FROM blockchain_upgrades;",
      "SELECT upgrade_name, upgrade_date FROM blockchain_upgrades;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_id = '12345678-1234-1234-1234-123456789abc';",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_date = '2023-01-01';",
      "SELECT * FROM blockchain_upgrades WHERE protocol_version > 10;",
      "SELECT COUNT(*) FROM blockchain_upgrades;",
      "SELECT MAX(protocol_version) FROM blockchain_upgrades;",
      "SELECT AVG(protocol_version) FROM blockchain_upgrades;",
      "SELECT DISTINCT protocol_version FROM blockchain_upgrades;",
      "SELECT upgrade_name, protocol_version FROM blockchain_upgrades WHERE upgrade_date >= '2023-01-01';",
      "SELECT upgrade_name, protocol_version FROM blockchain_upgrades WHERE upgrade_date < '2023-01-01';",
      "SELECT upgrade_name, protocol_version FROM blockchain_upgrades ORDER BY upgrade_date DESC;",
      "SELECT upgrade_name, protocol_version FROM blockchain_upgrades ORDER BY protocol_version ASC;",
      "SELECT upgrade_name, protocol_version FROM blockchain_upgrades WHERE protocol_version BETWEEN 5 AND 10;",
      "SELECT * FROM blockchain_upgrades LIMIT 5;",
      "SELECT * FROM blockchain_upgrades OFFSET 5;",
      "SELECT * FROM blockchain_upgrades LIMIT 5 OFFSET 5;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name LIKE 'Bitcoin%';",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name ILIKE 'Ether%';",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name IN ('Bitcoin', 'Ethereum', 'Cardano');",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name = 'Bitcoin' AND protocol_version >= 10;",
      "SELECT * FROM blockchain_upgrades WHERE protocol_version = 1;",
      "SELECT upgrade_name, upgrade_date FROM blockchain_upgrades WHERE UPGRDE_DATE > '2022-01-01';",
      "SELECT COUNT(*) FROM blockchain_upgrades;",
      "SELECT upgrade_name, COUNT(*) FROM blockchain_upgrades GROUP BY upgrade_name;",
      "SELECT * FROM blockchain_upgrades ORDER BY upgrade_date DESC;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_date BETWEEN '2022-01-01' AND '2023-01-01';",
      "SELECT AVG(protocol_version) FROM blockchain_upgrades;",
      "SELECT MAX(protocol_version) FROM blockchain_upgrades;",
      "SELECT MIN(protocol_version) FROM blockchain_upgrades;",
      "SELECT DISTINCT protocol_version FROM blockchain_upgrades;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name LIKE '%upgrade%';",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name IN ('Upgrade1', 'Upgrade2');",
      "SELECT * FROM blockchain_upgrades WHERE protocol_version >= 2 AND protocol_version <= 5;",
      "SELECT * FROM blockchain_upgrades WHERE protocol_version > 3 AND upgrade_name LIKE '%upgrade%';",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_date = '2022-06-15' AND protocol_version = 2;",
      "SELECT upgrade_name, protocol_version FROM blockchain_upgrades WHERE upgrade_name NOT LIKE '%1%';",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name IS NULL;",
      "SELECT AVG(protocol_version) AS avg_protocol_version, MAX(protocol_version) AS max_protocol_version FROM blockchain_upgrades;",
      "SELECT upgrade_date, COUNT(*) AS count_upgrades FROM blockchain_upgrades GROUP BY upgrade_date;",
      "SELECT * FROM blockchain_upgrades WHERE protocol_version = (SELECT MAX(protocol_version) FROM blockchain_upgrades);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM blockchain_upgrades;",
      "SELECT upgrade_name, upgrade_timestamp FROM blockchain_upgrades;",
      "SELECT upgrade_description FROM blockchain_upgrades WHERE upgrade_timestamp > '2022-01-01';",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_id = '9f49c3b4-324e-4f87-b0d5-9690614f6d71';",
      "SELECT * FROM protocol_changes;",
      "SELECT change_description, change_timestamp FROM protocol_changes;",
      "SELECT * FROM protocol_changes WHERE change_timestamp BETWEEN '2022-01-01' AND '2022-03-01';",
      "SELECT * FROM blockchain_upgrades JOIN protocol_changes ON blockchain_upgrades.upgrade_timestamp = protocol_changes.change_timestamp;",
      "SELECT upgrade_name, change_description FROM blockchain_upgrades JOIN protocol_changes ON blockchain_upgrades.upgrade_timestamp = protocol_changes.change_timestamp;",
      "SELECT * FROM blockchain_upgrades LEFT JOIN protocol_changes ON blockchain_upgrades.upgrade_timestamp = protocol_changes.change_timestamp;",
      "SELECT * FROM blockchain_upgrades RIGHT JOIN protocol_changes ON blockchain_upgrades.upgrade_timestamp = protocol_changes.change_timestamp;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name LIKE '%upgrade%';",
      "SELECT * FROM blockchain_upgrades ORDER BY upgrade_timestamp DESC;",
      "SELECT * FROM protocol_changes ORDER BY change_timestamp ASC;",
      "SELECT MAX(upgrade_timestamp) FROM blockchain_upgrades;",
      "SELECT MIN(change_timestamp) FROM protocol_changes;",
      "SELECT COUNT(*) FROM blockchain_upgrades;",
      "SELECT AVG(DATE_PART('day', NOW() - upgrade_timestamp)) AS days_since_upgrade FROM blockchain_upgrades;",
      "SELECT DISTINCT upgrade_name FROM blockchain_upgrades;",
      "SELECT DISTINCT change_timestamp FROM protocol_changes;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_id = '1234' AND upgrade_timestamp > NOW();",
      "SELECT upgrade_id, upgrade_name FROM blockchain_upgrades WHERE upgrade_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM blockchain_upgrades bu INNER JOIN protocol_changes pc ON bu.upgrade_timestamp = pc.change_timestamp;",
      "SELECT bu.upgrade_id, pc.change_description FROM blockchain_upgrades bu LEFT JOIN protocol_changes pc ON bu.upgrade_id = pc.change_id;",
      "SELECT COUNT(*) FROM blockchain_upgrades;",
      "SELECT MAX(upgrade_timestamp) FROM blockchain_upgrades;",
      "SELECT AVG(DATE_PART('day', CURRENT_TIMESTAMP - upgrade_timestamp)) AS days_since_upgrade FROM blockchain_upgrades;",
      "SELECT DISTINCT upgrade_name FROM blockchain_upgrades;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_name LIKE 'Bitcoin%';",
      "SELECT * FROM blockchain_upgrades ORDER BY upgrade_timestamp DESC;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_timestamp > '2022-06-30' AND upgrade_timestamp < '2023-01-01';",
      "SELECT upgrade_id, COUNT(*) AS change_count FROM blockchain_upgrades bu JOIN protocol_changes pc ON bu.upgrade_timestamp = pc.change_timestamp GROUP BY upgrade_id;",
      "SELECT upgrade_id, change_id FROM blockchain_upgrades bu CROSS JOIN protocol_changes pc;",
      "SELECT * FROM blockchain_upgrades bu WHERE EXISTS (SELECT 1 FROM protocol_changes pc WHERE bu.upgrade_timestamp = pc.change_timestamp);",
      "SELECT DISTINCT DATE_TRUNC('day', upgrade_timestamp) AS upgrade_date FROM blockchain_upgrades;",
      "SELECT * FROM blockchain_upgrades WHERE upgrade_timestamp = (SELECT MAX(upgrade_timestamp) FROM blockchain_upgrades);",
      "SELECT upgrade_id, COUNT(change_id) AS change_count FROM blockchain_upgrades bu LEFT JOIN protocol_changes pc ON bu.upgrade_id = pc.change_id GROUP BY upgrade_id;",
      "SELECT upgrade_id, AVG(DATE_PART('day', CURRENT_TIMESTAMP - change_timestamp)) AS days_since_change FROM blockchain_upgrades bu JOIN protocol_changes pc ON bu.upgrade_timestamp = pc.change_timestamp GROUP BY upgrade_id;",
      "SELECT upgrade_id, upgrade_name, upgrade_description FROM blockchain_upgrades WHERE upgrade_timestamp = (SELECT MIN(upgrade_timestamp) FROM blockchain_upgrades);",
      "SELECT upgrade_id, upgrade_name, upgrade_description FROM blockchain_upgrades bu WHERE EXISTS (SELECT 1 FROM protocol_changes pc WHERE bu.upgrade_timestamp = pc.change_timestamp);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM blockchain_upgrades;",
      "SELECT upgrade_name, upgrade_date FROM blockchain_upgrades;",
      "SELECT id, upgrade_name FROM blockchain_upgrades WHERE upgrade_date >= '2022-01-01';",
      "SELECT COUNT(*) FROM blockchain_upgrades;",
      "SELECT * FROM protocol_changes;",
      "SELECT change_name, change_description FROM protocol_changes;",
      "SELECT id, change_name FROM protocol_changes WHERE LENGTH(change_description) > 100;",
      "SELECT COUNT(*) FROM protocol_changes;",
      "SELECT * FROM network_nodes;",
      "SELECT node_id, node_type FROM network_nodes;",
      "SELECT id, node_id FROM network_nodes WHERE node_type = 'full_node';",
      "SELECT COUNT(*) FROM network_nodes;",
      "SELECT upgrade_name, change_name FROM blockchain_upgrades JOIN protocol_changes ON blockchain_upgrades.id = protocol_changes.id;",
      "SELECT upgrade_name, change_name FROM blockchain_upgrades INNER JOIN protocol_changes ON blockchain_upgrades.id = protocol_changes.id;",
      "SELECT upgrade_name, change_name FROM blockchain_upgrades LEFT JOIN protocol_changes ON blockchain_upgrades.id = protocol_changes.id;",
      "SELECT upgrade_name, change_name FROM blockchain_upgrades RIGHT JOIN protocol_changes ON blockchain_upgrades.id = protocol_changes.id;",
      "SELECT DISTINCT upgrade_name FROM blockchain_upgrades;",
      "SELECT DISTINCT change_name FROM protocol_changes;",
      "SELECT DISTINCT node_type FROM network_nodes;",
      "SELECT upgrade_name, node_type FROM blockchain_upgrades, network_nodes;",
      "SELECT COUNT(*) FROM blockchain_upgrades WHERE upgrade_name LIKE '%upgrade%';",
      "SELECT id, upgrade_name, upgrade_date FROM blockchain_upgrades WHERE upgrade_date > NOW()",
      "SELECT COUNT(*) FROM blockchain_upgrades",
      "SELECT change_name, change_description FROM protocol_changes WHERE id = 1",
      "SELECT node_id FROM network_nodes WHERE node_type = 'miner'",
      "SELECT upgrade_name, upgrade_date FROM blockchain_upgrades WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT node_id FROM network_nodes WHERE node_type = 'validator' ORDER BY id ASC",
      "SELECT upgrade_name, upgrade_date FROM blockchain_upgrades WHERE upgrade_name LIKE '%upgrade%'",
      "SELECT node_id, node_type FROM network_nodes WHERE node_id = '123e4567-e89b-12d3-a456-426614174000'",
      "SELECT COUNT(*) FROM protocol_changes WHERE change_description IS NOT NULL",
      "SELECT id, node_id FROM network_nodes WHERE node_type IS NOT NULL",
      "SELECT MAX(upgrade_date) FROM blockchain_upgrades",
      "SELECT id, change_name FROM protocol_changes WHERE change_description IS NULL",
      "SELECT DISTINCT node_type FROM network_nodes ORDER BY node_type ASC",
      "SELECT AVG(id) FROM network_nodes",
      "SELECT * FROM protocol_changes LIMIT 5 OFFSET 5",
      "SELECT AVG(id) FROM network_nodes WHERE node_type = 'peer'",
      "SELECT node_id FROM network_nodes WHERE node_type IN ('miner', 'validator')",
      "SELECT MAX(id) FROM network_nodes WHERE node_id = '123e4567-e89b-12d3-a456-426614174000'",
      "SELECT COUNT(DISTINCT node_type) FROM network_nodes",
      "SELECT COUNT(*) FROM protocol_changes WHERE change_name ILIKE '%update%'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM blockchain_upgrades",
      "SELECT upgrade_name, upgrade_date FROM blockchain_upgrades",
      "SELECT upgrade_id, upgrade_name, upgrade_description FROM blockchain_upgrades",
      "SELECT * FROM protocol_changes",
      "SELECT change_description, change_date FROM protocol_changes",
      "SELECT change_id, change_description, change_date FROM protocol_changes",
      "SELECT * FROM upgrade_details",
      "SELECT detail_id, upgrade_id, change_id FROM upgrade_details",
      "SELECT * FROM upgrade_history",
      "SELECT history_id, upgrade_id, change_id, applied_date FROM upgrade_history",
      "SELECT upgrade_id, COUNT(*) FROM upgrade_details GROUP BY upgrade_id",
      "SELECT change_id, COUNT(*) FROM upgrade_details GROUP BY change_id",
      "SELECT u.upgrade_name, p.change_description FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id",
      "SELECT u.upgrade_name AS upgrade, p.change_description AS change FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id",
      "SELECT u.upgrade_name, COUNT(*) AS num_changes FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id GROUP BY u.upgrade_name",
      "SELECT u.upgrade_name, MAX(p.change_date) AS latest_change_date FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id GROUP BY u.upgrade_name",
      "SELECT u.upgrade_name, MIN(p.change_date) AS earliest_change_date FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id GROUP BY u.upgrade_name",
      "SELECT u.upgrade_name, AVG(p.change_date) AS avg_change_date FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id GROUP BY u.upgrade_name",
      "SELECT u.upgrade_name, MIN(p.change_date) AS earliest_change_date, MAX(p.change_date) AS latest_change_date FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id GROUP BY u.upgrade_name",
      "SELECT u.upgrade_name, COUNT(*) AS num_changes, AVG(p.change_date) AS avg_change_date FROM blockchain_upgrades u INNER JOIN upgrade_details d ON u.upgrade_id = d.upgrade_id INNER JOIN protocol_changes p ON d.change_id = p.change_id GROUP BY u.upgrade_name",
      "SELECT * FROM blockchain_upgrades",
      "SELECT upgrade_name, upgrade_date FROM blockchain_upgrades",
      "SELECT upgrade_name, upgrade_description FROM blockchain_upgrades WHERE upgrade_date > '2022-01-01'",
      "SELECT * FROM protocol_changes",
      "SELECT change_description, change_date FROM protocol_changes",
      "SELECT * FROM upgrade_details",
      "SELECT upgrade_id, change_id FROM upgrade_details WHERE upgrade_id = 1",
      "SELECT * FROM upgrade_history",
      "SELECT upgrade_id, change_id, applied_date FROM upgrade_history ORDER BY applied_date DESC",
      "SELECT upgrade_name, change_description, applied_date FROM blockchain_upgrades JOIN upgrade_history ON blockchain_upgrades.upgrade_id = upgrade_history.upgrade_id JOIN protocol_changes ON blockchain_upgrades.upgrade_id = protocol_changes.change_id",
      "SELECT upgrade_name, change_description, applied_date FROM blockchain_upgrades JOIN upgrade_history ON blockchain_upgrades.upgrade_id = upgrade_history.upgrade_id JOIN protocol_changes ON upgrade_history.change_id = protocol_changes.change_id",
      "SELECT DISTINCT upgrade_name, applied_date FROM blockchain_upgrades JOIN upgrade_history ON blockchain_upgrades.upgrade_id = upgrade_history.upgrade_id WHERE change_id = 1",
      "SELECT upgrade_name, COUNT(*) AS change_count FROM blockchain_upgrades JOIN upgrade_history ON blockchain_upgrades.upgrade_id = upgrade_history.upgrade_id GROUP BY upgrade_name HAVING change_count > 1",
      "SELECT upgrade_id, AVG(DATEDIFF(applied_date, upgrade_date)) AS days_since_upgrade FROM blockchain_upgrades JOIN upgrade_history ON blockchain_upgrades.upgrade_id = upgrade_history.upgrade_id GROUP BY upgrade_id",
      "SELECT upgrade_name, MAX(change_date) AS latest_change_date FROM blockchain_upgrades JOIN upgrade_history ON blockchain_upgrades.upgrade_id = upgrade_history.upgrade_id JOIN protocol_changes ON upgrade_history.change_id = protocol_changes.change_id GROUP BY upgrade_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM upgrades;",
      "SELECT upgrade_name, upgrade_date FROM upgrades;",
      "SELECT * FROM protocols;",
      "SELECT protocol_name, protocol_description FROM protocols;",
      "SELECT * FROM networks;",
      "SELECT network_name, network_type FROM networks;",
      "SELECT upgrade_id, protocol_id, network_id, upgrade_date FROM upgrade_history;",
      "SELECT action, table_name, timestamp FROM audit_log;",
      "SELECT * FROM upgrades WHERE id = 1;",
      "SELECT protocol_name, protocol_version FROM protocols WHERE id = 2;",
      "SELECT network_name, network_type FROM networks WHERE id = 3;",
      "SELECT upgrade_id, protocol_id, network_id, upgrade_date FROM upgrade_history WHERE upgrade_id = 4;",
      "SELECT action, table_name, timestamp FROM audit_log WHERE action = 'INSERT';",
      "SELECT upgrade_name, upgrade_date FROM upgrades WHERE upgrade_date >= '2022-01-01';",
      "SELECT protocol_name, protocol_description FROM protocols WHERE protocol_description LIKE '%secure%';",
      "SELECT network_name, network_type FROM networks WHERE network_type = 'WiFi';",
      "SELECT upgrade_id, protocol_id, network_id FROM upgrade_history WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT action, table_name, timestamp FROM audit_log WHERE timestamp >= '2022-01-01 00:00:00';",
      "SELECT upgrade_name, upgrade_date FROM upgrades ORDER BY upgrade_date DESC;",
      "SELECT protocol_name, protocol_description FROM protocols ORDER BY protocol_name ASC;",
      "SELECT * FROM upgrades JOIN upgrade_history ON upgrades.id = upgrade_history.upgrade_id WHERE upgrades.upgrade_name LIKE '%upgrade%'",
      "SELECT protocol_name, protocol_version, network_name FROM protocols JOIN upgrade_history ON protocols.id = upgrade_history.protocol_id JOIN networks ON networks.id = upgrade_history.network_id",
      "SELECT upgrade_name, upgrade_date, audit_log.action FROM upgrades JOIN upgrade_history ON upgrades.id = upgrade_history.upgrade_id JOIN audit_log ON upgrade_history.upgrade_date = audit_log.timestamp",
      "SELECT upgrades.upgrade_name, protocols.protocol_name, networks.network_name FROM upgrades, protocols, networks, upgrade_history WHERE upgrades.id = upgrade_history.upgrade_id AND protocols.id = upgrade_history.protocol_id AND networks.id = upgrade_history.network_id",
      "SELECT upgrade_name, protocol_name, network_name, upgrade_date FROM upgrades, protocols, networks, upgrade_history WHERE upgrades.id = upgrade_history.upgrade_id AND protocols.id = upgrade_history.protocol_id AND networks.id = upgrade_history.network_id ORDER BY upgrade_date DESC",
      "SELECT upgrade_name, network_name FROM upgrades JOIN networks ON upgrades.id = upgrade_history.upgrade_id",
      "SELECT protocol_name, network_name FROM protocols JOIN networks ON protocols.id = upgrade_history.protocol_id",
      "SELECT * FROM upgrades WHERE upgrade_date > '2021-01-01'",
      "SELECT * FROM protocols WHERE protocol_version = '1.0'",
      "SELECT * FROM networks WHERE network_type = 'Private'",
      "SELECT COUNT(*) AS protocol_count FROM protocols",
      "SELECT AVG(id) AS average_id FROM upgrades",
      "SELECT MAX(upgrade_date) AS latest_upgrade FROM upgrades",
      "SELECT MIN(upgrade_date) AS earliest_upgrade FROM upgrades",
      "SELECT DISTINCT network_name FROM networks",
      "SELECT upgrade_name, COUNT(*) AS upgrade_count FROM upgrades JOIN upgrade_history ON upgrades.id = upgrade_history.upgrade_id GROUP BY upgrade_name",
      "SELECT protocol_name, COUNT(*) AS protocol_count FROM protocols JOIN upgrade_history ON protocols.id = upgrade_history.protocol_id GROUP BY protocol_name",
      "SELECT network_name, COUNT(*) AS network_count FROM networks JOIN upgrade_history ON networks.id = upgrade_history.network_id GROUP BY network_name",
      "SELECT upgrade_name, upgrade_description FROM upgrades WHERE upgrade_description IS NOT NULL"
    ]
  }
]