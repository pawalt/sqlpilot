[
  {
    "statements": [
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('POW', NULL, 'POS') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = excluded.previous_algorithm",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('POS', NULL, 'DPoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = excluded.previous_algorithm",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('DPoS', NULL, 'POA') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = excluded.previous_algorithm",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('POA', NULL, 'BFT') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = excluded.previous_algorithm",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('BFT', NULL, 'PBFT') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = excluded.previous_algorithm",
      "INSERT INTO blockchain_consens...",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoW', 'PoS', 'DPoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET next_algorithm = 'PoET';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoET', NULL, 'PoA') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = 'DPoS';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoS', 'PoA', 'DPoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('DPoS', 'PoET', 'PoW') ON CONFLICT (consensus_algorithm) DO UPDATE SET next_algorithm = 'PoS';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoA', 'DPoS', 'PoET') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoW', 'PoS', 'PoET') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = 'PoA';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoET', NULL, 'PoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoS', 'DPoS', 'PoW') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = 'PoA';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('DPoS', 'PoW', 'PoET') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoA', 'PoET', 'PoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET next_algorithm = 'DPoS';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoW', 'PoS', 'DPoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoET', NULL, 'PoA') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = 'PoW';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoS', 'PoA', 'PoET') ON CONFLICT (consensus_algorithm) DO UPDATE SET next_algorithm = 'DPoS';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('DPoS', 'PoET', 'PoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoA', 'DPoS', 'PoW') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = 'PoET';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoW', 'PoET', 'PoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoET', NULL, 'PoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET next_algorithm = 'PoW';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoS', 'DPoS', 'PoET') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('DPoS', 'PoW', 'PoA') ON CONFLICT (consensus_algorithm) DO UPDATE SET previous_algorithm = 'PoS';",
      "INSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('PoA', 'PoS', 'DPoS') ON CONFLICT (consensus_algorithm) DO UPDATE SET change_timestamp = NOW();"
    ]
  },
  {
    "statements": [
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (1, 'SHA-256', '2022-01-01') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (2, 'SHA-512', '2022-01-02') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (3, 'SHA-256', '2022-01-03') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (4, 'SHA-512', '2022-01-04') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (5, 'SHA-256', '2022-01-05') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (6, 'SHA-512', '2022-01-06') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (7, 'SHA-256', '2022-01-07') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (8, 'SHA-512', '2022-01-08') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (9, 'SHA-256', '2022-01-09') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (10, 'SHA-512', '2022-01-10') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (11, 'SHA-256', '2022-01-11') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (12, 'SHA-512', '2022-01-12') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (13, 'SHA-256', '2022-01-13') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (14, 'SHA-512', '2022-01-14') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (15, 'SHA-256', '2022-01-15') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (16, 'SHA-512', '2022-01-16') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (17, 'SHA-256', '2022-01-17') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (18, 'SHA-512', '2022-01-18') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (19, 'SHA-256', '2022-01-19') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256'",
      "INSERT INTO blockchain_history (id, algorithm, change_date) VALUES (20, 'SHA-512', '2022-01-20') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512'",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (1, 'SHA-256', '2022-05-10') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-256', change_date = '2022-05-10';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (2, 'SHA-384', '2022-06-15') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-384', change_date = '2022-06-15';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (3, 'SHA-512', '2022-07-20') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-512', change_date = '2022-07-20';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (4, 'MD5', '2022-08-25') ON CONFLICT (id) DO UPDATE SET algorithm = 'MD5', change_date = '2022-08-25';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (5, 'SHA-3', '2022-09-30') ON CONFLICT (id) DO UPDATE SET algorithm = 'SHA-3', change_date = '2022-09-30';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (6, 'Argon2', '2022-10-25') ON CONFLICT (id) DO UPDATE SET algorithm = 'Argon2', change_date = '2022-10-25';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (7, 'Bcrypt', '2022-11-30') ON CONFLICT (id) DO UPDATE SET algorithm = 'Bcrypt', change_date = '2022-11-30';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (8, 'PBKDF2', '2022-12-15') ON CONFLICT (id) DO UPDATE SET algorithm = 'PBKDF2', change_date = '2022-12-15';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (9, 'HMAC', '2023-01-20') ON CONFLICT (id) DO UPDATE SET algorithm = 'HMAC', change_date = '2023-01-20';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (10, 'Scrypt', '2023-02-25') ON CONFLICT (id) DO UPDATE SET algorithm = 'Scrypt', change_date = '2023-02-25';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (11, 'Whirlpool', '2023-03-30') ON CONFLICT (id) DO UPDATE SET algorithm = 'Whirlpool', change_date = '2023-03-30';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (12, 'Skein', '2023-04-25') ON CONFLICT (id) DO UPDATE SET algorithm = 'Skein', change_date = '2023-04-25';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (13, 'RIPEMD', '2023-05-30') ON CONFLICT (id) DO UPDATE SET algorithm = 'RIPEMD', change_date = '2023-05-30';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (14, 'Tiger', '2023-06-25') ON CONFLICT (id) DO UPDATE SET algorithm = 'Tiger', change_date = '2023-06-25';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (15, 'GOST', '2023-07-30') ON CONFLICT (id) DO UPDATE SET algorithm = 'GOST', change_date = '2023-07-30';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (16, 'CRC32', '2023-08-25') ON CONFLICT (id) DO UPDATE SET algorithm = 'CRC32', change_date = '2023-08-25';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (17, 'Blake2', '2023-09-30') ON CONFLICT (id) DO UPDATE SET algorithm = 'Blake2', change_date = '2023-09-30';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (18, 'MD4', '2023-10-25') ON CONFLICT (id) DO UPDATE SET algorithm = 'MD4', change_date = '2023-10-25';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (19, 'CRC16', '2023-11-30') ON CONFLICT (id) DO UPDATE SET algorithm = 'CRC16', change_date = '2023-11-30';",
      "UPSERT INTO blockchain_history (id, algorithm, change_date) VALUES (20, 'Haval', '2023-12-15') ON CONFLICT (id) DO UPDATE SET algorithm = 'Haval', change_date = '2023-12-15';"
    ]
  },
  {
    "statements": [
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (1, 'ProofOfWork', '1.0', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (2, 'ProofOfStake', '1.5', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (3, 'DelegatedProofOfStake', '2.0', '2.5') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (4, 'ProofOfAuthority', '1.0', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (5, 'ProofOfHistory', '1.0', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (6, 'ProofOfBurn', '1.0', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (7, 'ProofOfCapacity', '1.0', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (8, 'DelegatedProofOfCapacity', '1.0', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (9, 'ProofOfWeight', '1.0', '2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, from_version = EXCLUDED.from_version, to_version = EXCLUDED.to_version;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (1, now(), 'Logged in to the system') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (2, now(), 'Updated user profile') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (3, now(), 'Deleted record from database') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (4, now(), 'Viewed dashboard analytics') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (5, now(), 'Generated report for client') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (1, 1, 'Transaction data 1') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (2, 2, 'Transaction data 2') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (3, 3, 'Transaction data 3') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (4, 4, 'Transaction data 4') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (5, 5, 'Transaction data 5') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (1, 'PoW', 'v1.0', 'v1.1') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (2, 'PoS', 'v1.0', 'v1.1') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (3, 'DPoS', 'v1.0', 'v1.1') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (4, 'PoA', 'v1.0', 'v1.1') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (1, '2019-01-01 12:00:00', 'Audit trail created') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (2, '2019-01-02 13:00:00', 'Audit trail updated') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (3, '2019-01-03 14:00:00', 'Audit trail deleted') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (1, 1, 'Transaction data for block 1') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (2, 2, 'Transaction data for block 2') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (3, 3, 'Transaction data for block 3') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (5, 'PoW', 'v1.1', 'v1.2') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (6, 'PoW', 'v1.2', 'v1.3') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (7, 'PoS', 'v1.1', 'v2.0') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (8, 'PoA', 'v1.1', 'v1.2') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (4, '2019-01-04 15:00:00', 'Audit trail published') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (5, '2019-01-05 16:00:00', 'Audit trail archived') ON CONFLICT (event_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (4, 4, 'Transaction data for block 4') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (5, 5, 'Transaction data for block 5') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (6, 6, 'Transaction data for block 6') ON CONFLICT (transaction_id) DO NOTHING;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (9, 'DPoS', 'v1.1', 'v1.2') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;",
      "UPSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (10, 'PoW', 'v1.3', 'v1.4') ON CONFLICT (block_id) DO UPDATE SET algorithm_name = excluded.algorithm_name, from_version = excluded.from_version, to_version = excluded.to_version;"
    ]
  },
  {
    "statements": [
      "UPSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (1, 'Proof of Stake', '2021-10-01', 'Updated PoS algorithm');",
      "UPSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (2, 'Proof of Work', '2021-09-15', 'Updated PoW algorithm');",
      "UPSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('550e8400-e29b-41d4-a716-446655440000', 'Node A', '192.168.1.1', 'Validator');",
      "UPSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('551e8500-e29b-41d4-a716-446655440111', 'Node B', '192.168.1.2', 'Observer');",
      "UPSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (1, '550e8400-e29b-41d4-a716-446655440000', '2021-10-01', NULL);",
      "UPSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (2, '551e8500-e29b-41d4-a716-446655440111', '2021-09-15', '2021-10-01');",
      "UPSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Update', 'Updated node configuration', '2021-10-01 13:00:00');",
      "UPSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Insert', 'Added new node', '2021-09-15 09:30:00');",
      "INSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (1, 'Proof of Stake', '2022-01-01', 'Switching to PoS consensus algorithm') ON CONFLICT (id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, change_date = EXCLUDED.change_date, change_description = EXCLUDED.change_description;",
      "INSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('550e8400-e29b-41d4-a716-446655440000', 'Node A', '192.168.1.1', 'Validator') ON CONFLICT (node_id) DO UPDATE SET node_name = EXCLUDED.node_name, ip_address = EXCLUDED.ip_address, node_type = EXCLUDED.node_type;",
      "INSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (1, '550e8400-e29b-41d4-a716-446655440000', '2022-01-01', NULL) ON CONFLICT (algorithm_id, node_id) DO UPDATE SET activation_date = EXCLUDED.activation_date, deactivation_date = EXCLUDED.deactivation_date;",
      "INSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Node Added', 'Node A added to blockchain network', '2022-01-01 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (2, 'Proof of Authority', '2022-02-01', 'Transitioning to PoA algorithm') ON CONFLICT (id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, change_date = EXCLUDED.change_date, change_description = EXCLUDED.change_description;",
      "INSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('088e8400-e29b-41d4-a716-446655440001', 'Node B', '192.168.1.2', 'Bootnode') ON CONFLICT (node_id) DO UPDATE SET node_name = EXCLUDED.node_name, ip_address = EXCLUDED.ip_address, node_type = EXCLUDED.node_type;",
      "INSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (2, '088e8400-e29b-41d4-a716-446655440001', '2022-02-01', NULL) ON CONFLICT (algorithm_id, node_id) DO UPDATE SET activation_date = EXCLUDED.activation_date, deactivation_date = EXCLUDED.deactivation_date;",
      "INSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Node Added', 'Node B added to blockchain network', '2022-02-01 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (3, 'Delegated Proof of Stake', '2022-03-01', 'Implementing DPoS mechanism') ON CONFLICT (id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, change_date = EXCLUDED.change_date, change_description = EXCLUDED.change_description;",
      "INSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('123e8400-e29b-41d4-a716-446655440002', 'Node C', '192.168.1.3', 'Full Node') ON CONFLICT (node_id) DO UPDATE SET node_name = EXCLUDED.node_name, ip_address = EXCLUDED.ip_address, node_type = EXCLUDED.node_type;",
      "INSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (3, '123e8400-e29b-41d4-a716-446655440002', '2022-03-01', NULL) ON CONFLICT (algorithm_id, node_id) DO UPDATE SET activation_date = EXCLUDED.activation_date, deactivation_date = EXCLUDED.deactivation_date;",
      "INSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Node Added', 'Node C added to blockchain network', '2022-03-01 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (4, 'Proof of Burn', '2022-04-01', 'Introducing PoB as consensus mechanism') ON CONFLICT (id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, change_date = EXCLUDED.change_date, change_description = EXCLUDED.change_description;",
      "INSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('456e8400-e29b-41d4-a716-446655440003', 'Node D', '192.168.1.4', 'Mining Node') ON CONFLICT (node_id) DO UPDATE SET node_name = EXCLUDED.node_name, ip_address = EXCLUDED.ip_address, node_type = EXCLUDED.node_type;",
      "INSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (4, '456e8400-e29b-41d4-a716-446655440003', '2022-04-01', NULL) ON CONFLICT (algorithm_id, node_id) DO UPDATE SET activation_date = EXCLUDED.activation_date, deactivation_date = EXCLUDED.deactivation_date;",
      "INSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Node Added', 'Node D added to blockchain network', '2022-04-01 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
      "INSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (5, 'Proof of Elapsed Time', '2022-05-01', 'Adoption of PoET for validation process') ON CONFLICT (id) DO UPDATE SET algorithm_name = EXCLUDED.algorithm_name, change_date = EXCLUDED.change_date, change_description = EXCLUDED.change_description;",
      "INSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('789e8400-e29b-41d4-a716-446655440004', 'Node E', '192.168.1.5', 'Client Node') ON CONFLICT (node_id) DO UPDATE SET node_name = EXCLUDED.node_name, ip_address = EXCLUDED.ip_address, node_type = EXCLUDED.node_type;",
      "INSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (5, '789e8400-e29b-41d4-a716-446655440004', '2022-05-01', NULL) ON CONFLICT (algorithm_id, node_id) DO UPDATE SET activation_date = EXCLUDED.activation_date, deactivation_date = EXCLUDED.deactivation_date;",
      "INSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Node Added', 'Node E added to blockchain network', '2022-05-01 12:00:00') ON CONFLICT (log_id) DO NOTHING;"
    ]
  },
  {
    "statements": [
      "INSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (1, 'Proof of Work', '2022-01-01', 'Initial algorithm');",
      "INSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (1, 'hash1', 1, '2022-01-01 12:00:00');",
      "INSERT INTO validator (validator_id, validator_name, public_key) VALUES (1, 'Validator1', 'publickey1');",
      "INSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (1, 1, '2022-01-01', 'Initial validator');",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (1, 1);",
      "INSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (2, 'Proof of Stake', '2022-01-05', 'Updated algorithm');",
      "INSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (2, 'hash2', 1, '2022-01-05 12:00:00');",
      "INSERT INTO validator (validator_id, validator_name, public_key) VALUES (2, 'Validator2', 'publickey2');",
      "INSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (2, 2, '2022-01-05', 'Updated validator');",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (2, 2);",
      "UPDATE consensus_algorithm_history SET algorithm_name = 'Proof of Stake', change_date = '2022-01-10', change_description = 'Latest algorithm' WHERE id = 1;",
      "UPDATE consensus_block SET block_hash = 'hash1_updated', timestamp = '2022-01-10 12:00:00' WHERE block_id = 1;",
      "UPDATE validator SET validator_name = 'Validator1_updated', public_key = 'publickey1_updated' WHERE validator_id = 1;",
      "UPDATE validator_history SET change_date = '2022-01-10', change_description = 'Latest validator' WHERE history_id = 1;",
      "UPDATE block_validator SET validator_id = 2 WHERE block_id = 1;",
      "INSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (1, 'PoW', '2022-01-01', 'Initial algorithm');",
      "INSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (2, 'PoS', '2022-01-02', 'Switch to PoS');",
      "INSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (3, 'DPoS', '2022-01-03', 'Introduction of Delegated PoS');",
      "INSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (4, 'LPoS', '2022-01-04', 'New algorithm for low-power devices');",
      "INSERT INTO validator (validator_id, validator_name, public_key) VALUES (1, 'Validator1', 'public_key1');",
      "INSERT INTO validator (validator_id, validator_name, public_key) VALUES (2, 'Validator2', 'public_key2');",
      "INSERT INTO validator (validator_id, validator_name, public_key) VALUES (3, 'Validator3', 'public_key3');",
      "INSERT INTO validator (validator_id, validator_name, public_key) VALUES (4, 'Validator4', 'public_key4');",
      "INSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (1, 1, '2022-01-01', 'Initial registration');",
      "INSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (2, 2, '2022-01-02', 'Validator update');",
      "INSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (3, 3, '2022-01-03', 'Validator removed');",
      "INSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (4, 4, '2022-01-04', 'New validator added');",
      "INSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (1, 'hash1', 1, '2022-01-01 00:00:00');",
      "INSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (2, 'hash2', 2, '2022-01-02 00:00:00');",
      "INSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (3, 'hash3', 3, '2022-01-03 00:00:00');",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (1, 1);",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (1, 2);",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (2, 2);",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (2, 3);",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (3, 3);",
      "INSERT INTO block_validator (block_id, validator_id) VALUES (3, 4);"
    ]
  }
]