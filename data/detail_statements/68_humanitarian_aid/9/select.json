[
  {
    "statements": [
      "SELECT * FROM surveys;",
      "SELECT survey_id, beneficiary_id, survey_date FROM surveys;",
      "SELECT DISTINCT beneficiary_id FROM surveys;",
      "SELECT survey_id, satisfaction_score FROM surveys WHERE satisfaction_score > 3;",
      "SELECT * FROM surveys WHERE satisfaction_score = 5;",
      "SELECT feedback FROM surveys WHERE survey_date > '2021-01-01';",
      "SELECT COUNT(*) FROM surveys;",
      "SELECT AVG(satisfaction_score) FROM surveys;",
      "SELECT MAX(satisfaction_score) FROM surveys;",
      "SELECT MIN(satisfaction_score) FROM surveys;",
      "SELECT beneficiary_id, AVG(satisfaction_score) AS avg_score FROM surveys GROUP BY beneficiary_id;",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys ORDER BY survey_date DESC;",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys ORDER BY satisfaction_score DESC LIMIT 5;",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE beneficiary_id = 'abc123';",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE satisfaction_score BETWEEN 3 AND 5;",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE feedback IS NOT NULL;",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE feedback LIKE '%great%';",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score, feedback FROM surveys WHERE survey_id = '12345678-1234-1234-1234-1234567890ab';",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score, feedback FROM surveys WHERE survey_date = '2021-05-10';",
      "SELECT survey_id, beneficiary_id, survey_date, satisfaction_score, feedback FROM surveys WHERE survey_id IN ('12345678-1234-1234-1234-1234567890ab', '87654321-4321-4321-4321-0987654321ba');",
      "SELECT * FROM surveys WHERE beneficiary_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY survey_date DESC LIMIT 5",
      "SELECT survey_id, satisfaction_score FROM surveys WHERE satisfaction_score > 8 AND survey_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT beneficiary_id, COUNT(*) as total_surveys FROM surveys GROUP BY beneficiary_id HAVING total_surveys > 5",
      "SELECT AVG(satisfaction_score) as avg_score, EXTRACT(MONTH FROM survey_date) as survey_month FROM surveys GROUP BY survey_month ORDER BY survey_month",
      "SELECT * FROM surveys WHERE satisfaction_score < 5 AND feedback IS NOT NULL",
      "SELECT survey_id, beneficiary_id, satisfaction_score FROM surveys WHERE satisfaction_score = (SELECT MAX(satisfaction_score) FROM surveys)",
      "SELECT DISTINCT beneficiary_id FROM surveys WHERE survey_date < '2022-06-01'",
      "SELECT COUNT(DISTINCT beneficiary_id) as unique_beneficiaries FROM surveys",
      "SELECT survey_id, survey_date, satisfaction_score FROM surveys WHERE survey_date = (SELECT MAX(survey_date) FROM surveys)",
      "SELECT survey_id, survey_date, satisfaction_score FROM surveys WHERE beneficiary_id IN ('123e4567-e89b-12d3-a456-426614174001', '123e4567-e89b-12d3-a456-426614174002') ORDER BY satisfaction_score DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM SurveyResponses;",
      "SELECT response_id, beneficiary_id, survey_date, survey_score FROM SurveyResponses;",
      "SELECT * FROM BeneficiaryInformation;",
      "SELECT beneficiary_id, beneficiary_name, contact_number, address FROM BeneficiaryInformation;",
      "SELECT response_id, beneficiary_id, survey_date FROM SurveyResponses;",
      "SELECT beneficiary_id, beneficiary_name FROM BeneficiaryInformation;",
      "SELECT response_id, survey_score FROM SurveyResponses;",
      "SELECT contact_number, address FROM BeneficiaryInformation;",
      "SELECT response_id, survey_score FROM SurveyResponses WHERE survey_score > 80;",
      "SELECT * FROM BeneficiaryInformation WHERE beneficiary_name LIKE '%John%';",
      "SELECT beneficiary_id, address FROM BeneficiaryInformation WHERE contact_number LIKE '%123%';",
      "SELECT response_id, survey_date FROM SurveyResponses WHERE survey_date BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT * FROM BeneficiaryInformation WHERE address = '123 Main Street';",
      "SELECT response_id, survey_score FROM SurveyResponses ORDER BY survey_score DESC;",
      "SELECT beneficiary_id, beneficiary_name FROM BeneficiaryInformation ORDER BY beneficiary_name ASC;",
      "SELECT AVG(survey_score) AS average_score FROM SurveyResponses;",
      "SELECT beneficiary_id, COUNT(*) AS response_count FROM SurveyResponses GROUP BY beneficiary_id;",
      "SELECT beneficiary_name, MAX(survey_score) AS max_score FROM SurveyResponses GROUP BY beneficiary_name;",
      "SELECT b.beneficiary_id, b.beneficiary_name, s.survey_score FROM BeneficiaryInformation b JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id;",
      "SELECT b.beneficiary_name, COUNT(*) AS response_count FROM BeneficiaryInformation b JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT * FROM SurveyResponses;",
      "SELECT response_id, beneficiary_id, survey_date FROM SurveyResponses WHERE survey_score > 80;",
      "SELECT s.beneficiary_id, b.beneficiary_name, s.survey_score FROM SurveyResponses s INNER JOIN BeneficiaryInformation b ON s.beneficiary_id = b.beneficiary_id;",
      "SELECT b.beneficiary_name, b.contact_number, s.survey_score FROM BeneficiaryInformation b INNER JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id WHERE s.survey_score < 50;",
      "SELECT s.response_id, s.survey_date FROM SurveyResponses s INNER JOIN BeneficiaryInformation b ON s.beneficiary_id = b.beneficiary_id WHERE b.beneficiary_name LIKE 'A%';",
      "SELECT SUM(survey_score) AS total_score FROM SurveyResponses;",
      "SELECT AVG(survey_score) AS average_score FROM SurveyResponses;",
      "SELECT COUNT(*) AS response_count FROM SurveyResponses;",
      "SELECT MAX(survey_score) AS max_score FROM SurveyResponses;",
      "SELECT MIN(survey_score) AS min_score FROM SurveyResponses;",
      "SELECT b.beneficiary_name, COUNT(s.response_id) AS response_count FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, MAX(s.survey_score) AS max_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, AVG(s.survey_score) AS average_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, MIN(s.survey_score) AS min_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, COUNT(s.response_id) AS response_count, MAX(s.survey_score) AS max_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, COUNT(s.response_id) AS response_count, AVG(s.survey_score) AS average_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, COUNT(s.response_id) AS response_count, MIN(s.survey_score) AS min_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, MAX(s.survey_date) AS latest_survey_date FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, MIN(s.survey_date) AS earliest_survey_date FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
      "SELECT b.beneficiary_name, COUNT(DISTINCT s.survey_date) AS unique_survey_dates FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Beneficiaries;",
      "SELECT name, email FROM Beneficiaries;",
      "SELECT name, age FROM Beneficiaries WHERE age > 30;",
      "SELECT * FROM Surveys;",
      "SELECT survey_name, survey_date FROM Surveys;",
      "SELECT * FROM Feedback;",
      "SELECT feedback_text, feedback_date FROM Feedback;",
      "SELECT b.name, s.survey_name FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
      "SELECT b.name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id;",
      "SELECT b.name, f.feedback_text FROM Beneficiaries b LEFT JOIN Feedback f ON b.beneficiary_id = f.survey_id;",
      "SELECT b.name, COUNT(*) as total_surveys FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.name;",
      "SELECT gender, AVG(age) as average_age FROM Beneficiaries GROUP BY gender;",
      "SELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id LEFT JOIN Feedback f ON s.survey_id = f.survey_id;",
      "SELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id WHERE f.feedback_text IS NOT NULL;",
      "SELECT * FROM Beneficiaries WHERE age BETWEEN 25 AND 40;",
      "SELECT name, email FROM Beneficiaries WHERE email LIKE '%gmail.com';",
      "SELECT * FROM Surveys WHERE survey_date >= '2022-01-01' AND survey_date <= '2022-12-31';",
      "SELECT b.name, COUNT(s.*) as total_surveys FROM Beneficiaries b LEFT JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.name;",
      "SELECT b.name, s.survey_name, COUNT(f.*) as total_feedback FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id LEFT JOIN Feedback f ON s.survey_id = f.survey_id GROUP BY b.name, s.survey_name;",
      "SELECT gender, MAX(age) as max_age FROM Beneficiaries GROUP BY gender;",
      "SELECT * FROM Beneficiaries WHERE age > 30;",
      "SELECT name, email FROM Beneficiaries WHERE gender = 'Male';",
      "SELECT name, age FROM Beneficiaries WHERE age BETWEEN 20 AND 40;",
      "SELECT b.name, s.survey_name FROM Beneficiaries b INNER JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
      "SELECT b.name, f.feedback_text FROM Beneficiaries b INNER JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id INNER JOIN Feedback f ON s.survey_id = f.survey_id;",
      "SELECT COUNT(*) FROM Beneficiaries;",
      "SELECT MAX(age) FROM Beneficiaries;",
      "SELECT AVG(age) FROM Beneficiaries WHERE gender = 'Female';",
      "SELECT DISTINCT gender FROM Beneficiaries;",
      "SELECT b.name, s.survey_date FROM Beneficiaries b LEFT JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
      "SELECT MAX(age), MIN(age) FROM Beneficiaries;",
      "SELECT b.name, COUNT(f.feedback_id) AS total_feedback FROM Beneficiaries b LEFT JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id LEFT JOIN Feedback f ON s.survey_id = f.survey_id GROUP BY b.name;",
      "SELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id WHERE b.age < 30;",
      "SELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id WHERE s.survey_date > '2022-01-01';",
      "SELECT b.name, s.survey_name, SUM(b.age) AS total_age FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.name, s.survey_name;",
      "SELECT b.name, COUNT(DISTINCT f.survey_id) AS total_surveys FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id GROUP BY b.name;",
      "SELECT AVG(age) AS avg_age, COUNT(*) AS total_beneficiaries FROM Beneficiaries;",
      "SELECT name, CASE WHEN age > 30 THEN 'Old' ELSE 'Young' END AS age_group FROM Beneficiaries;",
      "SELECT name, email, ROW_NUMBER() OVER (ORDER BY age DESC) AS age_rank FROM Beneficiaries;",
      "SELECT b.name, s.survey_name, ROW_NUMBER() OVER (PARTITION BY s.survey_name ORDER BY b.name) AS survey_rank FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
      "SELECT b.name, s.survey_name, LEAD(s.survey_date) OVER (PARTITION BY b.name ORDER BY s.survey_date) AS next_survey_date FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM SurveyResponses;",
      "SELECT survey_id, beneficiary_id, question, response FROM SurveyResponses WHERE survey_id = 1;",
      "SELECT survey_id, beneficiary_id, response FROM SurveyResponses WHERE response LIKE '%positive%';",
      "SELECT * FROM Beneficiaries;",
      "SELECT name, age, gender, location FROM Beneficiaries WHERE age > 30;",
      "SELECT * FROM Surveys;",
      "SELECT survey_name, survey_date FROM Surveys WHERE completed = true;",
      "SELECT * FROM AidPrograms;",
      "SELECT program_id, program_name, start_date, end_date FROM AidPrograms WHERE start_date < '2022-01-01';",
      "SELECT SUM(age) AS total_age FROM Beneficiaries;",
      "SELECT COUNT(*) AS total_surveys FROM Surveys;",
      "SELECT AVG(age) AS average_age FROM Beneficiaries;",
      "SELECT DISTINCT gender FROM Beneficiaries;",
      "SELECT program_name, COUNT(*) AS total_beneficiaries FROM Beneficiaries GROUP BY program_name;",
      "SELECT survey_name, COUNT(*) AS total_responses FROM SurveyResponses GROUP BY survey_name;",
      "SELECT program_name, SUM(age) AS total_age FROM Beneficiaries INNER JOIN AidPrograms ON Beneficiaries.beneficiary_id = AidPrograms.program_id GROUP BY program_name;",
      "SELECT * FROM Beneficiaries WHERE location LIKE '%city%';",
      "SELECT DISTINCT name, location FROM Beneficiaries WHERE age < 25;",
      "SELECT program_name, AVG(age) AS average_age FROM Beneficiaries INNER JOIN AidPrograms ON Beneficiaries.beneficiary_id = AidPrograms.program_id GROUP BY program_name;",
      "SELECT survey_name, AVG(LENGTH(response)) AS avg_response_length FROM SurveyResponses GROUP BY survey_name;",
      "SELECT * FROM SurveyResponses WHERE beneficiary_id = 1;",
      "SELECT survey_id, question FROM SurveyResponses WHERE beneficiary_id = 2;",
      "SELECT * FROM Beneficiaries WHERE age > 30;",
      "SELECT name, age, gender FROM Beneficiaries WHERE gender = 'Male';",
      "SELECT * FROM Surveys WHERE completed = true;",
      "SELECT program_id, program_name FROM AidPrograms WHERE start_date >= '2022-01-01';",
      "SELECT name, age, location FROM Beneficiaries WHERE location LIKE '%city%';",
      "SELECT survey_name, survey_date FROM Surveys WHERE survey_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM SurveyResponses WHERE question LIKE '%satisfaction%';",
      "SELECT * FROM Beneficiaries WHERE age BETWEEN 20 AND 40;",
      "SELECT program_id, program_name, end_date FROM AidPrograms WHERE end_date <= '2022-12-31';",
      "SELECT COUNT(*) FROM SurveyResponses WHERE survey_id = 1;",
      "SELECT name, age, gender, location FROM Beneficiaries WHERE name LIKE 'A%';",
      "SELECT program_name, start_date, end_date FROM AidPrograms WHERE program_id = 3;",
      "SELECT survey_name, survey_date FROM Surveys WHERE survey_date > '2022-06-01';",
      "SELECT * FROM Beneficiaries WHERE gender IS NULL;",
      "SELECT DISTINCT survey_id FROM SurveyResponses;",
      "SELECT program_id, program_name FROM AidPrograms WHERE end_date IS NULL;",
      "SELECT MAX(age) FROM Beneficiaries;",
      "SELECT * FROM Surveys WHERE survey_name NOT LIKE '%feedback%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM beneficiaries;",
      "SELECT name, age, gender FROM beneficiaries WHERE age > 30;",
      "SELECT DISTINCT email FROM beneficiaries;",
      "SELECT * FROM surveys;",
      "SELECT question, created_at FROM surveys WHERE closed = FALSE;",
      "SELECT * FROM responses;",
      "SELECT answer, submitted_at FROM responses WHERE survey_id = 1;",
      "SELECT * FROM aid_programs;",
      "SELECT program_name, description FROM aid_programs WHERE start_date > '2022-01-01';",
      "SELECT * FROM feedback;",
      "SELECT feedback_text, rating FROM feedback WHERE rating = 5;",
      "SELECT b.name, r.answer, r.submitted_at FROM beneficiaries b INNER JOIN responses r ON b.id = r.beneficiary_id;",
      "SELECT s.question, r.answer, r.submitted_at FROM surveys s INNER JOIN responses r ON s.survey_id = r.survey_id;",
      "SELECT p.program_name, p.start_date, f.feedback_text FROM aid_programs p LEFT JOIN feedback f ON p.program_id = f.response_id;",
      "SELECT b.name AS beneficiary_name, s.question AS survey_question, r.answer AS response_answer FROM beneficiaries b, surveys s, responses r WHERE b.id = r.beneficiary_id AND s.survey_id = r.survey_id;",
      "SELECT * FROM beneficiaries ORDER BY age DESC;",
      "SELECT name, age FROM beneficiaries WHERE age BETWEEN 20 AND 30;",
      "SELECT program_name, end_date FROM aid_programs WHERE end_date < '2022-12-31';",
      "SELECT count(*) AS total_responses FROM responses;",
      "SELECT AVG(rating) AS average_rating FROM feedback;",
      "SELECT * FROM beneficiaries WHERE age > 50;",
      "SELECT name, email FROM beneficiaries WHERE gender='Female';",
      "SELECT b.name, r.answer FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id;",
      "SELECT p.program_name, p.start_date, p.end_date, COUNT(r.response_id) AS total_responses FROM aid_programs p LEFT JOIN responses r ON p.program_id = r.survey_id GROUP BY p.program_name, p.start_date, p.end_date;",
      "SELECT s.question, COUNT(r.response_id) AS total_responses FROM surveys s LEFT JOIN responses r ON s.survey_id = r.survey_id GROUP BY s.question;",
      "SELECT b.name, a.program_name FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id JOIN aid_programs a ON r.survey_id = a.program_id;",
      "SELECT DISTINCT b.name, f.feedback_text FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id JOIN feedback f ON r.response_id = f.response_id;",
      "SELECT b.name, COUNT(f.feedback_id) AS total_feedbacks FROM beneficiaries b LEFT JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id GROUP BY b.name;",
      "SELECT * FROM beneficiaries WHERE email LIKE '%gmail.com';",
      "SELECT AVG(age) AS average_age FROM beneficiaries;",
      "SELECT count(*) as total_beneficiaries FROM beneficiaries;",
      "SELECT MAX(start_date) AS latest_start_date FROM aid_programs;",
      "SELECT MIN(created_at) AS earliest_response FROM responses;",
      "SELECT b.name, COALESCE(f.rating, 0) AS feedback_rating FROM beneficiaries b LEFT JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id;",
      "SELECT AVG(COALESCE(f.rating, 0)) AS average_rating FROM beneficiaries b LEFT JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id;",
      "SELECT b.name, COUNT(DISTINCT r.survey_id) AS total_surveys_answered FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id;",
      "SELECT b.name, SUBSTRING(email, 1, POSITION('@' IN email) - 1) AS username FROM beneficiaries b;",
      "SELECT b.name, COUNT(*) AS total_responses FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id GROUP BY b.name;",
      "SELECT a.program_name, SUM(CASE WHEN r.answer LIKE '%Yes%' THEN 1 ELSE 0 END) AS yes_count, SUM(CASE WHEN r.answer LIKE '%No%' THEN 1 ELSE 0 END) AS no_count FROM aid_programs a JOIN responses r ON a.program_id = r.survey_id GROUP BY a.program_name;",
      "SELECT b.name, COUNT(*) AS total_responses, AVG(f.rating) AS average_rating FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id GROUP BY b.name;",
      "SELECT b.name, COUNT(*) AS total_responses, AVG(f.rating) AS average_rating FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.feedback_id GROUP BY b.name;"
    ]
  }
]