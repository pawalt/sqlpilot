[
  {
    "statements": [
      "SELECT * FROM humanitarian_supplies;",
      "SELECT item_name, quantity, location FROM humanitarian_supplies;",
      "SELECT item_name, location, supplier_name FROM humanitarian_supplies WHERE quantity > 10;",
      "SELECT * FROM humanitarian_supplies WHERE supplier_name = 'ABC Suppliers';",
      "SELECT id, item_name FROM humanitarian_supplies WHERE quantity < 5;",
      "SELECT * FROM humanitarian_supplies WHERE delivery_date > '2021-01-01';",
      "SELECT supplier_name, COUNT(*) FROM humanitarian_supplies GROUP BY supplier_name;",
      "SELECT location, SUM(quantity) FROM humanitarian_supplies GROUP BY location;",
      "SELECT DISTINCT location FROM humanitarian_supplies;",
      "SELECT * FROM humanitarian_supplies ORDER BY delivery_date DESC;",
      "SELECT * FROM humanitarian_supplies WHERE location = 'Warehouse A' ORDER BY quantity DESC;",
      "SELECT AVG(quantity) FROM humanitarian_supplies;",
      "SELECT item_name, quantity * 2 AS total_quantity FROM humanitarian_supplies;",
      "SELECT item_name, delivery_date FROM humanitarian_supplies WHERE MONTH(delivery_date) = 6;",
      "SELECT * FROM humanitarian_supplies WHERE location LIKE '%Warehouse%';",
      "SELECT MAX(quantity) FROM humanitarian_supplies;",
      "SELECT MIN(quantity) FROM humanitarian_supplies;",
      "SELECT COUNT(*) FROM humanitarian_supplies WHERE item_name LIKE 'Medical%';",
      "SELECT * FROM humanitarian_supplies WHERE item_name IN ('Rice', 'Beans');",
      "SELECT * FROM humanitarian_supplies WHERE quantity BETWEEN 10 AND 50;",
      "SELECT * FROM humanitarian_supplies WHERE quantity > 50 AND location = 'Warehouse A';",
      "SELECT item_name, supplier_name FROM humanitarian_supplies WHERE delivery_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT COUNT(*) FROM humanitarian_supplies WHERE supplier_name = 'ABC Supplies';",
      "SELECT DISTINCT location FROM humanitarian_supplies;",
      "SELECT supplier_name, SUM(quantity) as total_quantity FROM humanitarian_supplies GROUP BY supplier_name;",
      "SELECT * FROM humanitarian_supplies WHERE item_name LIKE 'Food%';",
      "SELECT * FROM humanitarian_supplies WHERE location IN ('Warehouse A', 'Warehouse B');",
      "SELECT * FROM humanitarian_supplies WHERE quantity < 20 OR quantity > 100;",
      "SELECT AVG(quantity) as average_quantity FROM humanitarian_supplies;",
      "SELECT * FROM humanitarian_supplies ORDER BY delivery_date DESC;",
      "SELECT * FROM humanitarian_supplies WHERE item_name = 'Medicine' ORDER BY quantity DESC LIMIT 5;",
      "SELECT supplier_name, COUNT(*) as total_items FROM humanitarian_supplies GROUP BY supplier_name HAVING COUNT(*) > 3;",
      "SELECT item_name, location, delivery_date FROM humanitarian_supplies WHERE location = 'Warehouse C' AND quantity > 50;",
      "SELECT MAX(quantity) as max_quantity, MIN(quantity) as min_quantity FROM humanitarian_supplies;",
      "SELECT supplier_name, COUNT(*) as total_deliveries FROM humanitarian_supplies GROUP BY supplier_name HAVING COUNT(DISTINCT delivery_date) > 1;",
      "SELECT * FROM humanitarian_supplies WHERE EXTRACT(MONTH FROM delivery_date) = 8;",
      "SELECT item_name, quantity, supplier_name FROM humanitarian_supplies WHERE quantity BETWEEN 30 AND 50;",
      "SELECT * FROM humanitarian_supplies WHERE location = 'Warehouse A' LIMIT 10 OFFSET 5;",
      "SELECT supplier_name, AVG(quantity) as average_quantity FROM humanitarian_supplies GROUP BY supplier_name HAVING AVG(quantity) > 40;",
      "SELECT item_name, SUM(quantity) as total_quantity FROM humanitarian_supplies WHERE delivery_date > '2022-09-01' GROUP BY item_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM inventory;",
      "SELECT item_name, quantity FROM inventory WHERE id = 1;",
      "SELECT location FROM inventory WHERE item_name = 'Chair';",
      "SELECT * FROM procurement;",
      "SELECT vendor, quantity FROM procurement WHERE delivery_date = '2022-01-15';",
      "SELECT item_id, vendor FROM procurement WHERE quantity > 100;",
      "SELECT id, vendor FROM procurement WHERE vendor LIKE '%Corp%';",
      "SELECT * FROM inventory ORDER BY quantity DESC;",
      "SELECT * FROM procurement ORDER BY delivery_date;",
      "SELECT item_name, quantity FROM inventory WHERE quantity BETWEEN 50 AND 100;",
      "SELECT * FROM inventory WHERE location IN ('Warehouse', 'Store');",
      "SELECT COUNT(*) FROM inventory;",
      "SELECT AVG(quantity) FROM inventory;",
      "SELECT MAX(quantity) FROM inventory;",
      "SELECT item_id, SUM(quantity) FROM procurement GROUP BY item_id;",
      "SELECT item_name, COUNT(*) FROM inventory GROUP BY item_name;",
      "SELECT item_id, COUNT(quantity) FROM procurement GROUP BY item_id HAVING COUNT(quantity) > 2;",
      "SELECT item_name, quantity FROM inventory WHERE last_updated > '2022-01-01';",
      "SELECT item_name, quantity FROM inventory WHERE last_updated BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT item_id, delivery_date FROM procurement WHERE delivery_date < '2022-01-01';",
      "SELECT item_name, quantity, location FROM inventory WHERE quantity > 100;",
      "SELECT item_name, quantity, location FROM inventory WHERE last_updated > '2022-01-01';",
      "SELECT item_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY item_name;",
      "SELECT item_name, location, delivery_date FROM inventory JOIN procurement ON inventory.id = procurement.item_id;",
      "SELECT item_name, quantity, location, vendor FROM inventory INNER JOIN procurement ON inventory.id = procurement.item_id WHERE procurement.delivery_date > '2022-01-01';",
      "SELECT item_name, quantity, location, vendor FROM inventory LEFT JOIN procurement ON inventory.id = procurement.item_id;",
      "SELECT item_name, quantity, location, vendor FROM inventory RIGHT JOIN procurement ON inventory.id = procurement.item_id WHERE procurement.quantity > 50;",
      "SELECT i.item_name, i.quantity, p.vendor, p.delivery_date FROM inventory i, procurement p WHERE i.id = p.item_id;",
      "SELECT item_name, quantity, vendor, delivery_date FROM inventory INNER JOIN procurement ON inventory.id = procurement.item_id WHERE location = 'Warehouse A';",
      "SELECT item_name, quantity, vendor, delivery_date FROM inventory INNER JOIN procurement ON inventory.id = procurement.item_id WHERE location = 'Warehouse B';",
      "SELECT item_name, location, delivery_date FROM inventory JOIN procurement ON inventory.id = procurement.item_id GROUP BY item_name;",
      "SELECT item_name, location, MAX(delivery_date) as latest_delivery FROM inventory JOIN procurement ON inventory.id = procurement.item_id GROUP BY item_name;",
      "SELECT item_name, quantity, MIN(delivery_date) as earliest_delivery FROM inventory JOIN procurement ON inventory.id = procurement.item_id GROUP BY item_name;",
      "SELECT item_name, SUM(quantity) as total_quantity, COUNT(*) as total_items FROM inventory GROUP BY item_name HAVING total_quantity > 500;",
      "SELECT COUNT(DISTINCT item_name) as unique_items FROM inventory;",
      "SELECT vendor, SUM(quantity) as total_quantity FROM procurement GROUP BY vendor;",
      "SELECT vendor, COUNT(*) as total_orders FROM procurement GROUP BY vendor;",
      "SELECT vendor, COUNT(*) as total_orders, SUM(quantity) as total_quantity FROM procurement GROUP BY vendor HAVING total_quantity > 100;",
      "SELECT location, COUNT(*) as total_items FROM inventory GROUP BY location;",
      "SELECT location, AVG(quantity) as average_quantity FROM inventory GROUP BY location;",
      "SELECT location, COUNT(*) as total_items, AVG(quantity) as average_quantity FROM inventory GROUP BY location;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Supplies;",
      "SELECT id, name FROM Supplies;",
      "SELECT name, quantity FROM Supplies;",
      "SELECT id, quantity, location FROM Supplies;",
      "SELECT * FROM Orders;",
      "SELECT order_id, supplier_name FROM Orders;",
      "SELECT quantity_ordered, order_date FROM Orders;",
      "SELECT order_id, quantity_ordered, order_date FROM Orders;",
      "SELECT * FROM Suppliers;",
      "SELECT supplier_id, supplier_name FROM Suppliers;",
      "SELECT supplier_name, contact_person FROM Suppliers;",
      "SELECT supplier_id, phone_number FROM Suppliers;",
      "SELECT supplier_name, phone_number FROM Suppliers;",
      "SELECT id, supplier_name, quantity FROM Supplies JOIN Orders ON Supplies.id = Orders.quantity_ordered;",
      "SELECT supplier_name, quantity_ordered, order_date FROM Orders JOIN Suppliers ON Orders.supplier_name = Suppliers.supplier_name;",
      "SELECT s.name, o.quantity_ordered FROM Supplies s JOIN Orders o ON s.id = o.quantity_ordered;",
      "SELECT supplier_name, contact_person, phone_number FROM Suppliers WHERE supplier_id = 1;",
      "SELECT * FROM Suppliers WHERE supplier_name = 'Company A';",
      "SELECT * FROM Supplies WHERE quantity > 100;",
      "SELECT * FROM Orders WHERE order_date > '2021-01-01';",
      "SELECT * FROM Supplies WHERE quantity > 100;",
      "SELECT supplier_name, order_date FROM Orders WHERE quantity_ordered > 50 ORDER BY order_date DESC;",
      "SELECT supplier_name, SUM(quantity_ordered) AS total_ordered FROM Orders GROUP BY supplier_name;",
      "SELECT supplier_name, contact_person, phone_number FROM Suppliers WHERE supplier_id IN (SELECT DISTINCT supplier_id FROM Orders);",
      "SELECT * FROM Supplies s JOIN Orders o ON s.id = o.order_id;",
      "SELECT supplier_name, SUM(quantity_ordered) AS total_ordered FROM Orders WHERE DATE(order_date) = CURDATE() GROUP BY supplier_name;",
      "SELECT COUNT(*) AS order_count, supplier_name, SUM(quantity_ordered) AS total_ordered FROM Orders GROUP BY supplier_name HAVING total_ordered > 100;",
      "SELECT s.name AS supply_name, o.quantity_ordered, o.order_date FROM Supplies s JOIN Orders o ON s.id = o.order_id WHERE o.quantity_ordered > 50;",
      "SELECT supplier_name, SUM(quantity_ordered) AS total_ordered FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY supplier_name;",
      "SELECT supplier_name, contact_person, phone_number FROM Suppliers WHERE supplier_name LIKE '%Supplier%';",
      "SELECT supplier_name, MAX(quantity_ordered) AS max_ordered FROM Orders GROUP BY supplier_name;",
      "SELECT supplier_name, COUNT(*) AS order_count FROM Orders WHERE quantity_ordered > 10 GROUP BY supplier_name;",
      "SELECT s.name, o.quantity_ordered, o.order_date FROM Supplies s JOIN Orders o ON s.id = o.order_id WHERE o.order_date BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';",
      "SELECT supplier_name, AVG(quantity_ordered) AS avg_ordered FROM Orders GROUP BY supplier_name;",
      "SELECT supplier_name, phone_number FROM Suppliers WHERE supplier_name = 'ABC Supplier';",
      "SELECT supplier_name, quantity_ordered FROM Orders WHERE supplier_name = 'XYZ Supplier' ORDER BY order_date DESC;",
      "SELECT supplier_name, COUNT(*) AS order_count FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY supplier_name HAVING order_count > 5;",
      "SELECT s.name AS supply_name, s.quantity AS available_quantity, o.quantity_ordered, o.order_date FROM Supplies s LEFT JOIN Orders o ON s.id = o.order_id;",
      "SELECT supplier_name, SUM(quantity_ordered) AS total_ordered FROM Orders WHERE supplier_name IN ('Supplier1', 'Supplier2') GROUP BY supplier_name;",
      "SELECT supplier_name, phone_number FROM Suppliers WHERE supplier_name = 'Supplier3' AND contact_person = 'John Doe';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM inventory;",
      "SELECT id, name FROM products;",
      "SELECT id, name, price FROM products WHERE price > 50;",
      "SELECT * FROM suppliers WHERE name LIKE 'A%';",
      "SELECT id, quantity FROM inventory WHERE quantity < 10;",
      "SELECT name, description FROM products WHERE id = 1;",
      "SELECT name, address FROM suppliers WHERE id = 2;",
      "SELECT id, product_id, supplier_id FROM transactions;",
      "SELECT id, product_id, supplier_id, quantity FROM transactions WHERE quantity >= 100;",
      "SELECT * FROM inventory WHERE location = 'Warehouse';",
      "SELECT id, name, price FROM products WHERE price BETWEEN 20 AND 50;",
      "SELECT * FROM suppliers WHERE email LIKE '%@example.com';",
      "SELECT id, name FROM products ORDER BY name ASC;",
      "SELECT * FROM suppliers WHERE address LIKE '%Street%';",
      "SELECT MAX(price) AS max_price FROM products;",
      "SELECT MIN(quantity) AS min_quantity FROM inventory;",
      "SELECT COUNT(*) AS total_suppliers FROM suppliers;",
      "SELECT AVG(price) AS avg_price FROM products;",
      "SELECT id, transaction_date FROM transactions ORDER BY transaction_date DESC;",
      "SELECT name, quantity FROM inventory WHERE quantity = (SELECT MAX(quantity) FROM inventory);",
      "SELECT * FROM inventory WHERE quantity > 10;",
      "SELECT name, quantity FROM inventory WHERE location='Warehouse';",
      "SELECT * FROM products WHERE price < 50.00;",
      "SELECT name, description FROM products WHERE id IN (1, 3, 5);",
      "SELECT * FROM suppliers WHERE address LIKE '%Street%';",
      "SELECT name, email FROM suppliers WHERE name LIKE 'A%';",
      "SELECT p.name AS product_name, s.name AS supplier_name FROM products p JOIN suppliers s ON p.id = s.id;",
      "SELECT t.transaction_date, p.name AS product_name, s.name AS supplier_name FROM transactions t JOIN products p ON t.product_id = p.id JOIN suppliers s ON t.supplier_id = s.id;",
      "SELECT * FROM inventory WHERE quantity BETWEEN 10 AND 20;",
      "SELECT name, price FROM products WHERE price BETWEEN 25.00 AND 75.00;",
      "SELECT t.transaction_date, p.name AS product_name, s.name AS supplier_name FROM transactions t LEFT JOIN products p ON t.product_id = p.id LEFT JOIN suppliers s ON t.supplier_id = s.id;",
      "SELECT * FROM products ORDER BY price DESC;",
      "SELECT name, quantity FROM inventory ORDER BY quantity ASC;",
      "SELECT AVG(price) AS avg_price FROM products;",
      "SELECT COUNT(*) AS total_products FROM products;",
      "SELECT SUM(quantity) AS total_quantity FROM inventory;",
      "SELECT MAX(price) AS max_price FROM products;",
      "SELECT MIN(quantity) AS min_quantity FROM inventory;",
      "SELECT DISTINCT location FROM inventory;",
      "SELECT DISTINCT name FROM products;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM supplies",
      "SELECT item_name, quantity FROM supplies",
      "SELECT supplier_id, location FROM supplies",
      "SELECT * FROM supplier",
      "SELECT supplier_name, contact_number FROM supplier",
      "SELECT * FROM procurement",
      "SELECT item_id, supplier_id, purchase_date FROM procurement",
      "SELECT quantity, total_cost FROM procurement",
      "SELECT * FROM inventory",
      "SELECT item_id, quantity, location FROM inventory",
      "SELECT * FROM location",
      "SELECT location_name, address FROM location",
      "SELECT * FROM supplies WHERE id = 1",
      "SELECT supplier_name, location FROM supplier WHERE id = 1",
      "SELECT * FROM procurement WHERE id = 1",
      "SELECT item_id, supplier_id, quantity FROM procurement WHERE id = 1",
      "SELECT * FROM inventory WHERE id = 1",
      "SELECT item_id, quantity, location FROM inventory WHERE id = 1",
      "SELECT * FROM location WHERE id = 1",
      "SELECT location_name, contact_person FROM location WHERE id = 1",
      "SELECT * FROM supplies",
      "SELECT item_name, quantity FROM supplies",
      "SELECT supplier_name, location FROM supplier",
      "SELECT item_id, purchase_date, total_cost FROM procurement",
      "SELECT item_id, quantity FROM inventory",
      "SELECT location_name, address FROM location",
      "SELECT * FROM supplies WHERE quantity > 10",
      "SELECT item_id, supplier_id FROM procurement WHERE quantity < 5",
      "SELECT supplier_name, contact_number FROM supplier WHERE location = 'New York'",
      "SELECT * FROM procurement WHERE total_cost > 1000",
      "SELECT item_name, quantity FROM supplies ORDER BY quantity DESC",
      "SELECT supplier_name, location FROM supplier ORDER BY supplier_name ASC",
      "SELECT item_name, supplier_name, purchase_date FROM supplies s JOIN procurement p ON s.id = p.item_id",
      "SELECT item_name, supplier_name, purchase_date FROM supplies s JOIN procurement p ON s.id = p.item_id WHERE p.quantity > 10",
      "SELECT s.item_name, p.total_cost, i.quantity FROM supplies s JOIN procurement p ON s.id = p.item_id JOIN inventory i ON s.id = i.item_id",
      "SELECT p.purchase_date, s.location FROM procurement p JOIN supplier s ON p.supplier_id = s.id",
      "SELECT p.purchase_date, l.location_name FROM procurement p JOIN location l ON p.supplier_id = l.id",
      "SELECT s.item_name, i.location FROM supplies s JOIN inventory i ON s.id = i.item_id ORDER BY i.quantity DESC"
    ]
  }
]