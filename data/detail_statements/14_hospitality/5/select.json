[
  {
    "statements": [
      "SELECT * FROM loyalty_program;",
      "SELECT member_name, member_email FROM loyalty_program;",
      "SELECT member_id, member_name, member_points FROM loyalty_program WHERE member_points > 100;",
      "SELECT * FROM loyalty_program WHERE member_tier = 'Silver';",
      "SELECT member_id, member_name, member_email FROM loyalty_program WHERE member_phone LIKE '%1234%';",
      "SELECT COUNT(*) AS total_members FROM loyalty_program;",
      "SELECT AVG(member_points) AS average_points FROM loyalty_program;",
      "SELECT MAX(member_points) AS max_points, MIN(member_points) AS min_points FROM loyalty_program;",
      "SELECT member_name, CASE WHEN member_points > 100 THEN 'Loyal' ELSE 'Regular' END AS loyalty_status FROM loyalty_program;",
      "SELECT member_id, CONCAT(member_name, ' - ', member_email) AS full_details FROM loyalty_program;",
      "SELECT member_id, CONCAT(SUBSTRING(member_name, 1, 3), '****') AS masked_name FROM loyalty_program;",
      "SELECT DISTINCT member_tier FROM loyalty_program;",
      "SELECT member_id, member_name FROM loyalty_program ORDER BY member_points DESC;",
      "SELECT member_id, member_name FROM loyalty_program ORDER BY member_name ASC;",
      "SELECT * FROM loyalty_program LIMIT 5;",
      "SELECT * FROM loyalty_program OFFSET 5;",
      "SELECT * FROM loyalty_program ORDER BY member_points DESC LIMIT 3 OFFSET 2;",
      "SELECT * FROM loyalty_program WHERE member_id BETWEEN 100 AND 200;",
      "SELECT * FROM loyalty_program WHERE member_name LIKE 'A%';",
      "SELECT * FROM loyalty_program WHERE member_email LIKE '%gmail.com%';",
      "SELECT * FROM loyalty_program WHERE member_id = 1;",
      "SELECT member_id, member_name FROM loyalty_program WHERE member_points > 1000;",
      "SELECT member_id, member_name, member_email FROM loyalty_program WHERE member_points BETWEEN 500 AND 1000;",
      "SELECT COUNT(*) AS total_members FROM loyalty_program;",
      "SELECT member_id, member_name, member_email, member_points FROM loyalty_program WHERE member_tier = 'Gold';",
      "SELECT * FROM loyalty_program ORDER BY member_points DESC;",
      "SELECT member_id, member_name, CONCAT(member_email, ' : ', member_phone) AS contact_info FROM loyalty_program;",
      "SELECT member_id, member_tier, MAX(member_points) AS max_points FROM loyalty_program GROUP BY member_tier;",
      "SELECT AVG(member_points) AS avg_points, MAX(member_points) AS max_points, MIN(member_points) AS min_points FROM loyalty_program;",
      "SELECT member_id, member_name, member_points*10 AS points_multiplier FROM loyalty_program;",
      "SELECT DISTINCT(member_tier) FROM loyalty_program;",
      "SELECT member_id, member_name, member_points FROM loyalty_program WHERE member_tier = 'Silver' OR member_tier = 'Gold';",
      "SELECT member_id, member_name, member_phone FROM loyalty_program WHERE member_email LIKE '%gmail.com';",
      "SELECT member_id, member_name, member_points FROM loyalty_program WHERE member_points >= (SELECT MAX(member_points) FROM loyalty_program);",
      "SELECT member_id, member_name, member_points FROM loyalty_program WHERE member_points IN (SELECT MIN(member_points) FROM loyalty_program);",
      "SELECT COUNT(DISTINCT member_tier) AS total_tiers FROM loyalty_program;",
      "SELECT member_id, member_name, member_points FROM loyalty_program WHERE member_tier LIKE '%Tier%';",
      "SELECT member_id, member_name, member_points FROM loyalty_program WHERE member_tier IS NULL;",
      "SELECT member_id, CHAR_LENGTH(member_name) AS name_length, member_points FROM loyalty_program;",
      "SELECT member_id, member_tier, RANK() OVER (ORDER BY member_points DESC) AS tier_rank FROM loyalty_program;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM loyalty_program;",
      "SELECT member_id, member_name FROM loyalty_program;",
      "SELECT loyalty_id, points_balance FROM loyalty_program;",
      "SELECT * FROM rewards;",
      "SELECT loyalty_id, reward_name FROM rewards;",
      "SELECT reward_id, reward_description FROM rewards;",
      "SELECT member_id, member_name, points_balance FROM loyalty_program;",
      "SELECT loyalty_id, reward_name, expiration_date FROM rewards;",
      "SELECT reward_id, reward_name, expiration_date FROM rewards;",
      "SELECT loyalty_id, member_name, points_balance FROM loyalty_program;",
      "SELECT * FROM loyalty_program WHERE points_balance > 100;",
      "SELECT * FROM rewards WHERE expiration_date > '2022-12-31';",
      "SELECT * FROM loyalty_program WHERE member_name LIKE 'A%';",
      "SELECT member_id, member_name FROM loyalty_program WHERE points_balance < 50;",
      "SELECT loyalty_id, points_balance FROM loyalty_program WHERE member_name = 'John Doe';",
      "SELECT * FROM rewards WHERE reward_name LIKE '%Discount%';",
      "SELECT loyalty_id, reward_name FROM rewards WHERE expiration_date < '2022-06-30';",
      "SELECT member_id, member_name, points_balance FROM loyalty_program WHERE member_id < 100;",
      "SELECT * FROM rewards WHERE loyalty_id = 5;",
      "SELECT * FROM loyalty_program WHERE points_balance BETWEEN 50 AND 100;",
      "SELECT * FROM loyalty_program WHERE points_balance > 100",
      "SELECT member_name, points_balance FROM loyalty_program WHERE member_id = 3",
      "SELECT reward_name, expiration_date FROM rewards WHERE loyalty_id = 5",
      "SELECT member_name, points_balance, reward_name FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id",
      "SELECT member_name, points_balance, reward_name, expiration_date FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id WHERE points_balance > 200",
      "SELECT reward_name, reward_description FROM rewards WHERE expiration_date > '2022-12-31'",
      "SELECT member_name, points_balance, reward_name, expiration_date FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id WHERE points_balance > 50 AND expiration_date > '2022-12-31'",
      "SELECT member_name, points_balance, reward_name, expiration_date FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id ORDER BY points_balance DESC",
      "SELECT COUNT(*) as total_rewards FROM rewards",
      "SELECT SUM(points_balance) as total_points FROM loyalty_program",
      "SELECT AVG(points_balance) as avg_points FROM loyalty_program",
      "SELECT MAX(points_balance) as max_points FROM loyalty_program",
      "SELECT MIN(points_balance) as min_points FROM loyalty_program",
      "SELECT member_id, COUNT(*) as total_rewards FROM rewards GROUP BY member_id",
      "SELECT loyalty_id, SUM(points_balance) as total_points FROM loyalty_program GROUP BY loyalty_id",
      "SELECT member_id, AVG(points_balance) as avg_points FROM loyalty_program GROUP BY member_id",
      "SELECT reward_name, COUNT(*) as total_rewards FROM rewards GROUP BY reward_name",
      "SELECT reward_name, AVG(rewards.points_balance) as avg_points FROM rewards JOIN loyalty_program ON rewards.loyalty_id = loyalty_program.loyalty_id GROUP BY reward_name",
      "SELECT loyalty_id, member_name, SUM(points_balance) as total_points FROM loyalty_program GROUP BY loyalty_id, member_name HAVING SUM(points_balance) > 200",
      "SELECT member_id, reward_name, SUM(points_balance) as total_points FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id GROUP BY member_id, reward_name HAVING SUM(points_balance) > 100"
    ]
  },
  {
    "statements": [
      "SELECT loyalty_program_id, program_name FROM loyalty_programs WHERE start_date < '2022-01-01';",
      "SELECT member_id, first_name, last_name, email FROM members WHERE loyalty_program_id = 1;",
      "SELECT reward_id, reward_name, value FROM rewards WHERE value > 50.00;",
      "SELECT program_name, start_date, end_date FROM loyalty_programs WHERE end_date > '2022-12-31';",
      "SELECT first_name, last_name, email FROM members WHERE member_id = 1001;",
      "SELECT reward_name, value, expiry_date FROM rewards WHERE expiry_date < '2023-06-30';",
      "SELECT * FROM loyalty_programs;",
      "SELECT * FROM members WHERE first_name LIKE 'A%';",
      "SELECT * FROM rewards WHERE reward_name LIKE '%points%';",
      "SELECT first_name, last_name, email FROM members WHERE email LIKE '%@example.com%';",
      "SELECT program_name, start_date, end_date FROM loyalty_programs;",
      "SELECT loyalty_program_id, program_name, start_date, end_date FROM loyalty_programs WHERE start_date < '2023-01-01';",
      "SELECT * FROM members WHERE loyalty_program_id = 2;",
      "SELECT member_id, first_name, last_name FROM members WHERE last_name = 'Smith';",
      "SELECT reward_id, reward_name, value, expiry_date FROM rewards WHERE expiry_date > '2023-12-31';",
      "SELECT program_name FROM loyalty_programs WHERE program_name LIKE '%Gold%';",
      "SELECT member_id, first_name, last_name, email FROM members WHERE member_id = 2001;",
      "SELECT reward_name, value FROM rewards WHERE value < 100.00;",
      "SELECT * FROM loyalty_programs WHERE loyalty_program_id = 3;",
      "SELECT * FROM members WHERE email = 'john.doe@example.com';",
      "SELECT * FROM loyalty_programs;",
      "SELECT program_name, start_date FROM loyalty_programs WHERE end_date IS NULL;",
      "SELECT * FROM members JOIN loyalty_programs ON members.loyalty_program_id = loyalty_programs.loyalty_program_id;",
      "SELECT member_id, first_name, last_name, email FROM members WHERE loyalty_program_id = 2;",
      "SELECT reward_name, value FROM rewards WHERE expiry_date > '2022-12-31';",
      "SELECT * FROM loyalty_programs WHERE program_name LIKE '%Gold%';",
      "SELECT first_name, last_name, program_name FROM members JOIN loyalty_programs ON members.loyalty_program_id = loyalty_programs.loyalty_program_id WHERE start_date < '2022-01-01';",
      "SELECT reward_name, value FROM rewards JOIN members ON rewards.member_id = members.member_id WHERE members.member_id = 5;",
      "SELECT DISTINCT program_name FROM loyalty_programs;",
      "SELECT member_id, first_name, last_name, email FROM members WHERE email LIKE '%@example.com%';",
      "SELECT program_name, COUNT(member_id) AS total_members FROM loyalty_programs JOIN members ON loyalty_programs.loyalty_program_id = members.loyalty_program_id GROUP BY program_name;",
      "SELECT reward_name, SUM(value) AS total_value FROM rewards GROUP BY reward_name HAVING total_value > 1000;",
      "SELECT first_name, last_name FROM members WHERE loyalty_program_id IN (SELECT loyalty_program_id FROM loyalty_programs WHERE program_name LIKE '%Platinum%');",
      "SELECT program_name, COUNT(member_id) AS total_members FROM loyalty_programs JOIN members ON loyalty_programs.loyalty_program_id = members.loyalty_program_id GROUP BY program_name HAVING COUNT(member_id) > 10;",
      "SELECT * FROM rewards WHERE expiry_date < CURDATE();",
      "SELECT loyalty_program_id, COUNT(member_id) AS total_members FROM loyalty_programs JOIN members ON loyalty_programs.loyalty_program_id = members.loyalty_program_id GROUP BY loyalty_program_id HAVING total_members > 5;",
      "SELECT MAX(value) AS highest_reward_value FROM rewards;",
      "SELECT * FROM members ORDER BY first_name ASC, last_name DESC;",
      "SELECT program_name, MIN(start_date) AS earliest_start_date FROM loyalty_programs;",
      "SELECT program_name, MAX(end_date) AS latest_end_date FROM loyalty_programs;",
      "SELECT first_name, LAST_INSERT_ID() AS last_inserted_id FROM members WHERE member_id = 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM loyalty_program;",
      "SELECT program_id, program_name, start_date, end_date, description FROM loyalty_program;",
      "SELECT * FROM members;",
      "SELECT member_id, first_name, last_name, email, join_date FROM members;",
      "SELECT * FROM rewards;",
      "SELECT reward_id, reward_name, points_required, description, expiration_date FROM rewards;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, member_id, transaction_date, points_earned, points_redeemed FROM transactions;",
      "SELECT program_name, start_date, end_date FROM loyalty_program;",
      "SELECT first_name, last_name, join_date FROM members;",
      "SELECT reward_name, points_required, expiration_date FROM rewards;",
      "SELECT transaction_date, points_earned, points_redeemed FROM transactions;",
      "SELECT program_id, program_name FROM loyalty_program;",
      "SELECT member_id, first_name FROM members;",
      "SELECT reward_id, reward_name FROM rewards;",
      "SELECT transaction_id, member_id FROM transactions;",
      "SELECT program_id, program_name, description FROM loyalty_program;",
      "SELECT first_name, last_name, email FROM members;",
      "SELECT reward_name, points_required, expiration_date, description FROM rewards;",
      "SELECT transaction_date, points_earned FROM transactions;",
      "SELECT program_name, start_date, end_date, description FROM loyalty_program;",
      "SELECT * FROM loyalty_program;",
      "SELECT program_name, start_date FROM loyalty_program WHERE end_date IS NULL;",
      "SELECT m.first_name, m.last_name, r.reward_name FROM members m JOIN rewards r ON m.member_id = r.reward_id;",
      "SELECT t.transaction_date, t.points_earned, t.points_redeemed, m.first_name, m.last_name FROM transactions t JOIN members m ON t.member_id = m.member_id;",
      "SELECT program_id, program_name, start_date FROM loyalty_program WHERE end_date > '2022-01-01';",
      "SELECT DISTINCT program_name FROM loyalty_program;",
      "SELECT t.transaction_id, t.points_earned, t.points_redeemed, m.first_name, m.last_name, r.reward_name FROM transactions t JOIN members m ON t.member_id = m.member_id JOIN rewards r ON t.points_earned >= r.points_required;",
      "SELECT m.first_name, m.last_name, COUNT(t.transaction_id) AS transaction_count FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
      "SELECT program_id, program_name, description FROM loyalty_program WHERE description LIKE '%loyalty%';",
      "SELECT program_id, program_name, start_date, COALESCE(end_date, 'Ongoing') AS end_date FROM loyalty_program;",
      "SELECT m.first_name, m.last_name, SUM(t.points_earned) AS total_points_earned, SUM(t.points_redeemed) AS total_points_redeemed FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
      "SELECT m.first_name, m.last_name, MAX(t.transaction_date) AS latest_transaction_date FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
      "SELECT program_name, COUNT(DISTINCT m.member_id) AS total_members FROM loyalty_program JOIN members m ON m.program_id = loyalty_program.program_id GROUP BY program_name;",
      "SELECT program_id, program_name, start_date, 'Active' AS status FROM loyalty_program WHERE CURRENT_DATE BETWEEN start_date AND COALESCE(end_date, CURRENT_DATE);",
      "SELECT t.transaction_date, t.points_earned, t.points_redeemed, m.first_name, m.last_name, r.reward_name FROM transactions t JOIN members m ON t.member_id = m.member_id JOIN rewards r ON t.points_redeemed >= r.points_required;",
      "SELECT program_name, SUM(r.points_required) AS total_points_required FROM loyalty_program JOIN rewards r ON r.program_id = loyalty_program.program_id GROUP BY program_name;",
      "SELECT m.first_name, m.last_name, AVG(t.points_earned) AS avg_points_earned, AVG(t.points_redeemed) AS avg_points_redeemed FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
      "SELECT program_id, program_name, description, CASE WHEN end_date > start_date THEN 'Open' ELSE 'Closed' END AS program_status FROM loyalty_program;",
      "SELECT program_name, COUNT(t.transaction_id) AS total_transactions FROM loyalty_program JOIN members m ON m.program_id = loyalty_program.program_id JOIN transactions t ON m.member_id = m.member_id GROUP BY program_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM loyalty_program;",
      "SELECT program_name, start_date, end_date FROM loyalty_program;",
      "SELECT * FROM member;",
      "SELECT first_name, last_name, email FROM member;",
      "SELECT * FROM member_rewards;",
      "SELECT member_id, reward_name, points_required FROM member_rewards;",
      "SELECT * FROM transaction;",
      "SELECT transaction_date, amount FROM transaction;",
      "SELECT * FROM transaction_history;",
      "SELECT description FROM transaction_history;",
      "SELECT program_name, start_date, end_date FROM loyalty_program WHERE program_id = 1;",
      "SELECT first_name, last_name, email FROM member WHERE member_id = 1;",
      "SELECT reward_name, points_required FROM member_rewards WHERE member_id = 1;",
      "SELECT transaction_date, amount FROM transaction WHERE member_id = 1;",
      "SELECT description FROM transaction_history WHERE transaction_id = 1;",
      "SELECT program_id, program_name, start_date, end_date FROM loyalty_program ORDER BY start_date DESC;",
      "SELECT first_name, last_name, email FROM member ORDER BY last_name ASC;",
      "SELECT reward_name, points_required FROM member_rewards ORDER BY points_required DESC;",
      "SELECT transaction_date, amount FROM transaction ORDER BY amount DESC;",
      "SELECT description FROM transaction_history ORDER BY transaction_date DESC;",
      "SELECT * FROM loyalty_program;",
      "SELECT program_id, program_name FROM loyalty_program WHERE start_date >= '2022-01-01';",
      "SELECT * FROM member WHERE phone_number IS NOT NULL;",
      "SELECT first_name, last_name, email FROM member WHERE last_name LIKE 'S%';",
      "SELECT * FROM member_rewards WHERE points_required <= 1000;",
      "SELECT * FROM transaction WHERE amount > 1000;",
      "SELECT t.transaction_date, t.amount, m.first_name, m.last_name FROM transaction t, member m WHERE t.member_id = m.member_id;",
      "SELECT t.transaction_date, th.description FROM transaction t JOIN transaction_history th ON t.transaction_id = th.transaction_id;",
      "SELECT lp.program_id, lp.program_name, m.first_name, m.last_name FROM loyalty_program lp INNER JOIN member m ON lp.program_id = m.member_id;",
      "SELECT mr.reward_id, mr.reward_name, m.first_name, m.last_name FROM member_rewards mr INNER JOIN member m ON mr.member_id = m.member_id;",
      "SELECT t.transaction_id, t.transaction_date, m.first_name, m.last_name, tr.reward_name FROM transaction t JOIN member m ON t.member_id = m.member_id JOIN member_rewards tr ON m.member_id = tr.member_id;",
      "SELECT th.history_id, th.transaction_date, t.amount, t.transaction_date FROM transaction_history th JOIN transaction t ON th.transaction_id = t.transaction_id;",
      "SELECT lp.program_id, lp.program_name, m.first_name, m.last_name, tr.reward_name FROM loyalty_program lp JOIN member m ON lp.program_id = m.member_id JOIN member_rewards tr ON m.member_id = tr.member_id;",
      "SELECT th.history_id, th.description, t.transaction_date, amounts.amount FROM transaction_history th JOIN transaction t ON th.transaction_id = t.transaction_id JOIN (SELECT transaction_id, SUM(amount) AS amount FROM transaction GROUP BY transaction_id) amounts ON t.transaction_id = amounts.transaction_id;",
      "SELECT DISTINCT m.first_name, m.last_name FROM member m JOIN transaction t ON m.member_id = t.member_id;",
      "SELECT lp.program_id, m.first_name, COUNT(tr.reward_id) AS total_rewards FROM loyalty_program lp INNER JOIN member m ON lp.program_id = m.member_id INNER JOIN member_rewards tr ON m.member_id = tr.member_id GROUP BY lp.program_id, m.first_name;",
      "SELECT program_id, program_name, CASE WHEN start_date < '2022-06-01' THEN 'Active' ELSE 'Inactive' END AS status FROM loyalty_program;",
      "SELECT m.first_name, tr.reward_name, SUM(tr.points_required) AS total_points FROM member m JOIN member_rewards tr ON m.member_id = tr.member_id GROUP BY m.first_name, tr.reward_name;",
      "SELECT lp.program_id, m.first_name, m.last_name, COUNT(*) AS total_transactions FROM loyalty_program lp JOIN member m ON lp.program_id = m.member_id JOIN transaction t ON m.member_id = t.member_id GROUP BY lp.program_id, m.first_name, m.last_name;",
      "SELECT t.transaction_id, t.amount, t.transaction_date, AVG(t.amount) OVER() AS avg_amount FROM transaction t;"
    ]
  }
]