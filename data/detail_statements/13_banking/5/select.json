[
  {
    "statements": [
      "SELECT * FROM monthly_statements;",
      "SELECT statement_id, customer_id, month_year FROM monthly_statements;",
      "SELECT * FROM monthly_statements WHERE customer_id = 100;",
      "SELECT customer_id, transaction_description FROM monthly_statements WHERE month_year = '2022-01-01';",
      "SELECT * FROM monthly_statements ORDER BY month_year DESC;",
      "SELECT AVG(transaction_amount) FROM monthly_statements;",
      "SELECT MIN(transaction_amount), MAX(transaction_amount), SUM(transaction_amount) FROM monthly_statements;",
      "SELECT DISTINCT customer_id FROM monthly_statements;",
      "SELECT statement_id, transaction_amount FROM monthly_statements WHERE transaction_amount > 100;",
      "SELECT COUNT(*) FROM monthly_statements;",
      "SELECT customer_id, SUM(transaction_amount) AS total_transactions FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, AVG(transaction_amount) AS average_transaction_amount FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, COUNT(*) AS number_of_transactions FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, MAX(account_balance) AS max_balance FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, MIN(account_balance) AS min_balance FROM monthly_statements GROUP BY customer_id;",
      "SELECT month_year, SUM(transaction_amount) AS total_transaction_amount FROM monthly_statements GROUP BY month_year;",
      "SELECT customer_id, AVG(account_balance) AS average_balance FROM monthly_statements GROUP BY customer_id;",
      "SELECT month_year, COUNT(*) AS number_of_transactions FROM monthly_statements GROUP BY month_year;",
      "SELECT customer_id, MAX(transaction_amount) AS max_transaction_amount FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, MIN(transaction_amount) AS min_transaction_amount FROM monthly_statements GROUP BY customer_id;",
      "SELECT * FROM monthly_statements WHERE customer_id = 123 AND month_year = '2022-01-01';",
      "SELECT statement_id, transaction_description, transaction_amount FROM monthly_statements WHERE customer_id = 456 ORDER BY month_year DESC;",
      "SELECT COUNT(*) AS total_transactions FROM monthly_statements WHERE customer_id = 789 AND transaction_amount > 1000;",
      "SELECT DISTINCT month_year FROM monthly_statements;",
      "SELECT AVG(transaction_amount) AS avg_transaction_amount FROM monthly_statements;",
      "SELECT customer_id, SUM(transaction_amount) AS total_transaction_amount FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, COUNT(DISTINCT month_year) AS unique_months FROM monthly_statements GROUP BY customer_id;",
      "SELECT MAX(transaction_amount) AS max_transaction_amount FROM monthly_statements;",
      "SELECT customer_id, month_year, SUM(transaction_amount) AS total_amount_per_month FROM monthly_statements GROUP BY customer_id, month_year;",
      "SELECT customer_id, AVG(transaction_amount) AS avg_transaction_amount_per_customer FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, MAX(account_balance) AS max_account_balance FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, MIN(transaction_amount) AS min_transaction_amount FROM monthly_statements GROUP BY customer_id;",
      "SELECT customer_id, month_year, COUNT(*) AS num_transactions_per_month FROM monthly_statements GROUP BY customer_id, month_year;",
      "SELECT AVG(account_balance) AS avg_account_balance FROM monthly_statements;",
      "SELECT customer_id, SUM(transaction_amount) AS total_transactions, MAX(account_balance) AS max_balance FROM monthly_statements WHERE transaction_amount > 500 AND account_balance > 5000 GROUP BY customer_id;",
      "SELECT customer_id, SUM(transaction_amount) AS total_amount, MAX(account_balance) AS max_balance, AVG(transaction_amount) AS avg_amount FROM monthly_statements WHERE month_year BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY customer_id;",
      "SELECT customer_id, COUNT(*) AS num_transactions, MAX(account_balance) AS max_balance_per_customer FROM monthly_statements WHERE account_balance > 10000 GROUP BY customer_id;",
      "SELECT customer_id, MAX(transaction_amount) AS max_transaction_amount_per_customer FROM monthly_statements GROUP BY customer_id HAVING MAX(transaction_amount) > 5000;",
      "SELECT AVG(transaction_amount) AS avg_transaction_amount, MAX(account_balance) AS max_balance FROM monthly_statements WHERE customer_id = 123 AND month_year = '2022-02-01';",
      "SELECT customer_id, month_year, SUM(transaction_amount) AS total_amount_per_month FROM monthly_statements WHERE transaction_amount > 2000 GROUP BY customer_id, month_year;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name FROM customers;",
      "SELECT customer_email, customer_name FROM customers WHERE customer_id = 1;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, customer_id, transaction_date FROM transactions;",
      "SELECT transaction_id, transaction_type FROM transactions WHERE customer_id = 2;",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT customer_name FROM customers WHERE customer_email LIKE '%gmail.com';",
      "SELECT customer_id, customer_name FROM customers WHERE customer_id IN (1, 3, 5);",
      "SELECT * FROM transactions WHERE transaction_type = 'Purchase';",
      "SELECT customer_id, SUM(transaction_amount) FROM transactions GROUP BY customer_id;",
      "SELECT customer_name, AVG(transaction_amount) FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(transaction_id) FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name;",
      "SELECT customer_name, MAX(transaction_amount) FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name;",
      "SELECT * FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customers.customer_name, transactions.transaction_date FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT * FROM customers LEFT JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT * FROM customers RIGHT JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT * FROM customers INNER JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT * FROM customers FULL JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_name LIKE '%A%';",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_id IN (1, 2, 3);",
      "SELECT customer_id, customer_name, customer_email, COUNT(*) AS total_transactions FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_id;",
      "SELECT customer_name, SUM(transaction_amount) AS total_spent FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name;",
      "SELECT customer_id, customer_name, customer_email, MAX(transaction_date) AS latest_transaction_date FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_id;",
      "SELECT customer_id, customer_name, customer_email, AVG(transaction_amount) AS avg_transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_id;",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM transactions);",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_id = (SELECT MAX(customer_id) FROM transactions);",
      "SELECT customer_name, customer_email, transaction_date, transaction_type, transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_type = 'Purchase';",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_id = ANY (SELECT customer_id FROM transactions WHERE transaction_type = 'Refund');",
      "SELECT customer_id, customer_name, customer_email, AVG(transaction_amount) AS avg_transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_type = 'Purchase' GROUP BY customer_id HAVING AVG(transaction_amount) > 100;",
      "SELECT customer_id, customer_name, customer_email, COUNT(*) AS total_transactions FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY customer_id;",
      "SELECT customer_id, customer_name, customer_email, SUM(transaction_amount) AS total_spent FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_date >= '2022-01-01' GROUP BY customer_id HAVING SUM(transaction_amount) > 1000;",
      "SELECT customer_id, customer_name, customer_email, COUNT(*) AS total_transactions FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE EXTRACT(MONTH FROM transaction_date) = 10 GROUP BY customer_id;",
      "SELECT customer_id, customer_name, customer_email, AVG(transaction_amount) AS avg_transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE EXTRACT(YEAR FROM transaction_date) = 2022 GROUP BY customer_id HAVING AVG(transaction_amount) > 50;",
      "SELECT customer_id, customer_name, customer_email, SUM(transaction_amount) AS total_spent FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_type IN ('Purchase', 'Refund') GROUP BY customer_id;",
      "SELECT customer_id, customer_name, customer_email, MAX(transaction_date) - MIN(transaction_date) AS days_between_first_and_last_transaction FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_id;",
      "SELECT customer_id, customer_name, customer_email, SUM(transaction_amount) AS total_spent FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_id ORDER BY total_spent DESC;",
      "SELECT customer_id, customer_name, customer_email FROM customers WHERE customer_id IN (SELECT customer_id FROM transactions GROUP BY customer_id HAVING COUNT(transaction_id) > 1);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
      "SELECT * FROM transactions;",
      "SELECT customer_id, transaction_amount FROM transactions WHERE customer_id = 1;",
      "SELECT * FROM account_balances;",
      "SELECT customer_id, account_balance FROM account_balances WHERE customer_id = 1;",
      "SELECT customers.customer_name, transactions.transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customers.customer_name, account_balances.account_balance FROM customers JOIN account_balances ON customers.customer_id = account_balances.customer_id;",
      "SELECT customers.customer_name, transactions.transaction_amount, account_balances.account_balance FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN account_balances ON customers.customer_id = account_balances.customer_id;",
      "SELECT customers.customer_name, transactions.transaction_date FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customers.customer_name, account_balances.account_balance, transactions.transaction_amount FROM customers JOIN account_balances ON customers.customer_id = account_balances.customer_id LEFT JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customers.customer_name AS Name, transactions.transaction_amount AS Amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customers.customer_name AS Customer, transactions.transaction_amount AS Amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customers.customer_name, SUM(transactions.transaction_amount) AS Total_Transaction_Amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, AVG(transactions.transaction_amount) AS Avg_Transaction_Amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, MAX(transactions.transaction_amount) AS Max_Transaction_Amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, MIN(transactions.transaction_amount) AS Min_Transaction_Amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, COUNT(transactions.transaction_id) AS Total_Transactions FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_name;",
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, transaction_date, transaction_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id;",
      "SELECT customer_name, account_balance FROM customers c LEFT JOIN account_balances b ON c.customer_id = b.customer_id;",
      "SELECT customer_name, transaction_amount FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id WHERE transaction_amount > 1000;",
      "SELECT customer_id, AVG(transaction_amount) AS avg_amount FROM transactions GROUP BY customer_id HAVING AVG(transaction_amount) > 5000;",
      "SELECT customer_name, SUM(transaction_amount) AS total_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY customer_name;",
      "SELECT customer_id, MAX(transaction_date) AS latest_date FROM transactions GROUP BY customer_id;",
      "SELECT c.customer_name, t.transaction_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, account_balance FROM customers c LEFT JOIN account_balances b ON c.customer_id = b.customer_id WHERE account_balance < 0;",
      "SELECT c.customer_name, COUNT(t.transaction_id) AS num_transactions FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name HAVING COUNT(t.transaction_id) > 5;",
      "SELECT c.customer_name, MAX(account_balance) AS max_balance FROM customers c INNER JOIN account_balances b ON c.customer_id = b.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, COUNT(*) AS num_transactions FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_amount > 5000 GROUP BY c.customer_name HAVING COUNT(*) > 2;",
      "SELECT c.customer_name, MIN(transaction_date) AS first_transaction FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, MAX(transaction_amount) AS max_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name ORDER BY max_amount DESC;",
      "SELECT customer_name, AVG(account_balance) AS avg_balance FROM customers c INNER JOIN account_balances b ON c.customer_id = b.customer_id GROUP BY customer_name HAVING AVG(account_balance) > 1000;",
      "SELECT c.customer_name, SUM(transaction_amount) AS total_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date > '2022-06-01' GROUP BY c.customer_name;",
      "SELECT c.customer_name, AVG(transaction_amount) AS avg_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name ORDER BY avg_amount DESC;",
      "SELECT customer_name, SUM(transaction_amount) AS total_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE customer_name LIKE 'A%' GROUP BY customer_name;",
      "SELECT c.customer_name, COUNT(*) AS num_transactions FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_amount < 0 GROUP BY c.customer_name HAVING COUNT(*) > 3;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_email, customer_address FROM customers WHERE customer_id = 1;",
      "SELECT * FROM accounts;",
      "SELECT account_id, account_balance FROM accounts WHERE customer_id = 1;",
      "SELECT * FROM transactions;",
      "SELECT transaction_date, transaction_amount FROM transactions WHERE account_id = 1;",
      "SELECT * FROM monthly_statements;",
      "SELECT statement_date, statement_details FROM monthly_statements WHERE account_id = 1;",
      "SELECT customer_name, account_balance FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id;",
      "SELECT customer_name, transaction_amount FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_id = transactions.account_id;",
      "SELECT customer_name, statement_details FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN monthly_statements ON accounts.account_id = monthly_statements.account_id;",
      "SELECT customer_name, transaction_amount, statement_details FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_id = transactions.account_id JOIN monthly_statements ON accounts.account_id = monthly_statements.account_id;",
      "SELECT customer_name, account_balance FROM customers LEFT JOIN accounts ON customers.customer_id = accounts.customer_id;",
      "SELECT customer_name, transaction_amount FROM customers LEFT JOIN accounts ON customers.customer_id = accounts.customer_id LEFT JOIN transactions ON accounts.account_id = transactions.account_id;",
      "SELECT customer_name, statement_details FROM customers LEFT JOIN accounts ON customers.customer_id = accounts.customer_id LEFT JOIN monthly_statements ON accounts.account_id = monthly_statements.account_id;",
      "SELECT customer_name, transaction_amount, statement_details FROM customers LEFT JOIN accounts ON customers.customer_id = accounts.customer_id LEFT JOIN transactions ON accounts.account_id = transactions.account_id LEFT JOIN monthly_statements ON accounts.account_id = monthly_statements.account_id;",
      "SELECT customer_name, account_balance FROM customers RIGHT JOIN accounts ON customers.customer_id = accounts.customer_id;",
      "SELECT customer_name, transaction_amount FROM customers RIGHT JOIN accounts ON customers.customer_id = accounts.customer_id RIGHT JOIN transactions ON accounts.account_id = transactions.account_id;",
      "SELECT customer_name, statement_details FROM customers RIGHT JOIN accounts ON customers.customer_id = accounts.customer_id RIGHT JOIN monthly_statements ON accounts.account_id = monthly_statements.account_id;",
      "SELECT customer_name, transaction_amount, statement_details FROM customers RIGHT JOIN accounts ON customers.customer_id = accounts.customer_id RIGHT JOIN transactions ON accounts.account_id = transactions.account_id RIGHT JOIN monthly_statements ON accounts.account_id = monthly_statements.account_id;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_address LIKE '%Street%';",
      "SELECT account_id, account_balance FROM accounts WHERE customer_id = 2;",
      "SELECT account_id, transaction_amount, transaction_type FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM monthly_statements WHERE account_id = 3 AND statement_date >= '2022-01-01';",
      "SELECT customers.customer_name, transactions.transaction_amount FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_id = transactions.account_id WHERE customers.customer_id = 4;",
      "SELECT a.account_id, a.account_balance, t.transaction_date FROM accounts a JOIN transactions t ON a.account_id = t.account_id WHERE a.customer_id = 5;",
      "SELECT c.customer_name, s.statement_details FROM customers c JOIN accounts a ON c.customer_id..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
      "SELECT * FROM transactions;",
      "SELECT customer_id, transaction_date, transaction_amount FROM transactions WHERE transaction_amount > 1000;",
      "SELECT * FROM statements;",
      "SELECT statement_id, customer_id, statement_date FROM statements WHERE customer_id = 2;",
      "SELECT * FROM balances;",
      "SELECT customer_id, balance_amount FROM balances WHERE balance_amount < 0;",
      "SELECT * FROM history;",
      "SELECT history_id, customer_id, description FROM history;",
      "SELECT customer_id, history_date FROM history WHERE customer_id = 3;",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT customer_id, customer_email FROM customers WHERE customer_id IN (1, 3, 5);",
      "SELECT * FROM transactions WHERE transaction_date = '2022-01-15';",
      "SELECT customer_id, balance_amount FROM balances WHERE balance_date = '2022-01-20';",
      "SELECT * FROM history WHERE history_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT customer_id, description FROM history WHERE description LIKE '%payment%';",
      "SELECT * FROM transactions ORDER BY transaction_amount DESC;",
      "SELECT customer_id, balance_amount FROM balances ORDER BY balance_amount ASC",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, transaction_date, transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT statement_date, balance_amount FROM statements JOIN balances ON statements.customer_id = balances.customer_id;",
      "SELECT customer_name, transaction_date, transaction_amount, description FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN history ON customers.customer_id = history.customer_id;",
      "SELECT customer_name, balance_amount, history_date FROM customers JOIN balances ON customers.customer_id = balances.customer_id JOIN history ON customers.customer_id = history.customer_id;",
      "SELECT customer_name, balance_amount, transaction_date FROM customers JOIN balances ON customers.customer_id = balances.customer_id JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customer_name, statement_date, description FROM customers JOIN statements ON customers.customer_id = statements.customer_id JOIN history ON customers.customer_id = history.customer_id;",
      "SELECT customer_name, balance_amount, transaction_amount FROM customers JOIN balances ON customers.customer_id = balances.customer_id JOIN transactions ON customers.customer_id = transactions.customer_id;",
      "SELECT customer_name, balance_amount, balance_date FROM customers JOIN balances ON customers.customer_id = balances.customer_id;",
      "SELECT customer_name, statement_date, history_date FROM customers JOIN statements ON customers.customer_id = statements.customer_id JOIN history ON customers.customer_id = history.customer_id;",
      "SELECTMAX(transaction_amount) AS max_amount FROM transactions WHERE customer_id = 1;",
      "SELECT customer_name, SUM(transaction_amount) AS total_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name;",
      "SELECT customer_id, AVG(balance_amount) AS avg_balance FROM balances GROUP BY customer_id;",
      "SELECT customer_name, MAX(balance_amount) AS max_balance FROM customers JOIN balances ON customers.customer_id = balances.customer_id GROUP BY customer_name;",
      "SELECT customer_id, COUNT(*) AS transaction_count FROM transactions GROUP BY customer_id;",
      "SELECT customer_name, MIN(balance_amount) AS min_balance FROM customers JOIN balances ON customers.customer_id = balances.customer_id GROUP BY customer_name;",
      "SELECT customer_name, AVG(balance_amount) AS avg_balance, MAX(balance_amount) AS max_balance, MIN(balance_amount) AS min_balance FROM customers JOIN balances ON customers.customer_id = balances.customer_id GROUP BY customer_name;",
      "SELECT customer_name, transaction_date, SUM(transaction_amount) AS total_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name, transaction_date;",
      "SELECT customer_name, AVG(transaction_amount) AS avg_transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name;",
      "SELECT customer_name, SUM(balance_amount) AS total_balance FROM customers JOIN balances ON customers.customer_id = balances.customer_id GROUP BY customer_name;",
      "SELECT customer_name, transaction_date, MAX(transaction_amount) AS max_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name, transaction_date;"
    ]
  }
]