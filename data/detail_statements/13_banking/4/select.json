[
  {
    "statements": [
      "SELECT * FROM Interest WHERE account_id = 1;",
      "SELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.5;",
      "SELECT * FROM Interest WHERE interest_rate BETWEEN 0.2 AND 0.5;",
      "SELECT account_id, AVG(interest_rate) AS avg_interest FROM Interest GROUP BY account_id;",
      "SELECT COUNT(*) AS total_interests FROM Interest;",
      "SELECT account_id, MAX(interest_rate) AS max_interest FROM Interest WHERE account_id >= 10;",
      "SELECT account_id, SUM(interest_rate) AS total_interest FROM Interest;",
      "SELECT DISTINCT account_id FROM Interest;",
      "SELECT * FROM Interest ORDER BY account_id ASC;",
      "SELECT AVG(interest_rate) AS avg_interest_rate FROM Interest WHERE account_id = 5;",
      "SELECT * FROM Interest WHERE account_id IN (1, 2, 3);",
      "SELECT account_id, MIN(interest_rate) AS min_interest FROM Interest WHERE interest_rate < 0.3;",
      "SELECT account_id, interest_rate FROM Interest WHERE account_id > 5 ORDER BY account_id DESC;",
      "SELECT count(*) AS number_of_records FROM Interest WHERE account_id = 7;",
      "SELECT account_id, interest_rate FROM Interest WHERE account_id < 10;",
      "SELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.3 AND account_id > 5;",
      "SELECT * FROM Interest WHERE interest_rate = (SELECT MAX(interest_rate) FROM Interest WHERE account_id = 3);",
      "SELECT account_id, SUM(interest_rate) AS total_interest FROM Interest WHERE account_id IN (1, 2, 3);",
      "SELECT account_id, interest_rate FROM Interest WHERE account_id = 10 OR account_id = 15;",
      "SELECT * FROM Interest WHERE interest_rate = (SELECT AVG(interest_rate) FROM Interest);",
      "SELECT * FROM Interest WHERE account_id = 100;",
      "SELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.5;",
      "SELECT MAX(interest_rate) AS highest_interest_rate FROM Interest;",
      "SELECT COUNT(*) AS total_records FROM Interest;",
      "SELECT AVG(interest_rate) AS avg_interest_rate FROM Interest;",
      "SELECT * FROM Interest ORDER BY interest_rate DESC;",
      "SELECT * FROM Interest WHERE account_id BETWEEN 100 AND 200;",
      "SELECT COUNT(*) AS total_records FROM Interest WHERE interest_rate < 0.5;",
      "SELECT * FROM Interest WHERE interest_rate = (SELECT MAX(interest_rate) FROM Interest);",
      "SELECT * FROM Interest WHERE account_id IN (SELECT account_id FROM AnotherTable);",
      "SELECT * FROM Interest WHERE account_id = (SELECT MAX(account_id) FROM Interest);",
      "SELECT SUM(interest_rate) AS total_interest FROM Interest;",
      "SELECT account_id, interest_rate FROM Interest WHERE interest_rate BETWEEN 0.2 AND 0.8;",
      "SELECT account_id, AVG(interest_rate) AS avg_interest_rate FROM Interest GROUP BY account_id;",
      "SELECT * FROM Interest WHERE interest_rate > (SELECT AVG(interest_rate) FROM Interest);",
      "SELECT * FROM Interest WHERE interest_rate = (SELECT MIN(interest_rate) FROM Interest);",
      "SELECT account_id, COUNT(*) AS total_records FROM Interest GROUP BY account_id;",
      "SELECT * FROM Interest WHERE interest_rate < (SELECT MIN(interest_rate) FROM Interest);",
      "SELECT * FROM Interest WHERE account_id = ANY (SELECT account_id FROM AnotherTable);",
      "SELECT * FROM Interest WHERE interest_rate = (SELECT AVG(interest_rate) FROM Interest);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Interest;",
      "SELECT account_id, interest_rate FROM Interest;",
      "SELECT account_id, interest_rate FROM Interest WHERE account_id = 123;",
      "SELECT * FROM SavingsAccount;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount;",
      "SELECT * FROM Interest JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
      "SELECT Interest.account_id, SavingsAccount.balance FROM Interest JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
      "SELECT account_id, balance FROM SavingsAccount WHERE account_id = 456;",
      "SELECT account_id, balance FROM SavingsAccount WHERE balance > 1000;",
      "SELECT account_id, balance FROM SavingsAccount WHERE accrued_interest < 50;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE account_id = 789;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance > 500 AND accrued_interest < 200;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance BETWEEN 1000 AND 2000;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance >= 1500 OR accrued_interest <= 100;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance = 2000 AND accrued_interest = 100;",
      "SELECT account_id, SUM(balance) AS total_balance FROM SavingsAccount GROUP BY account_id;",
      "SELECT account_id, AVG(accrued_interest) AS avg_interest FROM SavingsAccount GROUP BY account_id;",
      "SELECT account_id, MAX(balance) AS max_balance FROM SavingsAccount;",
      "SELECT account_id, MIN(accrued_interest) AS min_interest FROM SavingsAccount;",
      "SELECT COUNT(*) AS total_accounts FROM SavingsAccount;",
      "SELECT * FROM Interest JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
      "SELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.05;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance > 1000 AND accrued_interest > 500;",
      "SELECT COUNT(*) FROM SavingsAccount WHERE accrued_interest < 100;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount ORDER BY balance DESC;",
      "SELECT * FROM Interest WHERE account_id IN (SELECT account_id FROM SavingsAccount WHERE balance > 1000);",
      "SELECT account_id, SUM(accrued_interest) AS total_accrued_interest FROM SavingsAccount GROUP BY account_id;",
      "SELECT account_id, interest_rate, balance FROM Interest LEFT JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
      "SELECT account_id, interest_rate, balance FROM Interest RIGHT JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance > 1000 ORDER BY accrued_interest ASC;",
      "SELECT account_id, interest_rate FROM Interest WHERE interest_rate > (SELECT AVG(interest_rate) FROM Interest);",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE accrued_interest BETWEEN 100 AND 500;",
      "SELECT account_id, interest_rate FROM Interest WHERE interest_rate NOT IN (SELECT interest_rate FROM SavingsAccount);",
      "SELECT account_id, MAX(balance) AS max_balance FROM SavingsAccount GROUP BY account_id;",
      "SELECT account_id, interest_rate FROM Interest WHERE account_id = (SELECT MAX(account_id) FROM SavingsAccount);",
      "SELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE account_id = 5;",
      "SELECT account_id, SUM(balance) AS total_balance FROM SavingsAccount GROUP BY account_id HAVING SUM(balance) > 5000;",
      "SELECT account_id, interest_rate, balance FROM Interest CROSS JOIN SavingsAccount;",
      "SELECT account_id, interest_rate, accrued_interest FROM Interest JOIN SavingsAccount USING (account_id);",
      "SELECT account_id, interest_rate FROM Interest WHERE account_id BETWEEN 1 AND 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Savings_Accounts;",
      "SELECT account_id, account_holder FROM Savings_Accounts;",
      "SELECT account_id, balance FROM Savings_Accounts WHERE balance > 1000;",
      "SELECT * FROM Interest_Rates;",
      "SELECT interest_id, interest_rate FROM Interest_Rates WHERE interest_rate < 3.5;",
      "SELECT * FROM Interest_Accrual;",
      "SELECT account_id, accrued_interest FROM Interest_Accrual WHERE accrued_interest > 50;",
      "SELECT Savings_Accounts.account_holder, Interest_Accrual.accrued_interest FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id;",
      "SELECT Savings_Accounts.account_holder, Interest_Rates.interest_rate FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id JOIN Interest_Rates ON Interest_Accrual.interest_id = Interest_Rates.interest_id;",
      "SELECT SUM(balance) FROM Savings_Accounts;",
      "SELECT AVG(balance) FROM Savings_Accounts;",
      "SELECT COUNT(*) FROM Savings_Accounts;",
      "SELECT COUNT(*) AS num_interest_accruals FROM Interest_Accrual;",
      "SELECT account_id, accrued_interest FROM Interest_Accrual WHERE accrued_interest BETWEEN 10 AND 50;",
      "SELECT account_id, accrued_interest FROM Interest_Accrual ORDER BY accrued_interest DESC;",
      "SELECT account_id, accrued_interest FROM Interest_Accrual ORDER BY account_id ASC;",
      "SELECT account_holder, SUM(accrued_interest) FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id GROUP BY account_holder;",
      "SELECT account_holder, COUNT(*) AS num_accruals FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id GROUP BY account_holder HAVING COUNT(*) > 3;",
      "SELECT account_holder, AVG(balance) AS avg_balance FROM Savings_Accounts GROUP BY account_holder HAVING AVG(balance) > 5000;",
      "SELECT account_id, balance, accrued_interest FROM Savings_Accounts LEFT JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id;",
      "SELECT * FROM Savings_Accounts WHERE balance > 1000",
      "SELECT account_holder, balance FROM Savings_Accounts WHERE balance >= 5000",
      "SELECT COUNT(*) FROM Savings_Accounts",
      "SELECT account_holder, SUM(balance) AS total_balance FROM Savings_Accounts GROUP BY account_holder",
      "SELECT account_holder, balance FROM Savings_Accounts WHERE account_holder LIKE 'A%'",
      "SELECT account_id, balance FROM Savings_Accounts WHERE balance BETWEEN 1000 AND 5000",
      "SELECT * FROM Savings_Accounts WHERE account_holder = 'Alice'",
      "SELECT * FROM Savings_Accounts WHERE balance < (SELECT AVG(balance) FROM Savings_Accounts)",
      "SELECT IRA.interest_rate, SA.balance FROM Interest_Rates IRA INNER JOIN Savings_Accounts SA ON IRA.interest_id = SA.account_id",
      "SELECT SA.account_holder, IA.accrued_interest FROM Savings_Accounts SA INNER JOIN Interest_Accrual IA ON SA.account_id = IA.account_id",
      "SELECT * FROM Savings_Accounts WHERE account_id IN (SELECT account_id FROM Interest_Accrual)",
      "SELECT MAX(balance) FROM Savings_Accounts",
      "SELECT AVG(interest_rate) FROM Interest_Rates",
      "SELECT account_holder, BALANCE FROM Savings_Accounts ORDER BY balance DESC",
      "SELECT * FROM Savings_Accounts WHERE account_holder = 'Bob' AND balance <= 2000",
      "SELECT account_holder, SUM(accrued_interest) FROM Interest_Accrual GROUP BY account_holder HAVING SUM(accrued_interest) > 100",
      "SELECT account_holder, balance FROM Savings_Accounts UNION SELECT 'Unknown' AS account_holder, SUM(balance) AS balance FROM Savings_Accounts",
      "SELECT * FROM Savings_Accounts WHERE balance = (SELECT MAX(balance) FROM Savings_Accounts)",
      "SELECT account_holder, balance, interest_rate FROM Savings_Accounts SA LEFT JOIN Interest_Rates IR ON SA.account_id = IR.interest_id",
      "SELECT DISTINCT account_holder FROM Savings_Accounts WHERE balance > 5000"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Interest;",
      "SELECT interest_id, interest_rate FROM Interest WHERE interest_rate > 0.05;",
      "SELECT * FROM SavingsAccount;",
      "SELECT account_id, account_holder, balance FROM SavingsAccount WHERE balance >= 1000;",
      "SELECT * FROM Transaction;",
      "SELECT transaction_id, account_id, transaction_amount FROM Transaction WHERE transaction_amount < 0;",
      "SELECT * FROM InterestAccrual;",
      "SELECT accrual_id, account_id, accrual_amount FROM InterestAccrual WHERE accrual_amount >= 10;",
      "SELECT interest_id, interest_rate, COUNT(*) FROM Interest GROUP BY interest_id, interest_rate;",
      "SELECT account_id, SUM(balance) FROM SavingsAccount GROUP BY account_id;",
      "SELECT account_holder, AVG(balance) FROM SavingsAccount GROUP BY account_holder;",
      "SELECT transaction_date, SUM(transaction_amount) FROM Transaction GROUP BY transaction_date;",
      "SELECT a.account_holder, SUM(t.transaction_amount) FROM SavingsAccount a JOIN Transaction t ON a.account_id = t.account_id GROUP BY a.account_holder;",
      "SELECT acc.accrual_date, SUM(acc.accrual_amount) FROM InterestAccrual acc JOIN SavingsAccount s ON acc.account_id = s.account_id GROUP BY acc.accrual_date;",
      "SELECT interest_id, MAX(interest_rate) FROM Interest;",
      "SELECT account_id, MIN(balance) FROM SavingsAccount;",
      "SELECT transaction_id, AVG(transaction_amount) FROM Transaction;",
      "SELECT AVG(accrual_amount) FROM InterestAccrual;",
      "SELECT COUNT(*) FROM Interest;",
      "SELECT * FROM Interest;",
      "SELECT * FROM SavingsAccount;",
      "SELECT * FROM Transaction;",
      "SELECT * FROM InterestAccrual;",
      "SELECT account_holder, balance FROM SavingsAccount",
      "SELECT account_id, transaction_id, transaction_amount, transaction_date FROM Transaction",
      "SELECT accrual_id, account_id, accrual_amount, accrual_date FROM InterestAccrual",
      "SELECT account_holder, balance, interest_rate FROM SavingsAccount JOIN Interest ON SavingsAccount.interest_id = Interest.interest_id",
      "SELECT SUM(balance) AS total_balance FROM SavingsAccount",
      "SELECT AVG(interest_rate) AS avg_interest_rate FROM Interest",
      "SELECT account_holder, balance FROM SavingsAccount WHERE balance > 1000",
      "SELECT transaction_id, transaction_amount FROM Transaction WHERE transaction_amount < 0",
      "SELECT * FROM SavingsAccount ORDER BY balance DESC",
      "SELECT * FROM Interest WHERE interest_rate > 0.05",
      "SELECT account_holder, balance FROM SavingsAccount WHERE balance BETWEEN 1000 AND 5000",
      "SELECT account_holder, balance, transaction_amount FROM SavingsAccount JOIN Transaction ON SavingsAccount.account_id = Transaction.account_id",
      "SELECT COUNT(*) AS num_transactions FROM Transaction",
      "SELECT account_holder, SUM(transaction_amount) AS total_transactions FROM SavingsAccount JOIN Transaction ON SavingsAccount.account_id = Transaction.account_id GROUP BY account_holder",
      "SELECT account_holder, avg(accrual_amount) AS avg_accrual FROM SavingsAccount JOIN InterestAccrual ON SavingsAccount.account_id = InterestAccrual.account_id GROUP BY account_holder",
      "SELECT DISTINCT account_id FROM Transaction"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Interest;",
      "SELECT interest_id, interest_rate FROM Interest;",
      "SELECT account_id, account_holder_name, balance FROM SavingsAccount;",
      "SELECT account_id, balance, interest_id FROM SavingsAccount;",
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, account_id, transaction_type, amount, transaction_date FROM Transactions;",
      "SELECT customer_id, customer_name FROM Customer;",
      "SELECT * FROM Address;",
      "SELECT address_id, customer_id, address_line, city, state, zip_code FROM Address;",
      "SELECT SavingsAccount.account_id, SavingsAccount.balance, Interest.interest_rate FROM SavingsAccount JOIN Interest ON SavingsAccount.interest_id = Interest.interest_id;",
      "SELECT Customer.customer_name, Address.address_line, Address.city, Address.state, Address.zip_code FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id;",
      "SELECT Transactions.account_id, Transactions.transaction_type, Transactions.amount, Transactions.transaction_date, SavingsAccount.balance FROM Transactions JOIN SavingsAccount ON Transactions.account_id = SavingsAccount.account_id;",
      "SELECT Customer.customer_name, Address.address_line, Address.city, Address.state, Address.zip_code, SavingsAccount.balance FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.interest_id;",
      "SELECT * FROM Interest WHERE interest_rate > 0.5;",
      "SELECT * FROM SavingsAccount WHERE balance > 10000;",
      "SELECT * FROM Transactions WHERE transaction_type = 'Deposit';",
      "SELECT * FROM Customer WHERE customer_name LIKE 'John%';",
      "SELECT * FROM Address WHERE city = 'New York';",
      "SELECT * FROM Transactions ORDER BY transaction_date DESC;",
      "SELECT * FROM Customer ORDER BY customer_name ASC;",
      "SELECT * FROM Interest;",
      "SELECT account_id, account_holder_name, balance, interest_rate FROM SavingsAccount JOIN Interest ON SavingsAccount.interest_id = Interest.interest_id;",
      "SELECT transaction_id, transaction_type, amount, transaction_date FROM Transactions WHERE amount > 1000;",
      "SELECT customer_id, customer_name FROM Customer WHERE LENGTH(customer_name) > 10;",
      "SELECT address_id, address_line, city, state, zip_code FROM Address WHERE state = 'California';",
      "SELECT account_id, account_holder_name, balance, interest_rate FROM SavingsAccount WHERE balance > 10000 ORDER BY balance DESC;",
      "SELECT customer_name, account_holder_name, balance FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id WHERE balance < 0;",
      "SELECT customer_name, address_line, city FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id WHERE city = 'New York';",
      "SELECT customer_id, SUM(balance) AS total_balance FROM SavingsAccount GROUP BY customer_id;",
      "SELECT COUNT(*) AS total_customers FROM Customer;",
      "SELECT AVG(interest_rate) AS avg_interest_rate FROM Interest;",
      "SELECT MAX(balance) AS max_balance FROM SavingsAccount;",
      "SELECT MIN(amount) AS min_transaction_amount FROM Transactions WHERE transaction_type = 'withdrawal';",
      "SELECT customer_name, account_holder_name, transaction_date, amount FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id JOIN Transactions ON SavingsAccount.account_id = Transactions.account_id WHERE transaction_type = 'deposit' ORDER BY transaction_date DESC;",
      "SELECT customer_name, address_line, city, zip_code FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id WHERE city LIKE 'S%';",
      "SELECT AVG(balance) AS avg_balance, MAX(balance) AS max_balance, MIN(balance) AS min_balance FROM SavingsAccount;",
      "SELECT COUNT(*) AS total_transactions FROM Transactions WHERE transaction_type = 'transfer';",
      "SELECT customer_name, account_holder_name, balance, transaction_date FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id JOIN Transactions ON SavingsAccount.account_id = Transactions.account_id WHERE balance < 0;",
      "SELECT customer_name, address_line, city, zip_code FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id WHERE zip_code LIKE '%34';",
      "SELECT customer_name, account_holder_name, transaction_type, amount FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id JOIN Transactions ON SavingsAccount.account_id = Transactions.account_id WHERE amount > 5000;"
    ]
  }
]