[
  {
    "statements": [
      "SELECT * FROM loan_approval;",
      "SELECT loan_id, applicant_name FROM loan_approval;",
      "SELECT loan_id, income FROM loan_approval WHERE credit_score > 700;",
      "SELECT * FROM loan_approval WHERE approval_status = TRUE;",
      "SELECT loan_id, applicant_name FROM loan_approval WHERE income > 50000;",
      "SELECT * FROM loan_approval WHERE credit_score < 600;",
      "SELECT loan_id, loan_amount FROM loan_approval WHERE income > 75000;",
      "SELECT loan_id, approval_status FROM loan_approval WHERE credit_score > 650;",
      "SELECT * FROM loan_approval WHERE income BETWEEN 40000 AND 80000;",
      "SELECT loan_id, credit_score FROM loan_approval WHERE approval_status = FALSE;",
      "SELECT * FROM loan_approval WHERE income < 30000;",
      "SELECT loan_id, income, loan_amount FROM loan_approval WHERE credit_score BETWEEN 600 AND 700;",
      "SELECT loan_id, applicant_name FROM loan_approval WHERE loan_amount > 100000;",
      "SELECT * FROM loan_approval WHERE credit_score >= 700;",
      "SELECT loan_id, income, approval_status FROM loan_approval WHERE loan_amount < 50000;",
      "SELECT * FROM loan_approval WHERE income >= 60000;",
      "SELECT loan_id, credit_score FROM loan_approval WHERE approval_status = TRUE;",
      "SELECT * FROM loan_approval WHERE credit_score < 500;",
      "SELECT loan_id, income FROM loan_approval WHERE approval_status = FALSE;",
      "SELECT * FROM loan_approval WHERE income < 40000;",
      "SELECT * FROM loan_approval WHERE credit_score > 700;",
      "SELECT applicant_name, income FROM loan_approval WHERE approval_status = true;",
      "SELECT loan_id, applicant_name, loan_amount FROM loan_approval WHERE income > 50000;",
      "SELECT COUNT(*) FROM loan_approval WHERE approval_status = false;",
      "SELECT AVG(credit_score) FROM loan_approval WHERE approval_status = true;",
      "SELECT MAX(income) FROM loan_approval WHERE credit_score < 600;",
      "SELECT * FROM loan_approval WHERE credit_score BETWEEN 600 AND 800;",
      "SELECT SUM(loan_amount) FROM loan_approval WHERE approval_status = true;",
      "SELECT DISTINCT applicant_name FROM loan_approval WHERE credit_score > 750;",
      "SELECT applicant_name, income, loan_amount FROM loan_approval WHERE income > loan_amount;",
      "SELECT loan_id, applicant_name, credit_score FROM loan_approval WHERE income < 30000;",
      "SELECT * FROM loan_approval WHERE approval_status = false AND credit_score > 650;",
      "SELECT AVG(income) FROM loan_approval WHERE approval_status = true AND credit_score > 700;",
      "SELECT MIN(loan_amount) FROM loan_approval WHERE credit_score > 750;",
      "SELECT applicant_name, income, approval_status FROM loan_approval WHERE loan_amount > 100000;",
      "SELECT SUM(credit_score) FROM loan_approval WHERE approval_status = true;",
      "SELECT DISTINCT loan_id FROM loan_approval WHERE approval_status = false;",
      "SELECT loan_id, applicant_name, income, loan_amount FROM loan_approval WHERE loan_amount > income;",
      "SELECT AVG(loan_amount) FROM loan_approval WHERE credit_score > 700;",
      "SELECT * FROM loan_approval WHERE income > loan_amount AND approval_status = true;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Applicants;",
      "SELECT name, credit_score FROM Applicants;",
      "SELECT * FROM LoanApplications;",
      "SELECT loan_amount, approval_status FROM LoanApplications;",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
      "SELECT name, credit_score, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
      "SELECT name, credit_score, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score > 700;",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount > 50000;",
      "SELECT name, credit_score, financial_history FROM Applicants WHERE credit_score < 600;",
      "SELECT name, loan_amount, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status = 'approved';",
      "SELECT name, loan_amount, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status = 'rejected';",
      "SELECT name, loan_amount, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status LIKE '%pending%';",
      "SELECT name, credit_score, financial_history FROM Applicants WHERE financial_history IS NOT NULL;",
      "SELECT AVG(credit_score) AS avg_credit_score FROM Applicants;",
      "SELECT name, MAX(loan_amount) AS max_loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
      "SELECT name, MIN(loan_amount) AS min_loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
      "SELECT name, SUM(loan_amount) AS total_loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
      "SELECT COUNT(*) AS total_applicants FROM Applicants;",
      "SELECT COUNT(*) AS total_approved_loans FROM LoanApplications WHERE approval_status = 'approved';",
      "SELECT COUNT(*) AS total_rejected_loans FROM LoanApplications WHERE approval_status = 'rejected';",
      "SELECT * FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score > 700 AND loan_amount > 50000",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status = 'approved'",
      "SELECT AVG(credit_score) FROM Applicants",
      "SELECT name, financial_history FROM Applicants WHERE credit_score < 500",
      "SELECT DISTINCT name FROM Applicants",
      "SELECT MAX(loan_amount) FROM LoanApplications",
      "SELECT COUNT(*) FROM LoanApplications WHERE approval_status = 'pending'",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id ORDER BY loan_amount DESC",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score < 600 ORDER BY credit_score ASC",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score < 600 LIMIT 5",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE financial_history LIKE '%bad%'",
      "SELECT DISTINCT name, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status IN ('approved', 'pending')",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount BETWEEN 10000 AND 50000",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id GROUP BY approval_status",
      "SELECT name FROM Applicants WHERE EXISTS (SELECT * FROM LoanApplications WHERE LoanApplications.applicant_id = Applicants.applicant_id AND loan_amount > 50000)",
      "SELECT name, AVG(loan_amount) FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id GROUP BY name HAVING AVG(loan_amount) > 30000",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount = (SELECT MAX(loan_amount) FROM LoanApplications)",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount = (SELECT MIN(loan_amount) FROM LoanApplications)",
      "SELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount = (SELECT AVG(loan_amount) FROM LoanApplications)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users;",
      "SELECT user_id, credit_score FROM users;",
      "SELECT * FROM loans;",
      "SELECT loan_id, user_id, loan_amount FROM loans;",
      "SELECT loan_id, status FROM loans;",
      "SELECT * FROM financial_history;",
      "SELECT user_id, employment_status FROM financial_history;",
      "SELECT user_id, income, expenses FROM financial_history;",
      "SELECT users.user_id, loans.loan_amount FROM users JOIN loans ON users.user_id = loans.user_id;",
      "SELECT users.username, loans.status FROM users JOIN loans ON users.user_id = loans.user_id;",
      "SELECT users.username, financial_history.income FROM users JOIN financial_history ON users.user_id = financial_history.user_id;",
      "SELECT users.user_id, loans.loan_amount, financial_history.income FROM users JOIN loans ON users.user_id = loans.user_id JOIN financial_history ON users.user_id = financial_history.user_id;",
      "SELECT users.username, loans.loan_amount, financial_history.expenses FROM users JOIN loans ON users.user_id = loans.user_id JOIN financial_history ON users.user_id = financial_history.user_id;",
      "SELECT users.username AS borrower, loans.loan_amount AS amount FROM users JOIN loans ON users.user_id = loans.user_id;",
      "SELECT user_id, AVG(income) AS average_income FROM financial_history GROUP BY user_id;",
      "SELECT user_id, COUNT(*) AS num_loans FROM loans GROUP BY user_id;",
      "SELECT user_id, MAX(loan_amount) AS max_loan_amount FROM loans GROUP BY user_id;",
      "SELECT user_id, MIN(loan_amount) AS min_loan_amount FROM loans GROUP BY user_id;",
      "SELECT user_id, SUM(loan_amount) AS total_loan_amount FROM loans GROUP BY user_id;",
      "SELECT users.username, loans.loan_amount FROM users INNER JOIN loans ON users.user_id = loans.user_id WHERE loans.status = 'approved';",
      "SELECT users.username, financial_history.employment_status, financial_history.income FROM users LEFT JOIN financial_history ON users.user_id = financial_history.user_id WHERE financial_history.income > 50000;",
      "SELECT users.username, loans.loan_amount, financial_history.income FROM users INNER JOIN loans ON users.user_id = loans.user_id LEFT JOIN financial_history ON users.user_id = financial_history.user_id WHERE loans.loan_amount > 1000 AND financial_history.expenses < 2000;",
      "SELECT users.username, loans.loan_amount, financial_history.employment_status FROM users INNER JOIN loans ON users.user_id = loans.user_id LEFT JOIN financial_history ON users.user_id = financial_history.user_id WHERE loans.status = 'pending' AND financial_history.employment_status = 'employed';",
      "SELECT users.username, SUM(loans.loan_amount) AS total_loan_amount FROM users INNER JOIN loans ON users.user_id = loans.user_id GROUP BY users.username HAVING total_loan_amount > 5000;",
      "SELECT ..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM CustomerInfo;",
      "SELECT full_name, age FROM CustomerInfo;",
      "SELECT address FROM CustomerInfo WHERE age > 30;",
      "SELECT * FROM LoanApplication;",
      "SELECT loan_amount, loan_purpose FROM LoanApplication WHERE application_status = 'Approved';",
      "SELECT * FROM FinancialHistory;",
      "SELECT income, expenses FROM FinancialHistory WHERE assets > liabilities;",
      "SELECT * FROM ApprovalLog;",
      "SELECT approval_status, approval_date FROM ApprovalLog WHERE approval_date >= '2022-01-01';",
      "SELECT full_name, age, address, credit_score FROM CustomerInfo WHERE credit_score > 700;",
      "SELECT application_id, loan_amount, loan_purpose FROM LoanApplication WHERE loan_amount > 5000;",
      "SELECT customer_id, income, expenses, assets, liabilities FROM FinancialHistory WHERE income >= 50000;",
      "SELECT application_id, approval_status, approval_date FROM ApprovalLog WHERE approval_status = 'Denied';",
      "SELECT full_name, age, address, credit_score, loan_amount, loan_purpose FROM CustomerInfo JOIN LoanApplication ON CustomerInfo.customer_id = LoanApplication.customer_id;",
      "SELECT full_name, age, income, expenses, assets, liabilities FROM CustomerInfo JOIN FinancialHistory ON CustomerInfo.customer_id = FinancialHistory.customer_id;",
      "SELECT application_id, approval_status, approval_date, full_name, address FROM ApprovalLog JOIN LoanApplication ON ApprovalLog.application_id = LoanApplication.application_id JOIN CustomerInfo ON LoanApplication.customer_id = CustomerInfo.customer_id;",
      "SELECT application_id, approval_status, approval_date, full_name, income, expenses FROM ApprovalLog JOIN LoanApplication ON ApprovalLog.application_id = LoanApplication.application_id JOIN FinancialHistory ON LoanApplication.customer_id = FinancialHistory.customer_id JOIN CustomerInfo ON LoanApplication.customer_id = CustomerInfo.customer_id;",
      "SELECT customer_id, full_name, age, address, credit_score, income, expenses, assets, liabilities FROM CustomerInfo JOIN FinancialHistory ON CustomerInfo.customer_id = FinancialHistory.customer_id;",
      "SELECT customer_id, full_name, age, address, credit_score, loan_amount, loan_purpose, income, expenses, assets, liabilities FROM CustomerInfo JOIN LoanApplication ON CustomerInfo.customer_id = LoanApplication.customer_id JOIN FinancialHistory ON CustomerInfo.customer_id = FinancialHistory.customer_id;",
      "SELECT application_id, approval_status, approval_date, customer_id, full_name, age, address, credit_score FROM ApprovalLog JOIN LoanApplication ON ApprovalLog.application_id = LoanApplication.application_id JOIN CustomerInfo ON LoanApplication.customer_id = CustomerInfo.customer_id;",
      "SELECT full_name, age, address FROM CustomerInfo WHERE age > 30;",
      "SELECT * FROM CustomeInfo WHERE credit_score > 700;",
      "SELECT COUNT(*) FROM FinancialHistory WHERE income > expenses;",
      "SELECT c.full_name, l.loan_amount FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id;",
      "SELECT c.full_name, f.assets, f.liabilities FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id;",
      "SELECT c.full_name, l.loan_amount, l.loan_purpose, a.approval_status FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id;",
      "SELECT c.full_name, f.income, f.expenses FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id WHERE f.assets - f.liabilities > 0;",
      "SELECT c.full_name, l.loan_amount FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id WHERE l.loan_amount > 5000;",
      "SELECT c.full_name, l.loan_amount, a.approval_status FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE a.approval_status = 'Approved';",
      "SELECT c.full_name, f.income, f.expenses, l.loan_amount FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id WHERE f.income - f.expenses > 5000 AND l.loan_amount < 10000;",
      "SELECT c.full_name, f.income, f.expenses, l.loan_amount, a.approval_status FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE f.income > 10000 AND f.assets - f.liabilities > 0 AND a.approval_status = 'Approved';",
      "SELECT c.full_name, f.income, f.expenses, l.loan_amount, a.approval_date FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE f.income > l.loan_amount AND f.expenses < 5000 AND a.approval_date >= CURRENT_DATE;",
      "SELECT c.full_name, f.income, f.expenses, l.loan_amount, a.approval_date FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE f.income - f.expenses > 5000 AND l.loan_amount < 10000 AND a.approval_status = 'Approved' ORDER BY a.approval_date DESC;",
      "SELECT c.full_name, AVG(f.assets - f.liabilities) AS net_worth FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name;",
      "SELECT loan_purpose, COUNT(application_id) AS number_of_applications FROM LoanApplication GROUP BY loan_purpose HAVING COUNT(application_id) > 5;",
      "SELECT c.full_name, SUM(l.loan_amount) AS total_loan_amount FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id GROUP BY c.full_name HAVING SUM(l.loan_amount) > 100000;",
      "SELECT c.full_name, MAX(f.income) AS highest_income FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name;",
      "SELECT c.full_name, MIN(f.expenses) AS lowest_expenses FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name;",
      "SELECT l.loan_purpose, AVG(l.loan_amount) AS average_loan_amount FROM LoanApplication l GROUP BY l.loan_purpose;",
      "SELECT c.full_name, SUM(f.assets - f.liabilities) AS total_net_worth FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name HAVING SUM(f.assets - f.liabilities) > 10000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM borrowers;",
      "SELECT * FROM loans;",
      "SELECT * FROM payments;",
      "SELECT * FROM credit_reports;",
      "SELECT * FROM approvals;",
      "SELECT borrower_id, name FROM borrowers;",
      "SELECT loan_id, loan_amount FROM loans;",
      "SELECT payment_id, payment_amount FROM payments;",
      "SELECT report_id, report_date FROM credit_reports;",
      "SELECT approval_id, approval_date FROM approvals;",
      "SELECT borrower_id, name, credit_score FROM borrowers;",
      "SELECT loan_id, loan_amount, loan_term FROM loans;",
      "SELECT payment_id, payment_amount, payment_date FROM payments;",
      "SELECT report_id, report_date, report_details FROM credit_reports;",
      "SELECT approval_id, approval_date, approved_by FROM approvals;",
      "SELECT borrower_id, credit_score FROM borrowers WHERE credit_score > 700;",
      "SELECT loan_id, status FROM loans WHERE status = 'approved';",
      "SELECT payment_id, payment_amount FROM payments WHERE payment_amount > 1000;",
      "SELECT report_id, report_date FROM credit_reports WHERE report_date > '2022-01-01';",
      "SELECT approval_id, approved_by FROM approvals WHERE approval_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM borrowers;",
      "SELECT borrower_id, name FROM borrowers WHERE credit_score > 700;",
      "SELECT name, financial_history FROM borrowers WHERE LENGTH(financial_history) > 100;",
      "SELECT * FROM loans WHERE loan_amount > 50000;",
      "SELECT loan_id, loan_amount, status FROM loans WHERE status = 'approved';",
      "SELECT borrower_id, COUNT(loan_id) AS total_loans FROM loans GROUP BY borrower_id;",
      "SELECT borrower_id, AVG(loan_amount) AS avg_loan_amount FROM loans GROUP BY borrower_id;",
      "SELECT borrower_id, MAX(loan_amount) AS max_loan_amount FROM loans GROUP BY borrower_id;",
      "SELECT COUNT(*) AS total_payments FROM payments;",
      "SELECT SUM(payment_amount) AS total_payment_amount FROM payments;",
      "SELECT loan_id, COUNT(*) AS total_payments FROM payments GROUP BY loan_id;",
      "SELECT borrower_id, report_date, report_details FROM credit_reports WHERE borrower_id = 1001;",
      "SELECT borrower_id, COUNT(approval_id) AS total_approvals FROM approvals GROUP BY borrower_id;",
      "SELECT loan_id, MAX(approval_date) AS latest_approval_date FROM approvals GROUP BY loan_id;",
      "SELECT loan_id, AVG(payment_amount) AS avg_payment_amount FROM payments GROUP BY loan_id;",
      "SELECT borrower_id, MIN(credit_score) AS min_credit_score FROM borrowers;",
      "SELECT borrower_id, loan_id, payment_amount, payment_date FROM payments JOIN loans ON payments.loan_id = loans.loan_id;",
      "SELECT c.report_id, b.name, c.report_date, c.report_details FROM credit_reports c JOIN borrowers b ON c.borrower_id = b.borrower_id;",
      "SELECT l.loan_id, b.name, p.payment_amount, p.payment_date FROM loans l JOIN borrowers b ON l.borrower_id = b.borrower_id JOIN payments p ON l.loan_id = p.loan_id;",
      "SELECT approval_id, a.loan_id, a.approval_date, b.name AS approved_by FROM approvals a JOIN borrowers b ON a.loan_id = b.borrower_id;"
    ]
  }
]