[
  {
    "statements": [
      "SELECT * FROM Transactions WHERE transaction_type = 'purchase';",
      "SELECT transaction_id, amount FROM Transactions WHERE amount > 100;",
      "SELECT COUNT(*) FROM Transactions;",
      "SELECT * FROM Transactions WHERE transaction_time >= '2022-01-01';",
      "SELECT AVG(amount) FROM Transactions;",
      "SELECT * FROM Transactions ORDER BY transaction_time DESC;",
      "SELECT SUM(amount) FROM Transactions WHERE transaction_type = 'refund';",
      "SELECT * FROM Transactions WHERE amount BETWEEN 50 AND 100;",
      "SELECT MAX(amount) FROM Transactions;",
      "SELECT * FROM Transactions WHERE transaction_type = 'payment' AND amount > 500;",
      "SELECT MIN(amount) FROM Transactions;",
      "SELECT * FROM Transactions WHERE transaction_time < '2022-03-01';",
      "SELECT DISTINCT transaction_type FROM Transactions;",
      "SELECT * FROM Transactions WHERE transaction_time BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT * FROM Transactions WHERE transaction_type LIKE 'p%';",
      "SELECT AVG(amount) FROM Transactions WHERE transaction_type = 'purchase';",
      "SELECT * FROM Transactions WHERE amount < 50 OR amount > 500;",
      "SELECT COUNT(DISTINCT transaction_type) FROM Transactions;",
      "SELECT * FROM Transactions WHERE amount = (SELECT MAX(amount) FROM Transactions);",
      "SELECT * FROM Transactions WHERE transaction_type = 'payment' ORDER BY amount DESC;",
      "SELECT * FROM Transactions WHERE amount > 1000 AND transaction_type = 'deposit'",
      "SELECT transaction_id, amount FROM Transactions WHERE transaction_type = 'withdrawal'",
      "SELECT COUNT(*) AS total_transactions FROM Transactions",
      "SELECT AVG(amount) AS avg_transaction_amount FROM Transactions WHERE transaction_type = 'deposit'",
      "SELECT * FROM Transactions ORDER BY transaction_time DESC LIMIT 10",
      "SELECT MAX(amount) AS max_transaction_amount FROM Transactions",
      "SELECT MIN(amount) AS min_transaction_amount FROM Transactions",
      "SELECT transaction_type, COUNT(*) AS transaction_count FROM Transactions GROUP BY transaction_type",
      "SELECT transaction_type, EXTRACT(MONTH FROM transaction_time) AS transaction_month FROM Transactions",
      "SELECT * FROM Transactions WHERE EXTRACT(YEAR FROM transaction_time) = 2021",
      "SELECT AVG(amount) AS avg_transaction_amount FROM Transactions WHERE EXTRACT(DAY FROM transaction_time) = 15",
      "SELECT transaction_type, SUM(amount) AS total_amount FROM Transactions GROUP BY transaction_type",
      "SELECT transaction_type, SUM(amount) AS total_amount FROM Transactions WHERE EXTRACT(YEAR FROM transaction_time) = 2022 GROUP BY transaction_type",
      "SELECT AVG(amount) AS avg_transaction_amount FROM Transactions WHERE EXTRACT(MONTH FROM transaction_time) = 6",
      "SELECT * FROM Transactions WHERE transaction_time BETWEEN '2022-01-01' AND '2022-03-31'",
      "SELECT transaction_type, MIN(transaction_time) AS earliest_transaction FROM Transactions GROUP BY transaction_type",
      "SELECT DISTINCT transaction_type FROM Transactions",
      "SELECT * FROM Transactions WHERE amount BETWEEN 500 AND 1000",
      "SELECT * FROM Transactions WHERE transaction_type LIKE 'deposit%'",
      "SELECT * FROM Transactions WHERE transaction_time > '2022-06-15'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, amount FROM Transactions WHERE transaction_type='debit';",
      "SELECT SUM(amount) FROM Transactions;",
      "SELECT COUNT(*) FROM ATM WHERE is_active=true;",
      "SELECT AVG(amount) FROM Transactions;",
      "SELECT MAX(amount) FROM Transactions;",
      "SELECT * FROM ATM WHERE location='New York';",
      "SELECT * FROM Transactions ORDER BY transaction_time DESC;",
      "SELECT transaction_id, amount FROM Transactions WHERE amount > 1000;",
      "SELECT * FROM ATM WHERE is_active=false;",
      "SELECT COUNT(DISTINCT transaction_type) FROM Transactions;",
      "SELECT AVG(amount) FROM Transactions WHERE transaction_type='credit';",
      "SELECT MAX(transaction_time) FROM Transactions;",
      "SELECT * FROM Transactions WHERE amount BETWEEN 500 AND 1000;",
      "SELECT atm_id, location FROM ATM;",
      "SELECT COUNT(*) FROM Transactions WHERE transaction_type='debit';",
      "SELECT MIN(amount) FROM Transactions;",
      "SELECT * FROM ATM ORDER BY location ASC;",
      "SELECT * FROM Transactions WHERE transaction_time >= '2021-01-01';",
      "SELECT transaction_type, COUNT(*) FROM Transactions GROUP BY transaction_type HAVING COUNT(*) > 2;",
      "SELECT * FROM Transactions WHERE amount > 100",
      "SELECT transaction_id, amount FROM Transactions WHERE transaction_type = 'purchase'",
      "SELECT * FROM Transactions WHERE transaction_time BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT AVG(amount) AS average_amount FROM Transactions",
      "SELECT MIN(amount) AS min_amount, MAX(amount) AS max_amount FROM Transactions",
      "SELECT COUNT(*) AS total_transactions FROM Transactions",
      "SELECT * FROM ATM WHERE is_active = TRUE",
      "SELECT atm_id, location FROM ATM WHERE location LIKE '%mall%'",
      "SELECT * FROM Transactions JOIN ATM ON Transactions.transaction_id = ATM.atm_id",
      "SELECT SUM(amount) AS total_amount FROM Transactions",
      "SELECT location, COUNT(transaction_id) AS transaction_count FROM Transactions JOIN ATM ON Transactions.transaction_id = ATM.atm_id GROUP BY location",
      "SELECT transaction_type, SUM(amount) AS total_amount FROM Transactions GROUP BY transaction_type",
      "SELECT * FROM Transactions WHERE amount IN (SELECT amount FROM Transactions WHERE transaction_type = 'withdrawal')",
      "SELECT location, AVG(amount) AS average_amount FROM Transactions JOIN ATM ON Transactions.transaction_id = ATM.atm_id GROUP BY location",
      "SELECT * FROM ATM WHERE atm_id IN (SELECT DISTINCT transaction_id FROM Transactions WHERE amount > 500)",
      "SELECT * FROM Transactions WHERE transaction_time > now() - INTERVAL '1 day'",
      "SELECT SUM(amount) AS total_amount, EXTRACT(MONTH FROM transaction_time) AS month FROM Transactions GROUP BY EXTRACT(MONTH FROM transaction_time)",
      "SELECT * FROM ATM WHERE atm_id NOT IN (SELECT atm_id FROM Transactions)",
      "SELECT transaction_id, transaction_time + INTERVAL '3 hours' AS new_time FROM Transactions",
      "SELECT * FROM Transactions WHERE EXTRACT(DOW FROM transaction_time) = 1"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, transaction_type FROM Transactions;",
      "SELECT amount, timestamp FROM Transactions WHERE transaction_type = 'Deposit';",
      "SELECT account_number, account_balance FROM Accounts WHERE account_balance > 1000;",
      "SELECT * FROM ATMs WHERE bank_name = 'ABC Bank';",
      "SELECT transaction_id, amount, timestamp FROM Transactions WHERE amount > 100;",
      "SELECT account_id, account_number FROM Accounts WHERE account_balance < 0;",
      "SELECT * FROM Transactions WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT atm_id, bank_name FROM ATMs WHERE location LIKE '%New York%';",
      "SELECT COUNT(*) FROM Transactions;",
      "SELECT SUM(amount) FROM Transactions WHERE transaction_type = 'Withdrawal';",
      "SELECT AVG(account_balance) FROM Accounts;",
      "SELECT MAX(amount) FROM Transactions;",
      "SELECT MIN(account_balance) FROM Accounts;",
      "SELECT DISTINCT bank_name FROM ATMs;",
      "SELECT transaction_id, amount FROM Transactions ORDER BY amount DESC;",
      "SELECT * FROM Accounts ORDER BY account_balance ASC;",
      "SELECT account_id, account_number, account_balance FROM Accounts LIMIT 10;",
      "SELECT atm_id, location FROM ATMs ORDER BY atm_id DESC LIMIT 5;",
      "SELECT * FROM Transactions WHERE transaction_type IN ('Deposit', 'Withdrawal');",
      "SELECT * FROM Transactions WHERE transaction_type = 'Deposit' AND amount > 100",
      "SELECT COUNT(*) FROM Accounts WHERE account_balance < 0",
      "SELECT atm_id, location FROM ATMs WHERE bank_name = 'ABC Bank'",
      "SELECT AVG(amount) FROM Transactions",
      "SELECT t1.account_id, t1.account_number, t2.transaction_id FROM Accounts t1 JOIN Transactions t2 ON t1.account_id = t2.transaction_id",
      "SELECT t1.*, t2.amount FROM Transactions t1 LEFT JOIN Accounts t2 ON t1.transaction_id = t2.account_id",
      "SELECT MAX(timestamp) FROM Transactions",
      "SELECT * FROM Transactions ORDER BY timestamp DESC",
      "SELECT t1.*, t2.location FROM Accounts t1 INNER JOIN ATMs t2 ON t1.account_id = t2.atm_id",
      "SELECT SUM(account_balance) FROM Accounts",
      "SELECT transaction_type, COUNT(*) FROM Transactions GROUP BY transaction_type",
      "SELECT t1.*, t2.bank_name FROM ATMs t1 JOIN Accounts t2 ON t1.atm_id = t2.account_id",
      "SELECT DISTINCT account_balance FROM Accounts",
      "SELECT COUNT(DISTINCT transaction_id) FROM Transactions",
      "SELECT * FROM Transactions LIMIT 10",
      "SELECT AVG(account_balance) FROM Accounts",
      "SELECT MIN(amount) FROM Transactions",
      "SELECT t1.transaction_id, t2.amount FROM Transactions t1 RIGHT JOIN Accounts t2 ON t1.transaction_id = t2.account_id",
      "SELECT * FROM ATMs WHERE location LIKE '%City%'",
      "SELECT account_id, SUM(amount) FROM Transactions GROUP BY account_id HAVING SUM(amount) > 1000"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, transaction_type FROM Transactions;",
      "SELECT user_id, username FROM Users;",
      "SELECT * FROM Users WHERE user_id = 1;",
      "SELECT withdrawal_id, user_id, amount FROM ATMWithdrawals;",
      "SELECT SUM(amount) FROM ATMWithdrawals;",
      "SELECT * FROM ATMDeposits WHERE user_id = 2;",
      "SELECT AVG(amount) FROM ATMDeposits;",
      "SELECT transaction_type, amount FROM Transactions WHERE amount > 100;",
      "SELECT * FROM Transactions WHERE transaction_type = 'deposit';",
      "SELECT user_id, amount FROM ATMWithdrawals WHERE amount > 500;",
      "SELECT DISTINCT user_id FROM ATMWithdrawals;",
      "SELECT MAX(amount) FROM ATMDeposits WHERE user_id = 3;",
      "SELECT timestamp FROM Transactions ORDER BY timestamp DESC;",
      "SELECT user_id, COUNT(amount) FROM ATMWithdrawals GROUP BY user_id;",
      "SELECT SUM(amount) AS total_amount FROM ATMWithdrawals WHERE user_id = 4;",
      "SELECT username, email FROM Users WHERE user_id = 5;",
      "SELECT transaction_id, transaction_type, amount FROM Transactions WHERE timestamp >= '2022-01-01';",
      "SELECT AVG(amount) AS average_amount FROM ATMDeposits;",
      "SELECT user_id, MAX(amount) FROM ATMWithdrawals GROUP BY user_id;",
      "SELECT * FROM Transactions WHERE amount > 1000 AND timestamp > '2022-01-01';",
      "SELECT transaction_id, transaction_type FROM Transactions WHERE transaction_type = 'purchase' ORDER BY timestamp DESC;",
      "SELECT user_id, username, email FROM Users WHERE username LIKE '%john%' AND email LIKE '%gmail.com';",
      "SELECT * FROM Transactions JOIN ATMWithdrawals ON Transactions.transaction_id = ATMWithdrawals.withdrawal_id WHERE amount > 500;",
      "SELECT * FROM Users JOIN ATMDeposits ON Users.user_id = ATMDeposits.user_id WHERE amount >= 1000;",
      "SELECT COUNT(*) AS total_transactions FROM Transactions;",
      "SELECT SUM(amount) AS total_amount FROM Transactions WHERE timestamp > '2022-01-01';",
      "SELECT AVG(amount) AS average_amount FROM Transactions WHERE transaction_type = 'deposit';",
      "SELECT user_id, COUNT(*) AS total_deposits FROM ATMDeposits GROUP BY user_id HAVING total_deposits > 3;",
      "SELECT user_id, COUNT(*) AS total_withdrawals FROM ATMWithdrawals GROUP BY user_id ORDER BY total_withdrawals DESC LIMIT 5;",
      "SELECT user_id, COUNT(*) AS total_transactions FROM Transactions GROUP BY user_id HAVING total_transactions BETWEEN 10 AND 50;",
      "SELECT user_id, SUM(amount) AS total_withdrawn FROM ATMWithdrawals GROUP BY user_id HAVING total_withdrawn > 5000;",
      "SELECT username, timestamp FROM Users JOIN ATMWithdrawals ON Users.user_id = ATMWithdrawals.user_id WHERE amount BETWEEN 100 AND 500;",
      "SELECT user_id, MAX(amount) AS max_withdrawal FROM ATMWithdrawals GROUP BY user_id;",
      "SELECT user_id, MIN(amount) AS min_deposit FROM ATMDeposits GROUP BY user_id;",
      "SELECT user_id, AVG(amount) AS average_deposit FROM ATMDeposits GROUP BY user_id ORDER BY average_deposit DESC;",
      "SELECT transaction_type, COUNT(*) AS total_transactions FROM Transactions GROUP BY transaction_type ORDER BY total_transactions DESC LIMIT 3;",
      "SELECT user_id, SUM(amount) AS total_transaction_amount FROM Transactions GROUP BY user_id;",
      "SELECT user_id, TIMESTAMPDIFF(DAY, MIN(timestamp), MAX(timestamp)) AS days_since_last_transaction FROM Transactions GROUP BY user_id HAVING days_since_last_transaction > 30;",
      "SELECT username, COUNT(*) AS total_transactions FROM Users JOIN Transactions ON Users.user_id = Transactions.user_id GROUP BY username HAVING total_transactions > 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, amount, transaction_type FROM Transactions;",
      "SELECT * FROM ATMWithdrawals;",
      "SELECT withdrawal_id, amount, atm_location FROM ATMWithdrawals;",
      "SELECT * FROM ATMDeposits;",
      "SELECT deposit_id, amount, atm_location FROM ATMDeposits;",
      "SELECT * FROM ATMUsers;",
      "SELECT user_id, name, address FROM ATMUsers;",
      "SELECT * FROM ATMLocations;",
      "SELECT location_id, location_name, address FROM ATMLocations;",
      "SELECT t.transaction_id, t.amount, w.amount, w.atm_location FROM Transactions t, ATMWithdrawals w WHERE t.transaction_id = w.transaction_id;",
      "SELECT d.deposit_id, d.amount, l.location_name FROM ATMDeposits d, ATMLocations l WHERE l.location_id = d.deposit_id;",
      "SELECT u.name, u.address, w.amount FROM ATMUsers u, ATMWithdrawals w WHERE u.user_id = w.transaction_id;",
      "SELECT DISTINCT w.atm_location FROM ATMWithdrawals w;",
      "SELECT name, transaction_date FROM Transactions WHERE amount > 1000;",
      "SELECT COUNT(*) FROM Transactions;",
      "SELECT AVG(amount) FROM Transactions;",
      "SELECT SUM(amount) FROM ATMWithdrawals;",
      "SELECT MIN(amount) FROM ATMDeposits;",
      "SELECT MAX(amount) FROM Transactions;",
      "SELECT * FROM Transactions WHERE amount > 1000;",
      "SELECT * FROM Transactions WHERE transaction_type = 'CREDIT';",
      "SELECT transaction_id, amount, transaction_type FROM Transactions WHERE transaction_date > '2022-01-01';",
      "SELECT withdrawal_id, amount, atm_location, timestamp FROM ATMWithdrawals WHERE amount < 500;",
      "SELECT * FROM ATMWithdrawals WHERE atm_location = 'ATM A';",
      "SELECT deposit_id, amount, atm_location, timestamp FROM ATMDeposits WHERE amount > 100;",
      "SELECT * FROM ATMDeposits WHERE atm_location = 'ATM B' AND timestamp > '2022-06-01';",
      "SELECT user_id, name, address FROM ATMUsers;",
      "SELECT location_id, location_name, address FROM ATMLocations;",
      "SELECT * FROM ATMDeposits JOIN ATMUsers ON ATMDeposits.amount = ATMUsers.user_id;",
      "SELECT * FROM ATMWithdrawals JOIN ATMDeposits ON ATMWithdrawals.amount = ATMDeposits.amount;",
      "SELECT * FROM Transactions JOIN ATMUsers ON Transactions.amount = ATMUsers.user_id;",
      "SELECT t.transaction_id, t.amount, t.transaction_type, u.name FROM Transactions t JOIN ATMUsers u ON t.transaction_id = u.user_id;",
      "SELECT t.transaction_id, t.amount, t.transaction_type, d.amount FROM Transactions t JOIN ATMDeposits d ON t.transaction_id = d.transaction_id;",
      "SELECT t.transaction_id, t.amount, t.transaction_type, w.amount FROM Transactions t JOIN ATMWithdrawals w ON t.transaction_id = w.transaction_id;",
      "SELECT * FROM ATMDeposits UNION SELECT * FROM ATMWithdrawals;",
      "SELECT * FROM ATMDeposits UNION ALL SELECT * FROM ATMWithdrawals;",
      "SELECT COUNT(*) FROM Transactions;",
      "SELECT SUM(amount) FROM Transactions WHERE transaction_date > '2022-01-01';",
      "SELECT AVG(amount) FROM Transactions WHERE transaction_type = 'DEBIT';"
    ]
  }
]