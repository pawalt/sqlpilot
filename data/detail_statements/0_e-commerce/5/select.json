[
  {
    "statements": [
      "SELECT interaction_id, customer_id, interaction_date, interaction_type, interaction_details FROM customer_interactions;",
      "SELECT * FROM customer_interactions;",
      "SELECT interaction_id, customer_id FROM customer_interactions;",
      "SELECT interaction_id, interaction_date FROM customer_interactions;",
      "SELECT customer_id, interaction_details FROM customer_interactions;",
      "SELECT customer_id, interaction_date FROM customer_interactions;",
      "SELECT * FROM customer_interactions WHERE interaction_id = 1;",
      "SELECT * FROM customer_interactions WHERE customer_id = 100;",
      "SELECT * FROM customer_interactions WHERE interaction_type = 'Email';",
      "SELECT * FROM customer_interactions WHERE interaction_date BETWEEN '2021-01-01' AND '2021-01-31';",
      "SELECT * FROM customer_interactions WHERE interaction_type = 'Call' AND customer_id = 200;",
      "SELECT MAX(interaction_id) FROM customer_interactions;",
      "SELECT MIN(interaction_date) FROM customer_interactions;",
      "SELECT AVG(customer_id) FROM customer_interactions;",
      "SELECT COUNT(*) FROM customer_interactions;",
      "SELECT customer_id, COUNT(*) FROM customer_interactions GROUP BY customer_id;",
      "SELECT interaction_type, COUNT(*) FROM customer_interactions GROUP BY interaction_type;",
      "SELECT customer_id, interaction_type, COUNT(*) FROM customer_interactions GROUP BY customer_id, interaction_type;",
      "SELECT customer_id, AVG(interaction_id) FROM customer_interactions GROUP BY customer_id;",
      "SELECT DISTINCT customer_id FROM customer_interactions;",
      "SELECT * FROM customer_interactions WHERE interaction_type='purchase';",
      "SELECT customer_id, COUNT(*) AS interaction_count FROM customer_interactions GROUP BY customer_id;",
      "SELECT customer_id, AVG(DATEDIFF(NOW(), interaction_date)) AS average_days_since_interaction FROM customer_interactions GROUP BY customer_id;",
      "SELECT interaction_type, COUNT(*) AS interaction_count FROM customer_interactions GROUP BY interaction_type;",
      "SELECT customer_id, MIN(interaction_date) AS first_interaction_date FROM customer_interactions GROUP BY customer_id;",
      "SELECT customer_id, MAX(interaction_date) AS last_interaction_date FROM customer_interactions GROUP BY customer_id;",
      "SELECT customer_id, interaction_type, COUNT(*) AS interaction_count FROM customer_interactions GROUP BY customer_id, interaction_type;",
      "SELECT customer_id, interaction_type, AVG(DATEDIFF(NOW(), interaction_date)) AS average_days_since_interaction FROM customer_interactions GROUP BY customer_id, interaction_type;",
      "SELECT customer_id, interaction_type, COUNT(*) AS interaction_count, AVG(DATEDIFF(NOW(), interaction_date)) AS average_days_since_interaction FROM customer_interactions GROUP BY customer_id, interaction_type;",
      "SELECT customer_id, interaction_type, interaction_details FROM customer_interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_id, interaction_type, interaction_details FROM customer_interactions WHERE interaction_date >= '2022-01-01' AND interaction_date <= '2022-06-30';",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_type IN ('purchase', 'query') ORDER BY interaction_date DESC;",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_type='complaint' AND interaction_details LIKE '%poor service%';",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_type='complaint' AND interaction_details LIKE '%poor product%';",
      "SELECT customer_id, interaction_type, interaction_details FROM customer_interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-12-31' AND interaction_type='query' ORDER BY interaction_date DESC;",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_date >= '2022-01-01' AND interaction_date <= '2022-06-30' AND interaction_type='complaint' ORDER BY interaction_date DESC;",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_type='complaint' AND interaction_details LIKE '%refund%' ORDER BY interaction_date DESC;",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_type='complaint' AND interaction_details LIKE '%exchange%' ORDER BY interaction_date DESC;",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_type='purchase' AND interaction_details LIKE '%discount%' ORDER BY interaction_date DESC;",
      "SELECT customer_id, interaction_date, interaction_type FROM customer_interactions WHERE interaction_type='purchase' AND interaction_details LIKE '%promotion%' ORDER BY interaction_date DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_name, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT * FROM purchases;",
      "SELECT purchase_id, total_amount FROM purchases;",
      "SELECT customer_id, purchase_date FROM purchases WHERE total_amount > 100;",
      "SELECT c.customer_name, p.total_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id;",
      "SELECT c.customer_name, SUM(p.total_amount) AS total_spent FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, p.purchase_date, p.total_amount FROM customers c LEFT JOIN purchases p ON c.customer_id = p.customer_id;",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT * FROM purchases WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, email, phone_number FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT c.customer_id, COUNT(p.purchase_id) AS total_purchases FROM customers c LEFT JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.customer_id;",
      "SELECT SUM(total_amount) AS total_spent FROM purchases;",
      "SELECT customer_id, AVG(total_amount) AS avg_purchase FROM purchases GROUP BY customer_id;",
      "SELECT customer_name, MAX(total_amount) AS largest_purchase FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY customer_name;",
      "SELECT customer_id, purchase_date, total_amount FROM purchases ORDER BY total_amount DESC;",
      "SELECT customer_id, purchase_date, total_amount FROM purchases ORDER BY purchase_date;",
      "SELECT customer_id, purchase_date, total_amount FROM purchases ORDER BY purchase_date DESC LIMIT 5;",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE phone_number LIKE '%555%';",
      "SELECT customer_id, purchase_id, purchase_date, total_amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_name;",
      "SELECT * FROM purchases WHERE total_amount > 1000 ORDER BY purchase_date DESC;",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM purchases);",
      "SELECT customer_name, total_amount FROM customers JOIN purchases USING (customer_id) WHERE total_amount > 500;",
      "SELECT customer_name, MAX(total_amount) AS max_amount FROM customers JOIN purchases USING (customer_id) GROUP BY customer_name ORDER BY max_amount DESC;",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT customer_id, AVG(total_amount) AS avg_amount FROM purchases GROUP BY customer_id HAVING avg_amount > 500;",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_name LIKE 'J%';",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id BETWEEN 1 AND 10;",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM purchases);",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = (SELECT MAX(customer_id) FROM customers);",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = ANY (SELECT customer_id FROM purchases WHERE total_amount > 1000);",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = ALL (SELECT customer_id FROM purchases);",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = (SELECT customer_id FROM purchases WHERE total_amount = (SELECT MAX(total_amount) FROM purchases));",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = (SELECT customer_id FROM purchases WHERE purchase_date = (SELECT MIN(purchase_date) FROM purchases));",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = (SELECT customer_id FROM purchases GROUP BY customer_id HAVING COUNT(*) > 1);",
      "SELECT customer_id, customer_name, email, phone_number FROM customers WHERE customer_id = 1 AND email IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email, city, country FROM customers;",
      "SELECT * FROM interactions;",
      "SELECT interaction_type, interaction_date, notes FROM interactions;",
      "SELECT * FROM purchases;",
      "SELECT customer_id, product_name, purchase_date, amount FROM purchases;",
      "SELECT customer_id, customer_name, email FROM customers WHERE city='New York';",
      "SELECT interaction_type, interaction_date FROM interactions WHERE interaction_date >= '2022-01-01';",
      "SELECT customer_name, product_name, amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT customer_name, interaction_type, interaction_date, notes FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT customer_name, product_name, purchase_date, amount FROM customers RIGHT JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT customer_name, SUM(amount) AS total_amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_name;",
      "SELECT customer_name, COUNT(*) AS num_interactions FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customer_name;",
      "SELECT COUNT(*) AS num_purchases, SUM(amount) AS total_amount FROM purchases;",
      "SELECT customer_name, interaction_type, interaction_date FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interaction_type='Email';",
      "SELECT customer_name, purchase_date, amount FROM customers RIGHT JOIN purchases ON customers.customer_id = purchases.customer_id WHERE amount > 100;",
      "SELECT customer_name, email, phone_number, city, country FROM customers WHERE country='USA' ORDER BY customer_name ASC;",
      "SELECT customer_name, interaction_type, interaction_date FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interaction_type IN ('Call', 'Email');",
      "SELECT AVG(amount) AS avg_amount, MAX(amount) AS max_amount, MIN(amount) AS min_amount FROM purchases;",
      "SELECT customer_name, COUNT(*) AS num_purchases FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_name HAVING COUNT(*) >= 2;",
      "SELECT customer_name, email, phone_number, city, country FROM customers;",
      "SELECT customer_name, email, phone_number, city, country FROM customers WHERE country = 'USA';",
      "SELECT customer_name, email, phone_number, city, country FROM customers WHERE city = 'New York' AND country = 'USA';",
      "SELECT customer_name, email, phone_number, city, country FROM customers WHERE city LIKE 'L%';",
      "SELECT customer_name, email, phone_number, city, country FROM customers ORDER BY customer_name DESC;",
      "SELECT customer_name, email, phone_number, city, country FROM customers LIMIT 10 OFFSET 5;",
      "SELECT customer_name, email, phone_number, city, country, interaction_type, interaction_date FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT customer_name, email, phone_number, city, country, interaction_type, interaction_date, notes FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interactions.interaction_type = 'Email';",
      "SELECT customer_name, email, phone_number, city, country, product_name, amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT customer_name, email, phone_number, city, country, product_name, amount, purchase_date FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.amount > 1000;",
      "SELECT customer_name, email, phone_number, city, country, product_name, amount, purchase_date FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_name, email, phone_number, city, country, product_name, amount, interaction_type, interaction_date, notes FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT customer_name, email, phone_number, city, country, product_name, amount, purchase_date, interaction_type, interaction_date, notes FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN interactions ON customers.customer_id = interactions.customer_id WHERE purchases.amount > 500 AND interactions.interaction_type = 'Email';",
      "SELECT customer_name, email, phone_number, city, country, interaction_type, interaction_date, notes FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interactions.interaction_date > '2022-01-01';",
      "SELECT customer_name, email, phone_number, city, country, product_name, amount, purchase_date FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date < '2022-06-01';",
      "SELECT customer_name, email, phone_number, city, country, product_name, amount, purchase_date, interaction_type, interaction_date, notes FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN interactions ON customers.customer_id = interactions.customer_id WHERE purchases.amount < 500 AND purchases.purchase_date < '2022-04-01' AND interactions.interaction_type = 'Phone Call';",
      "SELECT customer_id, customer_name, COUNT(*) AS interaction_count FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customer_id, customer_name;",
      "SELECT customer_id, customer_name, SUM(amount) AS total_spent FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customer_id, customer_name;",
      "SELECT customer_name, email, phone_number, city, country, interaction_type, MAX(interaction_date) AS last_interaction_date FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customer_name;",
      "SELECT country, AVG(amount) AS avg_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY country;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email, phone FROM customers;",
      "SELECT customer_name, address FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM interactions;",
      "SELECT interaction_type, interaction_desc FROM interactions WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM purchases;",
      "SELECT product_id, purchase_date, total_amount FROM purchases WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM products;",
      "SELECT product_name, category, price FROM products WHERE availability = TRUE;",
      "SELECT product_name, price FROM products WHERE category = 'Electronics';",
      "SELECT * FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT customer_name, interaction_desc FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT * FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT customer_name, total_amount FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id;",
      "SELECT * FROM products JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT product_name, purchase_date FROM products JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT * FROM customers INNER JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT customer_name, interaction_type FROM customers INNER JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT * FROM products LEFT JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT product_name, total_amount FROM products LEFT JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT * FROM customers WHERE customer_name = 'John Doe';",
      "SELECT customer_name, email FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT interaction_id, timestamp, interaction_desc FROM interactions WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY timestamp DESC;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM purchases GROUP BY customer_id;",
      "SELECT product_name, price FROM products WHERE category = 'Electronics' AND price > 500.00;",
      "SELECT DISTINCT customer_name FROM customers WHERE address LIKE '%Street%' ORDER BY customer_name ASC;",
      "SELECT customer_name, phone FROM customers WHERE customer_id IN (SELECT customer_id FROM purchases WHERE total_amount > 1000.00);",
      "SELECT interactions.interaction_id, customers.customer_name, interactions.timestamp FROM interactions INNER JOIN customers ON interactions.customer_id = customers.customer_id;",
      "SELECT customer_id, COUNT(*) AS total_interactions FROM interactions GROUP BY customer_id HAVING COUNT(*) > 5;",
      "SELECT product_name, SUM(quantity) AS total_quantity_sold FROM purchases INNER JOIN products ON purchases.product_id = products.product_id GROUP BY product_name ORDER BY total_quantity_sold DESC;",
      "SELECT customer_name, email, product_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN products ON purchases.product_id = products.product_id;",
      "SELECT SUM(quantity) AS total_quantity_sold, SUM(total_amount) AS total_sales FROM purchases;",
      "SELECT customer_id, AVG(total_amount) AS avg_purchase_amount FROM purchases GROUP BY customer_id HAVING AVG(total_amount) > 200.00;",
      "SELECT product_name, MAX(price) AS highest_price FROM products WHERE availability = TRUE;",
      "SELECT customer_name, interaction_desc FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id;",
      "SELECT product_name, price, availability, COALESCE(quantity, 0) AS current_stock FROM products LEFT JOIN purchases ON products.product_id = purchases.product_id;",
      "SELECT interaction_type, COUNT(*) FROM interactions GROUP BY interaction_type;",
      "SELECT customer_id, MIN(total_amount) AS min_purchase_amount, MAX(total_amount) AS max_purchase_amount, AVG(total_amount) AS avg_purchase_amount FROM purchases GROUP BY customer_id;",
      "SELECT customer_id, COUNT(*) AS total_purchases, MAX(purchase_date) AS latest_purchase_date FROM purchases GROUP BY customer_id;",
      "SELECT customer_id, interaction_type, COUNT(*) AS total_interactions FROM interactions GROUP BY customer_id, interaction_type HAVING COUNT(*) > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, name, email FROM customers;",
      "SELECT interaction_id, customer_id, interaction_date FROM interactions;",
      "SELECT purchase_id, customer_id, purchase_date FROM purchases;",
      "SELECT product_id, product_name, category, price FROM products;",
      "SELECT customer_id, product_id, interest_level FROM customer_interests;",
      "SELECT name, email FROM customers WHERE customer_id = 1;",
      "SELECT interaction_date, interaction_type, interaction_details FROM interactions WHERE customer_id = 1;",
      "SELECT total_amount FROM purchases WHERE customer_id = 1;",
      "SELECT product_name, category FROM products WHERE price > 100;",
      "SELECT customer_id FROM customer_interests WHERE product_id = 1;",
      "SELECT * FROM customers WHERE name LIKE 'J%';",
      "SELECT interaction_id, customer_id, interaction_date FROM interactions WHERE interaction_type = 'Meeting';",
      "SELECT purchase_id, customer_id, purchase_date FROM purchases WHERE total_amount > 1000;",
      "SELECT product_id, product_name, category, price FROM products WHERE category = 'Electronics';",
      "SELECT customer_id, product_id FROM customer_interests WHERE interest_level > 5;",
      "SELECT * FROM customers ORDER BY name;",
      "SELECT interaction_type, COUNT(*) AS total_interactions FROM interactions GROUP BY interaction_type;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM purchases GROUP BY customer_id;",
      "SELECT product_id, AVG(price) AS avg_price FROM products GROUP BY category;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT name, email FROM customers WHERE name LIKE 'A%';",
      "SELECT c.name, p.product_name FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN products p ON ci.product_id = p.product_id WHERE ci.interest_level > 3;",
      "SELECT c.name, SUM(pr.price) AS total_purchase FROM customers c JOIN purchases pu ON c.customer_id = pu.customer_id JOIN products pr ON pu.total_amount > 1000 AND pr.product_id = pu.purchase_id GROUP BY c.name;",
      "SELECT c.name, COUNT(*) AS total_interactions FROM customers c JOIN interactions i ON c.customer_id = i.customer_id WHERE i.interaction_type = 'Call' GROUP BY c.name HAVING total_interactions > 5;",
      "SELECT c.name, MAX(pu.total_amount) AS max_purchase FROM customers c JOIN purchases pu ON c.customer_id = pu.customer_id GROUP BY c.name HAVING max_purchase > 5000;",
      "SELECT c.name, p.product_name FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN products p ON ci.product_id = p.product_id WHERE ci.interest_level BETWEEN 1 AND 3 ORDER BY c.customer_id, p.category;",
      "SELECT c.name, AVG(pu.total_amount) AS avg_purchase FROM customers c JOIN purchases pu ON c.customer_id = pu.customer_id GROUP BY c.name HAVING avg_purchase < 2000;",
      "SELECT c.name, COUNT(DISTINCT i.interaction_date) AS unique_dates FROM customers c JOIN interactions i ON c.customer_id = i.customer_id GROUP BY c.name HAVING unique_dates > 10;",
      "SELECT * FROM customers c1 JOIN customers c2 ON c1.email = c2.email AND c1.customer_id <> c2.customer_id;",
      "SELECT c.name, p.product_name, DATE_FORMAT(i.interaction_date, '%Y-%m-%d') AS interaction_date FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN products p ON ci.product_id = p.product_id JOIN interactions i ON c.customer_id = i.customer_id AND ci.product_id = p.product_id;",
      "SELECT c.name, p.product_name FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN products p ON ci.product_id = p.product_id WHERE p.price > 50;",
      "SELECT c.name, AVG(ci.interest_level) AS avg_interest_level FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id GROUP BY c.name HAVING avg_interest_level > 2;",
      "SELECT * FROM customers c1 JOIN customers c2 ON c1.customer_id IN (SELECT customer_id FROM purchases WHERE total_amount > 500);",
      "SELECT c.name, p.product_name, COUNT(DISTINCT i.interaction_date) AS unique_dates FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN products p ON ci.product_id = p.product_id JOIN interactions i ON c.customer_id = i.customer_id AND ci.product_id = p.product_id GROUP BY c.name, p.product_name;",
      "SELECT c1.name AS customer1_name, c2.name AS customer2_name, COUNT(*) AS shared_interests FROM customers c1 JOIN customer_interests ci1 ON c1.customer_id = ci1.customer_id JOIN customers c2 JOIN customer_interests ci2 ON c2.customer_id = ci2.customer_id WHERE ci1.product_id = ci2.product_id GROUP BY c1.name, c2.name HAVING shared_interests > 1;",
      "SELECT c.name, p.product_name, pi.interest_level FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN products p ON ci.product_id = p.product_id JOIN customer_interests pi ON c.customer_id = pi.customer_id AND p.product_id = pi.product_id WHERE pi.interest_level > ci.interest_level;",
      "SELECT c.name, COUNT(*) AS total_purchases FROM customers c JOIN purchases pu ON c.customer_id = pu.customer_id WHERE pu.purchase_date >= '2022-01-01';",
      "SELECT c.name, MAX(pi.interest_level) AS max_interest_level FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN customer_interests pi ON c.customer_id = pi.customer_id AND ci.product_id = pi.product_id GROUP BY c.name;",
      "SELECT c.name, AVG(p.price) AS avg_product_price FROM customers c JOIN customer_interests ci ON c.customer_id = ci.customer_id JOIN products p ON ci.product_id = p.product_id GROUP BY c.name HAVING avg_product_price < 1000;"
    ]
  }
]