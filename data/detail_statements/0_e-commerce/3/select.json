[
  {
    "statements": [
      "SELECT * FROM CustomerOrders;",
      "SELECT order_id, customer_id, order_date FROM CustomerOrders;",
      "SELECT * FROM CustomerOrders WHERE order_id = 1;",
      "SELECT * FROM CustomerOrders WHERE customer_id = 100;",
      "SELECT * FROM CustomerOrders WHERE order_date >= '2022-01-01';",
      "SELECT order_id, total_amount FROM CustomerOrders WHERE total_amount > 1000;",
      "SELECT MAX(total_amount) FROM CustomerOrders;",
      "SELECT MIN(total_amount) FROM CustomerOrders;",
      "SELECT AVG(total_amount) FROM CustomerOrders;",
      "SELECT SUM(total_amount) FROM CustomerOrders;",
      "SELECT customer_id, COUNT(*) FROM CustomerOrders GROUP BY customer_id;",
      "SELECT * FROM CustomerOrders ORDER BY order_date DESC;",
      "SELECT * FROM CustomerOrders WHERE total_amount BETWEEN 500 AND 1000;",
      "SELECT * FROM CustomerOrders WHERE customer_id IN (1, 2, 3);",
      "SELECT * FROM CustomerOrders WHERE customer_id = 1 AND total_amount > 500;",
      "SELECT DISTINCT customer_id FROM CustomerOrders;",
      "SELECT * FROM CustomerOrders LIMIT 10;",
      "SELECT * FROM CustomerOrders OFFSET 5;",
      "SELECT * FROM CustomerOrders LIMIT 10 OFFSET 5;",
      "SELECT customer_id, SUM(total_amount) FROM CustomerOrders GROUP BY customer_id HAVING SUM(total_amount) > 2000;",
      "SELECT * FROM CustomerOrders WHERE order_id = 1 AND customer_id = 100",
      "SELECT customer_id, total_amount FROM CustomerOrders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT COUNT(order_id) AS total_orders FROM CustomerOrders WHERE customer_id = 200",
      "SELECT AVG(total_amount) AS average_amount FROM CustomerOrders WHERE customer_id = 300",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM CustomerOrders GROUP BY customer_id HAVING total_spent > 1000",
      "SELECT customer_id, MAX(total_amount) AS largest_order FROM CustomerOrders GROUP BY customer_id ORDER BY largest_order DESC",
      "SELECT * FROM CustomerOrders WHERE order_date > '2022-06-01' AND total_amount > 500",
      "SELECT customer_id, COUNT(order_id) AS order_count FROM CustomerOrders GROUP BY customer_id",
      "SELECT order_id, customer_id, order_date, total_amount FROM CustomerOrders WHERE order_id IN (1, 2, 3)",
      "SELECT customer_id, AVG(total_amount) AS avg_amount FROM CustomerOrders GROUP BY customer_id HAVING avg_amount > 200",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM CustomerOrders GROUP BY customer_id ORDER BY total_spent DESC",
      "SELECT * FROM CustomerOrders WHERE customer_id = 400 AND total_amount = (SELECT MAX(total_amount) FROM CustomerOrders)",
      "SELECT customer_id, MIN(total_amount) AS smallest_order FROM CustomerOrders GROUP BY customer_id ORDER BY smallest_order ASC",
      "SELECT customer_id, COUNT(order_id) AS order_count FROM CustomerOrders WHERE order_date > '2022-01-01' GROUP BY customer_id",
      "SELECT DISTINCT customer_id FROM CustomerOrders WHERE total_amount > 1000",
      "SELECT * FROM CustomerOrders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30' AND total_amount < 500",
      "SELECT AVG(total_amount) AS average_amount FROM CustomerOrders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT customer_id, MAX(total_amount) AS largest_order FROM CustomerOrders WHERE order_date < '2022-06-01' GROUP BY customer_id",
      "SELECT customer_id, COUNT(order_id) AS order_count FROM CustomerOrders WHERE order_date < '2022-01-01' GROUP BY customer_id",
      "SELECT * FROM CustomerOrders WHERE order_date > '2022-06-01' ORDER BY total_amount DESC",
      "SELECT customer_id, MIN(total_amount) AS smallest_order FROM CustomerOrders WHERE order_date > '2022-01-01' GROUP BY customer_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Orders;",
      "SELECT order_id, customer_id FROM Orders;",
      "SELECT order_id, order_date FROM Orders;",
      "SELECT * FROM Order_Items;",
      "SELECT order_item_id, order_id, product_id FROM Order_Items;",
      "SELECT quantity, price FROM Order_Items;",
      "SELECT order_id, sum(quantity * price) as total_price FROM Order_Items GROUP BY order_id;",
      "SELECT customer_id, count(order_id) as total_orders FROM Orders GROUP BY customer_id;",
      "SELECT * FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id;",
      "SELECT Orders.order_id, Order_Items.product_id, Order_Items.quantity, Order_Items.price, Orders.customer_id, Orders.status FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id;",
      "SELECT o.customer_id, oi.product_id, oi.quantity, oi.price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id;",
      "SELECT o.order_id, o.order_date, oi.product_id, oi.quantity, oi.price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id;",
      "SELECT o.order_id, o.order_date, oi.product_id, oi.quantity, oi.price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id WHERE o.customer_id = 123;",
      "SELECT o.order_id, o.order_date, oi.product_id, oi.quantity, oi.price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id WHERE o.status = 'Shipped';",
      "SELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM Orders WHERE status = 'Pending' ORDER BY order_date DESC;",
      "SELECT o.order_id, o.customer_id, o.order_date, o.status, oi.product_id, oi.quantity, oi.price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id WHERE o.customer_id = 456 AND oi.quantity > 5;",
      "SELECT o.order_id, o.customer_id, o.order_date, o.status, oi.product_id, oi.quantity, oi.price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' AND oi.price > 100;",
      "SELECT o.customer_id, sum(oi.quantity) as total_quantity, sum(oi.price) as total_amount FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id GROUP BY o.customer_id;",
      "SELECT o.customer_id, count(distinct o.order_id) as total_orders, sum(oi.quantity) as total_quantity, sum(oi.price) as total_amount FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id GROUP BY o.customer_id;",
      "SELECT * FROM Orders WHERE customer_id = 1001 AND order_date > '2022-01-01'",
      "SELECT Orders.order_id, Orders.customer_id, Orders.status, Order_Items.product_id, Order_Items.quantity FROM Orders INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id",
      "SELECT Orders.order_id, Orders.order_date, Order_Items.product_id, Order_Items.quantity, Order_Items.price FROM Orders INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id WHERE Orders.status = 'Shipped' AND Order_Items.quantity > 5",
      "SELECT Orders.order_id, Orders.customer_id, Orders.order_date, Orders.status, Order_Items.product_id, Order_Items.quantity, Order_Items.price FROM Orders LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id WHERE Orders.customer_id = 1002",
      "SELECT Orders.order_id, Orders.customer_id, Orders.order_date, Orders.status, Order_Items.product_id, Order_Items.quantity, Order_Items.price FROM Orders RIGHT JOIN Order_Items ON Orders.order_id = Order_Items.order_id WHERE Orders.customer_id = 1003",
      "SELECT Orders.customer_id, SUM(Order_Items.quantity) AS total_quantity FROM Orders INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.customer_id HAVING total_quantity > 100",
      "SELECT Orders.customer_id, AVG(Order_Items.price) AS avg_price FROM Orders INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.customer_id HAVING avg_price > 50"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_orders;",
      "SELECT order_id, customer_id, order_date FROM customer_orders WHERE total_amount > 100;",
      "SELECT order_id, total_amount FROM customer_orders WHERE order_date >= '2022-01-01';",
      "SELECT * FROM order_items;",
      "SELECT item_id, product_name, quantity FROM order_items WHERE price > 50;",
      "SELECT item_id, order_id FROM order_items WHERE quantity >= 10;",
      "SELECT * FROM order_status;",
      "SELECT status_id, order_id FROM order_status WHERE last_updated < NOW();",
      "SELECT order_id, status, last_updated FROM order_status WHERE status = 'shipped';",
      "SELECT c.order_id, c.customer_id, c.order_date, o.product_name, o.quantity, s.status FROM customer_orders c INNER JOIN order_items o ON c.order_id = o.order_id INNER JOIN order_status s ON c.order_id = s.order_id;",
      "SELECT c.customer_id, SUM(o.quantity) AS total_quantity FROM customer_orders c JOIN order_items o ON c.order_id = o.order_id GROUP BY c.customer_id;",
      "SELECT c.customer_id, AVG(s.total_amount) AS average_amount FROM customer_orders c JOIN (SELECT order_id, SUM(quantity*price) AS total_amount FROM order_items GROUP BY order_id) s ON c.order_id = s.order_id GROUP BY c.customer_id;",
      "SELECT order_id, COUNT(item_id) AS total_items FROM order_items GROUP BY order_id;",
      "SELECT status, COUNT(order_id) AS total_orders FROM order_status GROUP BY status;",
      "SELECT customer_id, MAX(total_amount) AS highest_total FROM customer_orders;",
      "SELECT customer_id, MIN(total_amount) AS lowest_total FROM customer_orders;",
      "SELECT c.customer_id, AVG(o.price) AS average_price FROM order_items o JOIN customer_orders c ON o.order_id = c.order_id GROUP BY c.customer_id;",
      "SELECT COUNT(*) AS total_orders FROM customer_orders;",
      "SELECT MAX(last_updated) AS latest_update FROM order_status;",
      "SELECT AVG(quantity) AS average_quantity FROM order_items;",
      "SELECT * FROM customer_orders WHERE customer_id = 1234 AND order_date >= '2022-01-01';",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM customer_orders GROUP BY customer_id HAVING total_spent > 1000;",
      "SELECT customer_id, COUNT(order_id) AS num_orders FROM customer_orders GROUP BY customer_id ORDER BY num_orders DESC LIMIT 5;",
      "SELECT oi.product_name, oi.quantity, oi.price, oi.quantity * oi.price AS total_price FROM order_items oi JOIN customer_orders co ON oi.order_id = co.order_id WHERE co.customer_id = 5678;",
      "SELECT co.order_date, os.status, os.last_updated FROM customer_orders co JOIN order_status os ON co.order_id = os.order_id WHERE os.status = 'Shipped';",
      "SELECT co.customer_id, oi.product_name, oi.price FROM customer_orders co JOIN order_items oi ON co.order_id = oi.order_id WHERE co.order_date BETWEEN '2022-01-01' AND '2022-12-31' AND oi.price > 50;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM customer_orders WHERE customer_id IN (SELECT customer_id FROM customer_orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30') GROUP BY customer_id;",
      "SELECT customer_id, AVG(total_amount) AS avg_amount FROM customer_orders GROUP BY customer_id HAVING avg_amount > 500;",
      "SELECT co.order_date, oi.product_name, oi.quantity, oi.price FROM customer_orders co JOIN order_items oi ON co.order_id = oi.order_id WHERE oi.quantity * oi.price > 1000;",
      "SELECT customer_id, MAX(total_amount) AS max_spent FROM customer_orders GROUP BY customer_id HAVING max_spent < 2000;",
      "SELECT customer_id, COUNT(order_id) AS num_orders FROM customer_orders WHERE customer_id = 1234;",
      "SELECT customer_id, MAX(total_amount) AS max_spent FROM customer_orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY customer_id;",
      "SELECT co.order_date, oi.product_name, oi.quantity, oi.price FROM customer_orders co JOIN order_items oi ON co.order_id = oi.order_id WHERE co.customer_id = 5678 AND oi.price < 50;",
      "SELECT DISTINCT customer_id FROM customer_orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT customer_id, MIN(total_amount) AS min_spent FROM customer_orders GROUP BY customer_id HAVING min_spent > 10;",
      "SELECT co.order_date, oi.product_name, oi.quantity, oi.price FROM customer_orders co JOIN order_items oi ON co.order_id = oi.order_id WHERE oi.product_name LIKE '%shirt%';",
      "SELECT customer_id, COUNT(order_id) AS num_orders FROM customer_orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY customer_id HAVING num_orders > 2;",
      "SELECT co.order_date, oi.product_name, oi.quantity, oi.price FROM customer_orders co JOIN order_items oi ON co.order_id = oi.order_id WHERE co.customer_id = 5678 AND oi.quantity > 3;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM customer_orders WHERE total_amount > 1000 GROUP BY customer_id HAVING COUNT(order_id) > 3;",
      "SELECT co.order_date, os.status, os.last_updated FROM customer_orders co JOIN order_status os ON co.order_id = os.order_id WHERE os.status = 'Delivered';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Orders;",
      "SELECT order_id, customer_id, order_date FROM Orders;",
      "SELECT customer_name, customer_email FROM Customers;",
      "SELECT product_name, price FROM Products;",
      "SELECT order_id, product_id, quantity FROM Order_Items;",
      "SELECT order_id, total_amount FROM Orders;",
      "SELECT customer_name, customer_address FROM Customers;",
      "SELECT product_name, description FROM Products;",
      "SELECT order_id, customer_id, total_amount FROM Orders;",
      "SELECT customer_name, customer_email, customer_address FROM Customers;",
      "SELECT product_name, price, description FROM Products;",
      "SELECT order_item_id, order_id, product_id, quantity FROM Order_Items;",
      "SELECT order_id, customer_id, order_date, total_amount FROM Orders;",
      "SELECT customer_name, customer_email, customer_address, customer_id FROM Customers;",
      "SELECT product_name, price, description, product_id FROM Products;",
      "SELECT order_item_id, order_id, product_id, quantity, price FROM Order_Items;",
      "SELECT order_id, total_amount, customer_id FROM Orders;",
      "SELECT customer_name, customer_email, customer_address, customer_id FROM Customers;",
      "SELECT product_name, price, description, product_id FROM Products;",
      "SELECT order_item_id, order_id, product_id, quantity, price FROM Order_Items;",
      "SELECT * FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id",
      "SELECT Orders.order_id, Orders.order_date, Customers.customer_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id",
      "SELECT Orders.order_date, Orders.total_amount, Customers.customer_name, Customers.customer_email FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id",
      "SELECT Products.product_name, Products.description, Order_Items.quantity FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id",
      "SELECT Orders.order_date, Orders.total_amount, Customers.customer_name, Products.product_name FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id",
      "SELECT Orders.order_date, SUM(Order_Items.quantity * Products.price) AS total_price FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id",
      "SELECT Orders.order_date, Orders.total_amount, Customers.customer_name, Products.product_name, Order_Items.quantity, (Order_Items.quantity * Products.price) AS total_price FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, customer_name, email FROM customers;",
      "SELECT order_id, total_amount FROM orders;",
      "SELECT item_id, product_id, quantity FROM order_items;",
      "SELECT product_id, product_name, category FROM products;",
      "SELECT delivery_id, status FROM delivery_status;",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT order_date, total_amount FROM orders WHERE customer_id = 2;",
      "SELECT product_name, price FROM products WHERE category = 'Electronics';",
      "SELECT order_id, product_id, quantity, price FROM order_items WHERE order_id = 3;",
      "SELECT order_id, status, delivery_date FROM delivery_status WHERE order_id = 4;",
      "SELECT customer_name, email FROM customers WHERE customer_id = 5 AND phone_number = '1234567890';",
      "SELECT customer_name, email, phone_number FROM customers WHERE phone_number LIKE '%7890';",
      "SELECT customer_name, email FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT order_id, order_date, total_amount FROM orders WHERE total_amount > 1000;",
      "SELECT product_name, price FROM products WHERE price BETWEEN 10.00 AND 50.00;",
      "SELECT customer_id, customer_name, phone_number FROM customers ORDER BY customer_name;",
      "SELECT order_id, total_amount FROM orders ORDER BY total_amount DESC;",
      "SELECT product_name, category FROM products ORDER BY category, product_name;",
      "SELECT order_id, product_id, quantity, price FROM order_items ORDER BY order_id, quantity DESC;",
      "SELECT * FROM customers;",
      "SELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
      "SELECT c.customer_name, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT p.product_name, oi.quantity FROM products p JOIN order_items oi ON p.product_id = oi.product_id;",
      "SELECT o.order_id, d.status, d.delivery_date FROM orders o JOIN delivery_status d ON o.order_id = d.order_id;",
      "SELECT customer_name, SUM(total_amount) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY customer_name;",
      "SELECT p.category, AVG(oi.price) AS average_price FROM products p JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.category;",
      "SELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name;",
      "SELECT p.product_name, oi.quantity, oi.price, (oi.quantity * oi.price) AS total_price FROM products p JOIN order_items oi ON p.product_id = oi.product_id;",
      "SELECT c.customer_name, o.order_date, SUM(oi.quantity) AS total_items_ordered FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_name, o.order_date;",
      "SELECT c.customer_name, o.order_date, p.product_name, oi.quantity, oi.price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id;",
      "SELECT c.customer_id, c.customer_name, COUNT(o.order_id) AS total_orders, SUM(o.total_amount) AS total_spent FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id, c.customer_name;",
      "SELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NULL GROUP BY c.customer_name;",
      "SELECT p.category, MAX(oi.price) AS max_price FROM products p JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.category;",
      "SELECT c.customer_name, o.order_date, SUM(oi.quantity * oi.price) AS total_order_cost FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_name, o.order_date;",
      "SELECT p.product_name, AVG(oi.price) AS average_price FROM products p JOIN order_items oi ON p.product_id = oi.product_id WHERE oi.quantity > 2 GROUP BY p.product_name;",
      "SELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id HAVING COUNT(o.order_id) > 2;",
      "SELECT p.product_name, SUM(oi.quantity) AS total_ordered FROM products p JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_name HAVING SUM(oi.quantity) > 10;",
      "SELECT c.customer_name, o.order_date, p.product_name, oi.quantity, oi.price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE oi.quantity > 1;",
      "SELECT customer_name, COUNT(order_id) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING COUNT(order_id) > 0;"
    ]
  }
]