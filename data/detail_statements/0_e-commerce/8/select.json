[
  {
    "statements": [
      "SELECT * FROM product_recommendations;",
      "SELECT customer_id, product_id FROM product_recommendations;",
      "SELECT customer_id, product_id, preference_score FROM product_recommendations;",
      "SELECT customer_id, AVG(preference_score) FROM product_recommendations GROUP BY customer_id;",
      "SELECT product_id, MAX(preference_score) FROM product_recommendations GROUP BY product_id;",
      "SELECT * FROM product_recommendations WHERE preference_score > 0.5;",
      "SELECT * FROM product_recommendations WHERE customer_id = 100;",
      "SELECT customer_id, SUM(preference_score) FROM product_recommendations GROUP BY customer_id;",
      "SELECT product_id, COUNT(*) FROM product_recommendations GROUP BY product_id;",
      "SELECT DISTINCT customer_id FROM product_recommendations;",
      "SELECT AVG(preference_score) AS avg_score FROM product_recommendations;",
      "SELECT customer_id, MAX(preference_score) AS max_score FROM product_recommendations GROUP BY customer_id;",
      "SELECT customer_id, product_id FROM product_recommendations WHERE preference_score < 0.3;",
      "SELECT * FROM product_recommendations ORDER BY preference_score DESC;",
      "SELECT customer_id, COUNT(*) AS num_products FROM product_recommendations GROUP BY customer_id HAVING num_products > 2;",
      "SELECT customer_id, product_id, preference_score FROM product_recommendations LIMIT 10;",
      "SELECT * FROM product_recommendations WHERE customer_id IN (1, 2);",
      "SELECT customer_id, product_id, preference_score FROM product_recommendations WHERE product_id IN (100, 200);",
      "SELECT customer_id, COUNT(DISTINCT product_id) AS num_products FROM product_recommendations GROUP BY customer_id;",
      "SELECT customer_id, AVG(preference_score) AS avg_score FROM product_recommendations GROUP BY customer_id HAVING avg_score > 0.7;",
      "SELECT * FROM product_recommendations WHERE customer_id = 1 AND preference_score > 0.5;",
      "SELECT customer_id, AVG(preference_score) AS avg_score FROM product_recommendations GROUP BY customer_id;",
      "SELECT customer_id, product_id, preference_score FROM product_recommendations ORDER BY preference_score DESC;",
      "SELECT customer_id, COUNT(product_id) AS num_products FROM product_recommendations GROUP BY customer_id HAVING num_products > 3;",
      "SELECT customer_id, SUM(preference_score) AS total_score FROM product_recommendations GROUP BY customer_id HAVING total_score > 2.0;",
      "SELECT * FROM product_recommendations WHERE product_id IN (SELECT product_id FROM product_recommendations WHERE preference_score > 0.7);",
      "SELECT customer_id, MAX(preference_score) AS max_score FROM product_recommendations GROUP BY customer_id;",
      "SELECT DISTINCT customer_id FROM product_recommendations WHERE preference_score BETWEEN 0.3 AND 0.6;",
      "SELECT customer_id, AVG(preference_score) AS avg_score FROM product_recommendations WHERE preference_score < 0.5 GROUP BY customer_id;",
      "SELECT customer_id, COUNT(DISTINCT product_id) AS num_distinct_products FROM product_recommendations GROUP BY customer_id HAVING num_distinct_products > 2;",
      "SELECT customer_id, SUM(preference_score) AS total_score FROM product_recommendations WHERE product_id = 2 GROUP BY customer_id HAVING total_score > 1.5;",
      "SELECT customer_id, product_id, preference_score FROM product_recommendations WHERE preference_score = (SELECT MAX(preference_score) FROM product_recommendations);",
      "SELECT customer_id, COUNT(*) AS num_records FROM product_recommendations WHERE preference_score < 0.4 GROUP BY customer_id;",
      "SELECT customer_id, preference_score FROM product_recommendations WHERE customer_id IN (SELECT customer_id FROM product_recommendations WHERE preference_score > 0.8);",
      "SELECT customer_id FROM product_recommendations EXCEPT SELECT customer_id FROM product_recommendations WHERE preference_score < 0.5;",
      "SELECT customer_id, preference_score AS score_1, (SELECT preference_score FROM product_recommendations WHERE customer_id = 2) AS score_2 FROM product_recommendations WHERE customer_id = 1;",
      "SELECT customer_id, SUM(preference_score) AS total_score FROM product_recommendations WHERE product_id IN (SELECT product_id FROM product_recommendations WHERE customer_id = 3) GROUP BY customer_id HAVING total_score > 1.0;",
      "SELECT customer_id, AVG(preference_score) AS avg_score, COUNT(product_id) AS num_products FROM product_recommendations GROUP BY customer_id ORDER BY avg_score DESC;",
      "SELECT customer_id, preference_score FROM product_recommendations WHERE customer_id = (SELECT MAX(customer_id) FROM product_recommendations);",
      "SELECT customer_id, preference_score FROM product_recommendations WHERE customer_id = 1 OR customer_id = 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM product_preferences;",
      "SELECT customer_id, product_id FROM product_preferences WHERE customer_id = 1;",
      "SELECT customer_id, MAX(preference_score) FROM product_preferences GROUP BY customer_id;",
      "SELECT product_id, preference_score FROM product_preferences WHERE preference_score > 0.5;",
      "SELECT * FROM recommended_products;",
      "SELECT product_id, recommended_product_id FROM recommended_products WHERE product_id = 1;",
      "SELECT product_id, COUNT(recommended_product_id) FROM recommended_products GROUP BY product_id;",
      "SELECT customer_id, product_id, preference_score FROM product_preferences WHERE customer_id = 1 AND preference_score > 0.7;",
      "SELECT product_id, preference_score FROM product_preferences ORDER BY preference_score DESC LIMIT 5;",
      "SELECT * FROM product_preferences JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences LEFT JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences RIGHT JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences INNER JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences NATURAL JOIN recommended_products;",
      "SELECT customer_id, product_id, preference_score FROM product_preferences WHERE product_id IN (SELECT recommended_product_id FROM recommended_products);",
      "SELECT customer_id, product_id, preference_score FROM product_preferences WHERE customer_id NOT IN (SELECT customer_id FROM recommended_products);",
      "SELECT customer_id, product_id, preference_score FROM product_preferences WHERE product_id BETWEEN 100 AND 200;",
      "SELECT AVG(preference_score) AS average_preference_score FROM product_preferences;",
      "SELECT product_id, AVG(preference_score) AS average_preference_score FROM product_preferences GROUP BY product_id;",
      "SELECT product_id, preference_score, recommended_product_id FROM product_preferences JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences WHERE preference_score > 0.5;",
      "SELECT customer_id, product_id, preference_score FROM product_preferences WHERE customer_id = 100;",
      "SELECT AVG(preference_score) FROM product_preferences;",
      "SELECT product_id, COUNT(*) AS total_preferences FROM product_preferences GROUP BY product_id;",
      "SELECT recommended_product_id, COUNT(*) AS total_recommendations FROM recommended_products GROUP BY recommended_product_id;",
      "SELECT * FROM product_preferences JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences LEFT JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences RIGHT JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT * FROM product_preferences INNER JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id;",
      "SELECT customer_id, COUNT(recommended_product_id) AS num_recommendations FROM product_preferences LEFT JOIN recommended_products ON product_preferences.product_id = recommended_products.product_id GROUP BY customer_id;",
      "SELECT A.customer_id, B.product_id FROM product_preferences A CROSS JOIN recommended_products B;",
      "SELECT customer_id, SUM(preference_score) AS total_preference_score FROM product_preferences GROUP BY customer_id HAVING total_preference_score > 10;",
      "SELECT customer_id, MAX(preference_score) AS max_preference_score FROM product_preferences GROUP BY customer_id;",
      "SELECT customer_id, product_id, preference_score FROM product_preferences WHERE product_id IN (SELECT product_id FROM recommended_products);",
      "SELECT customer_id, product_id, preference_score FROM product_preferences WHERE product_id NOT IN (SELECT product_id FROM recommended_products);",
      "SELECT customer_id, preference_score FROM product_preferences WHERE customer_id IN (SELECT customer_id FROM recommended_products);",
      "SELECT a.customer_id, SUM(a.preference_score) AS total_preference_score FROM product_preferences a JOIN (SELECT DISTINCT product_id FROM recommended_products) b ON a.product_id = b.product_id GROUP BY a.customer_id;",
      "SELECT a.customer_id, MAX(a.preference_score) AS max_preference_score FROM product_preferences a JOIN (SELECT DISTINCT product_id FROM recommended_products) b ON a.product_id = b.product_id GROUP BY a.customer_id;",
      "SELECT DISTINCT a.customer_id FROM product_preferences a JOIN recommended_products b ON a.product_id = b.product_id;",
      "SELECT customer_id, product_id, preference_score FROM product_preferences ORDER BY preference_score DESC LIMIT 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, age FROM customers;",
      "SELECT customer_id, name, age FROM customers WHERE age > 30;",
      "SELECT customer_id, name, age, gender FROM customers WHERE gender = 'Female';",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, category FROM products WHERE category = 'Electronics';",
      "SELECT product_name, price FROM products WHERE price < 100;",
      "SELECT * FROM preferences;",
      "SELECT preference_id, customer_id, product_id, rating FROM preferences WHERE rating > 3;",
      "SELECT customer_id, product_id, rating FROM preferences WHERE customer_id = 1;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON p.product_id = pr.product_id;",
      "SELECT c.name AS customer_name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON p.product_id = pr.product_id WHERE pr.rating > 2;",
      "SELECT c.name AS customer_name, p.product_name, pr.rating FROM customers c LEFT JOIN preferences pr ON c.customer_id = pr.customer_id LEFT JOIN products p ON p.product_id = pr.product_id WHERE pr.rating IS NULL;",
      "SELECT c.name AS customer_name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON p.product_id = pr.product_id WHERE c.age >= 25 AND pr.rating > 3;",
      "SELECT c.name AS customer_name, COUNT(pr.preference_id) AS total_ratings FROM customers c LEFT JOIN preferences pr ON c.customer_id = pr.customer_id GROUP BY c.name;",
      "SELECT AVG(price) AS avg_price FROM products;",
      "SELECT category, AVG(price) AS avg_price_per_category FROM products GROUP BY category;",
      "SELECT c.name AS customer_name, AVG(pr.rating) AS avg_rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id GROUP BY c.name;",
      "SELECT p.product_name, COUNT(pr.preference_id) AS total_ratings FROM products p LEFT JOIN preferences pr ON p.product_id = pr.product_id GROUP BY p.product_name;",
      "SELECT customer_id, name, age, gender FROM customers WHERE age BETWEEN 25 AND 40;",
      "SELECT * FROM customers;",
      "SELECT name, age, gender FROM customers WHERE age > 30;",
      "SELECT product_name, category, price FROM products WHERE category = 'Electronics';",
      "SELECT c.name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id WHERE pr.rating >= 4;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id WHERE c.age BETWEEN 25 AND 40;",
      "SELECT c.name, COUNT(pr.product_id) AS num_products FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id GROUP BY c.name;",
      "SELECT p.category, AVG(pr.rating) AS avg_rating FROM products p JOIN preferences pr ON p.product_id = pr.product_id GROUP BY p.category;",
      "SELECT c.name, COUNT(pr.preference_id) AS num_preferences FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id GROUP BY c.name HAVING COUNT(pr.preference_id) > 2;",
      "SELECT c.name, SUM(p.price) AS total_spent FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id GROUP BY c.name;",
      "SELECT c.name, c.age, p.category, AVG(pr.rating) AS avg_rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id GROUP BY c.name, p.category;",
      "SELECT c.name, p.product_name, SUM(p.price) AS total_spent FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id WHERE c.age > 30 GROUP BY c.name, p.product_name;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c LEFT JOIN preferences pr ON c.customer_id = pr.customer_id LEFT JOIN products p ON pr.product_id = p.product_id;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c RIGHT JOIN preferences pr ON c.customer_id = pr.customer_id RIGHT JOIN products p ON pr.product_id = p.product_id;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c FULL JOIN preferences pr ON c.customer_id = pr.customer_id FULL JOIN products p ON pr.product_id = p.product_id;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c LEFT JOIN preferences pr ON c.customer_id = pr.customer_id LEFT JOIN products p ON pr.product_id = p.product_id WHERE pr.rating IS NULL;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id WHERE c.gender = 'Female';",
      "SELECT c.name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id ORDER BY c.name ASC;",
      "SELECT c.name, p.product_name, pr.rating FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id ORDER BY pr.rating DESC;",
      "SELECT c.name, p.product_name, p.price FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id JOIN products p ON pr.product_id = p.product_id ORDER BY p.price DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT product_name, product_price FROM products;",
      "SELECT product_name, product_price FROM products WHERE product_category = 'Electronics';",
      "SELECT customer_name, product_name, recommendation_score FROM customers c JOIN recommendations r ON c.customer_id = r.customer_id;",
      "SELECT customer_name, product_name, recommendation_score FROM customers c JOIN recommendations r ON c.customer_id = r.customer_id WHERE recommendation_score > 8.0;",
      "SELECT COUNT(*) FROM customers;",
      "SELECT MAX(product_price) FROM products;",
      "SELECT AVG(rating) FROM preferences;",
      "SELECT COUNT(DISTINCT product_category) FROM products;",
      "SELECT customer_name, product_name, rating FROM customers c JOIN preferences p ON c.customer_id = p.customer_id;",
      "SELECT customer_name, product_name, rating FROM customers c JOIN preferences p ON c.customer_id = p.customer_id WHERE rating < 4;",
      "SELECT customer_name, product_name, p.rating FROM customers c JOIN preferences p ON c.customer_id = p.customer_id JOIN products pr ON p.product_id = pr.product_id WHERE pr.product_category = 'Clothing';",
      "SELECT customer_name, product_name, rating FROM customers c JOIN preferences p ON c.customer_id = p.customer_id ORDER BY rating DESC;",
      "SELECT customer_name, product_name, recommendation_score FROM customers c JOIN recommendations r ON c.customer_id = r.customer_id WHERE recommendation_score > 9.0 ORDER BY recommendation_score DESC;",
      "SELECT c.customer_name, p.product_name, r.recommendation_score FROM customers c JOIN recommendations r ON c.customer_id = r.customer_id JOIN products p ON r.product_id = p.product_id WHERE c.customer_id = 1;",
      "SELECT c.customer_name, p.product_name, p.product_category, r.recommendation_score FROM customers c JOIN recommendations r ON c.customer_id = r.customer_id JOIN products p ON r.product_id = p.product_id WHERE r.recommendation_score > 8.0 AND p.product_category = 'Electronics';",
      "SELECT c.customer_name, p.product_name, r.recommendation_score, pr.product_price FROM customers c JOIN recommendations r ON c.customer_id = r.customer_id JOIN products p ON r.product_id = p.product_id JOIN preferences pr ON r.product_id = pr.product_id WHERE c.customer_id = 2;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT p.product_name, p.product_price FROM products p INNER JOIN recommendations r ON p.product_id = r.product_id WHERE r.customer_id = 1;",
      "SELECT c.customer_name, p.product_name, p.product_price FROM customers c INNER JOIN recommendations r ON c.customer_id = r.customer_id INNER JOIN products p ON r.product_id = p.product_id WHERE c.customer_id = 1;",
      "SELECT c.customer_name, p.product_name, r.recommendation_score FROM customers c INNER JOIN recommendations r ON c.customer_id = r.customer_id INNER JOIN products p ON r.product_id = p.product_id WHERE r.recommendation_score > 8;",
      "SELECT c.customer_name, COUNT(r.product_id) AS recommendation_count FROM customers c INNER JOIN recommendations r ON c.customer_id = r.customer_id GROUP BY c.customer_name;",
      "SELECT c.customer_name, AVG(r.rating) AS average_rating FROM customers c INNER JOIN preferences p ON c.customer_id = p.customer_id INNER JOIN recommendations r ON p.product_id = r.product_id GROUP BY c.customer_name;",
      "SELECT p.product_name, SUM(r.recommendation_score) AS total_score FROM products p INNER JOIN recommendations r ON p.product_id = r.product_id GROUP BY p.product_name;",
      "SELECT c.customer_name, COUNT(DISTINCT r.product_id) AS unique_products FROM customers c INNER JOIN recommendations r ON c.customer_id = r.customer_id GROUP BY c.customer_name;",
      "SELECT p1.product_name AS recommended_product, p2.product_name AS also_purchased_product FROM recommendations r1 INNER JOIN recommendations r2 ON r1.customer_id = r2.customer_id AND r1.product_id <> r2.product_id INNER JOIN products p1 ON r1.product_id = p1.product_id INNER JOIN products p2 ON r2.product_id = p2.product_id WHERE r1.recommendation_score > r2.recommendation_score;",
      "SELECT c.customer_name, p.product_category, AVG(r.rating) AS average_rating FROM customers c INNER JOIN preferences p ON c.customer_id = p.customer_id INNER JOIN recommendations r ON p.product_id = r.product_id INNER JOIN products pr ON r.product_id = pr.product_id GROUP BY c.customer_name, p.product_category;",
      "SELECT c.customer_name, COUNT(r.product_id) AS recommendation_count, SUM(r.recommendation_score) AS total_score FROM customers c INNER JOIN recommendations r ON c.customer_id = r.customer_id GROUP BY c.customer_name HAVING COUNT(r.product_id) > 5;",
      "SELECT c.customer_name, p.product_category, COUNT(r.product_id) AS recommendation_count FROM customers c INNER JOIN preferences p ON c.customer_id = p.customer_id INNER JOIN recommendations r ON p.product_id = r.product_id INNER JOIN products pr ON r.product_id = pr.product_id GROUP BY c.customer_name, p.product_category;",
      "SELECT c1.customer_name AS source_customer, c2.customer_name AS target_customer, COUNT(r.product_id) AS common_recommendations FROM customers c1 INNER JOIN recommendations r ON c1.customer_id = r.customer_id INNER JOIN recommendations r2 ON r.product_id = r2.product_id INNER JOIN customers c2 ON r2.customer_id = c2.customer_id WHERE c1.customer_id <> c2.customer_id GROUP BY c1.customer_name, c2.customer_name;",
      "SELECT c.customer_name, p.product_name, p.product_price, r.rating FROM customers c INNER JOIN preferences p ON c.customer_id = p.customer_id INNER JOIN recommendations r ON p.product_id = r.product_id INNER JOIN products pr ON r.product_id = pr.product_id;",
      "SELECT p.product_name, COUNT(r.customer_id) AS number_of_customers FROM products p LEFT JOIN recommendations r ON p.product_id = r.product_id GROUP BY p.product_name;",
      "SELECT c.customer_name, p.product_name, SUM(r.recommendation_score) AS total_score FROM customers c INNER JOIN recommendations r ON c.customer_id = r.customer_id INNER JOIN products p ON r.product_id = p.product_id GROUP BY c.customer_name, p.product_name;",
      "SELECT c.customer_name, p.product_name, r.recommendation_score FROM customers c LEFT JOIN recommendations r ON c.customer_id = r.customer_id LEFT JOIN products p ON r.product_id = p.product_id;",
      "SELECT c.customer_name, p.product_name, r.recommendation_score FROM customers c RIGHT JOIN recommendations r ON c.customer_id = r.customer_id RIGHT JOIN products p ON r.product_id = p.product_id;",
      "SELECT c.customer_name, p.product_name, r.recommendation_score FROM customers c FULL JOIN recommendations r ON c.customer_id = r.customer_id FULL JOIN products p ON r.product_id = p.product_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM ShoppingCart;",
      "SELECT * FROM ProductRecommendations;",
      "SELECT * FROM CustomerPreferences;",
      "SELECT * FROM PurchasedProducts;",
      "SELECT * FROM ProductCategories;",
      "SELECT customer_id, product_id FROM ShoppingCart;",
      "SELECT product_id, recommended_product_id FROM ProductRecommendations;",
      "SELECT customer_id, preference_category, preference_value FROM CustomerPreferences;",
      "SELECT customer_id, product_id, purchase_date FROM PurchasedProducts;",
      "SELECT category_id, category_name FROM ProductCategories;",
      "SELECT customer_id, product_id, quantity FROM ShoppingCart;",
      "SELECT product_id, recommended_product_id, score FROM ProductRecommendations;",
      "SELECT customer_id, preference_category FROM CustomerPreferences;",
      "SELECT customer_id, product_id FROM PurchasedProducts;",
      "SELECT category_id FROM ProductCategories;",
      "SELECT customer_id, product_id, quantity, purchase_date FROM ShoppingCart INNER JOIN PurchasedProducts ON ShoppingCart.customer_id = PurchasedProducts.customer_id AND ShoppingCart.product_id = PurchasedProducts.product_id;",
      "SELECT customer_id, preference_category, preference_value, category_name FROM CustomerPreferences LEFT JOIN ProductCategories ON CustomerPreferences.preference_category = ProductCategories.category_id;",
      "SELECT customer_id, product_id, quantity, category_name FROM ShoppingCart INNER JOIN ProductCategories ON ShoppingCart.product_id = ProductCategories.category_id;",
      "SELECT customer_id, product_id, purchase_date, category_name FROM PurchasedProducts INNER JOIN ProductCategories ON PurchasedProducts.product_id = ProductCategories.category_id;",
      "SELECT customer_id, product_id, quantity, preference_category, preference_value FROM ShoppingCart JOIN CustomerPreferences ON ShoppingCart.customer_id = CustomerPreferences.customer_id AND ShoppingCart.product_id = CustomerPreferences.preference_category AND ShoppingCart.quantity = CustomerPreferences.preference_value;",
      "SELECT * FROM ShoppingCart WHERE customer_id = '12345' AND quantity > 0;",
      "SELECT pr.*, pc.* FROM ProductRecommendations pr JOIN ProductCategories pc ON pr.product_id = pc.category_id;",
      "SELECT DISTINCT p.product_id, p.purchase_date FROM PurchasedProducts p WHERE EXTRACT(YEAR FROM p.purchase_date) = 2022;",
      "SELECT cp.customer_id, pc.category_name FROM CustomerPreferences cp JOIN ProductCategories pc ON cp.preference_category = pc.category_id;",
      "SELECT pc.category_name, COUNT(pp.product_id) AS total_purchases FROM ProductCategories pc LEFT JOIN PurchasedProducts pp ON pc.category_id = pp.product_id GROUP BY pc.category_name;",
      "SELECT pr.recommended_product_id, pc.category_name, pr.score FROM ProductRecommendations pr JOIN ProductCategories pc ON pr.recommended_product_id = pc.category_id ORDER BY pr.score DESC;",
      "SELECT * FROM ShoppingCart WHERE product_id IN (SELECT product_id FROM PurchasedProducts WHERE customer_id = '12345');",
      "SELECT DISTINCT cp.customer_id, pc.category_name FROM CustomerPreferences cp JOIN ProductCategories pc ON cp.preference_category = pc.category_id WHERE cp.customer_id = '54321';",
      "SELECT pr.*, pc.* FROM ProductRecommendations pr LEFT JOIN ProductCategories pc ON pr.product_id = pc.category_id;",
      "SELECT pc.category_name, COUNT(pp.product_id) AS total_purchases FROM ProductCategories pc RIGHT JOIN PurchasedProducts pp ON pc.category_id = pp.product_id GROUP BY pc.category_name;",
      "SELECT p.*, pc.category_name FROM PurchasedProducts p FULL JOIN ProductCategories pc ON p.product_id = pc.category_id;",
      "SELECT pr.recommended_product_id, pc.category_name, pr.score FROM ProductRecommendations pr JOIN ProductCategories pc ON pr.recommended_product_id = pc.category_id AND pr.score > 0.5;",
      "SELECT * FROM ProductRecommendations WHERE product_id = '98765' AND score > 0.7;",
      "SELECT cp.customer_id, cp.preference_category, pc.category_name FROM CustomerPreferences cp JOIN ProductCategories pc ON cp.preference_category = pc.category_id;",
      "SELECT pr.recommended_product_id, pc.category_name, pr.score FROM ProductRecommendations pr JOIN ProductCategories pc ON pr.recommended_product_id = pc.category_id AND pc.category_name = 'Electronics';",
      "SELECT * FROM ShoppingCart ORDER BY quantity DESC;",
      "SELECT pc.category_name, COUNT(pp.product_id) AS total_purchases FROM ProductCategories pc LEFT JOIN PurchasedProducts pp ON pc.category_id = pp.product_id AND pp.purchase_date > '2022-01-01' GROUP BY pc.category_name;",
      "SELECT DISTINCT p.purchase_date, pp.product_id FROM PurchasedProducts p JOIN ProductCategories pc ON p.product_id = pc.category_id WHERE pc.category_name = 'Clothing';",
      "SELECT pr.recommended_product_id, pc.category_name, pr.score FROM ProductRecommendations pr JOIN ProductCategories pc ON pr.recommended_product_id = pc.category_id AND pc.category_name <> 'Books';",
      "SELECT * FROM ShoppingCart WHERE customer_id = '12345' AND product_id = '98765';"
    ]
  }
]