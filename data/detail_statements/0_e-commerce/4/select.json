[
  {
    "statements": [
      "SELECT * FROM sales_data LIMIT 10",
      "SELECT product_name, sale_amount FROM sales_data",
      "SELECT AVG(sale_amount) AS avg_sale_amount FROM sales_data",
      "SELECT * FROM sales_data WHERE sale_date >= '2022-01-01'",
      "SELECT COUNT(sales_id) AS total_sales FROM sales_data",
      "SELECT product_name, SUM(sale_amount) AS total_sales_amount FROM sales_data GROUP BY product_name",
      "SELECT * FROM sales_data ORDER BY sale_date DESC",
      "SELECT DISTINCT product_name FROM sales_data",
      "SELECT MAX(sale_amount) AS max_sale_amount FROM sales_data",
      "SELECT MIN(sale_amount) AS min_sale_amount FROM sales_data",
      "SELECT AVG(sale_amount) AS avg_sale_amount_per_product, product_name FROM sales_data GROUP BY product_name",
      "SELECT * FROM sales_data WHERE product_name LIKE '%shirt%'",
      "SELECT * FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT COUNT(DISTINCT product_name) AS total_products_sold FROM sales_data",
      "SELECT * FROM sales_data WHERE product_name = 'Shoes'",
      "SELECT SUM(sale_amount) AS total_sales_amount FROM sales_data",
      "SELECT * FROM sales_data WHERE product_name IN ('Shoes', 'Jeans')",
      "SELECT * FROM sales_data WHERE product_name != 'Hat'",
      "SELECT * FROM sales_data WHERE product_name IS NULL",
      "SELECT sale_id, sale_date FROM sales_data",
      "SELECT * FROM sales_data WHERE sale_amount > 1000 ORDER BY sale_date DESC;",
      "SELECT product_name, SUM(sale_amount) AS total_sales FROM sales_data GROUP BY product_name;",
      "SELECT AVG(sale_amount) AS avg_amount, COUNT(sales_id) AS total_sales FROM sales_data WHERE sale_amount < 500;",
      "SELECT product_name, sale_amount, sale_date FROM sales_data WHERE product_name LIKE 'A%' AND sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM sales_data ORDER BY sale_amount DESC, sale_date ASC;",
      "SELECT DISTINCT product_name FROM sales_data;",
      "SELECT MAX(sale_amount) AS max_sale FROM sales_data;",
      "SELECT MIN(sale_amount) AS min_sale FROM sales_data WHERE product_name = 'Product A';",
      "SELECT AVG(sale_amount) AS avg_sale, COUNT(sales_id) AS total_sales FROM sales_data WHERE sale_date >= '2022-06-01';",
      "SELECT product_name, COUNT(sales_id) AS total_sales FROM sales_data GROUP BY product_name HAVING COUNT(sales_id) > 5;",
      "SELECT product_name, MIN(sale_amount) AS min_sale, MAX(sale_amount) AS max_sale FROM sales_data GROUP BY product_name;",
      "SELECT product_name, sale_date, SUM(sale_amount) AS total_sales FROM sales_data GROUP BY product_name, sale_date;",
      "SELECT EXTRACT(YEAR FROM sale_date) AS sale_year, SUM(sale_amount) AS total_sales FROM sales_data GROUP BY EXTRACT(YEAR FROM sale_date);",
      "SELECT product_name, sale_amount * 1.1 AS updated_sale_amount FROM sales_data;",
      "SELECT product_name, sale_amount, sale_date, DATEDIFF(NOW(), sale_date) AS days_since_sale FROM sales_data WHERE DATEDIFF(NOW(), sale_date) > 30;",
      "SELECT product_name, sale_amount, sale_date FROM sales_data WHERE MONTH(sale_date) = 12 AND YEAR(sale_date) = 2022;",
      "SELECT product_name, sale_date, sale_amount FROM sales_data WHERE sale_date = (SELECT MAX(sale_date) FROM sales_data);",
      "SELECT product_name, sale_amount, sale_date FROM sales_data WHERE sale_date = (SELECT MIN(sale_date) FROM sales_data) AND product_name = 'Product B';",
      "SELECT product_name, sale_amount, sale_date FROM sales_data WHERE sale_amount = (SELECT MAX(sale_amount) FROM sales_data);",
      "SELECT product_name, sale_amount FROM sales_data WHERE sale_amount IN (SELECT MAX(sale_amount) FROM sales_data);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sales_data_table;",
      "SELECT transaction_id, product_id, quantity FROM sales_data_table;",
      "SELECT transaction_id, product_id, quantity, price FROM sales_data_table;",
      "SELECT transaction_id, product_id, quantity, price, transaction_date FROM sales_data_table;",
      "SELECT * FROM performance_data_table;",
      "SELECT performance_id, employee_id, sales_amount FROM performance_data_table;",
      "SELECT performance_id, employee_id, sales_amount, sales_date FROM performance_data_table;",
      "SELECT transaction_id, product_id, quantity, price FROM sales_data_table WHERE quantity > 10;",
      "SELECT employee_id, sales_amount FROM performance_data_table WHERE sales_amount > 5000;",
      "SELECT transaction_id, product_id, transaction_date FROM sales_data_table WHERE transaction_date = '2022-01-01';",
      "SELECT employee_id, sales_amount, sales_date FROM performance_data_table WHERE sales_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT product_id, SUM(quantity) AS total_quantity FROM sales_data_table GROUP BY product_id;",
      "SELECT employee_id, AVG(sales_amount) AS average_sales FROM performance_data_table GROUP BY employee_id;",
      "SELECT * FROM sales_data_table ORDER BY transaction_date DESC;",
      "SELECT * FROM performance_data_table ORDER BY sales_amount DESC;",
      "SELECT transaction_id, product_id, quantity, price FROM sales_data_table WHERE quantity > 10 ORDER BY price ASC;",
      "SELECT employee_id, sales_amount FROM performance_data_table WHERE sales_amount > 5000 ORDER BY sales_amount DESC;",
      "SELECT product_id, COUNT(*) AS total_transactions FROM sales_data_table GROUP BY product_id;",
      "SELECT employee_id, MAX(sales_amount) AS max_sales FROM performance_data_table GROUP BY employee_id;",
      "SELECT * FROM sales_data_table LIMIT 10;",
      "SELECT * FROM performance_data_table LIMIT 5;",
      "SELECT * FROM sales_data_table WHERE quantity > 10 AND price > 50",
      "SELECT transaction_id, product_id, quantity FROM sales_data_table WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT product_id, SUM(quantity) AS total_quantity FROM sales_data_table GROUP BY product_id HAVING total_quantity > 100",
      "SELECT sales_data_table.*, performance_data_table.sales_amount FROM sales_data_table INNER JOIN performance_data_table ON sales_data_table.transaction_id = performance_data_table.performance_id",
      "SELECT employee_id, AVG(sales_amount) AS avg_sales_amount FROM performance_data_table GROUP BY employee_id HAVING avg_sales_amount > 5000",
      "SELECT * FROM sales_data_table WHERE MONTH(transaction_date) = 3 AND YEAR(transaction_date) = 2022",
      "SELECT COUNT(DISTINCT product_id) AS total_products_sold FROM sales_data_table",
      "SELECT employee_id, MAX(sales_amount) AS highest_sales_amount FROM performance_data_table GROUP BY employee_id ORDER BY highest_sales_amount DESC",
      "SELECT transaction_date, SUM(quantity * price) AS total_revenue FROM sales_data_table GROUP BY transaction_date",
      "SELECT * FROM sales_data_table WHERE quantity > 5 ORDER BY price DESC",
      "SELECT product_id, AVG(price) AS avg_price FROM sales_data_table GROUP BY product_id",
      "SELECT employee_id, MIN(sales_amount) AS lowest_sales_amount FROM performance_data_table GROUP BY employee_id ORDER BY lowest_sales_amount ASC",
      "SELECT product_id, COUNT(*) AS total_transactions FROM sales_data_table GROUP BY product_id",
      "SELECT employee_id, SUM(sales_amount) AS total_sales_amount FROM performance_data_table GROUP BY employee_id HAVING total_sales_amount > 10000",
      "SELECT transaction_date, AVG(price) AS avg_price_per_transaction FROM sales_data_table GROUP BY transaction_date",
      "SELECT * FROM sales_data_table WHERE transaction_date > '2022-06-01'",
      "SELECT product_id, MAX(price) AS highest_price FROM sales_data_table GROUP BY product_id",
      "SELECT sales_date, SUM(sales_amount) AS total_sales FROM performance_data_table GROUP BY sales_date",
      "SELECT employee_id, COUNT(*) AS total_sales_transactions FROM performance_data_table GROUP BY employee_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sales_data;",
      "SELECT sale_id, sale_date, sales_amount FROM sales_data WHERE product_id = 1;",
      "SELECT product_name, unit_price FROM product;",
      "SELECT product_id, product_name, category FROM product WHERE unit_price > 100;",
      "SELECT * FROM sales_performance WHERE performance_rating > 4;",
      "SELECT sale_date, sales_amount FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM product WHERE category = 'Electronics';",
      "SELECT sale_id, performance_rating FROM sales_performance WHERE sale_id = 1001;",
      "SELECT SUM(sales_amount) AS total_sales FROM sales_data;",
      "SELECT AVG(unit_price) AS avg_price FROM product;",
      "SELECT DISTINCT category FROM product;",
      "SELECT COUNT(product_id) AS total_products FROM product;",
      "SELECT AVG(performance_rating) AS avg_rating FROM sales_performance;",
      "SELECT * FROM sales_data ORDER BY sale_date DESC;",
      "SELECT product_name, unit_price FROM product ORDER BY unit_price ASC;",
      "SELECT MAX(sales_amount) AS highest_sales FROM sales_data;",
      "SELECT MIN(unit_price) AS lowest_price FROM product;",
      "SELECT product_id, product_name, category, unit_price FROM product WHERE product_id = 1002;",
      "SELECT sale_id, sale_date, sales_rep_id FROM sales_performance WHERE sales_amount > 500;",
      "SELECT sale_date, SUM(sales_amount) AS total_sales FROM sales_data GROUP BY sale_date;",
      "SELECT product_id, COUNT(*) AS total_sales FROM sales_data GROUP BY product_id ORDER BY total_sales DESC;",
      "SELECT * FROM sales_data WHERE sales_amount > 1000;",
      "SELECT product_id, product_name FROM product WHERE unit_price > 50;",
      "SELECT sale_id, sale_date, product_id, sales_amount FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM sales_data JOIN product ON sales_data.product_id = product.product_id;",
      "SELECT sales_data.sale_id, sales_data.sales_amount, sales_performance.performance_rating FROM sales_data JOIN sales_performance ON sales_data.sale_id = sales_performance.sale_id;",
      "SELECT * FROM sales_data WHERE product_id IN (SELECT product_id FROM product WHERE category = 'Electronics');",
      "SELECT product_name, unit_price, category, sales_amount FROM product JOIN sales_data ON product.product_id = sales_data.product_id;",
      "SELECT * FROM sales_data WHERE sale_date >= '2022-01-01' AND sale_date <= '2022-02-28';",
      "SELECT AVG(sales_amount) AS average_sales FROM sales_data;",
      "SELECT product_id, AVG(unit_price) AS average_unit_price FROM product GROUP BY product_id ORDER BY average_unit_price DESC;",
      "SELECT category, SUM(sales_amount) AS total_sales FROM product JOIN sales_data ON product.product_id = sales_data.product_id GROUP BY category;",
      "SELECT product_id, COUNT(*) AS total_sales FROM sales_data GROUP BY product_id HAVING COUNT(*) > 5;",
      "SELECT product_name, SUM(sales_amount) AS total_sales FROM product JOIN sales_data ON product.product_id = sales_data.product_id GROUP BY product_name ORDER BY total_sales DESC;",
      "SELECT product_id, MAX(unit_price) AS max_unit_price FROM product;",
      "SELECT product_name, MIN(unit_price) AS min_unit_price FROM product;",
      "SELECT performance_rating, COUNT(*) AS sales_count FROM sales_performance GROUP BY performance_rating;",
      "SELECT category, AVG(unit_price) AS average_unit_price FROM product GROUP BY category;",
      "SELECT sales_rep_id, AVG(performance_rating) AS average_rating FROM sales_performance GROUP BY sales_rep_id;",
      "SELECT DISTINCT category FROM product;",
      "SELECT product_id, CAST(unit_price AS INT) AS unit_price_integer FROM product;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sales_data;",
      "SELECT sales_id, sales_date, sales_amount FROM sales_data;",
      "SELECT product_id, product_name, category, unit_price FROM products;",
      "SELECT * FROM products;",
      "SELECT rep_id, rep_name, region, hire_date FROM sales_representatives;",
      "SELECT rep_name, region FROM sales_representatives;",
      "SELECT sales_id, rep_id, sales_amount, performance_rating FROM sales_performance;",
      "SELECT sales_id, rep_id FROM sales_performance;",
      "SELECT sales_id, sales_amount, performance_rating FROM sales_performance;",
      "SELECT product_name, unit_price FROM products;",
      "SELECT sales_date, sales_amount FROM sales_data;",
      "SELECT product_id, category FROM products;",
      "SELECT rep_name, hire_date FROM sales_representatives;",
      "SELECT product_id, product_name, unit_price FROM products;",
      "SELECT sales_id, rep_id, performance_rating FROM sales_performance;",
      "SELECT sales_id, sales_amount FROM sales_data;",
      "SELECT rep_id, region FROM sales_representatives;",
      "SELECT product_name, category, unit_price FROM products;",
      "SELECT * FROM sales_representatives;",
      "SELECT sales_id, rep_id, sales_amount FROM sales_performance;",
      "SELECT * FROM sales_data WHERE sales_amount > 1000;",
      "SELECT product_name, unit_price FROM products WHERE category = 'Electronics';",
      "SELECT rep_name, region FROM sales_representatives WHERE hire_date < '2022-01-01';",
      "SELECT sales_id, performance_rating FROM sales_performance WHERE sales_amount >= 5000 AND performance_rating > 4;",
      "SELECT * FROM sales_data INNER JOIN products ON sales_data.product_id = products.product_id;",
      "SELECT rep_name, sales_amount FROM sales_representatives INNER JOIN sales_performance ON sales_representatives.rep_id = sales_performance.rep_id;",
      "SELECT product_name, category, unit_price FROM products LEFT JOIN sales_data ON products.product_id = sales_data.product_id;",
      "SELECT DISTINCT region FROM sales_representatives;",
      "SELECT * FROM sales_data WHERE sales_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT AVG(sales_amount) AS avg_sales_amount FROM sales_data;",
      "SELECT MAX(unit_price) AS max_unit_price FROM products;",
      "SELECT MIN(sales_amount) AS min_sales_amount FROM sales_data WHERE product_id = 5;",
      "SELECT COUNT(*) AS total_sales_reps FROM sales_representatives;",
      "SELECT rep_name, SUM(sales_amount) AS total_sales FROM sales_representatives INNER JOIN sales_performance ON sales_representatives.rep_id = sales_performance.rep_id GROUP BY rep_name;",
      "SELECT product_name, AVG(unit_price) AS avg_unit_price FROM products GROUP BY category;",
      "SELECT region, COUNT(*) AS total_reps FROM sales_representatives GROUP BY region HAVING COUNT(*) > 2;",
      "SELECT product_id, COUNT(*) AS total_sales FROM sales_data GROUP BY product_id ORDER BY total_sales DESC;",
      "SELECT rep_name, SUM(sales_amount) AS total_sales FROM sales_performance INNER JOIN sales_representatives ON sales_performance.rep_id = sales_representatives.rep_id GROUP BY rep_name HAVING SUM(sales_amount) > 5000;",
      "SELECT product_name, category, AVG(unit_price) AS avg_price, MAX(unit_price) AS max_price FROM products GROUP BY product_name, category;",
      "SELECT DISTINCT region FROM sales_representatives ORDER BY region DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM SalesData;",
      "SELECT SaleID, SaleAmount FROM SalesData;",
      "SELECT ProductID, ProductName, ProductPrice FROM Products;",
      "SELECT CustomerID, CustomerName, CustomerAddress FROM Customers;",
      "SELECT RepID, RepName, RepEmail FROM SalesRepresentatives;",
      "SELECT SaleID, RepID, SaleAmount FROM SalesPerformance;",
      "SELECT SaleID, SaleAmount, RepName FROM SalesPerformance INNER JOIN SalesRepresentatives ON SalesPerformance.RepID = SalesRepresentatives.RepID;",
      "SELECT SaleID, SaleAmount, ProductName FROM SalesData INNER JOIN Products ON SalesData.ProductID = Products.ProductID;",
      "SELECT SaleDate, SaleAmount, CustomerName FROM SalesData INNER JOIN SalesPerformance ON SalesData.SaleID = SalesPerformance.SaleID INNER JOIN Customers ON SalesPerformance.RepID = Customers.CustomerID;",
      "SELECT CustomerName, CustomerEmail, SaleAmount FROM Customers INNER JOIN SalesPerformance ON Customers.CustomerID = SalesPerformance.RepID;",
      "SELECT s.SaleID, s.SaleAmount, p.ProductCategory FROM SalesData s INNER JOIN Products p ON s.ProductID = p.ProductID;",
      "SELECT c.CustomerName, sp.SaleAmount, sr.RepName FROM Customers c INNER JOIN SalesPerformance sp ON c.CustomerID = sp.RepID INNER JOIN SalesRepresentatives sr ON sp.RepID = sr.RepID;",
      "SELECT p.ProductName, p.ProductPrice, s.SaleAmount FROM Products p INNER JOIN SalesData s ON p.ProductID = s.ProductID;",
      "SELECT r.RepName, r.RepEmail, sp.SaleAmount FROM SalesRepresentatives r INNER JOIN SalesPerformance sp ON r.RepID = sp.RepID;",
      "SELECT s.SaleDate, s.SaleAmount, p.ProductName FROM SalesData s INNER JOIN Products p ON s.ProductID = p.ProductID;",
      "SELECT c.CustomerName, c.CustomerEmail, sp.SaleAmount FROM Customers c INNER JOIN SalesPerformance sp ON c.CustomerID = sp.RepID;",
      "SELECT p.ProductCategory, p.ProductPrice, s.SaleAmount FROM Products p INNER JOIN SalesData s ON p.ProductID = s.ProductID;",
      "SELECT sr.RepName, sr.RepPhone, sp.SaleAmount FROM SalesRepresentatives sr INNER JOIN SalesPerformance sp ON sr.RepID = sp.RepID;",
      "SELECT s.SaleDate, s.SaleAmount, c.CustomerName FROM SalesData s INNER JOIN SalesPerformance sp ON s.SaleID = sp.SaleID INNER JOIN Customers c ON sp.RepID = c.CustomerID;",
      "SELECT p.ProductName, p.ProductPrice, s.SaleAmount FROM Products p INNER JOIN SalesData s ON p.ProductID = s.ProductID;",
      "SELECT * FROM SalesData INNER JOIN Products ON SalesData.ProductID = Products.ProductID ORDER BY SaleAmount DESC;",
      "SELECT CustomerName, CustomerEmail FROM Customers WHERE CustomerName LIKE 'A%' AND CustomerAddress LIKE '%Street';",
      "SELECT ProductName, ProductCategory, ProductPrice FROM Products WHERE ProductPrice > 100 ORDER BY ProductPrice ASC;",
      "SELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepEmail LIKE '%@gmail.com';",
      "SELECT SaleID, ProductName, SaleDate FROM SalesData JOIN Products ON SalesData.ProductID = Products.ProductID WHERE SaleDate > '2022-01-01';",
      "SELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerAddress = 'New York' OR CustomerAddress = 'Los Angeles';",
      "SELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepPhone LIKE '555%';",
      "SELECT SaleID, SaleAmount FROM SalesData WHERE SaleAmount BETWEEN 50 AND 100;",
      "SELECT SaleID, RepName, SaleAmount FROM SalesData JOIN SalesRepresentatives ON SalesData.SaleID = SalesRepresentatives.RepID ORDER BY SaleAmount DESC;",
      "SELECT ProductName, ProductCategory, ProductPrice FROM Products WHERE ProductCategory = 'Electronics';",
      "SELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerEmail NOT LIKE '%hotmail.com';",
      "SELECT RepName, RepEmail FROM SalesRepresentatives WHERE RepPhone LIKE '###-###-####';",
      "SELECT SaleID, SaleDate, SaleAmount FROM SalesData WHERE SaleAmount > 500 ORDER BY SaleAmount DESC;",
      "SELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerName IN ('Alice', 'Bob', 'Charlie');",
      "SELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepName LIKE '%John%' OR RepName LIKE '%David%';",
      "SELECT SaleID, ProductName, SaleAmount FROM SalesData JOIN Products ON SalesData.ProductID = Products.ProductID WHERE ProductName LIKE '%Phone%';",
      "SELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerAddress LIKE '%Avenue' AND CustomerName NOT LIKE '%Alice%';",
      "SELECT SaleID, RepName, SaleDate FROM SalesData JOIN SalesRepresentatives ON SalesData.SaleID = SalesRepresentatives.RepID WHERE SaleDate BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT ProductName, ProductPrice FROM Products WHERE ProductPrice < 50 ORDER BY ProductPrice ASC;",
      "SELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepName IN ('Alice', 'Bob', 'Charlie');"
    ]
  }
]