[
  {
    "statements": [
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT name FROM customers WHERE customer_id = 2;",
      "SELECT address FROM customers WHERE customer_id = 3;",
      "SELECT phone_number FROM customers WHERE customer_id = 4;",
      "SELECT * FROM customers WHERE name = 'John';",
      "SELECT customer_id, name FROM customers WHERE address LIKE '%Street%';",
      "SELECT * FROM customers WHERE phone_number LIKE '123%';",
      "SELECT customer_id, name, address FROM customers WHERE phone_number = '555-5555';",
      "SELECT * FROM customers WHERE customer_id IN (1, 2, 3);",
      "SELECT name, phone_number FROM customers WHERE customer_id = 4;",
      "SELECT * FROM customers WHERE name LIKE 'A%';",
      "SELECT * FROM customers WHERE address IS NOT NULL;",
      "SELECT customer_id, address FROM customers WHERE name = 'Alice';",
      "SELECT * FROM customers WHERE phone_number IS NULL;",
      "SELECT name, address FROM customers WHERE customer_id > 5;",
      "SELECT customer_id, phone_number FROM customers WHERE address LIKE '%Ave%';",
      "SELECT * FROM customers WHERE name = 'Bob' AND address = '123 Main St';",
      "SELECT customer_id, address FROM customers WHERE phone_number = '555-1234';",
      "SELECT * FROM customers WHERE address LIKE '%Lane%' AND phone_number IS NULL;",
      "SELECT name, phone_number FROM customers WHERE customer_id < 10;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT name, address FROM customers WHERE customer_id > 10;",
      "SELECT * FROM customers WHERE name LIKE 'A%';",
      "SELECT customer_id, phone_number FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT * FROM customers WHERE address LIKE '%Street' AND phone_number LIKE '555%';",
      "SELECT COUNT(*) AS total_customers FROM customers;",
      "SELECT AVG(customer_id) AS avg_customer_id FROM customers;",
      "SELECT MAX(customer_id) AS max_customer_id FROM customers;",
      "SELECT MIN(customer_id) AS min_customer_id FROM customers;",
      "SELECT DISTINCT name FROM customers;",
      "SELECT * FROM customers ORDER BY customer_id DESC;",
      "SELECT * FROM customers WHERE address = '123 Main St' OR phone_number = '555-1234';",
      "SELECT * FROM customers WHERE customer_id BETWEEN 5 AND 10;",
      "SELECT * FROM customers WHERE name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT * FROM customers WHERE address NOT LIKE '%Ave';",
      "SELECT * FROM customers WHERE phone_number REGEXP '^[0-9]{3}-[0-9]{3}-[0-9]{4}$';",
      "SELECT * FROM customers WHERE name = 'John' AND (address LIKE '%Road%' OR phone_number LIKE '%555%');",
      "SELECT * FROM customers WHERE customer_id < 1000 LIMIT 5;",
      "SELECT * FROM customers WHERE address = '456 Elm St' UNION SELECT * FROM customers WHERE phone_number = '555-6789';",
      "SELECT * FROM customers WHERE address = '789 Oak St' INTERSECT SELECT * FROM customers WHERE phone_number = '555-9876';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, address FROM customers;",
      "SELECT * FROM orders;",
      "SELECT order_id, amount, order_date FROM orders;",
      "SELECT customers.name, orders.amount FROM customers JOIN orders ON customers.id = orders.customer_id;",
      "SELECT customers.name AS customer_name, orders.amount AS order_amount FROM customers JOIN orders ON customers.id = orders.customer_id;",
      "SELECT * FROM customers WHERE id = 1;",
      "SELECT name, address FROM customers WHERE id = 1;",
      "SELECT * FROM orders WHERE order_date = '2022-12-31';",
      "SELECT customer_id, SUM(amount) AS total_amount FROM orders GROUP BY customer_id;",
      "SELECT customers.name, SUM(orders.amount) AS total_amount FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name;",
      "SELECT * FROM customers WHERE name LIKE 'A%';",
      "SELECT * FROM orders WHERE amount > 100;",
      "SELECT * FROM customers WHERE address LIKE '%Street';",
      "SELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_id, COUNT(order_id) AS order_count FROM orders GROUP BY customer_id HAVING order_count > 2;",
      "SELECT name, COUNT(order_id) AS order_count FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY name HAVING order_count > 1;",
      "SELECT * FROM customers ORDER BY name;",
      "SELECT * FROM orders ORDER BY amount DESC;",
      "SELECT * FROM customers LIMIT 5;",
      "SELECT * FROM customers WHERE id = 1;",
      "SELECT name, address, contact_number FROM customers WHERE name LIKE 'S%';",
      "SELECT c.name, o.amount FROM customers c INNER JOIN orders o ON c.id = o.customer_id;",
      "SELECT c.name, SUM(o.amount) AS total_amount FROM customers c INNER JOIN orders o ON c.id = o.customer_id GROUP BY c.name;",
      "SELECT c.name, o.amount, o.order_date FROM customers c LEFT JOIN orders o ON c.id = o.customer_id;",
      "SELECT c.name, COUNT(o.order_id) AS num_orders FROM customers c LEFT JOIN orders o ON c.id = o.customer_id GROUP BY c.name;",
      "SELECT c.name, AVG(o.amount) AS avg_amount FROM customers c LEFT JOIN orders o ON c.id = o.customer_id GROUP BY c.name;",
      "SELECT c.name, o.amount, o.order_date FROM customers c, orders o WHERE c.id = o.customer_id AND o.amount > 100;",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id WHERE o.amount < 50;",
      "SELECT * FROM customers WHERE id IN (SELECT customer_id FROM orders WHERE amount > 200);",
      "SELECT c.name, o.amount, o.order_date FROM customers c JOIN orders o ON c.id = o.customer_id WHERE MONTH(o.order_date) = 10;",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id WHERE YEAR(o.order_date) = 2022;",
      "SELECT c.name, o.amount, o.order_date FROM customers c JOIN orders o ON c.id = o.customer_id WHERE DAY(o.order_date) = 15;",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id WHERE o.order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id WHERE o.order_date > '2022-06-01';",
      "SELECT c.name AS customer_name, o.amount AS order_amount FROM customers c JOIN orders o ON c.id = o.customer_id;",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id ORDER BY o.amount DESC;",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id ORDER BY o.order_date ASC;",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id LIMIT 10;",
      "SELECT c.name, o.amount FROM customers c JOIN orders o ON c.id = o.customer_id OFFSET 5 ROWS FETCH NEXT 5 ROWS ONLY;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_details;",
      "SELECT name, address FROM customer_details WHERE customer_id = 1;",
      "SELECT order_id, total_amount FROM orders;",
      "SELECT * FROM orders WHERE customer_id = 1;",
      "SELECT payment_id, payment_amount FROM payments;",
      "SELECT * FROM payments WHERE order_id = 1;",
      "SELECT c.name, o.order_date FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT c.name, o.total_amount, p.payment_amount FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id JOIN payments p ON o.order_id = p.order_id;",
      "SELECT c.name, o.order_date, p.payment_date FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id JOIN payments p ON o.order_id = p.order_id WHERE o.total_amount > 100;",
      "SELECT c.name AS customer_name, o.order_date AS order_date, p.payment_amount AS payment_amount FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id JOIN payments p ON o.order_id = p.order_id;",
      "SELECT * FROM customer_details WHERE name LIKE '%Doe%';",
      "SELECT order_id, SUM(payment_amount) AS total_payments FROM payments GROUP BY order_id;",
      "SELECT c.name, COUNT(o.order_id) AS num_orders FROM customer_details c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
      "SELECT c.name, MAX(o.total_amount) AS max_order_amount FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
      "SELECT c.name, COUNT(p.payment_id) AS num_payments FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id JOIN payments p ON o.order_id = p.order_id GROUP BY c.name;",
      "SELECT c.name, MAX(o.total_amount) AS max_order_amount, MIN(p.payment_amount) AS min_payment_amount FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id JOIN payments p ON o.order_id = p.order_id GROUP BY c.name;",
      "SELECT AVG(total_amount) AS avg_order_amount FROM orders;",
      "SELECT c.name, CONCAT(c.address, ', ', c.contact_number) AS full_address FROM customer_details c;",
      "SELECT c.name, AVG(p.payment_amount) AS avg_payment_amount FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id JOIN payments p ON o.order_id = p.order_id GROUP BY c.name;",
      "SELECT c.name, DATE_FORMAT(o.order_date, '%Y-%m-%d') AS formatted_order_date FROM customer_details c JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT * FROM customer_details;",
      "SELECT name, address FROM customer_details WHERE customer_id = 1;",
      "SELECT customer_id, name, address, contact_number FROM customer_details WHERE name LIKE 'A%';",
      "SELECT * FROM orders;",
      "SELECT order_id, customer_id, order_date, total_amount FROM orders WHERE customer_id = 1;",
      "SELECT * FROM payments;",
      "SELECT payment_id, order_id, payment_date, payment_amount FROM payments WHERE order_id = 1;",
      "SELECT c.customer_id, c.name, c.address, o.order_date, o.total_amount FROM customer_details c INNER JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT c.customer_id, c.name, c.address, p.payment_date, p.payment_amount FROM customer_details c INNER JOIN payments p ON c.customer_id = p.order_id;",
      "SELECT c.customer_id, c.name, c.address, o.order_date, o.total_amount, p.payment_date, p.payment_amount FROM customer_details c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN payments p ON o.order_id = p.order_id;",
      "SELECT c.name, SUM(o.total_amount) AS total_spent FROM customer_details c INNER JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
      "SELECT c.name, COUNT(o.order_id) AS total_orders FROM customer_details c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
      "SELECT c.name, o.order_date, p.payment_date, o.total_amount, p.payment_amount FROM customer_details c LEFT JOIN orders o ON c.customer_id = o.customer_id LEFT JOIN payments p ON o.order_id = p.order_id;",
      "SELECT c.name, o.order_date, p.payment_date, o.total_amount, p.payment_amount FROM customer_details c RIGHT JOIN orders o ON c.customer_id = o.customer_id RIGHT JOIN payments p ON o.order_id = p.order_id;",
      "SELECT c.name, o.order_date, p.payment_date, o.total_amount, p.payment_amount FROM customer_details c FULL JOIN orders o ON c.customer_id = o.customer_id FULL JOIN payments p ON o.order_id = p.order_id;",
      "SELECT c.name, o.order_date, p.payment_date, o.total_amount, p.payment_amount FROM customer_details c, orders o, payments p WHERE c.customer_id = o.customer_id AND o.order_id = p.order_id;",
      "SELECT * FROM customer_details WHERE customer_id IN (SELECT customer_id FROM orders);",
      "SELECT * FROM customer_details WHERE customer_id IN (SELECT customer_id FROM payments);",
      "SELECT c.name, o.order_date, p.payment_date FROM customer_details c, orders o, payments p WHERE c.customer_id = o.customer_id AND o.order_id = p.order_id;",
      "SELECT c.name, o.order_date, p.payment_date FROM customer_details c LEFT JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NULL;",
      "SELECT c.name, o.order_date, p.payment_date FROM customer_details c LEFT JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT name, address FROM Customers;",
      "SELECT customer_id, name, address FROM Customers WHERE customer_id = 1;",
      "SELECT * FROM Orders;",
      "SELECT order_id, customer_id, order_date FROM Orders WHERE total_amount > 1000;",
      "SELECT * FROM Products;",
      "SELECT product_id, product_name, price FROM Products WHERE price < 50.00;",
      "SELECT * FROM Order_Items;",
      "SELECT order_id, product_id, quantity FROM Order_Items WHERE quantity >= 10;",
      "SELECT * FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT Customers.name, Orders.total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT * FROM Order_Items INNER JOIN Products ON Order_Items.product_id = Products.product_id;",
      "SELECT Order_Items.order_id, Products.product_name, Order_Items.quantity FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id;",
      "SELECT c.customer_id, c.name, o.order_date, p.product_name, oi.quantity FROM Customers c, Orders o, Products p, Order_Items oi WHERE c.customer_id = o.customer_id AND o.order_id = oi.order_id AND oi.product_id = p.product_id;",
      "SELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM Customers WHERE name LIKE '%John%';",
      "SELECT AVG(total_amount) AS avg_total_amount FROM Orders;",
      "SELECT MAX(price) AS max_price FROM Products;",
      "SELECT COUNT(*) AS total_orders FROM Orders;",
      "SELECT SUM(quantity) AS total_quantity FROM Order_Items;",
      "SELECT * FROM Customers;",
      "SELECT * FROM Customers WHERE customer_id = 1001;",
      "SELECT name, address FROM Customers WHERE contact_number IS NOT NULL;",
      "SELECT order_id, order_date FROM Orders WHERE total_amount >= 100.00;",
      "SELECT customer_id, COUNT(*) AS total_orders FROM Orders GROUP BY customer_id;",
      "SELECT product_name, price FROM Products WHERE price < 50.00;",
      "SELECT Orders.order_id, Customers.name, Orders.total_amount FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id;",
      "SELECT Customers.name, Products.product_name, Order_Items.quantity FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id;",
      "SELECT Orders.order_id, SUM(Products.price * Order_Items.quantity) AS total_price FROM Orders INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id;",
      "SELECT Customers.name, COUNT(Order_Items.order_item_id) AS total_items FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Customers.name;",
      "SELECT Customers.name, COALESCE(SUM(Products.price * Order_Items.quantity), 0) AS total_spent FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id LEFT JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Customers.name;",
      "SELECT Customers.name, Orders.order_date, SUM(Products.price * Order_Items.quantity) AS total_price FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id LEFT JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Customers.name, Orders.order_date;",
      "SELECT Customers.name, MAX(total_amount) AS max_order_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name;",
      "SELECT Customers.name, MIN(total_amount) AS min_order_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name;",
      "SELECT Customers.name, AVG(total_amount) AS avg_order_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name;",
      "SELECT COUNT(DISTINCT Orders.order_id) AS total_orders FROM Orders;",
      "SELECT SUM(total_amount) AS total_sales FROM Orders;",
      "SELECT AVG(price) AS avg_product_price FROM Products;",
      "SELECT Orders.order_id, Products.product_name, Products.price FROM Orders INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id WHERE Orders.order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT Customers.name, Orders.order_date, Products.product_name, Order_Items.quantity, Products.price FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id WHERE Customers.name LIKE 'A%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, address FROM customers;",
      "SELECT * FROM orders;",
      "SELECT order_id, total_amount FROM orders;",
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products;",
      "SELECT * FROM payments;",
      "SELECT payment_id, payment_date, amount FROM payments;",
      "SELECT * FROM subscriptions;",
      "SELECT subscription_id, start_date, end_date FROM subscriptions;",
      "SELECT customers.name, orders.total_amount FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.name, orders.total_amount, products.product_name FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN products ON orders.order_id = products.product_id;",
      "SELECT customers.name, subscriptions.start_date, subscriptions.end_date FROM customers INNER JOIN subscriptions ON customers.customer_id = subscriptions.customer_id;",
      "SELECT * FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders WHERE total_amount > 100;",
      "SELECT * FROM products WHERE price < 50.00;",
      "SELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM subscriptions WHERE status = 'active';",
      "SELECT * FROM customers ORDER BY customer_id DESC;",
      "SELECT * FROM orders ORDER BY total_amount ASC;",
      "SELECT * FROM customers;",
      "SELECT name, address FROM customers WHERE customer_id = 1;",
      "SELECT customer_id, name, address, contact_info FROM customers WHERE name LIKE 'A%';",
      "SELECT * FROM orders JOIN customers ON orders.customer_id = customers.customer_id;",
      "SELECT o.order_id, o.order_date, c.name FROM orders o JOIN customers c ON o.customer_id = c.customer_id;",
      "SELECT p.product_name, p.price, s.start_date FROM products p JOIN subscriptions s ON p.product_id = s.subscription_id;",
      "SELECT * FROM orders WHERE total_amount > 1000 ORDER BY order_date DESC;",
      "SELECT p.product_name, SUM(o.total_amount) AS total_sales FROM products p JOIN orders o ON p.product_id = o.customer_id GROUP BY p.product_name;",
      "SELECT c.name, p.product_name, o.total_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.order_id = p.product_id;",
      "SELECT customer_id, AVG(total_amount) AS avg_amount FROM orders GROUP BY customer_id HAVING AVG(total_amount) > 500;",
      "SELECT c.name AS customer_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
      "SELECT s.subscription_id, c.name, p.product_name FROM subscriptions s JOIN customers c ON s.customer_id = c.customer_id JOIN products p ON s.subscription_id = p.product_id;",
      "SELECT name, address, COUNT(*) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY name, address HAVING COUNT(*) > 2;",
      "SELECT c.name, SUM(p.price) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.order_id = p.product_id GROUP BY c.name;",
      "SELECT p.product_name, COUNT(*) AS total_subscriptions FROM products p JOIN subscriptions s ON p.product_id = s.customer_id GROUP BY p.product_name;",
      "SELECT customer_id, MAX(total_amount) AS max_amount FROM orders GROUP BY customer_id;",
      "SELECT c.name, SUM(p.price) AS total_spent FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id LEFT JOIN products p ON o.order_id = p.product_id GROUP BY c.name;",
      "SELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_id, status, COUNT(*) AS total_subscriptions FROM subscriptions GROUP BY customer_id, status HAVING COUNT(*) > 1;",
      "SELECT c.name AS customer_name, s.start_date, s.end_date FROM customers c JOIN subscriptions s ON c.customer_id = s.customer_id;"
    ]
  }
]