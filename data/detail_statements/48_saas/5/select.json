[
  {
    "statements": [
      "SELECT * FROM healthcare_records WHERE record_id = 1;",
      "SELECT patient_name FROM healthcare_records WHERE patient_id = 100;",
      "SELECT diagnosis, treatment_plan FROM healthcare_records WHERE date_entered >= '2022-01-01';",
      "SELECT * FROM healthcare_records WHERE diagnosis LIKE '%flu%';",
      "SELECT MAX(record_id) AS max_record_id FROM healthcare_records;",
      "SELECT DISTINCT patient_id FROM healthcare_records;",
      "SELECT COUNT(*) AS total_records FROM healthcare_records;",
      "SELECT patient_name, date_entered FROM healthcare_records WHERE diagnosis = 'COVID-19';",
      "SELECT AVG(record_id) AS avg_record_id FROM healthcare_records;",
      "SELECT * FROM healthcare_records ORDER BY date_entered DESC;",
      "SELECT * FROM healthcare_records WHERE date_entered BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT patient_id, COUNT(*) AS total_records FROM healthcare_records GROUP BY patient_id;",
      "SELECT * FROM healthcare_records WHERE patient_name LIKE 'John%';",
      "SELECT MIN(record_id) AS min_record_id FROM healthcare_records;",
      "SELECT COUNT(DISTINCT diagnosis) AS unique_diagnosis FROM healthcare_records;",
      "SELECT * FROM healthcare_records WHERE record_id IN (1, 2, 3);",
      "SELECT patient_name, treatment_plan FROM healthcare_records WHERE diagnosis = 'Asthma';",
      "SELECT * FROM healthcare_records LIMIT 10;",
      "SELECT * FROM healthcare_records WHERE patient_id = 200 AND diagnosis = 'Diabetes';",
      "SELECT patient_name, diagnosis FROM healthcare_records WHERE date_entered > '2022-01-01';",
      "SELECT COUNT(*) FROM healthcare_records WHERE diagnosis = 'COVID-19';",
      "SELECT AVG(record_id) FROM healthcare_records GROUP BY diagnosis;",
      "SELECT * FROM healthcare_records ORDER BY date_entered DESC LIMIT 5;",
      "SELECT patient_name AS name, diagnosis AS issue FROM healthcare_records WHERE patient_id = 1001;",
      "SELECT AVG(patient_id), MAX(record_id), MIN(patient_id) FROM healthcare_records WHERE diagnosis = 'Stroke';",
      "SELECT patient_name, diagnosis, treatment_plan FROM healthcare_records WHERE patient_name LIKE '%John%';",
      "SELECT patient_id, AVG(record_id) AS avg_record_id FROM healthcare_records GROUP BY patient_id HAVING AVG(record_id) > 5000;",
      "SELECT patient_name, COUNT(*) FROM healthcare_records GROUP BY patient_name HAVING COUNT(*) > 1;",
      "SELECT * FROM healthcare_records WHERE diagnosis = 'Diabetes' OR diagnosis = 'Hypertension';",
      "SELECT DISTINCT patient_name FROM healthcare_records;",
      "SELECT patient_name, COUNT(*) FROM healthcare_records GROUP BY patient_name HAVING COUNT(*) < 2;",
      "SELECT patient_name, EXTRACT(DAY FROM date_entered) AS day_entered FROM healthcare_records;",
      "SELECT patient_id, CONCAT(patient_name, ' - ', diagnosis) AS patient_details FROM healthcare_records WHERE patient_id > 1000;",
      "SELECT patient_name, TIMESTAMPDIFF(DAY, date_entered, '2022-12-31') AS days_since_entered FROM healthcare_records;",
      "SELECT patient_name, LENGTH(diagnosis) AS diagnosis_length FROM healthcare_records ORDER BY diagnosis_length DESC;",
      "SELECT patient_id, DATE_FORMAT(date_entered, '%Y-%m-%d') AS entered_date FROM healthcare_records;",
      "SELECT patient_id, CASE WHEN diagnosis = 'COVID-19' THEN 'High Risk' ELSE 'Low Risk' END AS risk_level FROM healthcare_records;",
      "SELECT patient_name, DATE_FORMAT(date_entered, '%W') AS day_of_week_entered FROM healthcare_records;",
      "SELECT patient_name, CONCAT('Treatment Plan:', treatment_plan) AS full_treatment_plan FROM healthcare_records WHERE treatment_plan IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM patients;",
      "SELECT patient_id, patient_name FROM patients WHERE gender = 'M';",
      "SELECT patient_id, patient_name, date_of_birth FROM patients WHERE gender = 'F';",
      "SELECT patient_id, patient_name, address FROM patients WHERE patient_id = 1001;",
      "SELECT * FROM medical_records;",
      "SELECT record_id, patient_id, record_date FROM medical_records WHERE patient_id = 1002;",
      "SELECT patient_id, diagnosis FROM medical_records WHERE record_date >= '2022-01-01';",
      "SELECT * FROM patients WHERE patient_id IN (SELECT patient_id FROM medical_records WHERE diagnosis LIKE '%infection%');",
      "SELECT patient_id, patient_name, date_of_birth FROM patients WHERE date_of_birth BETWEEN '1980-01-01' AND '1990-12-31';",
      "SELECT patient_id, patient_name FROM patients WHERE gender = 'M' AND date_of_birth <= '1998-01-01';",
      "SELECT patient_id, patient_name, address FROM patients WHERE patient_name LIKE 'A%';",
      "SELECT patient_id, patient_name FROM patients WHERE patient_name LIKE '%son%';",
      "SELECT patient_id, patient_name, address FROM patients ORDER BY patient_name ASC;",
      "SELECT patient_id, patient_name, address FROM patients ORDER BY patient_id DESC;",
      "SELECT COUNT(*) FROM patients;",
      "SELECT AVG(patient_id) FROM patients;",
      "SELECT MAX(patient_id) FROM patients;",
      "SELECT MIN(patient_id) FROM patients;",
      "SELECT COUNT(*) FROM medical_records WHERE patient_id = 1003;",
      "SELECT patient_id, COUNT(*) AS num_records FROM medical_records GROUP BY patient_id HAVING num_records > 5;",
      "SELECT * FROM patients WHERE gender = 'M';",
      "SELECT patient_id, patient_name, date_of_birth FROM patients WHERE date_of_birth BETWEEN '1990-01-01' AND '2000-12-31';",
      "SELECT patient_name, address FROM patients WHERE address LIKE '%Street%';",
      "SELECT * FROM patients p LEFT JOIN medical_records mr ON p.patient_id = mr.patient_id;",
      "SELECT p.patient_name, mr.diagnosis FROM patients p INNER JOIN medical_records mr ON p.patient_id = mr.patient_id WHERE mr.diagnosis = 'Cancer';",
      "SELECT COUNT(*) FROM medical_records WHERE record_date = '2021-10-20';",
      "SELECT p.patient_id, p.patient_name, COUNT(*) AS num_records FROM patients p LEFT JOIN medical_records mr ON p.patient_id = mr.patient_id GROUP BY p.patient_id;",
      "SELECT p.patient_name, COUNT(*) FROM patients p INNER JOIN medical_records mr ON p.patient_id = mr.patient_id GROUP BY p.patient_name HAVING COUNT(*) >= 3;",
      "SELECT MAX(date_of_birth) AS oldest_patient FROM patients;",
      "SELECT MIN(date_of_birth) AS youngest_patient FROM patients;",
      "SELECT AVG(DATEDIFF(NOW(), date_of_birth)) AS avg_age FROM patients;",
      "SELECT p.patient_name, COUNT(mr.record_id) AS num_records FROM patients p LEFT JOIN medical_records mr ON p.patient_id = mr.patient_id GROUP BY p.patient_name HAVING num_records > 0;",
      "SELECT patient_id, MAX(record_date) AS last_record_date FROM medical_records GROUP BY patient_id;",
      "SELECT patient_name, DATEDIFF(NOW(), date_of_birth) AS age_in_days FROM patients;",
      "SELECT patient_id, patient_name, COUNT(DISTINCT diagnosis) AS unique_diagnoses FROM patients p INNER JOIN medical_records mr ON p.patient_id = mr.patient_id GROUP BY patient_id;",
      "SELECT AVG(DATEDIFF(NOW(), date_of_birth)) AS avg_age FROM patients WHERE gender = 'F';",
      "SELECT p.patient_name, COUNT(mr.record_id) AS num_records FROM patients p LEFT JOIN medical_records mr ON p.patient_id = mr.patient_id GROUP BY p.patient_name ORDER BY num_records DESC;",
      "SELECT patient_id, patient_name, COUNT(*) AS num_records FROM patients p LEFT JOIN medical_records mr ON p.patient_id = mr.patient_id GROUP BY patient_id HAVING num_records >= 2;",
      "SELECT p.patient_name, MAX(DATEDIFF(NOW(), date_of_birth)) AS max_age_in_days FROM patients p GROUP BY p.patient_name;",
      "SELECT DISTINCT(p.patient_name) FROM patients p INNER JOIN medical_records mr ON p.patient_id = mr.patient_id WHERE mr.diagnosis LIKE '%Infection%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM patients;",
      "SELECT patient_name, date_of_birth FROM patients;",
      "SELECT patient_name, gender, address FROM patients;",
      "SELECT * FROM medical_records;",
      "SELECT doctor, diagnosis FROM medical_records;",
      "SELECT record_id, doctor, prescription FROM medical_records;",
      "SELECT * FROM appointments;",
      "SELECT doctor, appointment_date, appointment_time FROM appointments;",
      "SELECT patient_id, doctor, status FROM appointments;",
      "SELECT p.patient_name, m.doctor FROM patients p INNER JOIN medical_records m ON p.patient_id = m.patient_id;",
      "SELECT p.patient_name, a.appointment_date, a.appointment_time FROM patients p INNER JOIN appointments a ON p.patient_id = a.patient_id;",
      "SELECT m.diagnosis, a.appointment_date, a.status FROM medical_records m INNER JOIN appointments a ON m.patient_id = a.patient_id;",
      "SELECT p.patient_name, m.doctor, a.appointment_date FROM patients p INNER JOIN medical_records m ON p.patient_id = m.patient_id INNER JOIN appointments a ON p.patient_id = a.patient_id;",
      "SELECT COUNT(*) FROM patients;",
      "SELECT MAX(patient_id) FROM patients;",
      "SELECT DISTINCT gender FROM patients;",
      "SELECT AVG(patient_id) FROM patients;",
      "SELECT MIN(appointment_date) FROM appointments;",
      "SELECT COUNT(DISTINCT doctor) FROM medical_records;",
      "SELECT patient_name, age(date_of_birth) AS age FROM patients;",
      "SELECT patient_id, COUNT(*) FROM medical_records GROUP BY patient_id;",
      "SELECT * FROM patients WHERE patient_id = 1;",
      "SELECT patient_name, date_of_birth FROM patients WHERE gender = 'Male';",
      "SELECT * FROM medical_records WHERE doctor = 'Dr. Smith';",
      "SELECT patient_name, diagnosis FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
      "SELECT * FROM patients WHERE date_of_birth BETWEEN '1990-01-01' AND '2000-12-31';",
      "SELECT patient_name, appointment_date FROM patients INNER JOIN appointments ON patients.patient_id = appointments.patient_id;",
      "SELECT patient_name, status FROM patients LEFT JOIN appointments ON patients.patient_id = appointments.patient_id;",
      "SELECT doctor, diagnosis FROM medical_records WHERE prescription LIKE '%pain%';",
      "SELECT COUNT(*) FROM patients;",
      "SELECT patient_name, doctor FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE doctor = 'Dr. Brown';",
      "SELECT * FROM appointments WHERE appointment_date = '2023-05-15' AND status = 'Scheduled';",
      "SELECT COUNT(*) AS total_appointments FROM appointments WHERE doctor = 'Dr. Allen';",
      "SELECT DISTINCT doctor FROM medical_records;",
      "SELECT patient_name, address FROM patients WHERE gender = 'Female';",
      "SELECT patient_name, appointment_id FROM patients JOIN appointments ON patients.patient_id = appointments.patient_id WHERE appointment_date > '2023-05-15';",
      "SELECT patient_name, diagnosis FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE date_of_birth < '1995-01-01';",
      "SELECT MAX(appointment_date) AS latest_appointment_date FROM appointments;",
      "SELECT patient_name, diagnosis, prescription FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE diagnosis LIKE '%flu%';",
      "SELECT doctor, COUNT(*) AS total_records FROM medical_records GROUP BY doctor;",
      "SELECT address FROM patients WHERE patient_name LIKE '%John%';",
      "SELECT patient_id, MAX(appointment_date) AS last_appointment_date FROM appointments GROUP BY patient_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM healthcare_records;",
      "SELECT record_id, patient_id, record_date FROM healthcare_records;",
      "SELECT record_id, record_type, record_description FROM healthcare_records;",
      "SELECT * FROM patients;",
      "SELECT patient_id, first_name, last_name FROM patients;",
      "SELECT patient_id, date_of_birth, email FROM patients;",
      "SELECT * FROM medical_staff;",
      "SELECT staff_id, staff_name, specialization FROM medical_staff;",
      "SELECT staff_id, license_number FROM medical_staff;",
      "SELECT * FROM appointments;",
      "SELECT appointment_id, patient_id, staff_id FROM appointments;",
      "SELECT appointment_id, appointment_date, appointment_type FROM appointments;",
      "SELECT patients.first_name, patients.last_name, appointments.appointment_date FROM patients JOIN appointments ON patients.patient_id = appointments.patient_id;",
      "SELECT medical_staff.staff_name, medical_staff.specialization, appointments.appointment_type FROM medical_staff JOIN appointments ON medical_staff.staff_id = appointments.staff_id;",
      "SELECT healthcare_records.record_date, appointments.appointment_date, medical_staff.staff_name FROM healthcare_records JOIN appointments ON healthcare_records.record_id = appointments.appointment_id JOIN medical_staff ON appointments.staff_id = medical_staff.staff_id;",
      "SELECT patients.first_name, patients.last_name, medical_staff.staff_name, appointments.appointment_type FROM patients JOIN appointments ON patients.patient_id = appointments.patient_id JOIN medical_staff ON appointments.staff_id = medical_staff.staff_id;",
      "SELECT * FROM healthcare_records WHERE record_date = '2022-01-01';",
      "SELECT * FROM healthcare_records WHERE record_type = 'Prescription';",
      "SELECT * FROM appointments WHERE appointment_date > '2022-01-01';",
      "SELECT * FROM appointments WHERE appointment_type = 'Consultation';",
      "SELECT * FROM healthcare_records WHERE record_date > '2022-01-01';",
      "SELECT patients.first_name, patients.last_name, appointments.appointment_date FROM patients INNER JOIN appointments ON patients.patient_id = appointments.patient_id;",
      "SELECT patients.first_name, patients.last_name, medical_staff.specialization FROM patients INNER JOIN appointments ON patients.patient_id = appointments.patient_id INNER JOIN medical_staff ON appointments.staff_id = medical_staff.staff_id;",
      "SELECT COUNT(*) FROM healthcare_records;",
      "SELECT AVG(DATEDIFF(appointment_date, record_date)) AS avg_time_between_appointment_and_record FROM healthcare_records JOIN appointments ON appointments.patient_id = healthcare_records.patient_id;",
      "SELECT first_name, last_name, DATEDIFF(NOW(), date_of_birth) AS age FROM patients;",
      "SELECT staff_name, COUNT(appointment_id) AS total_appointments FROM medical_staff LEFT JOIN appointments ON medical_staff.staff_id = appointments.staff_id GROUP BY staff_name;",
      "SELECT * FROM appointments WHERE appointment_date >= '2022-01-01' ORDER BY appointment_date DESC;",
      "SELECT COUNT(DISTINCT patient_id) AS total_unique_patients FROM healthcare_records;",
      "SELECT patient_id, COUNT(*) AS total_records FROM healthcare_records GROUP BY patient_id ORDER BY total_records DESC;",
      "SELECT * FROM medical_staff WHERE specialization = 'Cardiology' LIMIT 5;",
      "SELECT appointment_type, COUNT(*) AS total_appointments FROM appointments GROUP BY appointment_type;",
      "SELECT patients.first_name, patients.last_name, appointments.appointment_date FROM patients INNER JOIN appointments ON patients.patient_id = appointments.patient_id WHERE appointments.appointment_date < '2022-12-31 23:59:59';",
      "SELECT staff_id, COUNT(appointment_id) AS total_appointments FROM appointments GROUP BY staff_id HAVING COUNT(*) > 10;",
      "SELECT AVG(TIMESTAMPDIFF(SECOND, appointment_date, NOW())) AS avg_waiting_time FROM appointments;",
      "SELECT patients.first_name, patients.last_name, appointments.appointment_date FROM patients INNER JOIN appointments ON patients.patient_id = appointments.patient_id WHERE appointments.appointment_id IN (SELECT appointment_id FROM appointments GROUP BY appointment_id HAVING COUNT(*) > 1);",
      "SELECT COUNT(*) FROM appointments WHERE staff_id IN (SELECT staff_id FROM medical_staff WHERE specialization = 'Neurology');",
      "SELECT first_name, last_name, COUNT(*) AS total_appointments FROM patients INNER JOIN appointments ON patients.patient_id = appointments.patient_id GROUP BY patients.patient_id;",
      "SELECT DISTINCT patient_id, first_name, last_name FROM patients WHERE patient_id NOT IN (SELECT DISTINCT patient_id FROM appointments);",
      "SELECT record_type, COUNT(*) AS total_records FROM healthcare_records GROUP BY record_type HAVING COUNT(*) > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM patients",
      "SELECT name, age, gender FROM patients",
      "SELECT patient_id, age FROM patients",
      "SELECT * FROM medical_records",
      "SELECT diagnosis, treatment FROM medical_records",
      "SELECT record_id, patient_id FROM medical_records",
      "SELECT * FROM doctors",
      "SELECT name, specialization, hospital FROM doctors",
      "SELECT doctor_id, hospital FROM doctors",
      "SELECT * FROM appointments",
      "SELECT appointment_id, patient_id, doctor_id FROM appointments",
      "SELECT doctor_id, date_time FROM appointments",
      "SELECT * FROM prescriptions",
      "SELECT patient_id, doctor_id, medication FROM prescriptions",
      "SELECT prescription_id, medication, dosage FROM prescriptions",
      "SELECT * FROM patients;",
      "SELECT name, age FROM patients WHERE age > 50;",
      "SELECT appointments.date_time, patients.name, doctors.name FROM appointments JOIN patients ON appointments.patient_id = patients.patient_id JOIN doctors ON appointments.doctor_id = doctors.doctor_id;",
      "SELECT patients.name, medical_records.diagnosis, medical_records.treatment FROM patients LEFT JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
      "SELECT doctors.name, doctors.specialization, COUNT(appointments.appointment_id) AS appointment_count FROM doctors LEFT JOIN appointments ON doctors.doctor_id = appointments.doctor_id GROUP BY doctors.name, doctors.specialization;",
      "SELECT prescriptions.medication, patients.name FROM prescriptions JOIN patients ON prescriptions.patient_id = patients.patient_id WHERE prescriptions.dosage = 'Once a day';",
      "SELECT doctors.name, MAX(appointments.date_time) AS last_appointment FROM appointments JOIN doctors ON appointments.doctor_id = doctors.doctor_id GROUP BY doctors.name;",
      "SELECT patients.name, medical_records.date, prescriptions.medication FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id LEFT JOIN prescriptions ON patients.patient_id = prescriptions.patient_id;",
      "SELECT patients.name, appointments.date_time, appointments.status FROM patients JOIN appointments ON patients.patient_id = appointments.patient_id WHERE appointments.status = 'Scheduled';",
      "SELECT COUNT(patient_id) AS total_patients, AVG(age) AS average_age FROM patients;",
      "SELECT DISTINCT doctors.specialization FROM doctors;",
      "SELECT patients.name, medical_records.diagnosis, medical_records.treatment FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE medical_records.date >= '2022-01-01';",
      "SELECT MAX(age) AS oldest_patient_age FROM patients;",
      "SELECT doctors.name, appointments.date_time FROM doctors JOIN appointments ON doctors.doctor_id = appointments.doctor_id WHERE appointments.status = 'Completed';",
      "SELECT patients.name, AVG(medical_records.date) AS average_record_date FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
      "SELECT prescriptions.medication, COUNT(prescription_id) AS prescription_count FROM prescriptions GROUP BY prescriptions.medication;",
      "SELECT doctors.name, appointments.date_time, appointments.status FROM doctors JOIN appointments ON doctors.doctor_id = appointments.doctor_id WHERE appointments.status = 'In Progress';",
      "SELECT patients.name, prescriptions.medication, prescriptions.dosage FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id WHERE prescriptions.dosage != 'Twice a day';",
      "SELECT COUNT(doctor_id) AS total_doctors, AVG(LENGTH(name)) AS average_name_length FROM doctors;",
      "SELECT patients.name, medical_records.date, prescriptions.medication FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id LEFT JOIN prescriptions ON patients.patient_id = prescriptions.patient_id WHERE prescriptions.dosage = 'Twice a day';",
      "SELECT doctors.name, MAX(age) AS max_patient_age FROM doctors JOIN patients ON doctors.doctor_id = patients.patient_id;"
    ]
  }
]