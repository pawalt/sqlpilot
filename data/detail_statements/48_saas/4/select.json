[
  {
    "statements": [
      "SELECT * FROM EmployeeInformation;",
      "SELECT employee_id, first_name FROM EmployeeInformation;",
      "SELECT last_name, department FROM EmployeeInformation;",
      "SELECT position, hire_date FROM EmployeeInformation;",
      "SELECT employee_id, first_name, last_name FROM EmployeeInformation WHERE department = 'Sales';",
      "SELECT * FROM EmployeeInformation WHERE position = 'Manager';",
      "SELECT employee_id, last_name, department FROM EmployeeInformation WHERE hire_date > '2020-01-01';",
      "SELECT * FROM EmployeeInformation WHERE employee_id = 101;",
      "SELECT first_name, last_name FROM EmployeeInformation WHERE department = 'Marketing';",
      "SELECT * FROM EmployeeInformation WHERE position LIKE '%Assistant';",
      "SELECT employee_id, position FROM EmployeeInformation WHERE department = 'HR';",
      "SELECT first_name, last_name FROM EmployeeInformation WHERE hire_date < '2019-01-01';",
      "SELECT department, position FROM EmployeeInformation WHERE first_name = 'John';",
      "SELECT employee_id, department FROM EmployeeInformation WHERE last_name = 'Smith';",
      "SELECT * FROM EmployeeInformation WHERE hire_date BETWEEN '2018-01-01' AND '2020-01-01';",
      "SELECT employee_id, position FROM EmployeeInformation WHERE department = 'Engineering' AND hire_date > '2019-06-01';",
      "SELECT first_name, last_name, position FROM EmployeeInformation WHERE department IN ('Finance', 'Accounting');",
      "SELECT department, COUNT(*) FROM EmployeeInformation GROUP BY department;",
      "SELECT AVG(employee_id) AS avg_id, MIN(employee_id) AS min_id, MAX(employee_id) AS max_id FROM EmployeeInformation;",
      "SELECT first_name, department, hire_date FROM EmployeeInformation ORDER BY hire_date DESC;",
      "SELECT * FROM EmployeeInformation WHERE employee_id = 100;",
      "SELECT first_name, last_name, department FROM EmployeeInformation WHERE position = 'Manager';",
      "SELECT employee_id, first_name, last_name, hire_date FROM EmployeeInformation WHERE department = 'IT';",
      "SELECT * FROM EmployeeInformation WHERE hire_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT first_name, last_name FROM EmployeeInformation WHERE department = 'HR' AND position = 'Coordinator';",
      "SELECT employee_id, first_name, last_name FROM EmployeeInformation WHERE hire_date < '2022-06-30';",
      "SELECT * FROM EmployeeInformation ORDER BY hire_date DESC;",
      "SELECT COUNT(*) AS total_employees FROM EmployeeInformation;",
      "SELECT department, COUNT(*) AS total_employees FROM EmployeeInformation GROUP BY department;",
      "SELECT department, AVG(employee_id) AS avg_employee_id FROM EmployeeInformation GROUP BY department;",
      "SELECT department, MAX(employee_id) AS max_employee_id FROM EmployeeInformation GROUP BY department;",
      "SELECT department, MIN(employee_id) AS min_employee_id FROM EmployeeInformation GROUP BY department;",
      "SELECT department, hire_date, COUNT(*) AS total_employees FROM EmployeeInformation WHERE hire_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY department, hire_date;",
      "SELECT department, COUNT(*) AS total_employees FROM EmployeeInformation WHERE position = 'Manager' GROUP BY department;",
      "SELECT first_name, last_name FROM EmployeeInformation WHERE department IN ('IT', 'Finance');",
      "SELECT employee_id, first_name, department FROM EmployeeInformation WHERE hire_date > '2022-06-30' AND (position = 'Manager' OR position = 'Director');",
      "SELECT first_name || ' ' || last_name AS full_name FROM EmployeeInformation;",
      "SELECT department, hire_date, COUNT(*) AS total_employees FROM EmployeeInformation GROUP BY department, hire_date HAVING COUNT(*) > 1;",
      "SELECT * FROM EmployeeInformation INTERSECT SELECT * FROM EmployeeInformation WHERE department = 'IT';",
      "SELECT employee_id, first_name, last_name, department, position, hire_date FROM EmployeeInformation WHERE employee_id = (SELECT MAX(employee_id) FROM EmployeeInformation);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT name, email FROM employees;",
      "SELECT employee_id, name, phone FROM employees;",
      "SELECT * FROM payroll;",
      "SELECT employee_id, salary FROM payroll;",
      "SELECT payroll_id, salary, bonus FROM payroll;",
      "SELECT * FROM employees WHERE employee_id = 1;",
      "SELECT name, email FROM employees WHERE employee_id = 2;",
      "SELECT * FROM payroll WHERE salary > 50000;",
      "SELECT employee_id, salary FROM payroll WHERE bonus IS NOT NULL;",
      "SELECT * FROM employees ORDER BY name ASC;",
      "SELECT * FROM payroll ORDER BY salary DESC;",
      "SELECT name, phone FROM employees WHERE address LIKE '%Avenue%';",
      "SELECT * FROM employees WHERE name LIKE 'J%';",
      "SELECT * FROM payroll WHERE pay_period BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT employee_id, salary FROM payroll WHERE salary >= 60000;",
      "SELECT COUNT(*) FROM employees;",
      "SELECT MAX(salary) FROM payroll;",
      "SELECT MIN(bonus) FROM payroll;",
      "SELECT AVG(salary) FROM payroll;",
      "SELECT * FROM employees WHERE name = 'John Doe';",
      "SELECT name, email FROM employees WHERE address LIKE '%Street%';",
      "SELECT employee_id, name, phone FROM employees WHERE phone IS NOT NULL;",
      "SELECT name, salary, bonus FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id;",
      "SELECT employee_id, name, salary FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id WHERE payroll.salary > 50000;",
      "SELECT * FROM employees WHERE name LIKE 'A%' AND address LIKE '%Ave';",
      "SELECT COUNT(*) AS employee_count FROM employees;",
      "SELECT employee_id, SUM(salary) AS total_salary FROM payroll GROUP BY employee_id;",
      "SELECT employee_id, AVG(salary) AS avg_salary FROM payroll GROUP BY employee_id HAVING AVG(salary) > 60000;",
      "SELECT name, pay_period FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id WHERE payroll.pay_period BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT DISTINCT phone FROM employees;",
      "SELECT employee_id, MAX(bonus) AS max_bonus FROM payroll GROUP BY employee_id;",
      "SELECT employee_id, name, email, phone, address, salary, bonus, pay_period FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id ORDER BY salary DESC;",
      "SELECT name, salary FROM employees WHERE salary IN (SELECT MAX(salary) FROM employees);",
      "SELECT *, (salary + IFNULL(bonus, 0)) AS total_income FROM payroll;",
      "SELECT DISTINCT address FROM employees WHERE phone IS NULL;",
      "SELECT DISTINCT pay_period FROM payroll ORDER BY pay_period DESC LIMIT 5;",
      "SELECT employee_id, name, email, salary, pay_period FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id WHERE salary > 70000 AND pay_period < '2022-09-01';",
      "SELECT * FROM employees WHERE employee_id = (SELECT MAX(employee_id) FROM employees);",
      "SELECT name, AVG(salary) AS avg_salary FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id GROUP BY name HAVING AVG(salary) > 50000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT emp_id, emp_name FROM employees;",
      "SELECT emp_name, emp_department FROM employees;",
      "SELECT * FROM payroll;",
      "SELECT emp_id, salary, payment_date FROM payroll;",
      "SELECT salary FROM payroll WHERE salary > 50000;",
      "SELECT emp_name, date, time_in FROM attendance;",
      "SELECT emp_id, date, time_in, time_out FROM attendance;",
      "SELECT * FROM employees WHERE emp_department = 'Sales';",
      "SELECT * FROM employees WHERE emp_position = 'Manager';",
      "SELECT emp_name, salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id;",
      "SELECT emp_name, MAX(salary) AS max_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id GROUP BY emp_name;",
      "SELECT emp_name, AVG(salary) AS avg_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id GROUP BY emp_name;",
      "SELECT emp_name, SUM(salary) AS total_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id GROUP BY emp_name;",
      "SELECT emp_name, payroll.salary FROM employees LEFT JOIN payroll ON employees.emp_id = payroll.emp_id;",
      "SELECT emp_name, attendance.date, attendance.time_in FROM employees INNER JOIN attendance ON employees.emp_id = attendance.emp_id;",
      "SELECT emp_name, attendance.date, attendance.time_in, attendance.time_out FROM employees INNER JOIN attendance ON employees.emp_id = attendance.emp_id;",
      "SELECT emp_name, AVG(DATEDIFF(attendance.time_out, attendance.time_in)) AS avg_work_hours FROM employees INNER JOIN attendance ON employees.emp_id = attendance.emp_id GROUP BY emp_name;",
      "SELECT emp_name, AVG(DATEDIFF(attendance.time_out, attendance.time_in)) AS avg_work_hours FROM employees INNER JOIN attendance ON employees.emp_id = attendance.emp_id GROUP BY emp_name HAVING avg_work_hours > 6;",
      "SELECT emp_name, COUNT(attendance.date) AS num_days_worked FROM employees INNER JOIN attendance ON employees.emp_id = attendance.emp_id GROUP BY emp_name;",
      "SELECT * FROM employees WHERE emp_id = 1;",
      "SELECT emp_name, emp_department FROM employees WHERE emp_position = 'Manager';",
      "SELECT emp_name, salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id;",
      "SELECT emp_name, date, time_in, time_out FROM employees INNER JOIN attendance ON employees.emp_id = attendance.emp_id;",
      "SELECT emp_name, salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id WHERE salary > 50000;",
      "SELECT emp_name, emp_position FROM employees WHERE emp_department IN ('IT', 'Finance');",
      "SELECT COUNT(emp_id) AS total_employees FROM employees;",
      "SELECT emp_name, MAX(salary) AS highest_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id;",
      "SELECT emp_name, AVG(salary) AS avg_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id GROUP BY emp_name;",
      "SELECT emp_name, COUNT(attendance_id) AS total_attendance FROM employees INNER JOIN attendance ON employees.emp_id = attendance.emp_id GROUP BY emp_name;",
      "SELECT emp_name, SUM(salary) AS total_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id GROUP BY emp_name;",
      "SELECT emp_name, AVG(salary) AS avg_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id HAVING AVG(salary) > 60000;",
      "SELECT emp_name, emp_position, payment_date FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id WHERE payment_date BETWEEN '2023-01-01' AND '2023-12-31';",
      "SELECT emp_name, emp_department FROM employees WHERE emp_id NOT IN (SELECT emp_id FROM payroll);",
      "SELECT emp_name, emp_department FROM employees WHERE emp_id NOT IN (SELECT emp_id FROM attendance);",
      "SELECT emp_name, COUNT(DISTINCT emp_department) AS total_departments FROM employees;",
      "SELECT emp_name, SUM(salary) AS total_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id GROUP BY emp_name HAVING SUM(salary) > 1000000;",
      "SELECT emp_name, payment_date FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id ORDER BY payment_date DESC;",
      "SELECT emp_name, AVG(salary) AS avg_salary FROM employees INNER JOIN payroll ON employees.emp_id = payroll.emp_id GROUP BY emp_name ORDER BY AVG(salary) DESC;",
      "SELECT emp_id, emp_name FROM employees UNION SELECT emp_id, emp_name FROM payroll;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT name, department FROM employees;",
      "SELECT name, hire_date FROM employees WHERE department='IT';",
      "SELECT * FROM payroll;",
      "SELECT salary, pay_date FROM payroll WHERE salary > 50000;",
      "SELECT * FROM attendance;",
      "SELECT employee_id, check_in FROM attendance WHERE DATE(check_in)='2022-12-31';",
      "SELECT * FROM time_off;",
      "SELECT employee_id, start_date, end_date FROM time_off WHERE reason='Vacation';",
      "SELECT name AS employee_name, department AS dept FROM employees;",
      "SELECT e.name AS employee_name, p.salary AS employee_salary FROM employees e JOIN payroll p ON e.id = p.employee_id;",
      "SELECT e.name AS employee_name, a.check_in AS checkin_time FROM employees e JOIN attendance a ON e.id = a.employee_id;",
      "SELECT e.name AS employee_name, t.start_date AS leave_start_date FROM employees e JOIN time_off t ON e.id = t.employee_id",
      "SELECT e.name AS employee_name, a.check_out AS check_out_time FROM employees e JOIN attendance a ON e.id = a.employee_id WHERE DATE(a.check_out)='2023-01-01';",
      "SELECT e.name AS employee_name, p.pay_date AS paydate FROM employees e JOIN payroll p ON e.id = p.employee_id WHERE p.salary > 60000;",
      "SELECT e.name AS employee_name, t.end_date AS leave_end_date, t.reason AS leave_reason FROM employees e JOIN time_off t ON e.id = t.employee_id WHERE t.start_date='2023-06-15';",
      "SELECT employee_id, MAX(check_in) AS last_checkin_time FROM attendance GROUP BY employee_id;",
      "SELECT department, COUNT(*) AS employee_count FROM employees GROUP BY department;",
      "SELECT e.department, AVG(p.salary) AS avg_salary FROM employees e JOIN payroll p ON e.id = p.employee_id GROUP BY e.department;",
      "SELECT e.name AS employee_name, SUM(p.salary) AS total_salary FROM employees e JOIN payroll p ON e.id = p.employee_id GROUP BY e.name HAVING total_salary > 100000;",
      "SELECT * FROM employees;",
      "SELECT id, name, department FROM employees WHERE department = 'Sales';",
      "SELECT e.id, e.name, p.salary FROM employees e JOIN payroll p ON e.id = p.employee_id;",
      "SELECT e.name, a.check_in, a.check_out FROM employees e JOIN attendance a ON e.id = a.employee_id;",
      "SELECT e.name, t.start_date, t.end_date, t.reason FROM employees e JOIN time_off t ON e.id = t.employee_id;",
      "SELECT e.name, p.salary, t.start_date, t.end_date FROM employees e JOIN payroll p ON e.id = p.employee_id JOIN time_off t ON e.id = t.employee_id;",
      "SELECT COUNT(*) FROM employees;",
      "SELECT AVG(salary) FROM payroll;",
      "SELECT MAX(salary) FROM payroll;",
      "SELECT MIN(salary) FROM payroll;",
      "SELECT DISTINCT department FROM employees;",
      "SELECT e.name, a.check_in, a.check_out FROM employees e LEFT JOIN attendance a ON e.id = a.employee_id;",
      "SELECT e.name, p.salary, t.reason FROM employees e LEFT JOIN payroll p ON e.id = p.employee_id LEFT JOIN time_off t ON e.id = t.employee_id;",
      "SELECT e.name, p.salary, a.check_in, a.check_out FROM employees e LEFT JOIN payroll p ON e.id = p.employee_id LEFT JOIN attendance a ON e.id = a.employee_id;",
      "SELECT e.name, t.start_date, t.end_date, t.reason FROM employees e LEFT JOIN time_off t ON e.id = t.employee_id;",
      "SELECT e.name, p.salary FROM employees e INNER JOIN payroll p ON e.id = p.employee_id WHERE p.salary > 50000;",
      "SELECT e.name, p.salary, t.start_date, t.end_date FROM employees e JOIN payroll p ON e.id = p.employee_id JOIN time_off t ON e.id = t.employee_id WHERE t.reason = 'Vacation';",
      "SELECT e.department, AVG(p.salary) FROM employees e JOIN payroll p ON e.id = p.employee_id GROUP BY e.department;",
      "SELECT e.name, COUNT(a.id) FROM employees e LEFT JOIN attendance a ON e.id = a.employee_id GROUP BY e.name;",
      "SELECT e.name, MAX(p.salary) FROM employees e JOIN payroll p ON e.id = p.employee_id GROUP BY e.name HAVING MAX(p.salary) > 60000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT employee_name, department FROM employees;",
      "SELECT employee_name, department, hire_date FROM employees WHERE department = 'IT';",
      "SELECT * FROM payroll;",
      "SELECT salary, deductions, net_pay FROM payroll WHERE salary > 50000;",
      "SELECT employee_name, salary FROM employees INNER JOIN payroll ON employees.employee_id = payroll.employee_id;",
      "SELECT employee_name, department, position FROM employees JOIN positions ON employees.department = positions.department_id;",
      "SELECT employee_name, attendance_date, clock_in, clock_out FROM employees JOIN attendance ON employees.employee_id = attendance.employee_id;",
      "SELECT * FROM departments;",
      "SELECT department_name FROM departments;",
      "SELECT employee_name, department_name FROM employees JOIN departments ON employees.department = departments.department_id;",
      "SELECT department_name, position_title FROM departments JOIN positions ON departments.department_id = positions.department_id;",
      "SELECT employee_name, salary FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id WHERE salary > 60000;",
      "SELECT department_name, SUM(salary) AS total_salary FROM departments JOIN positions ON departments.department_id = positions.department_id JOIN payroll ON positions.position_id = payroll.employee_id GROUP BY department_name;",
      "SELECT employee_name, MAX(net_pay) AS max_net_pay FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id;",
      "SELECT department_name, AVG(salary) AS avg_salary FROM departments JOIN positions ON departments.department_id = positions.department_id JOIN payroll ON positions.position_id = payroll.employee_id GROUP BY department_name;",
      "SELECT employee_name, department_name, position_title, net_pay FROM employees JOIN departments ON employees.department = departments.department_id JOIN positions ON departments.department_id = positions.department_id JOIN payroll ON positions.position_id = payroll.employee_id;",
      "SELECT employee_name, hire_date FROM employees WHERE hire_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT employee_name, salary FROM employees JOIN payroll ON employees.employee_id = payroll.employee_id ORDER BY salary DESC;",
      "SELECT employee_name, department_name, salary FROM employees JOIN departments ON employees.department = departments.department_id JOIN payroll ON employees.employee_id = payroll.employee_id ORDER BY department_name, salary;",
      "SELECT COUNT(*) AS total_employees FROM employees;",
      "SELECT * FROM employees WHERE department = 'Sales';",
      "SELECT employee_name, salary FROM employees INNER JOIN payroll ON employees.employee_id = payroll.employee_id WHERE salary > 50000;",
      "SELECT employee_name, attendance_date, clock_in, clock_out FROM employees INNER JOIN attendance ON employees.employee_id = attendance.employee_id WHERE attendance_date = '2021-12-01';",
      "SELECT department_name, position_title FROM departments INNER JOIN positions ON departments.department_id = positions.department_id WHERE position_title = 'Manager';",
      "SELECT employee_name, salary, deductions, net_pay FROM employees INNER JOIN payroll ON employees.employee_id = payroll.employee_id WHERE deductions > 1000;",
      "SELECT employee_name, department_name FROM employees INNER JOIN departments ON employees.department = departments.department_name WHERE department_name = 'HR';",
      "SELECT employee_name, attendance_date, clock_in, clock_out FROM employees INNER JOIN attendance ON employees.employee_id = attendance.employee_id WHERE clock_in BETWEEN '08:00:00' AND '09:00:00';",
      "SELECT employee_name, salary, deductions, net_pay FROM employees INNER JOIN payroll ON employees.employee_id = payroll.employee_id WHERE net_pay < 40000;",
      "SELECT department_name, AVG(salary) AS average_salary FROM departments INNER JOIN positions ON departments.department_id = positions.department_id INNER JOIN payroll ON positions.position_id = payroll.employee_id GROUP BY department_name;",
      "SELECT employee_name, attendance_date, clock_in, clock_out FROM employees INNER JOIN attendance ON employees.employee_id = attendance.employee_id WHERE department = 'IT';",
      "SELECT employee_name, salary, deductions, net_pay FROM employees INNER JOIN payroll ON employees.employee_id = payroll.employee_id WHERE hire_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT department_name, COUNT(DISTINCT position_title) AS num_positions FROM departments INNER JOIN positions ON departments.department_id = positions.department_id GROUP BY department_name;",
      "SELECT employee_name, attendance_date, clock_in, clock_out FROM employees INNER JOIN attendance ON employees.employee_id = attendance.employee_id WHERE department = 'Finance';",
      "SELECT department_name, MAX(salary) AS max_salary FROM departments INNER JOIN positions ON departments.department_id = positions.department_id INNER JOIN payroll ON positions.position_id = payroll.employee_id GROUP BY department_name;",
      "SELECT employee_name, salary, deductions, net_pay FROM employees INNER JOIN payroll ON employees.employee_id = payroll.employee_id WHERE department = 'Marketing';",
      "SELECT department_name, MAX(net_pay) AS max_net_pay FROM departments INNER JOIN positions ON departments.department_id = positions.department_id INNER JOIN payroll ON positions.position_id = payroll.employee_id GROUP BY department_name;",
      "SELECT employee_name, attendance_date, clock_in, clock_out FROM employees INNER JOIN attendance ON employees.employee_id = attendance.employee_id WHERE department = 'Legal';",
      "SELECT department_name, MIN(salary) AS min_salary FROM departments INNER JOIN positions ON departments.department_id = positions.department_id INNER JOIN payroll ON positions.position_id = payroll.employee_id GROUP BY department_name;",
      "SELECT employee_name, salary, deductions, net_pay FROM employees INNER JOIN payroll ON employees.employee_id = payroll.employee_id WHERE position = 'Associate';",
      "SELECT department_name, MIN(net_pay) AS min_net_pay FROM departments INNER JOIN positions ON departments.department_id = positions.department_id INNER JOIN payroll ON positions.position_id = payroll.employee_id GROUP BY department_name;"
    ]
  }
]