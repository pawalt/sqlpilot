[
  {
    "statements": [
      "SELECT * FROM inventory;",
      "SELECT product_name, quantity FROM inventory;",
      "SELECT COUNT(*) FROM inventory;",
      "SELECT product_name, unit_price FROM inventory WHERE quantity > 0;",
      "SELECT * FROM inventory WHERE unit_price > 50;",
      "SELECT product_id, product_name, quantity FROM inventory ORDER BY product_name ASC;",
      "SELECT DISTINCT product_name FROM inventory;",
      "SELECT product_name, quantity * unit_price AS total_price FROM inventory;",
      "SELECT MAX(unit_price) AS max_price FROM inventory;",
      "SELECT AVG(quantity) AS avg_quantity FROM inventory;",
      "SELECT product_name, created_date FROM inventory WHERE product_id = 5;",
      "SELECT product_name, quantity FROM inventory WHERE created_date >= '2022-01-01';",
      "SELECT * FROM inventory WHERE product_name LIKE '%apple%';",
      "SELECT product_name, quantity FROM inventory WHERE unit_price BETWEEN 10 AND 20;",
      "SELECT product_id, product_name, quantity FROM inventory WHERE quantity < 50 AND unit_price < 100;",
      "SELECT product_name, quantity FROM inventory WHERE created_date BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT product_name, quantity FROM inventory WHERE product_name IN ('Apple', 'Banana', 'Orange');",
      "SELECT product_name, quantity, created_date FROM inventory WHERE quantity > 100 AND unit_price < 50;",
      "SELECT product_name, AVG(unit_price) AS avg_price FROM inventory GROUP BY product_name;",
      "SELECT product_name, quantity FROM inventory WHERE DATE(created_date) = CURDATE();",
      "SELECT * FROM inventory WHERE quantity > 100;",
      "SELECT product_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY product_name;",
      "SELECT product_name, unit_price, quantity FROM inventory WHERE unit_price > 50 AND quantity < 50;",
      "SELECT * FROM inventory WHERE product_name LIKE '%shirt%';",
      "SELECT product_name, quantity, unit_price FROM inventory ORDER BY unit_price DESC, quantity ASC;",
      "SELECT product_name, AVG(unit_price) AS average_price FROM inventory GROUP BY product_name;",
      "SELECT product_id, product_name, created_date FROM inventory WHERE DATE(created_date) = CURDATE();",
      "SELECT COUNT(DISTINCT product_name) AS unique_products FROM inventory;",
      "SELECT product_name, quantity * unit_price AS total_value FROM inventory;",
      "SELECT product_name, quantity, unit_price, quantity * unit_price AS total_cost FROM inventory WHERE quantity * unit_price > 500;",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE created_date > '2022-01-01';",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE unit_price BETWEEN 20 AND 50;",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE quantity IN (50, 100, 150);",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE product_name = 'Shoes' AND quantity > 50;",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE product_name = 'Jeans' OR quantity > 100;",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE created_date BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE quantity <= 10 OR unit_price >= 100;",
      "SELECT COUNT(*) AS total_products FROM inventory;",
      "SELECT product_name, quantity, unit_price FROM inventory WHERE product_name IN ('Shoes', 'Shirts');",
      "SELECT product_name, quantity, unit_price, created_date FROM inventory WHERE YEAR(created_date) = YEAR(NOW());"
    ]
  },
  {
    "statements": [
      "SELECT * FROM inventory;",
      "SELECT product_id, product_name FROM inventory;",
      "SELECT product_name, quantity FROM inventory;",
      "SELECT product_id, quantity, price FROM inventory;",
      "SELECT * FROM sales;",
      "SELECT sale_id, product_id FROM sales;",
      "SELECT sale_date, quantity_sold FROM sales;",
      "SELECT product_id, total_amount FROM sales;",
      "SELECT * FROM inventory JOIN sales ON inventory.product_id = sales.product_id;",
      "SELECT product_name, quantity, total_amount FROM inventory JOIN sales ON inventory.product_id = sales.product_id;",
      "SELECT product_id, product_name, quantity_sold, price FROM inventory JOIN sales ON inventory.product_id = sales.product_id;",
      "SELECT * FROM inventory WHERE quantity > 10;",
      "SELECT product_name, price FROM inventory WHERE price < 50;",
      "SELECT * FROM sales WHERE total_amount > 100;",
      "SELECT sale_date, quantity_sold FROM sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM inventory ORDER BY product_name ASC;",
      "SELECT product_name, quantity FROM inventory ORDER BY quantity DESC;",
      "SELECT * FROM sales ORDER BY total_amount ASC;",
      "SELECT sale_date, quantity_sold FROM sales ORDER BY sale_date DESC;",
      "SELECT COUNT(*) FROM inventory;",
      "SELECT MIN(quantity), MAX(quantity) FROM inventory;",
      "SELECT AVG(price) FROM inventory;",
      "SELECT SUM(total_amount) FROM sales;",
      "SELECT * FROM inventory WHERE quantity > 0;",
      "SELECT product_name, quantity FROM inventory WHERE price > 50;",
      "SELECT * FROM sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT product_name, quantity_sold, total_amount FROM inventory JOIN sales ON inventory.product_id = sales.product_id;",
      "SELECT product_id, SUM(quantity_sold) AS total_sold FROM sales GROUP BY product_id;",
      "SELECT product_name, AVG(price) AS average_price FROM inventory GROUP BY product_name;",
      "SELECT * FROM inventory WHERE quantity > (SELECT AVG(quantity) FROM inventory);",
      "SELECT product_id, product_name, quantity_sold FROM sales WHERE total_amount > 1000 ORDER BY total_amount DESC;",
      "SELECT product_name, SUM(quantity_sold) AS total_sold FROM sales INNER JOIN inventory ON sales.product_id = inventory.product_id GROUP BY product_name;",
      "SELECT product_id, product_name, SUM(total_amount) AS total_sales FROM sales GROUP BY product_id, product_name;",
      "SELECT product_name, quantity_sold, total_amount FROM sales WHERE total_amount = (SELECT MAX(total_amount) FROM sales);",
      "SELECT product_name, AVG(price) AS avg_price_sold, SUM(quantity) AS total_quantity_sold FROM inventory JOIN sales ON inventory.product_id = sales.product_id GROUP BY product_name;",
      "SELECT * FROM inventory WHERE product_id IN (SELECT product_id FROM sales WHERE quantity_sold > 10);",
      "SELECT product_id, product_name, SUM(total_amount) AS total_sales FROM sales WHERE sale_date >= '2022-01-01' AND sale_date <= '2022-01-31' GROUP BY product_id;",
      "SELECT product_name, AVG(total_amount) AS avg_sale_amount FROM sales JOIN inventory ON sales.product_id = inventory.product_id GROUP BY product_name;",
      "SELECT product_id, product_name, COUNT(sale_id) AS total_sales_count FROM sales GROUP BY product_id, product_name;",
      "SELECT product_name, quantity_sold, total_amount FROM inventory INNER JOIN sales ON inventory.product_id = sales.product_id WHERE quantity > quantity_sold;",
      "SELECT product_id, COUNT(sale_id) AS sales_count FROM sales WHERE total_amount > 500 GROUP BY product_id HAVING sales_count > 5;",
      "SELECT product_name, SUM(quantity_sold) AS total_sold, AVG(total_amount) AS avg_amount_sold FROM sales JOIN inventory ON sales.product_id = inventory.product_id GROUP BY product_name;",
      "SELECT product_id, product_name, SUM(total_amount) AS total_sales FROM sales WHERE sale_date >= '2022-01-01' AND sale_date <= '2022-01-15' GROUP BY product_id ORDER BY total_sales DESC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM inventory_levels;",
      "SELECT product_id, quantity FROM inventory_levels WHERE quantity > 0;",
      "SELECT product_id, product_name, category FROM product_details;",
      "SELECT product_id, product_name, category, price FROM product_details WHERE category = 'Electronics';",
      "SELECT sale_id, product_id, sale_date FROM product_sales;",
      "SELECT sale_id, product_id, sale_date, sale_amount FROM product_sales WHERE sale_date >= '2021-01-01';",
      "SELECT * FROM inventory_levels WHERE product_id = 100;",
      "SELECT product_id, quantity FROM inventory_levels WHERE product_id IN (1, 2, 3);",
      "SELECT product_id, product_name, category, price FROM product_details WHERE price < 50;",
      "SELECT * FROM product_sales WHERE sale_amount > 1000;",
      "SELECT product_id, product_name, category, price FROM product_details ORDER BY price DESC;",
      "SELECT sale_id, product_id, sale_date, sale_amount FROM product_sales ORDER BY sale_date DESC;",
      "SELECT product_id, quantity FROM inventory_levels WHERE quantity <= 10;",
      "SELECT product_id, product_name, category FROM product_details WHERE category IN ('Electronics', 'Appliances');",
      "SELECT * FROM inventory_levels WHERE quantity > 50;",
      "SELECT product_id, product_name, category, price FROM product_details WHERE price BETWEEN 20 AND 100;",
      "SELECT sale_id, product_id, sale_date, sale_amount FROM product_sales WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT product_id, quantity FROM inventory_levels WHERE quantity = 0;",
      "SELECT product_id, product_name, category, price FROM product_details WHERE price = 99.99;",
      "SELECT sale_id, product_id, sale_date FROM product_sales ORDER BY sale_amount DESC;",
      "SELECT * FROM inventory_levels WHERE quantity > 100;",
      "SELECT product_id, quantity FROM inventory_levels WHERE product_id = 1;",
      "SELECT product_name, category, price FROM product_details WHERE price > 50;",
      "SELECT * FROM product_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT product_name, sale_amount FROM product_details pd JOIN product_sales ps ON pd.product_id = ps.product_id;",
      "SELECT product_name, category, price FROM product_details WHERE category = 'Electronics';",
      "SELECT COUNT(*) AS total_sales FROM product_sales WHERE sale_amount > 1000;",
      "SELECT product_id, SUM(quantity) AS total_quantity FROM inventory_levels GROUP BY product_id;",
      "SELECT product_name, category, price FROM product_details WHERE price > (SELECT AVG(price) FROM product_details);",
      "SELECT ps.*, pd.product_name FROM product_sales ps JOIN product_details pd ON ps.product_id = pd.product_id;",
      "SELECT product_id, MAX(sale_amount) AS max_sale FROM product_sales GROUP BY product_id;",
      "SELECT product_name, SUM(sale_amount) AS total_sales FROM product_details pd JOIN product_sales ps ON pd.product_id = ps.product_id GROUP BY product_id;",
      "SELECT product_id, AVG(sale_amount) AS avg_sale_amount FROM product_sales GROUP BY product_id HAVING AVG(sale_amount) > 200;",
      "SELECT product_id, COUNT(sale_id) AS total_sales FROM product_sales GROUP BY product_id ORDER BY total_sales DESC;",
      "SELECT product_name, category, SUM(sale_amount) AS total_sales FROM product_details pd JOIN product_sales ps ON pd.product_id = ps.product_id GROUP BY category;",
      "SELECT * FROM product_sales WHERE product_id IN (SELECT product_id FROM inventory_levels WHERE quantity < 50);",
      "SELECT product_id, product_name, MAX(price) AS max_price FROM product_details GROUP BY product_id;",
      "SELECT product_name, SUM(quantity) AS total_quantity FROM product_details pd JOIN inventory_levels il ON pd.product_id = il.product_id GROUP BY product_name;",
      "SELECT product_id, COUNT(sale_id) AS total_sales FROM product_sales GROUP BY product_id HAVING COUNT(sale_id) > 5;",
      "SELECT product_name, category, SUM(quantity) AS total_quantity FROM product_details pd JOIN inventory_levels il ON pd.product_id = il.product_id GROUP BY category;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM product_inventory;",
      "SELECT product_name, quantity_in_stock FROM product_inventory;",
      "SELECT product_name, price FROM product_inventory;",
      "SELECT product_name, quantity_in_stock, price FROM product_inventory WHERE price > 100;",
      "SELECT * FROM product_sales;",
      "SELECT product_id, sale_date, sale_amount FROM product_sales WHERE sale_amount > 500;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_name, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders;",
      "SELECT customer_id, product_id, order_date FROM orders WHERE order_date >= '2022-01-01';",
      "SELECT product_name, quantity_in_stock FROM product_inventory WHERE quantity_in_stock < 10;",
      "SELECT product_name, price FROM product_inventory WHERE price BETWEEN 50 AND 100;",
      "SELECT * FROM product_sales WHERE sale_amount < 1000;",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_name LIKE '%John%';",
      "SELECT * FROM orders WHERE customer_id = 2;",
      "SELECT product_name, quantity_in_stock, price FROM product_inventory WHERE quantity_in_stock = 0;",
      "SELECT customer_name, email FROM customers WHERE email LIKE '%@gmail.com%';",
      "SELECT product_name, price FROM product_inventory WHERE product_name LIKE 'A%';",
      "SELECT customer_name, phone_number FROM customers WHERE phone_number LIKE '%123%';",
      "SELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT * FROM product_inventory WHERE quantity_in_stock > 0;",
      "SELECT product_name, price FROM product_inventory WHERE quantity_in_stock > 10;",
      "SELECT product_id, product_name FROM product_inventory WHERE price >= 50.00;",
      "SELECT * FROM product_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT customer_id, customer_name, email FROM customers WHERE phone_number LIKE '%1234%';",
      "SELECT * FROM customers WHERE customer_name LIKE 'A%';",
      "SELECT * FROM orders WHERE order_date >= '2022-01-01' AND order_date <= '2022-12-31';",
      "SELECT customers.customer_name, product_inventory.product_name FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_inventory ON orders.product_id = product_inventory.product_id;",
      "SELECT product_name, SUM(quantity_in_stock) AS total_stock FROM product_inventory GROUP BY product_name;",
      "SELECT customers.customer_name, COUNT(orders.order_id) AS total_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_name;",
      "SELECT customer_name, SUM(sale_amount) AS total_sales FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_sales ON orders.product_id = product_sales.product_id GROUP BY customer_name;",
      "SELECT customer_name, product_name, sale_amount FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN product_sales ON orders.product_id = product_sales.product_id WHERE sale_date = '2022-06-30';",
      "SELECT customers.customer_name, product_inventory.product_name, quantity_in_stock FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_inventory ON orders.product_id = product_inventory.product_id WHERE order_date >= '2022-01-01' AND order_date <= '2022-12-31';",
      "SELECT customer_name, COUNT(order_id) AS total_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE EXISTS (SELECT * FROM product_sales WHERE orders.product_id = product_sales.product_id);",
      "SELECT customer_name, AVG(sale_amount) AS average_sale FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_sales ON orders.product_id = product_sales.product_id GROUP BY customer_name;",
      "SELECT customer_name, MAX(quantity_in_stock) AS max_stock FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_inventory ON orders.product_id = product_inventory.product_id GROUP BY customer_name;",
      "SELECT customers.customer_name, product_inventory.product_name, price FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_inventory ON orders.product_id = product_inventory.product_id WHERE price > 100.00;",
      "SELECT customer_name, sale_date, sale_amount FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_sales ON orders.product_id = product_sales.product_id WHERE sale_amount > 1000.00;",
      "SELECT customer_name, product_name, price, order_date FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN product_inventory ON orders.product_id = product_inventory.product_id WHERE price > 50.00 AND order_date > '2022-06-30';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products WHERE quantity_on_hand > 0;",
      "SELECT p.product_name, o.order_date FROM products p JOIN orders o ON p.product_id = o.product_id;",
      "SELECT c.customer_name, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT p.product_name, s.quantity_sold FROM products p JOIN sales s ON p.product_id = s.product_id;",
      "SELECT c.customer_name, p.product_name, o.quantity_ordered FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id;",
      "SELECT * FROM orders WHERE order_date > '2022-01-01';",
      "SELECT SUM(quantity_ordered) AS total_quantity_ordered FROM orders;",
      "SELECT p.product_name, p.price, c.category_name FROM products p JOIN categories c ON p.category_id = c.category_id;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id;",
      "SELECT AVG(price) AS average_price FROM products;",
      "SELECT product_id, MAX(quantity_on_hand) AS max_quantity FROM products;",
      "SELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id;",
      "SELECT * FROM products ORDER BY price DESC;",
      "SELECT product_name, price FROM products WHERE price > 50;",
      "SELECT product_name, price FROM products WHERE price BETWEEN 10 AND 50;",
      "SELECT c.category_name, COUNT(p.product_id) AS total_products FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_id;",
      "SELECT * FROM products WHERE product_name LIKE '%apple%';",
      "SELECT customer_name, phone_number FROM customers WHERE phone_number IS NOT NULL;",
      "SELECT c.category_name, AVG(p.price) AS average_price FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_id;",
      "SELECT product_id, product_name, price FROM products LIMIT 5 OFFSET 10;",
      "SELECT * FROM products WHERE price > 100",
      "SELECT product_name, price, quantity_on_hand FROM products WHERE quantity_on_hand < 50",
      "SELECT customer_name, email, phone_number FROM customers WHERE phone_number IS NOT NULL",
      "SELECT category_name, description FROM categories",
      "SELECT order_id, customer_id, product_id, quantity_ordered FROM orders",
      "SELECT product_name, price, quantity_on_hand FROM products WHERE price BETWEEN 50 AND 100",
      "SELECT product_name, price, quantity_on_hand FROM products ORDER BY price DESC",
      "SELECT customer_name, email, phone_number FROM customers WHERE address LIKE '%Street%'",
      "SELECT customer_name, email, phone_number FROM customers WHERE email LIKE '%gmail.com'",
      "SELECT category_name, COUNT(product_id) AS total_products FROM products GROUP BY category_name",
      "SELECT customer_name, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_name",
      "SELECT SUM(quantity_ordered) AS total_quantity_ordered FROM orders",
      "SELECT customer_name, email, phone_number, MAX(order_date) AS latest_order FROM orders INNER JOIN customers ON orders.customer_id = customers.customer_id",
      "SELECT AVG(price) AS average_price FROM products",
      "SELECT product_name, price, quantity_on_hand FROM products WHERE quantity_on_hand > (SELECT AVG(quantity_ordered) FROM orders)",
      "SELECT customer_name, email, phone_number FROM customers WHERE EXISTS (SELECT * FROM orders WHERE orders.customer_id = customers.customer_id)",
      "SELECT c.category_name, SUM(s.quantity_sold) AS total_quantity_sold FROM sales s INNER JOIN categories c ON s.product_id = c.category_id GROUP BY c.category_name",
      "SELECT c.category_name, p.product_name, s.quantity_sold FROM sales s INNER JOIN products p ON s.product_id = p.product_id INNER JOIN categories c ON p.product_id = c.category_id ORDER BY s.quantity_sold DESC",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE quantity_ordered > 5)"
    ]
  }
]