[
  {
    "statements": [
      "SELECT * FROM Sales;",
      "SELECT transaction_id, total_amount FROM Sales;",
      "SELECT customer_id, quantity FROM Sales;",
      "SELECT * FROM Sales WHERE quantity > 5;",
      "SELECT * FROM Sales WHERE total_amount > 100;",
      "SELECT transaction_id, product_id, total_amount FROM Sales WHERE customer_id = 1234;",
      "SELECT * FROM Sales WHERE customer_id = 5678 AND product_id = 9876;",
      "SELECT * FROM Sales WHERE customer_id = 9999 ORDER BY total_amount DESC;",
      "SELECT * FROM Sales WHERE product_id IN (1111, 2222, 3333);",
      "SELECT * FROM Sales WHERE quantity BETWEEN 10 AND 20;",
      "SELECT * FROM Sales WHERE total_amount > 500 AND quantity < 5;",
      "SELECT customer_id, SUM(quantity) AS total_quantity FROM Sales GROUP BY customer_id;",
      "SELECT product_id, AVG(total_amount) AS avg_amount FROM Sales GROUP BY product_id;",
      "SELECT customer_id, COUNT(*) AS total_transactions FROM Sales GROUP BY customer_id HAVING count(*) > 5;",
      "SELECT DISTINCT product_id FROM Sales;",
      "SELECT transaction_id, total_amount FROM Sales WHERE customer_id = 7777 OR customer_id = 8888;",
      "SELECT * FROM Sales WHERE customer_id IS NULL;",
      "SELECT * FROM Sales WHERE product_id = 9999 AND total_amount < 50;",
      "SELECT customer_id, MAX(total_amount) AS max_amount FROM Sales GROUP BY customer_id;",
      "SELECT * FROM Sales WHERE quantity = (SELECT MAX(quantity) FROM Sales);",
      "SELECT * FROM Sales WHERE total_amount > 1000;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM Sales GROUP BY customer_id;",
      "SELECT product_id, AVG(total_amount) AS avg_amount FROM Sales GROUP BY product_id;",
      "SELECT customer_id, COUNT(DISTINCT product_id) AS unique_products FROM Sales GROUP BY customer_id;",
      "SELECT customer_id, SUM(quantity) AS total_quantity FROM Sales WHERE total_amount < 500 GROUP BY customer_id;",
      "SELECT transaction_id, customer_id, product_id, total_amount FROM Sales WHERE transaction_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM Sales ORDER BY total_amount DESC LIMIT 5;",
      "SELECT * FROM Sales WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000' AND quantity >= 5;",
      "SELECT customer_id, COUNT(*) AS total_transactions FROM Sales GROUP BY customer_id HAVING COUNT(*) > 3;",
      "SELECT customer_id, AVG(total_amount) AS avg_amount FROM Sales GROUP BY customer_id HAVING AVG(total_amount) > 500;",
      "SELECT customer_id, SUM(quantity) AS total_quantity FROM Sales GROUP BY customer_id HAVING SUM(quantity) > 10;",
      "SELECT customer_id, product_id, COUNT(*) AS transaction_count FROM Sales GROUP BY customer_id, product_id HAVING COUNT(*) > 2;",
      "SELECT customer_id, MAX(total_amount) AS max_amount FROM Sales GROUP BY customer_id;",
      "SELECT product_id, MIN(total_amount) AS min_amount FROM Sales GROUP BY product_id;",
      "SELECT customer_id, COUNT(*) AS total_transactions, SUM(total_amount) AS total_spent FROM Sales GROUP BY customer_id HAVING COUNT(*) > 1 AND SUM(total_amount) > 1000;",
      "SELECT customer_id, product_id, AVG(total_amount) AS avg_amount FROM Sales WHERE quantity >= 5 GROUP BY customer_id, product_id;",
      "SELECT customer_id, COUNT(*) AS total_transactions FROM Sales WHERE total_amount > 500 GROUP BY customer_id HAVING COUNT(*) > 2;",
      "SELECT * FROM Sales WHERE total_amount BETWEEN 500 AND 1000;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM Sales WHERE product_id = '123e4567-e89b-12d3-a456-426614174000' GROUP BY customer_id;",
      "SELECT DISTINCT customer_id FROM Sales;",
      "SELECT customer_id, product_id, SUM(total_amount) AS total_spent FROM Sales GROUP BY customer_id, product_id HAVING SUM(total_amount) > 1000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Sales;",
      "SELECT id, amount FROM Sales;",
      "SELECT * FROM Sales WHERE transaction_date >= '2022-01-01';",
      "SELECT * FROM Sales WHERE amount > 1000;",
      "SELECT id, amount FROM Sales WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT id, transaction_date FROM Sales WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT * FROM Sales WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT id, amount FROM Sales WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT customer_id, SUM(amount) AS total_amount FROM Sales GROUP BY customer_id;",
      "SELECT AVG(amount) AS average_amount FROM Sales;",
      "SELECT COUNT(*) AS total_sales FROM Sales;",
      "SELECT MAX(amount) AS max_amount FROM Sales;",
      "SELECT MIN(amount) AS min_amount FROM Sales;",
      "SELECT customer_id, COUNT(*) AS total_sales FROM Sales GROUP BY customer_id;",
      "SELECT customer_id, MAX(amount) AS max_amount FROM Sales GROUP BY customer_id;",
      "SELECT DATE_TRUNC('month', transaction_date) AS month, SUM(amount) AS total_amount FROM Sales GROUP BY DATE_TRUNC('month', transaction_date);",
      "SELECT EXTRACT(YEAR FROM transaction_date) AS year, SUM(amount) AS total_amount FROM Sales GROUP BY EXTRACT(YEAR FROM transaction_date);",
      "SELECT EXTRACT(MONTH FROM transaction_date) AS month, AVG(amount) AS average_amount FROM Sales GROUP BY EXTRACT(MONTH FROM transaction_date);",
      "SELECT customer_id, EXTRACT(MONTH FROM transaction_date) AS month, COUNT(*) AS total_sales FROM Sales GROUP BY customer_id, EXTRACT(MONTH FROM transaction_date);",
      "SELECT customer_id, COUNT(*) AS total_sales, SUM(amount) AS total_amount FROM Sales GROUP BY customer_id HAVING COUNT(*) > 1;",
      "SELECT * FROM Sales WHERE date_trunc('month', transaction_date) = date_trunc('month', CURRENT_DATE)",
      "SELECT customer_id, SUM(amount) FROM Sales GROUP BY customer_id",
      "SELECT * FROM Sales WHERE amount > 1000 ORDER BY transaction_date DESC LIMIT 10",
      "SELECT * FROM Sales WHERE customer_id = 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx' AND amount < 500",
      "SELECT * FROM Sales WHERE EXTRACT(MONTH FROM transaction_date) = 5 AND EXTRACT(YEAR FROM transaction_date) = 2021",
      "SELECT * FROM Sales WHERE transaction_date BETWEEN '2021-01-01' AND '2021-12-31'",
      "SELECT AVG(amount) FROM Sales",
      "SELECT COUNT(*) FROM Sales WHERE transaction_date < '2022-01-01'",
      "SELECT * FROM Sales WHERE id = 'yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy'",
      "SELECT customer_id, MAX(amount) FROM Sales GROUP BY customer_id",
      "SELECT * FROM Sales WHERE amount BETWEEN 500 AND 1000",
      "SELECT * FROM Sales WHERE id IN ('11111111-1111-1111-1111-111111111111', '22222222-2222-2222-2222-222222222222')",
      "SELECT * FROM Sales WHERE customer_id IS NULL",
      "SELECT COUNT(DISTINCT customer_id) FROM Sales",
      "SELECT AVG(amount) AS average_amount, COUNT(*) AS total_sales FROM Sales",
      "SELECT * FROM Sales WHERE date_trunc('year', transaction_date) = date_trunc('year', CURRENT_DATE) AND amount > 500",
      "SELECT MIN(amount) FROM Sales",
      "SELECT * FROM Sales WHERE customer_id = 'zzzzzzzz-zzzz-zzzz-zzzz-zzzzzzzzzzz' AND transaction_date > '2021-06-01'",
      "SELECT customer_id, SUM(amount) AS total_amount FROM Sales GROUP BY customer_id HAVING SUM(amount) > 2000",
      "SELECT * FROM Sales WHERE id NOT IN ('33333333-3333-3333-3333-333333333333', '44444444-4444-4444-4444-444444444444')"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Sales;",
      "SELECT transaction_id, customer_id FROM Sales;",
      "SELECT product_id, quantity FROM Sales;",
      "SELECT customer_id, date FROM Sales;",
      "SELECT * FROM Sales WHERE transaction_id = 1;",
      "SELECT * FROM Sales WHERE customer_id = 100;",
      "SELECT * FROM Sales WHERE date >= '2022-01-01';",
      "SELECT COUNT(*) FROM Sales;",
      "SELECT MAX(quantity) FROM Sales;",
      "SELECT AVG(quantity) FROM Sales;",
      "SELECT DISTINCT product_id FROM Sales;",
      "SELECT * FROM Sales ORDER BY date DESC;",
      "SELECT * FROM Sales ORDER BY quantity ASC;",
      "SELECT * FROM Sales WHERE quantity > 10;",
      "SELECT * FROM Sales WHERE customer_id = 200 AND product_id = 5;",
      "SELECT SUM(quantity) FROM Sales;",
      "SELECT AVG(quantity) FROM Sales GROUP BY product_id;",
      "SELECT * FROM Sales WHERE customer_id = 300 OR product_id = 10;",
      "SELECT * FROM Sales WHERE date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT COUNT(DISTINCT customer_id) FROM Sales;",
      "SELECT * FROM Sales WHERE quantity > 100;",
      "SELECT customer_id, product_id, SUM(quantity) AS total_quantity FROM Sales GROUP BY customer_id, product_id;",
      "SELECT customer_id, product_id, date FROM Sales WHERE customer_id = 123 AND date > '2022-01-01';",
      "SELECT product_id, AVG(quantity) AS avg_quantity FROM Sales WHERE date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY product_id;",
      "SELECT customer_id, COUNT(DISTINCT product_id) AS unique_products FROM Sales GROUP BY customer_id HAVING COUNT(DISTINCT product_id) > 5;",
      "SELECT customer_id, product_id, MAX(quantity) AS max_quantity FROM Sales GROUP BY customer_id, product_id;",
      "SELECT customer_id, product_id, date FROM Sales WHERE DATE(date) = '2022-06-30';",
      "SELECT product_id, COUNT(*) AS total_sales FROM Sales WHERE quantity > 0 GROUP BY product_id;",
      "SELECT customer_id, product_id, date FROM Sales WHERE product_id IN (1, 2, 3);",
      "SELECT customer_id, SUM(quantity) AS total_quantity, DATE(date) AS order_date FROM Sales WHERE customer_id = 456 GROUP BY DATE(date);",
      "SELECT customer_id, product_id, quantity FROM Sales ORDER BY quantity DESC LIMIT 10;",
      "SELECT customer_id, product_id, date FROM Sales WHERE date > '2022-03-15' AND date < '2022-04-15';",
      "SELECT product_id, AVG(quantity) AS avg_quantity FROM Sales GROUP BY product_id HAVING AVG(quantity) > 50;",
      "SELECT customer_id, product_id, SUM(quantity) AS total_quantity FROM Sales WHERE date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY customer_id, product_id;",
      "SELECT customer_id, product_id, date FROM Sales WHERE customer_id = 789 AND (product_id = 1 OR product_id = 2);",
      "SELECT MIN(date) AS first_purchase_date, MAX(date) AS last_purchase_date FROM Sales WHERE customer_id = 123;",
      "SELECT customer_id, product_id, quantity FROM Sales WHERE customer_id = 456 AND product_id = 2;",
      "SELECT customer_id, COUNT(*) AS total_transactions FROM Sales GROUP BY customer_id;",
      "SELECT customer_id, product_id, quantity, date FROM Sales WHERE date > '2022-01-01' ORDER BY date DESC;",
      "SELECT customer_id, product_id, quantity, date FROM Sales WHERE customer_id = 789 ORDER BY date DESC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Sales;",
      "SELECT transaction_id, amount, transaction_date FROM Sales;",
      "SELECT customer_id, customer_name, email FROM Customers;",
      "SELECT product_id, product_name, price FROM Products;",
      "SELECT order_id, transaction_id, product_id, quantity FROM Orders;",
      "SELECT customer_name, email, phone_number FROM Customers WHERE customer_id = '1';",
      "SELECT product_name, price FROM Products WHERE price > 50;",
      "SELECT transaction_id, amount FROM Sales WHERE transaction_date > '2022-01-01';",
      "SELECT order_id, product_id, quantity FROM Orders WHERE quantity >= 5;",
      "SELECT * FROM Sales WHERE amount > 1000;",
      "SELECT customer_id, customer_name, email FROM Customers WHERE email LIKE '%@gmail.com';",
      "SELECT product_name, price FROM Products WHERE quantity >= 10;",
      "SELECT order_id, product_id, quantity FROM Orders WHERE order_id = '2';",
      "SELECT customer_name, email FROM Customers WHERE customer_name LIKE '%Smith%';",
      "SELECT * FROM Sales JOIN Customers ON Sales.customer_id = Customers.customer_id;",
      "SELECT * FROM Orders JOIN Products ON Orders.product_id = Products.product_id;",
      "SELECT customer_id, customer_name, email, phone_number FROM Customers WHERE phone_number IS NOT NULL;",
      "SELECT product_id, product_name, price, quantity FROM Products WHERE price < 20;",
      "SELECT order_id, quantity FROM Orders WHERE product_id = '3';",
      "SELECT customer_name, email FROM Customers WHERE customer_id = '4';",
      "SELECT * FROM Sales;",
      "SELECT customer_id, amount FROM Sales WHERE amount > 1000;",
      "SELECT transaction_id, customer_id, amount FROM Sales WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT customer_name, email FROM Customers;",
      "SELECT product_name, price FROM Products WHERE price < 50.00;",
      "SELECT product_id, price, quantity FROM Products WHERE quantity > 5;",
      "SELECT * FROM Orders JOIN Products ON Orders.product_id = Products.product_id;",
      "SELECT order_id, transaction_id, product_name, quantity FROM Orders JOIN Products ON Orders.product_id = Products.product_id;",
      "SELECT customer_name, amount FROM Customers JOIN Sales ON Customers.customer_id = Sales.customer_id;",
      "SELECT customer_name, product_name, price FROM Customers JOIN Sales ON Customers.customer_id = Sales.customer_id JOIN Products ON Sales.transaction_id = Products.product_id;",
      "SELECT customer_name, email FROM Customers WHERE email LIKE '%gmail.com';",
      "SELECT product_name, price FROM Products WHERE product_name LIKE 'A%';",
      "SELECT product_name, price FROM Products WHERE product_name LIKE '%z';",
      "SELECT transaction_id, amount FROM Sales WHERE transaction_date > '2022-02-28' ORDER BY amount DESC;",
      "SELECT customer_name, SUM(amount) AS total_spent FROM Customers JOIN Sales ON Customers.customer_id = Sales.customer_id GROUP BY customer_name;",
      "SELECT product_name, SUM(quantity) AS total_sold FROM Products JOIN Orders ON Products.product_id = Orders.product_id GROUP BY product_name;",
      "SELECT customer_name, COUNT(*) AS total_orders FROM Customers JOIN Sales ON Customers.customer_id = Sales.customer_id GROUP BY customer_name;",
      "SELECT customer_name, email, COUNT(*) AS total_orders FROM Customers JOIN Sales ON Customers.customer_id = Sales.customer_id GROUP BY customer_name, email;",
      "SELECT customer_name, AVG(amount) AS average_spent FROM Customers JOIN Sales ON Customers.customer_id = Sales.customer_id GROUP BY customer_name;",
      "SELECT product_name, max(price) AS highest_price FROM Products;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Sales;",
      "SELECT customer_id, product_name, quantity FROM Sales;",
      "SELECT transaction_id, total_amount FROM Sales;",
      "SELECT * FROM Customers;",
      "SELECT customer_id, customer_name, email FROM Customers;",
      "SELECT * FROM Products;",
      "SELECT product_id, product_name, unit_price FROM Products;",
      "SELECT * FROM Transactions;",
      "SELECT transaction_id, customer_id, product_id FROM Transactions;",
      "SELECT * FROM Payments;",
      "SELECT payment_id, transaction_id, amount_paid FROM Payments;",
      "SELECT customer_name, email, phone_number FROM Customers;",
      "SELECT product_name, unit_price, stock_quantity FROM Products;",
      "SELECT transaction_id, total_amount, transaction_date FROM Sales;",
      "SELECT customer_id, product_id, quantity, total_amount, transaction_date FROM Transactions;",
      "SELECT payment_id, amount_paid, payment_date FROM Payments;",
      "SELECT customer_name, email, phone_number FROM Customers WHERE customer_id = 1;",
      "SELECT product_name, unit_price, stock_quantity FROM Products WHERE product_id = 1;",
      "SELECT transaction_id, total_amount FROM Sales WHERE transaction_date = '2022-01-01';",
      "SELECT * FROM Transactions WHERE quantity > 10;",
      "SELECT transaction_id, customer_id, product_name, quantity, total_amount, transaction_date FROM Sales WHERE product_name = 'Laptop';",
      "SELECT customer_id, customer_name, email, phone_number FROM Customers WHERE email LIKE '%gmail.com%';",
      "SELECT product_id, product_name, unit_price, stock_quantity FROM Products WHERE unit_price > 1000;",
      "SELECT transaction_id, customer_id, product_id, quantity, total_amount, transaction_date FROM Transactions WHERE quantity > 10;",
      "SELECT payment_id, transaction_id, amount_paid, payment_date FROM Payments WHERE amount_paid > 500;",
      "SELECT * FROM Sales INNER JOIN Customers ON Sales.customer_id = Customers.customer_id;",
      "SELECT * FROM Products INNER JOIN Transactions ON Products.product_id = Transactions.product_id;",
      "SELECT * FROM Transactions INNER JOIN Payments ON Transactions.transaction_id = Payments.transaction_id;",
      "SELECT c.customer_name, p.product_name FROM Customers c, Products p, Transactions t WHERE c.customer_id = t.customer_id AND p.product_id = t.product_id;",
      "SELECT SUM(total_amount) AS total_sales FROM Sales;",
      "SELECT COUNT(*) AS total_customers FROM Customers;",
      "SELECT AVG(unit_price) AS average_price FROM Products;",
      "SELECT MIN(quantity) AS min_quantity, MAX(quantity) AS max_quantity FROM Transactions;",
      "SELECT customer_id, SUM(total_amount) AS total_spent FROM Sales GROUP BY customer_id;",
      "SELECT product_name, AVG(unit_price) AS average_price FROM Products GROUP BY product_name;",
      "SELECT customer_name, SUM(amount_paid) AS total_paid FROM Customers c INNER JOIN Transactions t ON c.customer_id = t.customer_id INNER JOIN Payments p ON t.transaction_id = p.transaction_id GROUP BY customer_name;",
      "SELECT t.transaction_date, SUM(p.amount_paid) AS total_payments FROM Transactions t INNER JOIN Payments p ON t.transaction_id = p.transaction_id GROUP BY t.transaction_date;",
      "SELECT c.customer_name, COUNT(*) AS total_transactions FROM Customers c INNER JOIN Transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name;",
      "SELECT p.product_name, COUNT(*) AS total_sold FROM Products p INNER JOIN Transactions t ON p.product_id = t.product_id GROUP BY p.product_name;"
    ]
  }
]