[
  {
    "statements": [
      "SELECT * FROM Inventory;",
      "SELECT item_name, item_quantity FROM Inventory;",
      "SELECT item_name, item_location FROM Inventory;",
      "SELECT item_id, item_name, item_quantity FROM Inventory;",
      "SELECT item_id, item_location FROM Inventory;",
      "SELECT item_name FROM Inventory WHERE item_quantity > 5;",
      "SELECT item_id, item_name FROM Inventory WHERE item_quantity <= 10;",
      "SELECT * FROM Inventory WHERE item_name LIKE 'A%';",
      "SELECT item_name, item_quantity FROM Inventory WHERE item_location = 'Warehouse';",
      "SELECT item_id, item_name, item_quantity FROM Inventory WHERE item_location = 'Store';",
      "SELECT item_id, item_quantity FROM Inventory WHERE item_name = 'Hammer';",
      "SELECT item_id FROM Inventory WHERE item_quantity > 0;",
      "SELECT item_id FROM Inventory WHERE item_quantity = 0;",
      "SELECT item_name FROM Inventory WHERE item_quantity BETWEEN 5 AND 10;",
      "SELECT item_id, item_name, item_quantity FROM Inventory ORDER BY item_name ASC;",
      "SELECT item_name, item_quantity FROM Inventory ORDER BY item_quantity DESC;",
      "SELECT item_id, item_quantity FROM Inventory ORDER BY item_quantity ASC, item_id DESC;",
      "SELECT COUNT(*) AS total_items FROM Inventory;",
      "SELECT SUM(item_quantity) AS total_quantity FROM Inventory;",
      "SELECT AVG(item_quantity) AS average_quantity FROM Inventory;",
      "SELECT item_id, item_name, item_quantity FROM Inventory WHERE item_quantity > 10;",
      "SELECT * FROM Inventory WHERE item_location = 'Warehouse';",
      "SELECT item_name, item_quantity FROM Inventory WHERE item_location = 'Storage' AND item_quantity BETWEEN 5 AND 10;",
      "SELECT item_id, item_name, item_location FROM Inventory WHERE item_quantity < 5 OR item_location = 'Shelf';",
      "SELECT item_id, item_quantity FROM Inventory WHERE item_name LIKE 'P%' ORDER BY item_quantity DESC;",
      "SELECT item_id, item_location FROM Inventory WHERE item_quantity = (SELECT MAX(item_quantity) FROM Inventory);",
      "SELECT AVG(item_quantity) AS avg_quantity FROM Inventory WHERE item_location = 'Warehouse';",
      "SELECT COUNT(item_id) AS total_items FROM Inventory WHERE item_quantity >= 5;",
      "SELECT item_name, SUM(item_quantity) AS total_quantity FROM Inventory GROUP BY item_name;",
      "SELECT item_name, COUNT(*) AS total_records FROM Inventory GROUP BY item_name HAVING COUNT(*) > 1;",
      "SELECT item_id, item_name, item_quantity FROM Inventory WHERE item_id IN (1, 3, 5, 7);",
      "SELECT * FROM Inventory WHERE item_id BETWEEN 10 AND 20;",
      "SELECT item_id, item_name, item_quantity FROM Inventory WHERE item_quantity < (SELECT AVG(item_quantity) FROM Inventory);",
      "SELECT item_name, item_quantity FROM Inventory WHERE item_quantity % 2 = 0;",
      "SELECT item_id, item_name, item_location, item_quantity FROM Inventory WHERE item_location LIKE '%Store';",
      "SELECT item_name, MIN(item_quantity) AS min_quantity FROM Inventory GROUP BY item_name HAVING MIN(item_quantity) > 0;",
      "SELECT item_id, item_quantity FROM Inventory WHERE item_name = 'Chair' UNION SELECT item_id, item_quantity FROM Inventory WHERE item_name = 'Table';",
      "SELECT item_name, SUM(item_quantity) AS total_quantity FROM Inventory WHERE item_location = 'Storage' GROUP BY item_name HAVING SUM(item_quantity) > 20;",
      "SELECT item_name, item_location FROM Inventory WHERE item_quantity IS NULL;",
      "SELECT item_name, item_quantity FROM Inventory WHERE item_quantity IS NOT NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Inventory;",
      "SELECT item_id, item_name FROM Inventory;",
      "SELECT item_id, quantity FROM Inventory;",
      "SELECT * FROM Locations;",
      "SELECT location_name, manager_name FROM Locations;",
      "SELECT location_id, capacity FROM Locations;",
      "SELECT * FROM Inventory WHERE quantity > 0;",
      "SELECT * FROM Inventory WHERE location = 'Warehouse';",
      "SELECT * FROM Locations WHERE capacity > 100;",
      "SELECT item_id, item_name, quantity FROM Inventory WHERE item_id = 100;",
      "SELECT location_name, manager_name, capacity FROM Locations WHERE location_id = 1;",
      "SELECT * FROM Inventory ORDER BY quantity DESC;",
      "SELECT * FROM Locations ORDER BY capacity ASC;",
      "SELECT item_id, item_name, quantity FROM Inventory LIMIT 10;",
      "SELECT location_name, manager_name, capacity FROM Locations LIMIT 5;",
      "SELECT item_name, quantity FROM Inventory WHERE quantity < 10;",
      "SELECT location_name, manager_name FROM Locations WHERE capacity < 50;",
      "SELECT * FROM Inventory INNER JOIN Locations ON Inventory.location = Locations.location_name;",
      "SELECT * FROM Inventory LEFT JOIN Locations ON Inventory.location = Locations.location_name;",
      "SELECT * FROM Inventory RIGHT JOIN Locations ON Inventory.location = Locations.location_name;",
      "SELECT * FROM Inventory WHERE quantity > 0;",
      "SELECT item_name, quantity FROM Inventory WHERE location = 'Warehouse';",
      "SELECT * FROM Inventory INNER JOIN Locations ON Inventory.location = Locations.location_name;",
      "SELECT * FROM Inventory WHERE quantity < 10 AND location = 'Storage';",
      "SELECT item_id, item_name, quantity FROM Inventory WHERE location = 'Warehouse' ORDER BY quantity DESC;",
      "SELECT item_name, quantity FROM Inventory WHERE item_name LIKE '%chair%';",
      "SELECT location_name, manager_name FROM Locations WHERE capacity > 100;",
      "SELECT * FROM Inventory WHERE quantity BETWEEN 5 AND 10;",
      "SELECT item_name, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name;",
      "SELECT location_name, SUM(quantity) AS total_quantity FROM Inventory GROUP BY location;",
      "SELECT location_name, item_name, quantity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity > 20;",
      "SELECT AVG(quantity) AS avg_quantity, MAX(quantity) AS max_quantity FROM Inventory;",
      "SELECT * FROM Inventory WHERE location IN ('Warehouse', 'Storage');",
      "SELECT item_name, quantity FROM Inventory WHERE quantity > (SELECT AVG(quantity) FROM Inventory);",
      "SELECT DISTINCT location_name FROM Locations;",
      "SELECT item_name, quantity FROM Inventory WHERE location = 'Warehouse' OR location = 'Storage';",
      "SELECT location_name, COUNT(item_id) AS total_items FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name GROUP BY location_name;",
      "SELECT * FROM Inventory WHERE item_name = 'Chair' AND (quantity < 5 OR location = 'Storage');",
      "SELECT * FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE capacity > quantity;",
      "SELECT manager_name, SUM(quantity) AS total_quantity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name GROUP BY manager_name;",
      "SELECT item_name, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity BETWEEN 5 AND 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Inventory;",
      "SELECT item_name, quantity FROM Inventory;",
      "SELECT id, item_name, location FROM Inventory;",
      "SELECT * FROM Inventory WHERE quantity > 10;",
      "SELECT item_name, quantity FROM Inventory WHERE location = 'Warehouse';",
      "SELECT * FROM InventoryLog;",
      "SELECT item_id, action, timestamp FROM InventoryLog;",
      "SELECT * FROM InventoryLog WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT location_name, capacity, occupied_capacity FROM Locations;",
      "SELECT location_name, capacity FROM Locations WHERE occupied_capacity < capacity;",
      "SELECT item_name, quantity, location FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name;",
      "SELECT item_name, quantity, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity < capacity;",
      "SELECT item_name, quantity, location_name, capacity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity < capacity AND occupied_capacity < capacity;",
      "SELECT id, item_name, quantity, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity < capacity AND occupied_capacity < capacity;",
      "SELECT item_name, quantity FROM Inventory ORDER BY quantity DESC;",
      "SELECT item_name, SUM(quantity) AS total_quantity FROM Inventory GROUP BY item_name;",
      "SELECT location_name, COUNT(*) AS num_items FROM Inventory GROUP BY location;",
      "SELECT location_name, SUM(quantity) AS total_quantity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name GROUP BY location_name;",
      "SELECT item_name, action, timestamp FROM InventoryLog JOIN Inventory ON InventoryLog.item_id = Inventory.id;",
      "SELECT item_name, action, timestamp FROM InventoryLog JOIN Inventory ON InventoryLog.item_id = Inventory.id WHERE action = 'ADD';",
      "SELECT * FROM Inventory WHERE quantity > 10",
      "SELECT item_name, quantity FROM Inventory WHERE item_name = 'iPhone' AND location = 'Warehouse'",
      "SELECT SUM(quantity) AS total_items FROM Inventory GROUP BY location",
      "SELECT item_name, SUM(quantity) AS total_quantity FROM Inventory GROUP BY item_name HAVING total_quantity > 50",
      "SELECT il.log_id, il.action, i.item_name FROM InventoryLog il JOIN Inventory i ON il.item_id = i.id",
      "SELECT i.item_name, l.location_name FROM Inventory i JOIN Locations l ON i.location = l.location_name",
      "SELECT i.item_name, il.log_id, il.timestamp FROM Inventory i JOIN InventoryLog il ON i.id = il.item_id",
      "SELECT l.location_name, SUM(i.quantity) AS total_quantity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY l.location_name",
      "SELECT item_id, MAX(timestamp) AS latest_action_time FROM InventoryLog GROUP BY item_id",
      "SELECT item_name, location_name FROM Inventory i JOIN Locations l ON i.location = l.location_name WHERE i.quantity >= l.capacity",
      "SELECT item_name, AVG(quantity) AS avg_quantity FROM Inventory GROUP BY item_name HAVING avg_quantity > 30",
      "SELECT il.log_id, il.action, i.item_name, l.location_name FROM InventoryLog il JOIN Inventory i ON il.item_id = i.id JOIN Locations l ON i.location = l.location_name",
      "SELECT l.location_name, SUM(i.quantity) AS total_quantity, l.capacity, l.occupied_capacity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY l.location_name",
      "SELECT item_name, COUNT(*) AS total_logs FROM Inventory i JOIN InventoryLog il ON i.id = il.item_id GROUP BY item_name",
      "SELECT i.item_name, l1.location_name AS source_location, l2.location_name AS destination_location FROM Inventory i JOIN Locations l1 ON i.location = l1.location_name JOIN Locations l2 ON i.quantity <= l2.capacity",
      "SELECT l.location_name, MAX(i.quantity) AS max_quantity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY l.location_name",
      "SELECT il.action, COUNT(*) AS total_actions FROM InventoryLog il GROUP BY il.action",
      "SELECT item_name, MAX(occupied_capacity) AS max_occupied_capacity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY item_name",
      "SELECT i.item_name, MIN(l.capacity) AS min_capacity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY i.item_name",
      "SELECT item_name, MAX(timestamp) - MIN(timestamp) AS time_difference FROM InventoryLog GROUP BY item_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Inventory WHERE item_id = 1",
      "SELECT item_name, quantity FROM Inventory WHERE location_id = 5",
      "SELECT location_id, quantity FROM Inventory WHERE item_name = 'Book'",
      "SELECT item_id, item_name, quantity FROM Inventory",
      "SELECT * FROM Inventory WHERE quantity > 10",
      "SELECT item_id, item_name FROM Inventory WHERE quantity < 5",
      "SELECT * FROM Inventory WHERE location_id IS NULL",
      "SELECT DISTINCT item_name FROM Inventory",
      "SELECT * FROM Inventory ORDER BY item_name ASC",
      "SELECT * FROM Inventory ORDER BY quantity DESC",
      "SELECT item_id, item_name, quantity FROM Inventory WHERE item_name LIKE '%Computer%'",
      "SELECT location_id, SUM(quantity) AS total_quantity FROM Inventory GROUP BY location_id",
      "SELECT location_id, AVG(quantity) AS avg_quantity FROM Inventory GROUP BY location_id",
      "SELECT location_id, COUNT(*) AS item_count FROM Inventory GROUP BY location_id",
      "SELECT COUNT(*) AS total_items FROM Inventory",
      "SELECT MAX(quantity) AS max_quantity FROM Inventory",
      "SELECT MIN(quantity) AS min_quantity FROM Inventory",
      "SELECT COUNT(DISTINCT location_id) AS unique_locations FROM Inventory",
      "SELECT MAX(item_id) AS max_item_id FROM Inventory",
      "SELECT MIN(item_id) AS min_item_id FROM Inventory",
      "SELECT item_name, quantity FROM Inventory WHERE location_id = 1 AND quantity > 10",
      "SELECT * FROM Inventory WHERE item_name LIKE 'S%'",
      "SELECT item_id, item_name, quantity FROM Inventory WHERE location_id IN (1, 2, 3)",
      "SELECT item_name, SUM(quantity) FROM Inventory GROUP BY item_name HAVING SUM(quantity) > 50",
      "SELECT item_name, quantity FROM Inventory ORDER BY quantity DESC",
      "SELECT DISTINCT location_id FROM Inventory",
      "SELECT item_id, item_name, location_id FROM Inventory WHERE quantity BETWEEN 10 AND 20",
      "SELECT COUNT(*) AS total_items FROM Inventory",
      "SELECT item_name, quantity FROM Inventory WHERE quantity = (SELECT MAX(quantity) FROM Inventory)",
      "SELECT item_name, quantity FROM Inventory WHERE location_id = (SELECT location_id FROM Inventory WHERE item_id = 1)",
      "SELECT item_name, quantity FROM Inventory WHERE location_id = 1 UNION SELECT item_name, quantity FROM Inventory WHERE location_id = 2",
      "SELECT item_id, item_name, location_id FROM Inventory WHERE item_name = 'Chair'",
      "SELECT item_name, quantity FROM Inventory WHERE location_id = 1 AND quantity > 5 ORDER BY quantity DESC LIMIT 5",
      "SELECT item_name, quantity FROM Inventory WHERE location_id = 1 AND quantity < (SELECT AVG(quantity) FROM Inventory)",
      "SELECT item_name, SUM(quantity) FROM Inventory WHERE location_id = 1 GROUP BY item_name HAVING SUM(quantity) > 20",
      "SELECT item_name, quantity FROM Inventory WHERE item_name LIKE '%desk%' AND quantity > 0",
      "SELECT item_id, item_name, location_id FROM Inventory INNER JOIN OtherTable ON Inventory.item_id = OtherTable.item_id",
      "SELECT item_name, quantity FROM Inventory LEFT JOIN OtherTable ON Inventory.item_id = OtherTable.item_id",
      "SELECT item_name, quantity FROM Inventory RIGHT JOIN OtherTable ON Inventory.item_id = OtherTable.item_id",
      "SELECT item_id, item_name, location_id, quantity FROM Inventory WHERE item_id BETWEEN 1 AND 10"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Inventory WHERE item_id = 1",
      "SELECT item_name, quantity FROM Inventory",
      "SELECT * FROM Inventory WHERE quantity > 10",
      "SELECT item_name, location FROM Inventory WHERE item_id = 5",
      "SELECT COUNT(*) FROM Inventory",
      "SELECT item_name, quantity, location FROM Inventory WHERE quantity <= 5",
      "SELECT * FROM Inventory WHERE location LIKE '%Store%'",
      "SELECT item_id, item_name, quantity FROM Inventory WHERE location = 'Warehouse'",
      "SELECT MAX(quantity) FROM Inventory",
      "SELECT item_id, item_name FROM Inventory WHERE location = 'Main Store'",
      "SELECT item_name, quantity FROM Inventory WHERE item_id BETWEEN 10 AND 15",
      "SELECT DISTINCT location FROM Inventory",
      "SELECT MIN(quantity) FROM Inventory",
      "SELECT item_name, location FROM Inventory WHERE quantity < 5",
      "SELECT item_id, item_name FROM Inventory WHERE location NOT LIKE '%Back%'",
      "SELECT AVG(quantity) FROM Inventory",
      "SELECT item_id, item_name FROM Inventory WHERE quantity = 0",
      "SELECT SUM(quantity) FROM Inventory",
      "SELECT item_id, item_name, location FROM Inventory WHERE quantity >= 20",
      "SELECT * FROM Inventory WHERE location = 'Online Store'",
      "SELECT * FROM Inventory WHERE item_name LIKE '%book%' AND quantity > 10",
      "SELECT item_name, location FROM Inventory WHERE quantity < 5",
      "SELECT COUNT(*) AS total_items FROM Inventory",
      "SELECT * FROM Inventory WHERE location = 'Warehouse A'",
      "SELECT item_name, quantity FROM Inventory WHERE location = 'Storage Room' AND quantity <= 20",
      "SELECT item_id, item_name FROM Inventory WHERE quantity BETWEEN 5 AND 10",
      "SELECT DISTINCT(location) FROM Inventory",
      "SELECT item_name, quantity*2 AS modified_quantity FROM Inventory WHERE quantity > 5",
      "SELECT item_name, location FROM Inventory WHERE item_id IN (1, 3, 5)",
      "SELECT * FROM Inventory WHERE item_name LIKE '%chair%' OR quantity < 20",
      "SELECT item_id, SUM(quantity) AS total_quantity FROM Inventory GROUP BY item_id HAVING SUM(quantity) > 50",
      "SELECT item_id, COUNT(*) AS total_records FROM Inventory GROUP BY item_id",
      "SELECT item_name, location FROM Inventory ORDER BY quantity DESC",
      "SELECT item_id, item_name FROM Inventory WHERE item_name = 'Desk' OR location = 'Office'",
      "SELECT AVG(quantity) AS avg_quantity FROM Inventory",
      "SELECT * FROM Inventory LIMIT 10",
      "SELECT * FROM Inventory WHERE quantity = (SELECT MAX(quantity) FROM Inventory)",
      "SELECT item_name, CASE WHEN quantity < 10 THEN 'Low' ELSE 'High' END AS quantity_category FROM Inventory",
      "SELECT item_name, location FROM Inventory WHERE item_name = 'Chair' UNION SELECT item_name, location FROM Inventory WHERE item_name = 'Table'",
      "SELECT SUM(quantity) AS total_quantity FROM Inventory"
    ]
  }
]