[
  {
    "statements": [
      "SELECT * FROM historical_data WHERE device_id = 1;",
      "SELECT data_value FROM historical_data WHERE timestamp >= '2021-01-01' AND timestamp <= '2021-02-01';",
      "SELECT device_id, timestamp FROM historical_data WHERE data_value > 100;",
      "SELECT MAX(data_value) FROM historical_data;",
      "SELECT MIN(data_value) FROM historical_data;",
      "SELECT COUNT(*) FROM historical_data WHERE device_id = 2;",
      "SELECT AVG(data_value) FROM historical_data WHERE timestamp >= '2020-01-01' AND timestamp <= '2020-12-31';",
      "SELECT device_id, AVG(data_value) AS avg_value FROM historical_data GROUP BY device_id;",
      "SELECT COUNT(DISTINCT device_id) FROM historical_data;",
      "SELECT * FROM historical_data WHERE device_id IN (1, 2, 3);",
      "SELECT MAX(data_value) AS max_value, MIN(data_value) AS min_value FROM historical_data WHERE device_id = 3;",
      "SELECT device_id, COUNT(*) AS count_data FROM historical_data GROUP BY device_id HAVING COUNT(*) > 5;",
      "SELECT AVG(data_value) FROM historical_data WHERE device_id = 4 AND timestamp >= '2022-01-01';",
      "SELECT device_id, MAX(timestamp) AS latest_timestamp FROM historical_data GROUP BY device_id;",
      "SELECT SUM(data_value) AS total_value FROM historical_data WHERE device_id = 2;",
      "SELECT device_id, COUNT(*) AS count_data FROM historical_data WHERE data_value < 50 GROUP BY device_id HAVING COUNT(*) >= 3;",
      "SELECT device_id, AVG(data_value) AS avg_value FROM historical_data WHERE timestamp BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY device_id;",
      "SELECT * FROM historical_data ORDER BY timestamp DESC LIMIT 10;",
      "SELECT device_id, SUM(data_value) AS total_value FROM historical_data GROUP BY device_id HAVING SUM(data_value) > 500;",
      "SELECT device_id, MIN(timestamp) AS oldest_timestamp FROM historical_data GROUP BY device_id;",
      "SELECT * FROM historical_data WHERE device_id = 1;",
      "SELECT * FROM historical_data WHERE timestamp >= '2022-01-01 00:00:00';",
      "SELECT device_id, AVG(data_value) FROM historical_data GROUP BY device_id;",
      "SELECT MAX(data_value) FROM historical_data WHERE timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-12-31 23:59:59';",
      "SELECT device_id, COUNT(*) FROM historical_data WHERE data_value > 50 GROUP BY device_id;",
      "SELECT device_id, MIN(data_value) FROM historical_data GROUP BY device_id HAVING COUNT(*) > 10;",
      "SELECT DISTINCT device_id FROM historical_data WHERE data_value < 0;",
      "SELECT AVG(data_value) AS average_value, COUNT(*) AS total_count FROM historical_data;",
      "SELECT device_id, timestamp, data_value FROM historical_data ORDER BY timestamp DESC;",
      "SELECT * FROM historical_data WHERE device_id IN (1, 2, 3);",
      "SELECT device_id, MAX(data_value) AS max_value FROM historical_data GROUP BY device_id HAVING MAX(data_value) > 100;",
      "SELECT device_id, MIN(data_value) FROM historical_data WHERE timestamp >= '2022-06-01';",
      "SELECT device_id, SUM(data_value) FROM historical_data WHERE device_id = 1 GROUP BY device_id;",
      "SELECT device_id, AVG(data_value) FROM historical_data WHERE device_id = 2 GROUP BY device_id;",
      "SELECT * FROM historical_data WHERE device_id = 1 AND data_value > 50;",
      "SELECT device_id, MAX(data_value) AS max_value, MIN(data_value) AS min_value FROM historical_data WHERE device_id = 2;",
      "SELECT device_id, COUNT(*) AS data_count FROM historical_data WHERE data_value BETWEEN 0 AND 100 GROUP BY device_id;",
      "SELECT DISTINCT YEAR(timestamp) AS year FROM historical_data;",
      "SELECT AVG(data_value) FROM historical_data WHERE timestamp >= '2022-01-01' AND timestamp < '2023-01-01';",
      "SELECT device_id, COUNT(*) AS data_count FROM historical_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY device_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM device_data;",
      "SELECT device_id, temperature FROM device_data;",
      "SELECT device_id, timestamp, humidity FROM device_data WHERE temperature > 25;",
      "SELECT * FROM device_metrics;",
      "SELECT device_id, cpu_usage FROM device_metrics;",
      "SELECT device_id, memory_usage FROM device_metrics WHERE cpu_usage > 50;",
      "SELECT device_id, timestamp, network_usage FROM device_metrics WHERE memory_usage < 30;",
      "SELECT * FROM device_data JOIN device_metrics ON device_data.device_id = device_metrics.device_id;",
      "SELECT device_data.device_id, device_data.timestamp, device_metrics.cpu_usage FROM device_data JOIN device_metrics ON device_data.device_id = device_metrics.device_id WHERE device_data.temperature > 25 AND device_metrics.cpu_usage > 70;",
      "SELECT AVG(temperature) AS avg_temp FROM device_data;",
      "SELECT MIN(cpu_usage) AS min_cpu_usage FROM device_metrics;",
      "SELECT device_id, MAX(memory_usage) AS max_memory_usage FROM device_metrics GROUP BY device_id;",
      "SELECT COUNT(*) AS total_devices FROM device_data UNION SELECT COUNT(*) AS total_devices FROM device_metrics;",
      "SELECT device_metrics.device_id, AVG(network_usage) AS avg_network_usage FROM device_metrics GROUP BY device_metrics.device_id HAVING AVG(network_usage) > 50;",
      "SELECT device_id, timestamp, memory_usage + cpu_usage AS total_usage FROM device_metrics;",
      "SELECT device_id, timestamp, temperature FROM device_data WHERE device_id = 1;",
      "SELECT device_id, timestamp, network_usage FROM device_metrics WHERE network_usage BETWEEN 10 AND 50;",
      "SELECT device_id, timestamp, temperature, humidity FROM device_data WHERE timestamp > '2021-01-01';",
      "SELECT device_id, timestamp, temperature, humidity, cpu_usage, memory_usage, network_usage FROM device_data JOIN device_metrics ON device_data.device_id = device_metrics.device_id WHERE device_data.timestamp > '2022-01-01' AND device_metrics.cpu_usage > 75;",
      "SELECT device_id, MAX(cpu_usage) AS max_cpu_usage FROM device_metrics WHERE device_id IN (1, 2, 3);",
      "SELECT * FROM device_data WHERE temperature > 25 AND humidity < 70 ORDER BY timestamp DESC LIMIT 10",
      "SELECT device_data.device_id, device_metrics.cpu_usage, device_metrics.memory_usage FROM device_data JOIN device_metrics ON device_data.device_id = device_metrics.device_id WHERE device_metrics.cpu_usage > 80 AND device_data.timestamp > '2022-01-01'",
      "SELECT device_data.device_id, AVG(temperature) AS avg_temp, AVG(humidity) AS avg_humidity FROM device_data GROUP BY device_data.device_id HAVING avg_temp > 30 AND avg_humidity < 60",
      "SELECT * FROM device_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT device_metrics.device_id, MAX(cpu_usage) AS max_cpu_usage FROM device_metrics GROUP BY device_metrics.device_id ORDER BY max_cpu_usage DESC LIMIT 5",
      "SELECT device_data.device_id, COUNT(*) AS total_records FROM device_data GROUP BY device_data.device_id HAVING total_records > 100"
    ]
  },
  {
    "statements": [
      "SELECT * FROM IoT_Device_Data WHERE device_id = 1",
      "SELECT device_id, data_value FROM IoT_Device_Data WHERE timestamp > '2022-06-01'",
      "SELECT MAX(data_value) FROM IoT_Device_Data",
      "SELECT AVG(data_value) FROM IoT_Device_Data WHERE device_id = 2",
      "SELECT COUNT(*) FROM IoT_Device_Data WHERE timestamp BETWEEN '2022-06-01' AND '2022-06-30'",
      "SELECT MIN(data_value), MAX(data_value) FROM IoT_Device_Data",
      "SELECT AVG(data_value), COUNT(*) FROM IoT_Device_Data WHERE timestamp > '2022-06-15'",
      "SELECT device_id, timestamp, data_value FROM IoT_Device_Data WHERE data_value > 50",
      "SELECT SUM(data_value) FROM IoT_Device_Data WHERE timestamp > '2022-07-01'",
      "SELECT DISTINCT device_id FROM IoT_Device_Data",
      "SELECT timestamp, data_value FROM IoT_Device_Data ORDER BY timestamp ASC",
      "SELECT COUNT(DISTINCT device_id) FROM IoT_Device_Data",
      "SELECT device_id, AVG(data_value) FROM IoT_Device_Data GROUP BY device_id",
      "SELECT device_id, MIN(data_value) FROM IoT_Device_Data GROUP BY device_id",
      "SELECT device_id, MAX(data_value) FROM IoT_Device_Data GROUP BY device_id",
      "SELECT device_id, COUNT(*) FROM IoT_Device_Data GROUP BY device_id",
      "SELECT device_id, SUM(data_value) FROM IoT_Device_Data GROUP BY device_id",
      "SELECT AVG(data_value), MAX(data_value), MIN(data_value) FROM IoT_Device_Data GROUP BY device_id HAVING AVG(data_value) > 60",
      "SELECT COUNT(*), SUM(data_value) FROM IoT_Device_Data GROUP BY timestamp",
      "SELECT device_id, COUNT(*) FROM IoT_Device_Data GROUP BY device_id HAVING COUNT(*) > 10",
      "SELECT device_id, timestamp, data_value FROM IoT_Device_Data WHERE device_id = 1",
      "SELECT * FROM IoT_Device_Data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT COUNT(device_id) FROM IoT_Device_Data WHERE data_value > 50",
      "SELECT AVG(data_value) FROM IoT_Device_Data WHERE timestamp > '2022-01-01'",
      "SELECT MAX(data_value) FROM IoT_Device_Data WHERE device_id = 2",
      "SELECT device_id, MIN(timestamp) FROM IoT_Device_Data WHERE data_value < 10",
      "SELECT SUM(data_value) FROM IoT_Device_Data WHERE timestamp < '2022-02-01'",
      "SELECT device_id, AVG(data_value) FROM IoT_Device_Data GROUP BY device_id",
      "SELECT device_id, COUNT(*) FROM IoT_Device_Data GROUP BY device_id HAVING COUNT(*) > 5",
      "SELECT device_id, MAX(data_value) FROM IoT_Device_Data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT device_id, data_value FROM IoT_Device_Data WHERE timestamp = (SELECT MAX(timestamp) FROM IoT_Device_Data)",
      "SELECT device_id, AVG(data_value) FROM IoT_Device_Data WHERE device_id IN (1, 2, 3)",
      "SELECT device_id, timestamp FROM IoT_Device_Data WHERE data_value = (SELECT MAX(data_value) FROM IoT_Device_Data)",
      "SELECT DISTINCT device_id FROM IoT_Device_Data",
      "SELECT device_id FROM IoT_Device_Data ORDER BY timestamp DESC LIMIT 5",
      "SELECT device_id, timestamp FROM IoT_Device_Data WHERE timestamp > '2021-12-01' AND timestamp < '2022-01-01'",
      "SELECT COUNT(DISTINCT device_id) FROM IoT_Device_Data",
      "SELECT device_id, data_value FROM IoT_Device_Data WHERE EXTRACT(MONTH FROM timestamp) = 3",
      "SELECT AVG(data_value) FROM IoT_Device_Data WHERE EXTRACT(YEAR FROM timestamp) = 2022",
      "SELECT device_id, MAX(data_value) FROM IoT_Device_Data WHERE EXTRACT(DAY FROM timestamp) = 15"
    ]
  },
  {
    "statements": [
      "SELECT device_id, date, data_type, data_value FROM historical_data;",
      "SELECT device_id, firmware_version, manufacture_date, location FROM device_info;",
      "SELECT device_id, metric_name, metric_value, timestamp FROM performance_metrics;",
      "SELECT strategy_id, strategy_name, description FROM optimization_strategies;",
      "SELECT * FROM historical_data;",
      "SELECT * FROM device_info;",
      "SELECT * FROM performance_metrics;",
      "SELECT * FROM optimization_strategies;",
      "SELECT COUNT(*) FROM historical_data;",
      "SELECT COUNT(*) FROM device_info;",
      "SELECT COUNT(*) FROM performance_metrics;",
      "SELECT COUNT(*) FROM optimization_strategies;",
      "SELECT device_id, AVG(data_value) AS avg_data_value FROM historical_data GROUP BY device_id;",
      "SELECT device_id, MAX(data_value) AS max_data_value FROM historical_data GROUP BY device_id;",
      "SELECT device_id, MIN(data_value) AS min_data_value FROM historical_data GROUP BY device_id;",
      "SELECT location, COUNT(*) AS num_devices FROM device_info GROUP BY location;",
      "SELECT strategy_name, COUNT(*) AS num_strategies FROM optimization_strategies GROUP BY strategy_name;",
      "SELECT device_id, AVG(metric_value) AS avg_metric_value FROM performance_metrics GROUP BY device_id;",
      "SELECT device_id, MAX(metric_value) AS max_metric_value FROM performance_metrics GROUP BY device_id;",
      "SELECT device_id, MIN(metric_value) AS min_metric_value FROM performance_metrics GROUP BY device_id;",
      "SELECT * FROM historical_data WHERE device_id = 1;",
      "SELECT device_id, date, data_value FROM historical_data WHERE data_type = 'temperature';",
      "SELECT device_id, date, data_value FROM historical_data WHERE data_value > 50;",
      "SELECT device_id, MAX(data_value) FROM historical_data GROUP BY device_id;",
      "SELECT d.device_id, d.firmware_version, p.metric_name FROM device_info d JOIN performance_metrics p ON d.device_id = p.device_id;",
      "SELECT h.device_id, h.date, h.data_value, d.location FROM historical_data h JOIN device_info d ON h.device_id = d.device_id;",
      "SELECT p.metric_name, p.metric_value, d.location FROM performance_metrics p JOIN device_info d ON p.device_id = d.device_id;",
      "SELECT o.strategy_name, o.description, p.metric_value FROM optimization_strategies o JOIN performance_metrics p ON o.strategy_id = p.device_id;",
      "SELECT device_id, COUNT(data_value) AS data_count FROM historical_data GROUP BY device_id HAVING data_count > 10;",
      "SELECT MIN(data_value) AS min_value, MAX(data_value) AS max_value FROM historical_data;",
      "SELECT AVG(data_value) AS avg_value, STDDEV(data_value) AS stddev_value FROM historical_data;",
      "SELECT device_id, COUNT(metric_value) AS metric_count FROM performance_metrics GROUP BY device_id HAVING metric_count > 5;",
      "SELECT device_id, SUM(metric_value) AS total_metrics FROM performance_metrics GROUP BY device_id;",
      "SELECT AVG(metric_value) AS avg_metric_value, MAX(metric_value) AS max_metric_value FROM performance_metrics;",
      "SELECT d.device_id, d.location, COUNT(p.metric_name) AS metric_count FROM device_info d JOIN performance_metrics p ON d.device_id = p.device_id GROUP BY d.device_id;",
      "SELECT h.device_id, h.date, h.data_value, d.location, p.metric_name, p.metric_value FROM historical_data h JOIN device_info d ON h.device_id = d.device_id JOIN performance_metrics p ON h.device_id = p.device_id;",
      "SELECT d.device_id, MAX(p.metric_value) AS max_metric_value FROM device_info d JOIN performance_metrics p ON d.device_id = p.device_id GROUP BY d.device_id;",
      "SELECT o.strategy_name, COUNT(p.metric_name) AS metric_count FROM optimization_strategies o JOIN performance_metrics p ON o.strategy_id = p.device_id GROUP BY o.strategy_id;",
      "SELECT d.device_id, AVG(p.metric_value) AS avg_metric_value FROM device_info d JOIN performance_metrics p ON d.device_id = p.device_id GROUP BY d.device_id;",
      "SELECT o.strategy_name, MAX(p.metric_value) AS max_metric_value FROM optimization_strategies o JOIN performance_metrics p ON o.strategy_id = p.device_id GROUP BY o.strategy_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM historical_data",
      "SELECT device_id, location FROM device_info",
      "SELECT timestamp, latency FROM performance_metrics",
      "SELECT * FROM device_errors",
      "SELECT archive_id, archive_timestamp FROM data_archive",
      "SELECT device_id, temperature FROM historical_data",
      "SELECT device_id, firmware_version FROM device_info",
      "SELECT timestamp, memory_usage FROM performance_metrics",
      "SELECT * FROM device_errors",
      "SELECT archive_id, data FROM data_archive",
      "SELECT device_id, timestamp, temperature FROM historical_data",
      "SELECT device_id, location, firmware_version FROM device_info",
      "SELECT timestamp, latency, memory_usage FROM performance_metrics",
      "SELECT error_id, device_id, error_message FROM device_errors",
      "SELECT archive_id, archive_timestamp, data FROM data_archive",
      "SELECT device_id, temperature, location FROM historical_data JOIN device_info ON historical_data.device_id = device_info.device_id",
      "SELECT device_id, timestamp, error_message FROM historical_data JOIN device_errors ON historical_data.device_id = device_errors.device_id",
      "SELECT * FROM historical_data WHERE temperature > 30",
      "SELECT * FROM device_info WHERE firmware_version LIKE '2.%'",
      "SELECT * FROM performance_metrics WHERE latency < 1.0",
      "SELECT * FROM historical_data WHERE temperature > 25.0",
      "SELECT device_id, location FROM device_info WHERE location = 'Room A'",
      "SELECT device_id, timestamp, latency FROM performance_metrics WHERE latency > 100",
      "SELECT device_id, error_message FROM device_errors WHERE device_id = 1",
      "SELECT archive_id, data FROM data_archive WHERE archive_timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
      "SELECT COUNT(device_id) FROM historical_data",
      "SELECT AVG(temperature) FROM historical_data",
      "SELECT device_id, location, firmware_version FROM device_info ORDER BY location ASC",
      "SELECT device_id, timestamp, latency, memory_usage FROM performance_metrics ORDER BY memory_usage DESC",
      "SELECT device_id, location, firmware_version FROM device_info WHERE location LIKE '%Room%'",
      "SELECT timestamp, latency FROM performance_metrics WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-01-31'",
      "SELECT device_id, error_message FROM device_errors WHERE error_message LIKE '%critical%'",
      "SELECT * FROM historical_data JOIN device_info ON historical_data.device_id = device_info.device_id",
      "SELECT device_id, AVG(latency) AS avg_latency FROM performance_metrics GROUP BY device_id",
      "SELECT COUNT(error_id) AS total_errors FROM device_errors",
      "SELECT device_id, AVG(temperature) AS avg_temp FROM historical_data GROUP BY device_id HAVING AVG(temperature) > 20.0",
      "SELECT * FROM historical_data WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-01-31' AND temperature > 30.0",
      "SELECT device_id, location, COUNT(error_id) AS total_errors FROM device_info LEFT JOIN device_errors ON device_info.device_id = device_errors.device_id GROUP BY device_id",
      "SELECT device_id, location, firmware_version FROM device_info UNION SELECT device_id, location, firmware_version FROM device_info",
      "SELECT device_id, location, firmware_version FROM device_info INTERSECT SELECT device_id, location, firmware_version FROM device_info",
      "SELECT device_id, location, firmware_version FROM device_info EXCEPT SELECT device_id, location, firmware_version FROM device_info"
    ]
  }
]