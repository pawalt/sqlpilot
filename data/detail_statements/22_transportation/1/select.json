[
  {
    "statements": [
      "SELECT * FROM delivery_vehicles",
      "SELECT vehicle_id, vehicle_type FROM delivery_vehicles",
      "SELECT * FROM delivery_vehicles WHERE vehicle_id = 1",
      "SELECT COUNT(*) FROM delivery_vehicles",
      "SELECT MAX(vehicle_id) FROM delivery_vehicles",
      "SELECT DISTINCT vehicle_type FROM delivery_vehicles",
      "SELECT * FROM delivery_vehicles WHERE status = 'Active'",
      "SELECT * FROM delivery_vehicles WHERE current_location = 'Warehouse A'",
      "SELECT vehicle_id, status FROM delivery_vehicles WHERE vehicle_type = 'Truck'",
      "SELECT vehicle_id FROM delivery_vehicles WHERE status = 'Maintenance'",
      "SELECT * FROM delivery_vehicles ORDER BY vehicle_id ASC",
      "SELECT * FROM delivery_vehicles ORDER BY vehicle_id DESC",
      "SELECT * FROM delivery_vehicles LIMIT 5",
      "SELECT * FROM delivery_vehicles WHERE vehicle_id BETWEEN 5 AND 10",
      "SELECT * FROM delivery_vehicles WHERE vehicle_type LIKE 'S%'",
      "SELECT * FROM delivery_vehicles WHERE status IN ('Active', 'Maintenance')",
      "SELECT * FROM delivery_vehicles WHERE vehicle_type = 'Van' AND status = 'Active'",
      "SELECT * FROM delivery_vehicles WHERE vehicle_type = 'Bike' OR status = 'Maintenance'",
      "SELECT AVG(vehicle_id) FROM delivery_vehicles",
      "SELECT * FROM delivery_vehicles WHERE vehicle_type <> 'Car'",
      "SELECT * FROM delivery_vehicles WHERE vehicle_type = 'Truck' AND status = 'In Use';",
      "SELECT vehicle_id, current_location FROM delivery_vehicles WHERE status = 'Available';",
      "SELECT COUNT(*) AS total_trucks FROM delivery_vehicles WHERE vehicle_type = 'Truck';",
      "SELECT * FROM delivery_vehicles WHERE current_location LIKE 'Warehouse%';",
      "SELECT vehicle_id, status FROM delivery_vehicles WHERE vehicle_type IN ('Van', 'Truck') AND current_location = 'Warehouse A';",
      "SELECT DISTINCT vehicle_type FROM delivery_vehicles;",
      "SELECT vehicle_id, current_location FROM delivery_vehicles WHERE status = 'Maintenance' OR status = 'Scheduled';",
      "SELECT * FROM delivery_vehicles WHERE current_location != 'Warehouse B';",
      "SELECT vehicle_id, current_location FROM delivery_vehicles WHERE vehicle_type IN ('Car', 'Motorcycle') AND status = 'Available';",
      "SELECT * FROM delivery_vehicles WHERE status != 'Completed';",
      "SELECT vehicle_id, status FROM delivery_vehicles WHERE current_location = 'Warehouse C' OR current_location = 'Warehouse D';",
      "SELECT * FROM delivery_vehicles WHERE vehicle_type = 'Truck' AND current_location = 'Warehouse A';",
      "SELECT vehicle_id, status FROM delivery_vehicles WHERE current_location IS NOT NULL;",
      "SELECT * FROM delivery_vehicles WHERE vehicle_type = 'Van' AND status != 'In Use';",
      "SELECT vehicle_id, current_location, status FROM delivery_vehicles WHERE status != 'Available';",
      "SELECT COUNT(*) AS total_vehicles FROM delivery_vehicles;",
      "SELECT * FROM delivery_vehicles WHERE current_location NOT LIKE 'Warehouse%';",
      "SELECT vehicle_id, vehicle_type FROM delivery_vehicles WHERE status = 'Maintenance';",
      "SELECT * FROM delivery_vehicles WHERE current_location = 'Warehouse B' OR current_location = 'Warehouse C';",
      "SELECT vehicle_id, current_location FROM delivery_vehicles WHERE vehicle_type = 'Car' AND status = 'Available';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM location_table WHERE vehicle_id = 1;",
      "SELECT latitude, longitude FROM location_table WHERE vehicle_id = 2;",
      "SELECT status FROM status_table WHERE vehicle_id = 3;",
      "SELECT * FROM status_table WHERE status = 'active';",
      "SELECT vehicle_id, latitude, longitude FROM location_table;",
      "SELECT COUNT(*) FROM location_table;",
      "SELECT vehicle_id, status FROM status_table WHERE last_updated > '2022-01-01';",
      "SELECT * FROM location_table JOIN status_table ON location_table.vehicle_id = status_table.vehicle_id;",
      "SELECT vehicle_id, status FROM status_table WHERE status LIKE 'busy%';",
      "SELECT MAX(latitude) AS max_latitude FROM location_table;",
      "SELECT AVG(longitude) AS avg_longitude FROM location_table;",
      "SELECT vehicle_id, status, last_updated FROM status_table ORDER BY last_updated DESC;",
      "SELECT * FROM location_table WHERE latitude < 40 AND longitude > -100;",
      "SELECT vehicle_id, latitude, longitude FROM location_table WHERE latitude BETWEEN 30 AND 50;",
      "SELECT vehicle_id, status FROM status_table WHERE last_updated BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT COUNT(DISTINCT vehicle_id) AS distinct_vehicles FROM status_table;",
      "SELECT * FROM location_table WHERE vehicle_id IN (1, 3, 5);",
      "SELECT vehicle_id, status FROM status_table WHERE vehicle_id = 4 AND status = 'disabled';",
      "SELECT * FROM location_table WHERE latitude IS NOT NULL;",
      "SELECT AVG(latitude) AS avg_latitude FROM location_table;",
      "SELECT * FROM location_table WHERE latitude > 40 AND longitude < -70",
      "SELECT vehicle_id, status FROM location_table JOIN status_table USING(vehicle_id)",
      "SELECT * FROM location_table WHERE latitude BETWEEN 30 AND 40 AND longitude BETWEEN -80 AND -70",
      "SELECT vehicle_id, status, last_updated FROM status_table JOIN location_table USING(vehicle_id)",
      "SELECT vehicle_id, status, last_updated FROM status_table WHERE status = 'active'",
      "SELECT * FROM location_table WHERE latitude < 30 OR longitude > -80",
      "SELECT vehicle_id, status, last_updated FROM status_table WHERE last_updated > '2022-01-01 00:00:00'",
      "SELECT vehicle_id, AVG(latitude) AS avg_latitude FROM location_table GROUP BY vehicle_id",
      "SELECT status, COUNT(*) AS count FROM status_table GROUP BY status",
      "SELECT * FROM location_table WHERE latitude < 30 ORDER BY longitude DESC",
      "SELECT vehicle_id, status FROM status_table WHERE last_updated > '2022-01-01 00:00:00'",
      "SELECT vehicle_id, status, last_updated FROM status_table WHERE last_updated BETWEEN '2022-01-01 00:00:00' AND '2022-03-01 00:00:00'",
      "SELECT DISTINCT status FROM status_table",
      "SELECT vehicle_id, status, ROUND(latitude, 2) AS rounded_latitude FROM location_table",
      "SELECT vehicle_id, status, last_updated FROM status_table WHERE status IN ('active', 'inactive')",
      "SELECT AVG(latitude) AS avg_latitude FROM location_table",
      "SELECT vehicle_id FROM location_table UNION SELECT vehicle_id FROM status_table",
      "SELECT vehicle_id, status, last_updated FROM status_table WHERE status LIKE '%active%'",
      "SELECT * FROM location_table WHERE latitude + longitude > 100",
      "SELECT vehicle_id, status, last_updated FROM status_table WHERE vehicle_id IN (SELECT vehicle_id FROM location_table WHERE latitude > 40)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT location, status FROM vehicles WHERE status = 'active';",
      "SELECT name FROM drivers WHERE vehicle_id = 100;",
      "SELECT start_location, end_location FROM routes WHERE estimated_time > 30;",
      "SELECT * FROM vehicles WHERE location LIKE 'New%';",
      "SELECT name, vehicle_id FROM drivers JOIN vehicles ON drivers.vehicle_id = vehicles.vehicle_id;",
      "SELECT location, status FROM vehicles WHERE id = 5;",
      "SELECT name, vehicle_id, location FROM drivers JOIN vehicles ON drivers.vehicle_id = vehicles.vehicle_id;",
      "SELECT DISTINCT status FROM vehicles;",
      "SELECT * FROM vehicles JOIN drivers ON vehicles.vehicle_id = drivers.vehicle_id;",
      "SELECT * FROM routes WHERE start_location = 'New York' AND end_location = 'Boston';",
      "SELECT COUNT(*) FROM drivers;",
      "SELECT vehicle_id, COUNT(*) AS num_drivers FROM drivers GROUP BY vehicle_id;",
      "SELECT vehicle_id, COUNT(*) AS num_routes FROM routes GROUP BY vehicle_id;",
      "SELECT SUM(estimated_time) AS total_time FROM routes;",
      "SELECT AVG(estimated_time) AS avg_time FROM routes;",
      "SELECT MAX(estimated_time) AS max_time FROM routes;",
      "SELECT MIN(estimated_time) AS min_time FROM routes;",
      "SELECT * FROM vehicles WHERE id IN (1, 3, 5);",
      "SELECT name, status FROM drivers JOIN vehicles ON drivers.vehicle_id = vehicles.vehicle_id WHERE vehicles.status = 'inactive';",
      "SELECT * FROM vehicles WHERE status='active';",
      "SELECT drivers.name, vehicles.location FROM drivers JOIN vehicles ON drivers.vehicle_id=vehicles.vehicle_id;",
      "SELECT routes.start_location, routes.end_location, drivers.name FROM routes JOIN drivers ON routes.route_id=drivers.driver_id;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id JOIN routes ON drivers.vehicle_id=routes.route_id;",
      "SELECT DISTINCT drivers.name, routes.start_location, routes.end_location FROM drivers JOIN routes ON drivers.driver_id=routes.route_id;",
      "SELECT * FROM vehicles WHERE location LIKE 'New%';",
      "SELECT drivers.name, routes.start_location, routes.end_location FROM drivers JOIN routes ON drivers.driver_id=routes.route_id WHERE routes.estimated_time < 30;",
      "SELECT COUNT(*) AS num_vehicles FROM vehicles;",
      "SELECT AVG(routes.estimated_time) AS average_time FROM routes;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles LEFT JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id LEFT JOIN routes ON drivers.driver_id=routes.route_id;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles RIGHT JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id RIGHT JOIN routes ON drivers.driver_id=routes.route_id;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles FULL JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id FULL JOIN routes ON drivers.driver_id=routes.route_id;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles INNER JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id INNER JOIN routes ON drivers.driver_id=routes.route_id;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles LEFT JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id JOIN routes ON drivers.driver_id=routes.route_id;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id LEFT JOIN routes ON vehicles.location=routes.start_location;",
      "SELECT drivers.name, vehicles.status, routes.start_location, routes.end_location FROM drivers JOIN vehicles ON drivers.vehicle_id=vehicles.vehicle_id JOIN routes ON vehicles.location=routes.end_location WHERE vehicles.status='active';",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id JOIN routes ON vehicles.location=routes.start_location WHERE routes.estimated_time > 60;",
      "SELECT vehicles.vehicle_id, vehicles.location, drivers.name, COUNT(vehicles.vehicle_id) AS num_routes FROM vehicles JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id JOIN routes ON drivers.driver_id=routes.route_id GROUP BY vehicles.vehicle_id, vehicles.location, drivers.name;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id JOIN routes ON drivers.driver_id=routes.route_id ORDER BY vehicles.vehicle_id ASC, drivers.name DESC, routes.estimated_time ASC LIMIT 10;",
      "SELECT vehicles.vehicle_id, drivers.name, routes.start_location, routes.end_location FROM vehicles JOIN drivers ON vehicles.vehicle_id=drivers.vehicle_id JOIN routes ON drivers.driver_id=routes.route_id OFFSET 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM delivery_vehicles;",
      "SELECT vehicle_id, vehicle_name FROM delivery_vehicles;",
      "SELECT vehicle_id, current_location, status FROM delivery_vehicles;",
      "SELECT * FROM vehicle_tracking;",
      "SELECT tracking_id, vehicle_id, tracked_timestamp FROM vehicle_tracking;",
      "SELECT tracking_id, latitude, longitude FROM vehicle_tracking;",
      "SELECT * FROM vehicle_statuses;",
      "SELECT status_id, status_name FROM vehicle_statuses;",
      "SELECT * FROM vehicle_logs;",
      "SELECT log_id, vehicle_id, log_timestamp FROM vehicle_logs;",
      "SELECT log_id, log_message FROM vehicle_logs;",
      "SELECT vehicle_id, vehicle_name, current_location FROM delivery_vehicles;",
      "SELECT tracking_id, vehicle_id, tracked_timestamp, latitude, longitude FROM vehicle_tracking;",
      "SELECT status_id, status_name FROM vehicle_statuses WHERE status_name = 'Active';",
      "SELECT * FROM delivery_vehicles WHERE status = 'Available';",
      "SELECT vehicle_id, vehicle_name FROM delivery_vehicles WHERE status = 'Unavailable';",
      "SELECT tracking_id, latitude, longitude FROM vehicle_tracking WHERE vehicle_id = 1;",
      "SELECT log_id, log_message FROM vehicle_logs WHERE vehicle_id = 2;",
      "SELECT vehicle_id, current_location, status FROM delivery_vehicles WHERE vehicle_id = 3;",
      "SELECT tracking_id, tracked_timestamp FROM vehicle_tracking WHERE latitude BETWEEN 10.5 AND 20.5;",
      "SELECT log_id, log_message FROM vehicle_logs WHERE log_timestamp >= '2021-10-01';",
      "SELECT * FROM delivery_vehicles WHERE status = 'Active';",
      "SELECT vehicle_id, vehicle_name, current_location FROM delivery_vehicles WHERE vehicle_id = 1;",
      "SELECT * FROM delivery_vehicles WHERE status = 'Inactive' ORDER BY vehicle_id DESC;",
      "SELECT DISTINCT status FROM delivery_vehicles;",
      "SELECT vehicle_id, vehicle_name, COUNT(*) FROM delivery_vehicles GROUP BY vehicle_id, vehicle_name;",
      "SELECT * FROM delivery_vehicles WHERE vehicle_id IN (SELECT vehicle_id FROM vehicle_tracking WHERE latitude > 40 AND longitude < -70);",
      "SELECT * FROM delivery_vehicles dv JOIN vehicle_statuses vs ON dv.status = vs.status_name;",
      "SELECT vehicle_id, COUNT(*) FROM vehicle_tracking GROUP BY vehicle_id HAVING COUNT(*) > 10;",
      "SELECT MAX(tracked_timestamp) AS last_tracked_time FROM vehicle_tracking;",
      "SELECT vehicle_id, COUNT(*) FROM vehicle_logs GROUP BY vehicle_id HAVING COUNT(*) > 5;",
      "SELECT vehicle_id, AVG(latitude) AS avg_lat, AVG(longitude) AS avg_long FROM vehicle_tracking GROUP BY vehicle_id;",
      "SELECT MIN(log_timestamp) AS first_log_time FROM vehicle_logs WHERE vehicle_id = 1;",
      "SELECT * FROM vehicle_logs WHERE log_message LIKE '%delay%';",
      "SELECT vehicle_id, MIN(tracked_timestamp) AS first_track_time FROM vehicle_tracking GROUP BY vehicle_id;",
      "SELECT * FROM vehicle_logs WHERE log_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT vehicle_id, MAX(latitude) AS max_lat, MAX(longitude) AS max_long FROM vehicle_tracking GROUP BY vehicle_id;",
      "SELECT vehicle_name, current_location, status FROM delivery_vehicles WHERE status IN ('Active', 'Inactive');",
      "SELECT * FROM delivery_vehicles dv LEFT JOIN vehicle_tracking vt ON dv.vehicle_id = vt.vehicle_id;",
      "SELECT vehicle_id, COUNT(*) FROM vehicle_tracking WHERE tracked_timestamp > NOW() - INTERVAL '1 day' GROUP BY vehicle_id HAVING COUNT(*) > 2;",
      "SELECT vehicle_id, SUM(latitude) AS total_lat, SUM(longitude) AS total_long FROM vehicle_tracking GROUP BY vehicle_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Vehicles",
      "SELECT vehicle_name, location FROM Vehicles",
      "SELECT driver_name, vehicle_id FROM Drivers",
      "SELECT order_description FROM Orders",
      "SELECT route_name, start_location, end_location FROM Routes",
      "SELECT delivery_id, delivery_status FROM Deliveries",
      "SELECT vehicle_id, vehicle_name, location, status FROM Vehicles",
      "SELECT driver_id, driver_name, vehicle_id FROM Drivers",
      "SELECT order_id, order_description, driver_id FROM Orders",
      "SELECT route_id, route_name, start_location, end_location FROM Routes",
      "SELECT delivery_id, order_id, route_id, delivery_status FROM Deliveries",
      "SELECT * FROM Vehicles WHERE status='available'",
      "SELECT driver_name, vehicle_id FROM Drivers WHERE vehicle_id=1",
      "SELECT order_description FROM Orders WHERE driver_id=2",
      "SELECT route_name, start_location, end_location FROM Routes WHERE start_location='Warehouse'",
      "SELECT * FROM Deliveries WHERE delivery_status='pending'",
      "SELECT vehicle_id, vehicle_name FROM Vehicles WHERE location='Depot'",
      "SELECT driver_name, vehicle_id FROM Drivers WHERE vehicle_id IN (1,2)",
      "SELECT order_description, driver_id FROM Orders WHERE driver_id=1",
      "SELECT route_name, end_location FROM Routes WHERE start_location='Depot'",
      "SELECT * FROM Vehicles WHERE status = 'active';",
      "SELECT * FROM Drivers JOIN Vehicles ON Drivers.vehicle_id = Vehicles.vehicle_id;",
      "SELECT Orders.order_id, Orders.order_description, Drivers.driver_name FROM Orders JOIN Drivers ON Orders.driver_id = Drivers.driver_id;",
      "SELECT Routes.route_name, Routes.start_location, Deliveries.delivery_status FROM Routes JOIN Deliveries ON Deliveries.route_id = Routes.route_id;",
      "SELECT Drivers.driver_name, Vehicles.vehicle_name, Routes.route_name FROM Drivers JOIN Vehicles ON Drivers.vehicle_id = Vehicles.vehicle_id JOIN Orders ON Drivers.driver_id = Orders.driver_id JOIN Deliveries ON Orders.order_id = Deliveries.order_id JOIN Routes ON Deliveries.route_id = Routes.route_id;",
      "SELECT * FROM Deliveries WHERE delivery_status = 'pending';",
      "SELECT Orders.order_id, Vehicles.vehicle_name, Drivers.driver_name, Routes.route_name FROM Orders JOIN Drivers ON Orders.driver_id = Drivers.driver_id JOIN Vehicles ON Drivers.vehicle_id = Vehicles.vehicle_id JOIN Deliveries ON Orders.order_id = Deliveries.order_id JOIN Routes ON Deliveries.route_id = Routes.route_id;",
      "SELECT Routes.route_name, Routes.start_location, Routes.end_location FROM Routes WHERE route_id IN (SELECT route_id FROM Deliveries WHERE delivery_status = 'in transit');",
      "SELECT Drivers.driver_name, COUNT(Orders.order_id) AS total_orders FROM Drivers JOIN Orders ON Drivers.driver_id = Orders.driver_id GROUP BY Drivers.driver_name;",
      "SELECT Vehicles.vehicle_name, COUNT(Orders.order_id) AS total_orders FROM Vehicles LEFT JOIN Drivers ON Vehicles.vehicle_id = Drivers.vehicle_id LEFT JOIN Orders ON Drivers.driver_id = Orders.driver_id GROUP BY Vehicles.vehicle_name;",
      "SELECT Vehicles.vehicle_name, Deliveries.delivery_status, COUNT(Deliveries.delivery_id) AS total_deliveries FROM Vehicles LEFT JOIN Drivers ON Vehicles.vehicle_id = Drivers.vehicle_id LEFT JOIN Orders ON Drivers.driver_id = Orders.driver_id LEFT JOIN Deliveries ON Orders.order_id = Deliveries.order_id GROUP BY Vehicles.vehicle_name, Deliveries.delivery_status;",
      "SELECT Routes.route_name, SUM(Deliveries.delivery_id) AS total_deliveries FROM Routes JOIN Deliveries ON Routes.route_id = Deliveries.route_id GROUP BY Routes.route_name;",
      "SELECT Orders.order_id, Orders.order_description, Drivers.driver_name FROM Orders JOIN Drivers ON Orders.driver_id = Drivers.driver_id WHERE Drivers.driver_name LIKE 'J%';",
      "SELECT Routes.route_name, Routes.start_location, Routes.end_location FROM Routes WHERE end_location = 'Warehouse';",
      "SELECT Drivers.driver_name, COUNT(Orders.order_id) AS total_orders FROM Drivers JOIN Orders ON Drivers.driver_id = Orders.driver_id WHERE Drivers.driver_name = 'Alice';",
      "SELECT Deliveries.delivery_status, COUNT(Deliveries.delivery_id) AS total_deliveries FROM Deliveries GROUP BY Deliveries.delivery_status HAVING COUNT(Deliveries.delivery_id) > 1;",
      "SELECT Vehicles.vehicle_name, COUNT(Orders.order_id) AS total_orders FROM Vehicles LEFT JOIN Drivers ON Vehicles.vehicle_id = Drivers.vehicle_id LEFT JOIN Orders ON Drivers.driver_id = Orders.driver_id WHERE Orders.order_id IS NOT NULL GROUP BY Vehicles.vehicle_name;",
      "SELECT Drivers.driver_name, COUNT(Orders.order_id) AS total_orders FROM Drivers LEFT JOIN Orders ON Drivers.driver_id = Orders.driver_id WHERE Orders.order_id IS NULL GROUP BY Drivers.driver_name;",
      "SELECT Orders.order_id, Orders.order_description, Drivers.driver_name, Vehicles.vehicle_name, Routes.route_name, Deliveries.delivery_status FROM Orders JOIN Drivers ON Orders.driver_id = Drivers.driver_id JOIN Vehicles ON Drivers.vehicle_id = Vehicles.vehicle_id JOIN Deliveries ON Orders.order_id = Deliveries.order_id JOIN Routes ON Deliveries.route_id = Routes.route_id WHERE Deliveries.delivery_status = 'completed';",
      "SELECT Drivers.driver_name, Vehicles.vehicle_name, Routes.route_name, Deliveries.delivery_status FROM Drivers JOIN Vehicles ON Drivers.vehicle_id = Vehicles.vehicle_id JOIN Orders ON Drivers.driver_id = Orders.driver_id JOIN Deliveries ON Orders.order_id = Deliveries.order_id JOIN Routes ON Deliveries.route_id = Routes.route_id WHERE Deliveries.delivery_status = 'delivered';"
    ]
  }
]