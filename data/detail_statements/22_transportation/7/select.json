[
  {
    "statements": [
      "SELECT part_name, quantity FROM spare_parts_inventory;",
      "SELECT * FROM spare_parts_inventory WHERE quantity > 10;",
      "SELECT part_category, supplier_id FROM spare_parts_inventory WHERE location = 'Warehouse';",
      "SELECT DISTINCT part_category FROM spare_parts_inventory;",
      "SELECT part_name FROM spare_parts_inventory ORDER BY part_name ASC;",
      "SELECT * FROM spare_parts_inventory WHERE supplier_id = 101;",
      "SELECT part_name, quantity FROM spare_parts_inventory WHERE quantity < 5;",
      "SELECT AVG(quantity) AS average_quantity FROM spare_parts_inventory;",
      "SELECT part_id, supplier_id FROM spare_parts_inventory WHERE part_category = 'Electronics';",
      "SELECT COUNT(*) AS total_parts FROM spare_parts_inventory WHERE location = 'Storage Room';",
      "SELECT MAX(quantity) AS max_quantity FROM spare_parts_inventory;",
      "SELECT part_name, part_category FROM spare_parts_inventory WHERE supplier_id = 201;",
      "SELECT part_name, location FROM spare_parts_inventory WHERE supplier_id = 301;",
      "SELECT part_category, COUNT(*) AS total_parts FROM spare_parts_inventory GROUP BY part_category;",
      "SELECT part_name, SUM(quantity) AS total_quantity FROM spare_parts_inventory GROUP BY part_name;",
      "SELECT DISTINCT location FROM spare_parts_inventory;",
      "SELECT part_category, AVG(quantity) AS average_quantity FROM spare_parts_inventory GROUP BY part_category;",
      "SELECT part_name, quantity, location FROM spare_parts_inventory WHERE part_category = 'Mechanical' AND quantity > 0;",
      "SELECT part_name, SUM(quantity) AS total_quantity FROM spare_parts_inventory WHERE location = 'Production Area';",
      "SELECT part_category, MIN(quantity) AS min_quantity FROM spare_parts_inventory GROUP BY part_category;",
      "SELECT part_name, quantity FROM spare_parts_inventory WHERE part_category = 'Engine' AND quantity > 10;",
      "SELECT part_name, supplier_id, location FROM spare_parts_inventory WHERE part_category = 'Electrical' ORDER BY supplier_id;",
      "SELECT part_name, quantity, location FROM spare_parts_inventory WHERE supplier_id = 3 AND location = 'Warehouse';",
      "SELECT COUNT(*) FROM spare_parts_inventory WHERE part_category = 'Tire';",
      "SELECT AVG(quantity) FROM spare_parts_inventory;",
      "SELECT part_name, quantity FROM spare_parts_inventory WHERE part_category = 'Brakes' AND supplier_id IN (1, 2, 3);",
      "SELECT MAX(quantity), MIN(quantity) FROM spare_parts_inventory WHERE supplier_id = 5;",
      "SELECT part_name, quantity, location FROM spare_parts_inventory WHERE supplier_id = 4 AND quantity > 5 ORDER BY quantity DESC;",
      "SELECT part_name, quantity, location FROM spare_parts_inventory WHERE location LIKE '%Shop%';",
      "SELECT DISTINCT part_category FROM spare_parts_inventory;",
      "SELECT part_name, quantity FROM spare_parts_inventory WHERE quantity BETWEEN 10 AND 20;",
      "SELECT part_name, location FROM spare_parts_inventory WHERE quantity < 5 AND location IN ('Warehouse', 'Garage');",
      "SELECT part_name, quantity, location FROM spare_parts_inventory WHERE supplier_id = 2 OR supplier_id = 4;",
      "SELECT part_name, quantity FROM spare_parts_inventory WHERE part_category != 'Cooling' AND supplier_id != 6;",
      "SELECT part_name, quantity FROM spare_parts_inventory WHERE part_name LIKE '%oil%' AND quantity > 0;",
      "SELECT part_name, quantity, location FROM spare_parts_inventory WHERE supplier_id = 1 AND location != 'Warehouse' ORDER BY quantity DESC;",
      "SELECT part_name, supplier_id, location FROM spare_parts_inventory WHERE location = 'Garage' GROUP BY supplier_id;",
      "SELECT part_name, quantity FROM spare_parts_inventory WHERE part_category = 'Suspension' AND supplier_id = 3;",
      "SELECT part_category, AVG(quantity) FROM spare_parts_inventory GROUP BY part_category;",
      "SELECT part_name, location FROM spare_parts_inventory WHERE location IS NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM VehicleSupplies;",
      "SELECT supply_name, quantity FROM VehicleSupplies WHERE quantity > 100;",
      "SELECT supply_name, quantity FROM VehicleSupplies WHERE supply_id = 1;",
      "SELECT supply_name, quantity FROM VehicleSupplies WHERE supply_name LIKE 'Tire%';",
      "SELECT * FROM VehicleSupplies INNER JOIN PartInventory ON VehicleSupplies.supply_id = PartInventory.part_id;",
      "SELECT * FROM PartInventory;",
      "SELECT part_name, available_quantity FROM PartInventory WHERE available_quantity < min_stock_level;",
      "SELECT part_name, available_quantity FROM PartInventory WHERE available_quantity BETWEEN 50 AND 100;",
      "SELECT * FROM VehicleSupplies WHERE supply_id IN (1, 2, 3);",
      "SELECT * FROM PartInventory WHERE part_name = 'Engine';",
      "SELECT part_name, available_quantity FROM PartInventory ORDER BY available_quantity DESC;",
      "SELECT supply_name, quantity FROM VehicleSupplies ORDER BY quantity ASC;",
      "SELECT COUNT(*) AS total_supplies FROM VehicleSupplies;",
      "SELECT AVG(quantity) AS avg_quantity FROM VehicleSupplies;",
      "SELECT DISTINCT part_name FROM PartInventory;",
      "SELECT supply_name, quantity, vehicle_id FROM VehicleSupplies WHERE vehicle_id IS NULL;",
      "SELECT COUNT(DISTINCT part_name) AS total_parts FROM PartInventory;",
      "SELECT supply_name, quantity FROM VehicleSupplies WHERE quantity > (SELECT AVG(quantity) FROM VehicleSupplies);",
      "SELECT supply_name, quantity FROM VehicleSupplies WHERE supply_name IN ('Oil', 'Brake Fluid');",
      "SELECT MAX(available_quantity) AS max_quantity FROM PartInventory;",
      "SELECT * FROM VehicleSupplies WHERE quantity > 10;",
      "SELECT supply_id, supply_name FROM VehicleSupplies WHERE quantity BETWEEN 5 AND 20;",
      "SELECT vs.supply_name, pi.part_name FROM VehicleSupplies vs INNER JOIN PartInventory pi ON vs.quantity = pi.available_quantity;",
      "SELECT * FROM VehicleSupplies WHERE supply_id IN (SELECT supply_id FROM PartInventory WHERE min_stock_level < 10);",
      "SELECT * FROM VehicleSupplies vs, PartInventory pi WHERE vs.quantity < 20 AND pi.available_quantity < 50;",
      "SELECT SUM(quantity) AS total_quantity FROM VehicleSupplies;",
      "SELECT vs.supply_name, COUNT(*) AS total_parts FROM VehicleSupplies vs INNER JOIN PartInventory pi ON vs.quantity = pi.available_quantity GROUP BY vs.supply_id;",
      "SELECT supply_name, COUNT(*) AS total_vehicles FROM VehicleSupplies GROUP BY supply_name HAVING COUNT(*) > 1;",
      "SELECT supply_name, AVG(quantity) AS avg_quantity FROM VehicleSupplies GROUP BY supply_name;",
      "SELECT * FROM VehicleSupplies ORDER BY quantity DESC LIMIT 5;",
      "SELECT * FROM VehicleSupplies vs, PartInventory pi WHERE vs.vehicle_id = pi.part_id;",
      "SELECT vs.supply_name, pi.part_name, vs.quantity * pi.available_quantity AS total_quantity FROM VehicleSupplies vs INNER JOIN PartInventory pi ON vs.quantity = pi.available_quantity;",
      "SELECT supply_name, MAX(quantity) AS max_quantity FROM VehicleSupplies GROUP BY supply_name;",
      "SELECT vs.supply_name, pi.part_name, CASE WHEN vs.quantity > pi.available_quantity THEN 'In Stock' ELSE 'Out of Stock' END AS stock_status FROM VehicleSupplies vs INNER JOIN PartInventory pi ON vs.quantity = pi.available_quantity;",
      "SELECT supply_name, quantity FROM VehicleSupplies UNION ALL SELECT part_name, available_quantity FROM PartInventory;",
      "SELECT supply_name, ROW_NUMBER() OVER() AS row_number FROM VehicleSupplies;",
      "SELECT supply_name, NTILE(4) OVER(ORDER BY quantity) AS quartile FROM VehicleSupplies;",
      "SELECT supply_name, LEAD(quantity) OVER(ORDER BY quantity) AS next_quantity FROM VehicleSupplies;",
      "SELECT supply_name, LAG(quantity) OVER(ORDER BY quantity) AS previous_quantity FROM VehicleSupplies;",
      "SELECT vs.supply_name, pi.part_name, RANK() OVER(ORDER BY vs.quantity) AS ranking FROM VehicleSupplies vs INNER JOIN PartInventory pi ON vs.quantity = pi.available_quantity;",
      "SELECT supply_name, MAX(quantity) - MIN(quantity) AS quantity_range FROM VehicleSupplies GROUP BY supply_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM parts;",
      "SELECT part_name, quantity FROM parts;",
      "SELECT * FROM suppliers;",
      "SELECT supplier_name, location FROM suppliers;",
      "SELECT transaction_id, part_id, quantity, transaction_date FROM transactions;",
      "SELECT parts.part_name, parts.quantity, suppliers.supplier_name FROM parts, suppliers;",
      "SELECT parts.part_name, transactions.quantity, transactions.transaction_date FROM parts, transactions;",
      "SELECT parts.part_name, transactions.quantity, suppliers.location FROM parts, transactions, suppliers;",
      "SELECT parts.part_name, suppliers.supplier_name, transactions.transaction_date FROM parts, suppliers, transactions;",
      "SELECT parts.part_name AS PartName, suppliers.supplier_name AS SupplierName FROM parts, suppliers;",
      "SELECT part_id, part_name FROM parts WHERE quantity > 50;",
      "SELECT supplier_name, location FROM suppliers WHERE supplier_id = 1;",
      "SELECT supplier_name, contact_name FROM suppliers WHERE location = 'New York';",
      "SELECT part_name, quantity FROM parts WHERE vehicle_type = 'SUV';",
      "SELECT part_name, quantity, transaction_date FROM parts, transactions WHERE parts.part_id = transactions.part_id;",
      "SELECT parts.part_name, suppliers.supplier_name FROM parts LEFT JOIN suppliers ON parts.part_id = suppliers.supplier_id;",
      "SELECT * FROM parts ORDER BY quantity DESC;",
      "SELECT * FROM suppliers ORDER BY location;",
      "SELECT supplier_name, location FROM suppliers WHERE location LIKE '%California%';",
      "SELECT supplier_name, contact_name FROM suppliers WHERE supplier_name LIKE 'S%';",
      "SELECT * FROM parts WHERE vehicle_type='SUV';",
      "SELECT part_name, quantity FROM parts WHERE quantity > 100;",
      "SELECT part_name, supplier_name FROM parts JOIN suppliers ON parts.part_id = suppliers.supplier_id;",
      "SELECT parts.part_name, suppliers.supplier_name, transactions.quantity FROM parts JOIN suppliers ON parts.part_id = suppliers.supplier_id JOIN transactions ON parts.part_id = transactions.part_id;",
      "SELECT part_name, transaction_date FROM parts JOIN transactions ON parts.part_id = transactions.part_id WHERE quantity > 50;",
      "SELECT * FROM suppliers WHERE location='USA';",
      "SELECT supplier_name, part_name FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id;",
      "SELECT supplier_name, part_name, transaction_date FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id JOIN transactions ON parts.part_id = transactions.part_id;",
      "SELECT supplier_name, part_name FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id WHERE quantity > 50;",
      "SELECT * FROM transactions WHERE quantity > 100;",
      "SELECT part_name, sum(quantity) FROM parts GROUP BY part_name;",
      "SELECT part_name, sum(quantity) FROM parts GROUP BY part_name HAVING sum(quantity) > 100;",
      "SELECT supplier_name, count(part_id) FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id GROUP BY supplier_name;",
      "SELECT supplier_name, count(part_id) FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id GROUP BY supplier_name HAVING count(part_id) > 1;",
      "SELECT supplier_name, avg(quantity) FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id GROUP BY supplier_name;",
      "SELECT part_name, avg(quantity) FROM parts GROUP BY part_name HAVING avg(quantity) > 50;",
      "SELECT transaction_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT supplier_name, part_name, transaction_date FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id JOIN transactions ON parts.part_id = transactions.part_id WHERE transaction_date > '2022-06-30';",
      "SELECT supplier_name, sum(quantity) FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id JOIN transactions ON parts.part_id = transactions.part_id GROUP BY supplier_name;",
      "SELECT supplier_name, sum(quantity) FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id JOIN transactions ON parts.part_id = transactions.part_id GROUP BY supplier_name HAVING sum(quantity) > 500;",
      "SELECT supplier_name, sum(quantity) FROM suppliers JOIN parts ON suppliers.supplier_id = parts.part_id JOIN transactions ON parts.part_id = transactions.part_id WHERE transaction_date > '2022-12-31';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM VehicleInventory;",
      "SELECT part_name, quantity FROM VehicleInventory;",
      "SELECT * FROM VehicleDetails;",
      "SELECT make, year FROM VehicleDetails;",
      "SELECT * FROM Supplier;",
      "SELECT supplier_name, phone_number FROM Supplier;",
      "SELECT * FROM PurchaseHistory;",
      "SELECT part_name, purchase_date FROM PurchaseHistory;",
      "SELECT part_name, quantity, purchase_date FROM VehicleInventory JOIN PurchaseHistory ON VehicleInventory.part_name = PurchaseHistory.part_name;",
      "SELECT make, model, year FROM VehicleDetails WHERE year > 2010;",
      "SELECT supplier_name, contact_person FROM Supplier WHERE supplier_name LIKE 'ABC%';",
      "SELECT * FROM VehicleInventory WHERE quantity > 10;",
      "SELECT * FROM PurchaseHistory WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT part_name, SUM(quantity) AS total_quantity FROM VehicleInventory GROUP BY part_name;",
      "SELECT supplier_name, COUNT(*) AS total_orders FROM PurchaseHistory JOIN Supplier ON PurchaseHistory.supplier_id = Supplier.supplier_id GROUP BY supplier_name;",
      "SELECT make, model, year, supplier_name FROM VehicleDetails JOIN PurchaseHistory ON VehicleDetails.vehicle_id = PurchaseHistory.vehicle_id JOIN Supplier ON PurchaseHistory.supplier_id = Supplier.supplier_id;",
      "SELECT * FROM VehicleInventory ORDER BY quantity DESC;",
      "SELECT * FROM PurchaseHistory ORDER BY purchase_date ASC;",
      "SELECT * FROM VehicleDetails LIMIT 5;",
      "SELECT supplier_name, MAX(phone_number) AS max_phone FROM Supplier GROUP BY supplier_name HAVING COUNT(*) > 1;",
      "SELECT * FROM VehicleInventory",
      "SELECT part_name, quantity FROM VehicleInventory WHERE quantity > 5",
      "SELECT * FROM VehicleDetails WHERE make = 'Toyota'",
      "SELECT supplier_name, phone_number FROM Supplier",
      "SELECT * FROM PurchaseHistory WHERE purchase_date >= '2022-01-01'",
      "SELECT make, model, year FROM VehicleDetails WHERE year BETWEEN 2015 AND 2020",
      "SELECT part_name, quantity FROM VehicleInventory WHERE part_name LIKE '%brake%'",
      "SELECT make, model, year FROM VehicleDetails ORDER BY year DESC",
      "SELECT DISTINCT make FROM VehicleDetails",
      "SELECT supplier_name, COUNT(*) AS total_parts FROM Supplier JOIN VehicleInventory ON Supplier.supplier_id = VehicleInventory.vehicle_id GROUP BY supplier_name",
      "SELECT * FROM VehicleInventory JOIN PurchaseHistory ON VehicleInventory.part_name = PurchaseHistory.part_name",
      "SELECT supplier_name, COUNT(*) AS total_parts FROM Supplier LEFT JOIN VehicleInventory ON Supplier.supplier_id = VehicleInventory.vehicle_id GROUP BY supplier_name",
      "SELECT part_name, SUM(quantity) AS total_quantity FROM VehicleInventory GROUP BY part_name HAVING SUM(quantity) > 10",
      "SELECT make, model, SUM(quantity) AS total_quantity FROM VehicleDetails JOIN VehicleInventory ON VehicleDetails.vehicle_id = VehicleInventory.vehicle_id GROUP BY make, model",
      "SELECT supplier_name, SUM(quantity) AS total_quantity FROM Supplier LEFT JOIN VehicleInventory ON Supplier.supplier_id = VehicleInventory.vehicle_id GROUP BY supplier_name",
      "SELECT make, model, year FROM VehicleDetails WHERE year = (SELECT MAX(year) FROM VehicleDetails)",
      "SELECT part_name, quantity FROM VehicleInventory UNION ALL SELECT part_name, quantity FROM PurchaseHistory",
      "SELECT make, model, year FROM VehicleDetails WHERE vehicle_id IN (SELECT vehicle_id FROM VehicleInventory WHERE quantity > 10)",
      "SELECT supplier_name FROM Supplier WHERE supplier_id IN (SELECT DISTINCT vehicle_id FROM VehicleInventory)",
      "SELECT make, model FROM VehicleDetails WHERE vehicle_id NOT IN (SELECT vehicle_id FROM VehicleInventory WHERE quantity < 5)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM vehicles;",
      "SELECT vehicle_id, vehicle_name FROM vehicles WHERE manufacturing_year > 2010;",
      "SELECT vehicle_name, vehicle_type FROM vehicles WHERE manufacturing_year BETWEEN 2015 AND 2020;",
      "SELECT * FROM spare_parts;",
      "SELECT part_name, part_description FROM spare_parts WHERE part_quantity < 10;",
      "SELECT * FROM supplies;",
      "SELECT supply_name, supply_category FROM supplies WHERE supply_quantity > 50;",
      "SELECT vehicle_id, part_id, quantity_used FROM vehicle_parts_association;",
      "SELECT part_id, part_name, part_description FROM spare_parts INNER JOIN vehicle_parts_association ON spare_parts.part_id = vehicle_parts_association.part_id;",
      "SELECT vehicle_id, supply_id, quantity_used FROM vehicle_supplies_association;",
      "SELECT supply_id, supply_name, supply_category FROM supplies INNER JOIN vehicle_supplies_association ON supplies.supply_id = vehicle_supplies_association.supply_id;",
      "SELECT vehicles.vehicle_id, vehicles.vehicle_name, spare_parts.part_name, vehicle_parts_association.quantity_used FROM vehicles INNER JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id INNER JOIN spare_parts ON spare_parts.part_id = vehicle_parts_association.part_id;",
      "SELECT vehicles.vehicle_id, vehicles.vehicle_name, supplies.supply_name, vehicle_supplies_association.quantity_used FROM vehicles INNER JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id INNER JOIN supplies ON supplies.supply_id = vehicle_supplies_association.supply_id;",
      "SELECT vehicle_name, COUNT(part_id) AS total_parts_used FROM vehicles INNER JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id GROUP BY vehicle_name;",
      "SELECT supply_category, SUM(quantity_used) AS total_quantity_used FROM supplies INNER JOIN vehicle_supplies_association ON supplies.supply_id = vehicle_supplies_association.supply_id GROUP BY supply_category;",
      "SELECT vehicle_id, SUM(quantity_used) AS total_parts_used FROM vehicle_parts_association GROUP BY vehicle_id HAVING SUM(quantity_used) > 100;",
      "SELECT supply_id, COUNT(vehicle_id) AS total_vehicles FROM vehicle_supplies_association GROUP BY supply_id HAVING COUNT(vehicle_id) < 5;",
      "SELECT vehicle_id, vehicle_name, part_name, quantity_used FROM vehicles INNER JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id INNER JOIN spare_parts ON spare_parts.part_id = vehicle_parts_association.part_id WHERE vehicle_name LIKE 'Toyota%';",
      "SELECT vehicle_id, vehicle_name, supply_name, quantity_used FROM vehicles INNER JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id INNER JOIN supplies ON supplies.supply_id = vehicle_supplies_association.supply_id WHERE supply_category = 'Maintenance';",
      "SELECT vehicle_name, MIN(manufacturing_year) AS earliest_year FROM vehicles GROUP BY vehicle_name;",
      "SELECT part_name, MAX(part_quantity) AS max_quantity FROM spare_parts GROUP BY part_name HAVING MAX(part_quantity) > 20;",
      "SELECT * FROM vehicles;",
      "SELECT vehicle_name, vehicle_type, manufacturing_year FROM vehicles;",
      "SELECT * FROM spare_parts WHERE part_quantity > 100;",
      "SELECT part_name, part_description FROM spare_parts WHERE part_supplier = 'ABC Corporation';",
      "SELECT supply_name, supply_category FROM supplies WHERE supply_quantity < 50;",
      "SELECT vehicle_name, part_name, quantity_used FROM vehicles JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id JOIN spare_parts ON vehicle_parts_association.part_id = spare_parts.part_id;",
      "SELECT vehicle_name, supply_name, quantity_used FROM vehicles JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id;",
      "SELECT vehicle_name, vehicle_type, part_quantity FROM vehicles JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id JOIN spare_parts ON vehicle_parts_association.part_id = spare_parts.part_id WHERE part_quantity < 10;",
      "SELECT vehicle_name, supply_quantity, supply_unit FROM vehicles JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id WHERE supply_quantity > 100;",
      "SELECT vehicle_name, part_name, quantity_used FROM vehicles JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id JOIN spare_parts ON vehicle_parts_association.part_id = spare_parts.part_id WHERE quantity_used > 5;",
      "SELECT vehicle_name, supply_name, quantity_used FROM vehicles JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id WHERE quantity_used < 3;",
      "SELECT vehicle_name, part_name, part_description FROM vehicles JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id JOIN spare_parts ON vehicle_parts_association.part_id = spare_parts.part_id WHERE part_description LIKE '%engine%';",
      "SELECT vehicle_name, supply_name, supply_category FROM vehicles JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id WHERE supply_category = 'Oil';",
      "SELECT vehicle_name, part_name, part_quantity FROM vehicles JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id JOIN spare_parts ON vehicle_parts_association.part_id = spare_parts.part_id WHERE part_quantity < 5;",
      "SELECT vehicle_name, supply_name, supply_quantity FROM vehicles JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id WHERE supply_quantity > 200;",
      "SELECT vehicle_name, part_name, quantity_used FROM vehicles LEFT JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id LEFT JOIN spare_parts ON vehicle_parts_association.part_id = spare_parts.part_id;",
      "SELECT vehicle_name, supply_name, quantity_used FROM vehicles LEFT JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id LEFT JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id;",
      "SELECT vehicle_name, supply_category, quantity_used FROM vehicles JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id WHERE supply_category = 'Tire';",
      "SELECT vehicle_name, part_name, quantity_used FROM vehicles JOIN vehicle_parts_association ON vehicles.vehicle_id = vehicle_parts_association.vehicle_id JOIN spare_parts ON vehicle_parts_association.part_id = spare_parts.part_id WHERE quantity_used > 10;",
      "SELECT vehicle_name, supply_name, supply_unit FROM vehicles JOIN vehicle_supplies_association ON vehicles.vehicle_id = vehicle_supplies_association.vehicle_id JOIN supplies ON vehicle_supplies_association.supply_id = supplies.supply_id WHERE supply_unit = 'Liter';"
    ]
  }
]