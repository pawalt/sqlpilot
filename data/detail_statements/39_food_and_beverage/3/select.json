[
  {
    "statements": [
      "SELECT * FROM EmployeeSchedule;",
      "SELECT employee_id, schedule_date, shift_start_time FROM EmployeeSchedule;",
      "SELECT * FROM EmployeeSchedule WHERE employee_id = 1;",
      "SELECT * FROM EmployeeSchedule WHERE schedule_date = '2022-10-10';",
      "SELECT * FROM EmployeeSchedule WHERE shift_start_time >= '08:00:00';",
      "SELECT * FROM EmployeeSchedule WHERE shift_end_time < '17:00:00';",
      "SELECT * FROM EmployeeSchedule WHERE schedule_date BETWEEN '2022-10-01' AND '2022-10-31';",
      "SELECT * FROM EmployeeSchedule WHERE meal_break_start_time IS NOT NULL;",
      "SELECT employee_id, schedule_date FROM EmployeeSchedule ORDER BY schedule_date ASC;",
      "SELECT DISTINCT schedule_date FROM EmployeeSchedule;",
      "SELECT COUNT(employee_id) FROM EmployeeSchedule;",
      "SELECT AVG(DATEDIFF(hour, shift_start_time, shift_end_time)) AS shift_duration FROM EmployeeSchedule;",
      "SELECT MAX(DATEDIFF(minute, meal_break_start_time, meal_break_end_time)) AS max_meal_break_duration FROM EmployeeSchedule;",
      "SELECT employee_id, shift_start_time, shift_end_time, TIMESTAMPDIFF(minute, shift_start_time, shift_end_time) AS shift_duration_minutes FROM EmployeeSchedule;",
      "SELECT * FROM EmployeeSchedule WHERE shift_start_time > '09:00:00' AND shift_end_time < '18:00:00';",
      "SELECT * FROM EmployeeSchedule WHERE meal_break_start_time < '12:00:00' AND meal_break_end_time > '13:00:00';",
      "SELECT employee_id, schedule_date, CONCAT(shift_start_time,' - ', shift_end_time) AS shift_timing FROM EmployeeSchedule;",
      "SELECT employee_id, schedule_date, TIME_FORMAT(shift_start_time, '%h:%i %p') AS shift_start_time_formatted FROM EmployeeSchedule;",
      "SELECT DATE_FORMAT(schedule_date, '%Y-%m-%d') AS formatted_date FROM EmployeeSchedule;",
      "SELECT * FROM EmployeeSchedule WHERE employee_id = 1 AND schedule_date >= '2022-01-01';",
      "SELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE shift_start_time < '08:00:00' AND meal_break_end_time > '12:00:00';",
      "SELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE schedule_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE meal_break_start_time IS NOT NULL;",
      "SELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE shift_start_time < meal_break_start_time;",
      "SELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE shift_start_time < meal_break_start_time AND meal_break_end_time < shift_end_time;",
      "SELECT COUNT(*) FROM EmployeeSchedule WHERE shift_start_time = '09:00:00';",
      "SELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule ORDER BY schedule_date ASC, shift_start_time DESC;",
      "SELECT AVG(DATEDIFF(hour, shift_star... [truncated]"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Employees;",
      "SELECT name, position FROM Employees WHERE position = 'Manager';",
      "SELECT * FROM Employees WHERE hourly_rate > 20.00;",
      "SELECT employee_id, name, hourly_rate FROM Employees ORDER BY hourly_rate DESC;",
      "SELECT e.name, w.date, w.start_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id;",
      "SELECT e.name, w.date, w.start_time, w.end_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id WHERE w.date = '2022-01-15';",
      "SELECT e.name, w.date, w.start_time, w.end_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id WHERE w.start_time BETWEEN '08:00:00' AND '17:00:00';",
      "SELECT e.position, AVG(e.hourly_rate) AS avg_hourly_rate FROM Employees e GROUP BY e.position;",
      "SELECT e.position, COUNT(*) AS num_employees FROM Employees e GROUP BY e.position;",
      "SELECT e.position, COUNT(*) AS num_schedules FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.position;",
      "SELECT e.name AS employee_name, w.date, SUM(w.end_time - w.start_time) AS total_hours FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name, w.date;",
      "SELECT e.name, COUNT(w.date) AS num_schedules FROM Employees e LEFT JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
      "SELECT e.name, MAX(w.end_time - w.start_time) AS max_hours_worked FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
      "SELECT e.name, AVG(w.end_time - w.start_time) AS avg_hours_worked FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
      "SELECT e.name, MIN(w.start_time) AS earliest_start_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
      "SELECT e.name, MAX(w.end_time) AS latest_end_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
      "SELECT COUNT(DISTINCT e.position) AS num_positions FROM Employees e;",
      "SELECT COUNT(DISTINCT e.employee_id) AS num_employees FROM Employees e;",
      "SELECT e.name AS employee_name, SUM(w.end_time - w.start_time) AS total_hours FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name HAVING total_hours > 40;",
      "SELECT e.name, COUNT(w.date) AS num_schedules FROM Employees e LEFT JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name HAVING COUNT(w.date) < 5;",
      "SELECT e.name, AVG(w.end_time - w.start_time) AS avg_hours_worked FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name HAVING AVG(w.end_time - w.start_time) > 5;",
      "SELECT * FROM Employees WHERE position = 'Manager' AND hourly_rate > 50",
      "SELECT name, position FROM Employees WHERE position = 'Supervisor'",
      "SELECT * FROM WorkSchedule WHERE date BETWEEN '2021-01-01' AND '2021-01-31'",
      "SELECT name, start_time, end_time FROM Employees e JOIN WorkSchedule ws ON e.employee_id = ws.employee_id",
      "SELECT *, TIMESTAMPDIFF(HOUR, start_time, end_time) AS hours_worked FROM WorkSchedule",
      "SELECT name, SUM(TIMESTAMPDIFF(HOUR, start_time, end_time)) AS total_hours_worked FROM Employees e JOIN WorkSchedule ws ON e.employee_id = ws.employee_id GROUP BY name",
      "SELECT name, AVG(hourly_rate) AS avg_hourly_rate FROM Employees GROUP BY position HAVING AVG(hourly_rate) > 30",
      "SELECT name, start_time, end_time FROM Employees e LEFT JOIN WorkSchedule ws ON e.employee_id = ws.employee_id WHERE ws.schedule_id IS NULL",
      "SELECT name, position, AVG(hourly_rate) AS avg_hourly_rate FROM Employees GROUP BY position HAVING MAX(hourly_rate) > 40",
      "SELECT name, position, MIN(hourly_rate) AS min_hourly_rate FROM Employees GROUP BY position HAVING COUNT(employee_id) > 1"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT employee_id, name, position FROM employees;",
      "SELECT * FROM shifts;",
      "SELECT shift_id, shift_date, start_time, end_time, employee_id FROM shifts;",
      "SELECT * FROM payroll;",
      "SELECT payroll_id, pay_date, employee_id, hours_worked, total_pay FROM payroll;",
      "SELECT employee_id, name, position, hourly_rate FROM employees;",
      "SELECT employee_id, name, position, hourly_rate FROM employees WHERE position = 'Manager'; ",
      "SELECT employee_id, name, position, hourly_rate FROM employees WHERE position = 'Supervisor';",
      "SELECT employee_id, name, position, hourly_rate FROM employees WHERE hourly_rate > 15.00;",
      "SELECT * FROM shifts WHERE shift_date = '2022-12-31';",
      "SELECT * FROM shifts WHERE start_time BETWEEN '08:00:00' AND '12:00:00';",
      "SELECT * FROM payroll WHERE hours_worked > 40;",
      "SELECT * FROM payroll WHERE total_pay > 500.00;",
      "SELECT e.name, p.pay_date, p.hours_worked, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id;",
      "SELECT e.name, p.pay_date, p.hours_worked, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.total_pay > 1000.00;",
      "SELECT * FROM employees;",
      "SELECT name, position FROM employees;",
      "SELECT e.name, e.position, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id;",
      "SELECT e.name, e.position, s.shift_date, s.start_time, s.end_time FROM employees e JOIN shifts s ON e.employee_id = s.employee_id;",
      "SELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.hours_worked > 40;",
      "SELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.pay_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.total_pay > 1000;",
      "SELECT e.name, SUM(p.hours_worked), AVG(p.total_pay) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
      "SELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id ORDER BY p.total_pay DESC;",
      "SELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id ORDER BY p.total_pay ASC;",
      "SELECT e.name, COUNT(*) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name HAVING COUNT(*) > 1;",
      "SELECT e.name, p.total_pay FROM employees e LEFT JOIN payroll p ON e.employee_id = p.employee_id;",
      "SELECT e.name, p.total_pay FROM employees e RIGHT JOIN payroll p ON e.employee_id = p.employee_id;",
      "SELECT DISTINCT e.position FROM employees e;",
      "SELECT * FROM shifts WHERE shift_date = '2022-06-15';",
      "SELECT s.shift_id, e.name FROM shifts s JOIN employees e ON s.employee_id = e.employee_id;",
      "SELECT e.name, MAX(p.hours_worked) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
      "SELECT e.name, MIN(p.total_pay) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
      "SELECT e.name, SUM(p.hours_worked * p.hourly_rate) AS total_earning FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
      "SELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.total_pay >= e.hourly_rate * p.hours_worked;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees",
      "SELECT id, name FROM employees",
      "SELECT position FROM employees",
      "SELECT * FROM schedules",
      "SELECT event_date, start_time, end_time FROM schedules",
      "SELECT * FROM events",
      "SELECT event_name, location FROM events",
      "SELECT * FROM payroll",
      "SELECT pay_date, total_pay FROM payroll",
      "SELECT id, name, position FROM employees",
      "SELECT event_name, event_date, location FROM events",
      "SELECT employee_id, event_date FROM schedules",
      "SELECT id, name, position, hourly_rate FROM employees",
      "SELECT event_name, location FROM events WHERE event_date = '2022-08-15'",
      "SELECT * FROM payroll WHERE total_pay > 1000",
      "SELECT name, hourly_rate FROM employees WHERE position = 'Manager'",
      "SELECT employee_id, event_date FROM schedules WHERE event_date BETWEEN '2022-08-01' AND '2022-08-31'",
      "SELECT * FROM schedules WHERE employee_id = 101",
      "SELECT employee_id, total_pay FROM payroll ORDER BY total_pay DESC",
      "SELECT * FROM employees LIMIT 5",
      "SELECT e.name, e.position, s.event_date\nFROM employees e\nJOIN schedules s ON e.id = s.employee_id\nWHERE e.position = 'Manager'\nORDER BY s.event_date DESC",
      "SELECT e.name, p.pay_date, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE p.total_pay > 1000\nORDER BY p.pay_date ASC",
      "SELECT e.name, p.hours_worked, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE p.hours_worked > 40\nORDER BY p.total_pay DESC",
      "SELECT e.name, s.event_date, s.start_time, s.end_time\nFROM employees e\nJOIN schedules s ON e.id = s.employee_id\nWHERE s.event_date BETWEEN '2022-10-01' AND '2022-10-31'\nORDER BY s.event_date ASC",
      "SELECT e.name, p.pay_date, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE e.position = 'Staff'\nORDER BY p.pay_date DESC",
      "SELECT e.name, p.hours_worked, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE p.hou..."
    ]
  },
  {
    "statements": [
      "SELECT * FROM employees;",
      "SELECT name, position FROM employees WHERE hourly_rate > 20;",
      "SELECT DISTINCT position FROM employees;",
      "SELECT * FROM schedules WHERE shift_date = '2022-01-01';",
      "SELECT employee_id, shift_date FROM schedules WHERE shift_hours > 8;",
      "SELECT employee_id, pay_date, total_pay FROM payroll WHERE total_hours > 40;",
      "SELECT title, base_salary FROM positions WHERE base_salary < 50000;",
      "SELECT * FROM shifts WHERE shift_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT shift_date, start_time, end_time FROM shifts WHERE start_time > '08:00:00';",
      "SELECT * FROM employees ORDER BY name ASC;",
      "SELECT name, position, hourly_rate FROM employees WHERE position LIKE '%Manager%';",
      "SELECT employee_id, shift_date, shift_hours FROM schedules WHERE shift_hours BETWEEN 4 AND 8;",
      "SELECT title, base_salary FROM positions WHERE title = 'Software Engineer';",
      "SELECT * FROM payroll ORDER BY pay_date DESC;",
      "SELECT * FROM shifts WHERE end_time < '18:00:00';",
      "SELECT employee_id, pay_date, total_pay FROM payroll WHERE total_hours >= 30 AND total_pay < 2000;",
      "SELECT position_id, title FROM positions WHERE title LIKE '%Associate%';",
      "SELECT * FROM employees WHERE id = 1001;",
      "SELECT * FROM schedules WHERE employee_id = 2002 ORDER BY shift_date ASC;",
      "SELECT employee_id, shift_date, shift_hours FROM schedules WHERE shift_hours > 6 ORDER BY shift_hours DESC;",
      "SELECT * FROM employees WHERE position = 'Manager';",
      "SELECT name, position, hourly_rate FROM employees WHERE hourly_rate > 30.00;",
      "SELECT e.name, s.shift_date FROM employees e INNER JOIN schedules s ON e.id = s.employee_id;",
      "SELECT p.title, p.base_salary FROM positions p INNER JOIN employees e ON p.position_id = e.id;",
      "SELECT e.name, p.title, p.base_salary FROM employees e INNER JOIN positions p ON e.position = p.title;",
      "SELECT e.name, SUM(s.shift_hours) AS total_hours_worked FROM employees e INNER JOIN schedules s ON e.id = s.employee_id GROUP BY e.name;",
      "SELECT e.name, COUNT(s.schedule_id) AS total_shifts FROM employees e LEFT JOIN schedules s ON e.id = s.employee_id GROUP BY e.name;",
      "SELECT e.name, SUM(p.total_pay) AS total_pay FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name;",
      "SELECT DISTINCT e.name, s.shift_date FROM employees e INNER JOIN schedules s ON e.id = s.employee_id WHERE s.shift_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT e.name AS employee_name, p.title AS position_title, s.shift_date AS last_shift_date FROM employees e INNER JOIN positions p ON e.position = p.title LEFT JOIN schedules s ON e.id = s.employee_id ORDER BY s.shift_date DESC LIMIT 5;",
      "SELECT e.name, COUNT(p.payroll_id) AS total_payrolls FROM employees e LEFT JOIN payroll p ON e.id = p.employee_id GROUP BY e.name HAVING total_payrolls >= 3;",
      "SELECT e.name AS employee_name, SUM(p.total_pay) AS total_pay FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name HAVING total_pay > 500.00;",
      "SELECT e.name, AVG(hourly_rate) AS avg_hourly_rate FROM employees e GROUP BY e.name HAVING avg_hourly_rate < 20.00;",
      "SELECT e.name, MAX(hourly_rate) AS max_hourly_rate FROM employees e GROUP BY e.name;",
      "SELECT DISTINCT e.name AS employee_name, p.title AS position_title, SUM(s.shift_hours) AS total_hours_worked FROM employees e INNER JOIN positions p ON e.position = p.title INNER JOIN schedules s ON e.id = s.employee_id GROUP BY e.name, p.title;",
      "SELECT e.name, MIN(p.pay_date) AS first_pay_date FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name;",
      "SELECT e.name AS employee_name, COUNT(s.schedule_id) AS total_shifts, AVG(s.shift_hours) AS avg_shift_hours FROM employees e LEFT JOIN schedules s ON e.id = s.employee_id GROUP BY e.name;",
      "SELECT e.name, p.base_salary, p.base_salary * AVG(s.shift_hours) AS total_pay FROM employees e INNER JOIN positions p ON e.position = p.title INNER JOIN schedules s ON e.id = s.employee_id GROUP BY e.name, p.base_salary;",
      "SELECT e.name, DATE_ADD(s.shift_date, INTERVAL 1 WEEK) AS next_shift_date FROM employees e INNER JOIN schedules s ON e.id = s.employee_id;",
      "SELECT e.name, SEC_TO_TIME(SUM(TIME_TO_SEC(s.end_time) - TIME_TO_SEC(s.start_time))) AS total_working_hours FROM employees e INNER JOIN shifts s ON e.shift_date = s.shift_date GROUP BY e.name;",
      "SELECT e.name, MAX(p.total_hours) AS max_hours_worked FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name;"
    ]
  }
]