[
  {
    "statements": [
      "SELECT * FROM Feedback WHERE rating > 3 LIMIT 5;",
      "SELECT customer_name, feedback_text FROM Feedback WHERE rating < 3;",
      "SELECT feedback_id, rating FROM Feedback WHERE customer_name = 'John Doe';",
      "SELECT * FROM Feedback WHERE feedback_text LIKE '%great%';",
      "SELECT customer_name, rating FROM Feedback WHERE feedback_id = 10;",
      "SELECT COUNT(*) FROM Feedback;",
      "SELECT AVG(rating) FROM Feedback;",
      "SELECT MAX(rating) FROM Feedback;",
      "SELECT MIN(rating) FROM Feedback;",
      "SELECT customer_name, feedback_text FROM Feedback ORDER BY rating DESC LIMIT 3;",
      "SELECT * FROM Feedback WHERE customer_name IN ('Alice', 'Bob', 'Charlie');",
      "SELECT feedback_id, customer_name FROM Feedback WHERE rating BETWEEN 2 AND 4;",
      "SELECT customer_name, feedback_text FROM Feedback WHERE LENGTH(feedback_text) > 50;",
      "SELECT feedback_id, rating FROM Feedback WHERE feedback_text IS NOT NULL;",
      "SELECT customer_name, rating FROM Feedback WHERE feedback_text IS NULL;",
      "SELECT customer_name, rating FROM Feedback WHERE customer_name LIKE 'J%';",
      "SELECT feedback_id, rating+2 AS updated_rating FROM Feedback WHERE rating < 3;",
      "SELECT customer_name, rating*10 AS scaled_rating FROM Feedback;",
      "SELECT * FROM Feedback WHERE customer_name ILIKE '%alice%';",
      "SELECT feedback_id, feedback_text FROM Feedback WHERE feedback_text ILIKE '%improve%';",
      "SELECT * FROM Feedback WHERE rating > 3;",
      "SELECT customer_name, feedback_text FROM Feedback WHERE rating < 2;",
      "SELECT feedback_id, customer_name, rating FROM Feedback WHERE feedback_id = 5;",
      "SELECT * FROM Feedback WHERE customer_name LIKE 'A%';",
      "SELECT * FROM Feedback WHERE rating BETWEEN 2 AND 4;",
      "SELECT AVG(rating) AS average_rating FROM Feedback;",
      "SELECT COUNT(*) AS total_feedback_count FROM Feedback;",
      "SELECT customer_name, COUNT(*) AS feedback_count FROM Feedback GROUP BY customer_name;",
      "SELECT MAX(rating) AS highest_rating, MIN(rating) AS lowest_rating FROM Feedback;",
      "SELECT customer_name, feedback_text, rating FROM Feedback WHERE customer_name = 'John' AND rating > 3;",
      "SELECT * FROM Feedback WHERE feedback_text LIKE '%good%';",
      "SELECT customer_name, feedback_text, rating FROM Feedback WHERE rating IN (1, 3, 5);",
      "SELECT customer_name, feedback_text, rating FROM Feedback ORDER BY rating DESC;",
      "SELECT customer_name, AVG(rating) AS avg_rating FROM Feedback GROUP BY customer_name HAVING AVG(rating) > 3;",
      "SELECT customer_name, COUNT(*) AS feedback_count FROM Feedback WHERE rating < 3 GROUP BY customer_name HAVING COUNT(*) > 1;",
      "SELECT customer_name, feedback_text FROM Feedback WHERE LENGTH(feedback_text) > 50;",
      "SELECT customer_name, feedback_text, rating FROM Feedback WHERE rating = (SELECT MAX(rating) FROM Feedback);",
      "SELECT customer_name, feedback_text FROM Feedback WHERE feedback_text ILIKE '%great%';",
      "SELECT customer_name, feedback_text, rating FROM Feedback LIMIT 10 OFFSET 5;",
      "SELECT AVG(rating) AS average_rating, COUNT(*) AS total_feedback FROM Feedback;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM feedback;",
      "SELECT customer_name, rating FROM feedback;",
      "SELECT * FROM reviews;",
      "SELECT review_date, review_text FROM reviews;",
      "SELECT feedback_id, customer_name, rating FROM feedback;",
      "SELECT feedback_id, customer_name, rating, comment FROM feedback;",
      "SELECT feedback.id, customer_name, rating FROM feedback JOIN reviews ON feedback.feedback_id = reviews.feedback_id;",
      "SELECT * FROM feedback WHERE rating > 4;",
      "SELECT * FROM feedback WHERE customer_name = 'John';",
      "SELECT feedback_id, customer_name FROM feedback WHERE rating < 3;",
      "SELECT feedback_id, review_text FROM reviews WHERE review_date > '2022-01-01';",
      "SELECT COUNT(*) FROM feedback;",
      "SELECT AVG(rating) FROM feedback;",
      "SELECT feedback_id, AVG(rating) AS average_rating FROM feedback GROUP BY feedback_id;",
      "SELECT MAX(rating) AS highest_rating FROM feedback;",
      "SELECT MIN(rating) AS lowest_rating FROM feedback;",
      "SELECT feedback_id, customer_name, COUNT(*) AS review_count FROM feedback JOIN reviews ON feedback.feedback_id = reviews.feedback_id GROUP BY feedback_id;",
      "SELECT * FROM feedback ORDER BY rating DESC;",
      "SELECT * FROM reviews WHERE review_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT feedback_id, customer_name, rating, comment FROM feedback WHERE rating BETWEEN 3 AND 5;",
      "SELECT * FROM feedback;",
      "SELECT feedback_id, customer_name FROM feedback WHERE rating > 3;",
      "SELECT feedback_id, customer_name, rating, comment FROM feedback WHERE customer_name LIKE 'A%';",
      "SELECT * FROM feedback WHERE comment IS NOT NULL;",
      "SELECT customer_name, rating FROM feedback WHERE rating BETWEEN 2 AND 4;",
      "SELECT customer_name, AVG(rating) AS avg_rating FROM feedback GROUP BY customer_name;",
      "SELECT feedback_id, review_text, review_date FROM reviews;",
      "SELECT feedback_id, review_text, review_date FROM reviews WHERE review_date > '2021-01-01';",
      "SELECT feedback_id, review_text, review_date FROM reviews WHERE review_id IN (SELECT review_id FROM reviews WHERE review_date > '2022-01-01');",
      "SELECT feedback.feedback_id, customer_name, rating, comment, review_text, review_date FROM feedback INNER JOIN reviews ON feedback.feedback_id = reviews.feedback_id;",
      "SELECT customer_name, COUNT(review_id) AS num_reviews FROM feedback LEFT JOIN reviews ON feedback.feedback_id = reviews.feedback_id GROUP BY customer_name;",
      "SELECT feedback_id, review_text, review_date FROM reviews INNER JOIN feedback ON feedback.feedback_id = reviews.feedback_id WHERE rating > 3;",
      "SELECT customer_name, AVG(rating) AS avg_rating FROM feedback WHERE rating IS NOT NULL GROUP BY customer_name HAVING AVG(rating) > 3;",
      "SELECT customer_name, MAX(rating) AS highest_rating FROM feedback WHERE rating IS NOT NULL GROUP BY customer_name;",
      "SELECT customer_name, MIN(rating) AS lowest_rating FROM feedback WHERE rating IS NOT NULL GROUP BY customer_name;",
      "SELECT customer_name, CONCAT('Rating: ', rating) AS rating_info FROM feedback;",
      "SELECT customer_name, review_date, CONCAT('Review Text: ', review_text) AS review_info FROM feedback INNER JOIN reviews ON feedback.feedback_id = reviews.feedback_id;",
      "SELECT customer_name, review_date, CONCAT('Rating: ', rating) AS review_info FROM feedback INNER JOIN reviews ON feedback.feedback_id = reviews.feedback_id WHERE rating > 4;",
      "SELECT customer_name, review_date, CONCAT('Rating: ', rating) AS review_info FROM feedback LEFT JOIN reviews ON feedback.feedback_id = reviews.feedback_id WHERE review_id IS NULL;",
      "SELECT customer_name, rating, LENGTH(comment) AS comment_length FROM feedback;",
      "SELECT customer_name, rating, SUBSTRING(comment, 1, 10) AS short_comment FROM feedback;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT customer_name, email FROM Customers;",
      "SELECT customer_id, phone_number FROM Customers;",
      "SELECT * FROM Reviews;",
      "SELECT customer_id, rating FROM Reviews;",
      "SELECT review_id, review_date, review_text FROM Reviews;",
      "SELECT * FROM Items;",
      "SELECT item_name, item_price FROM Items;",
      "SELECT item_id FROM Items WHERE item_price > 50;",
      "SELECT * FROM Customers WHERE customer_id = 1;",
      "SELECT * FROM Reviews WHERE rating >= 4;",
      "SELECT review_date, rating FROM Reviews WHERE customer_id = 2;",
      "SELECT * FROM Items WHERE item_price < 100;",
      "SELECT item_name, item_price FROM Items WHERE item_name LIKE 'A%';",
      "SELECT customer_name, email FROM Customers WHERE email LIKE '%gmail.com';",
      "SELECT * FROM Customers WHERE phone_number IS NOT NULL;",
      "SELECT * FROM Reviews WHERE review_text IS NULL;",
      "SELECT customer_id, rating FROM Reviews ORDER BY rating DESC;",
      "SELECT customer_name, email FROM Customers ORDER BY customer_name ASC;",
      "SELECT item_name, item_price FROM Items ORDER BY item_price ASC;",
      "SELECT customer_name, email FROM Customers WHERE customer_id = 1;",
      "SELECT customer_id, review_date, rating, review_text FROM Reviews WHERE rating >= 4;",
      "SELECT item_name, item_price FROM Items WHERE item_price > 50;",
      "SELECT customer_name, email, phone_number FROM Customers WHERE phone_number IS NULL;",
      "SELECT customer_name, email, phone_number, review_date, rating FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id;",
      "SELECT item_name FROM Items ORDER BY item_price DESC;",
      "SELECT customer_name, email, phone_number, item_name, item_price, rating FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id JOIN Items i ON i.item_id = r.item_id;",
      "SELECT AVG(rating) as avg_rating FROM Reviews;",
      "SELECT customer_name, COUNT(*) as review_count FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id GROUP BY c.customer_id;",
      "SELECT customer_name, email, phone_number, item_name, item_price, review_date, rating FROM Customers c LEFT JOIN Reviews r ON c.customer_id = r.customer_id LEFT JOIN Items i ON i.item_id = r.item_id;",
      "SELECT * FROM Customers UNION SELECT * FROM Reviews UNION SELECT * FROM Items;",
      "SELECT customer_name, item_name, item_price FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id JOIN Items i ON i.item_id = r.item_id WHERE rating >= 3;",
      "SELECT customer_name, email, phone_number, review_text FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id WHERE review_text LIKE '%great%';",
      "SELECT customer_name, item_name, item_price, rating FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id JOIN Items i ON i.item_id = r.item_id WHERE rating = (SELECT MAX(rating) FROM Reviews);",
      "SELECT customer_name, item_name, item_price, rating FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id JOIN Items i ON i.item_id = r.item_id WHERE rating = (SELECT MIN(rating) FROM Reviews);",
      "SELECT customer_name, item_name, item_price, rating FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id JOIN Items i ON i.item_id = r.item_id WHERE review_date BETWEEN '2023-01-01' AND '2023-12-31';",
      "SELECT customer_name, AVG(rating) as avg_rating, COUNT(*) as review_count FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id GROUP BY c.customer_id HAVING avg_rating >= 4;",
      "SELECT customer_name, email, item_name, item_price, review_date FROM Customers c LEFT JOIN Reviews r ON c.customer_id = r.customer_id LEFT JOIN Items i ON i.item_id = r.item_id WHERE r.review_date > '2023-01-01';",
      "SELECT customer_name, email, phone_number, item_name, item_price, review_date, rating FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id JOIN Items i ON i.item_id = r.item_id WHERE c.customer_id = 1;",
      "SELECT customer_name, email, phone_number, item_name, item_price, review_date, rating FROM Customers c JOIN Reviews r ON c.customer_id = r.customer_id JOIN Items i ON i.item_id = r.item_id WHERE c.customer_name LIKE 'A%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM CustomerReviews;",
      "SELECT review_id, customer_name, rating FROM CustomerReviews;",
      "SELECT review_id, review_text FROM CustomerReviews WHERE rating > 3;",
      "SELECT customer_name, review_text FROM CustomerReviews WHERE rating < 3;",
      "SELECT * FROM CoffeeProducts;",
      "SELECT product_id, product_name, price FROM CoffeeProducts;",
      "SELECT product_name, price FROM CoffeeProducts WHERE origin = 'Ethiopia';",
      "SELECT * FROM Orders;",
      "SELECT order_id, customer_id, product_id FROM Orders;",
      "SELECT order_id, order_date FROM Orders WHERE order_date >= '2022-01-01';",
      "SELECT * FROM Customers;",
      "SELECT customer_id, customer_name, email FROM Customers;",
      "SELECT customer_name, phone_number FROM Customers WHERE email LIKE '%gmail.com';",
      "SELECT COUNT(*) FROM CustomerReviews;",
      "SELECT MAX(rating) AS max_rating FROM CustomerReviews;",
      "SELECT AVG(rating) AS avg_rating FROM CustomerReviews;",
      "SELECT customer_name, COUNT(*) AS total_reviews FROM CustomerReviews GROUP BY customer_name;",
      "SELECT product_name, AVG(price) AS avg_price FROM CoffeeProducts GROUP BY product_name;",
      "SELECT customer_name, email, phone_number FROM Customers ORDER BY customer_name ASC;",
      "SELECT customer_id, customer_name, email, phone_number FROM Customers WHERE phone_number IS NULL;",
      "SELECT * FROM CustomerReviews WHERE rating > 3;",
      "SELECT customer_name, review_text FROM CustomerReviews WHERE rating = 5;",
      "SELECT COUNT(*) FROM CoffeeProducts WHERE price > 10.00;",
      "SELECT product_name, origin FROM CoffeeProducts WHERE origin = 'Ethiopia' OR origin = 'Brazil';",
      "SELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-03-31';",
      "SELECT customer_name, email FROM Customers WHERE phone_number LIKE '%123%';",
      "SELECT SUM(price) FROM CoffeeProducts;",
      "SELECT customer_name, order_date FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT AVG(rating) FROM CustomerReviews;",
      "SELECT customer_name, review_text FROM CustomerReviews WHERE review_text LIKE '%great%';",
      "SELECT product_name, price FROM CoffeeProducts ORDER BY price DESC;",
      "SELECT customer_name, phone_number FROM Customers WHERE email LIKE '%@gmail.com';",
      "SELECT DISTINCT origin FROM CoffeeProducts;",
      "SELECT * FROM Orders WHERE product_id IN (SELECT product_id FROM CoffeeProducts WHERE origin = 'Colombia');",
      "SELECT customer_name, order_date FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT MAX(price) AS max_price, MIN(price) AS min_price FROM CoffeeProducts;",
      "SELECT customer_name, email FROM Customers WHERE LENGTH(customer_name) > 10;",
      "SELECT product_name, AVG(price) AS avg_price FROM CoffeeProducts GROUP BY product_name;",
      "SELECT COUNT(*) AS total_orders FROM Orders;",
      "SELECT customer_name, order_date FROM Customers RIGHT JOIN Orders ON Customers.customer_id = Orders.customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers WHERE first_name = 'John';",
      "SELECT * FROM orders;",
      "SELECT order_id, total_amount FROM orders WHERE order_date > '2022-01-01';",
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products WHERE price < 50.00;",
      "SELECT * FROM reviews;",
      "SELECT customer_id, product_id, rating FROM reviews WHERE rating >= 4;",
      "SELECT * FROM feedback;",
      "SELECT feedback_id, feedback_text FROM feedback WHERE feedback_date >= '2022-01-01';",
      "SELECT first_name, last_name, order_date FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT product_name, price, review_text FROM products INNER JOIN reviews ON products.product_id = reviews.product_id;",
      "SELECT customer_id, feedback_text, feedback_date FROM customers INNER JOIN feedback ON customers.customer_id = feedback.customer_id;",
      "SELECT first_name, last_name, total_amount FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT product_name, description, rating FROM products LEFT JOIN reviews ON products.product_id = reviews.product_id;",
      "SELECT first_name, feedback_text, feedback_date FROM customers LEFT JOIN feedback ON customers.customer_id = feedback.customer_id;",
      "SELECT customer_id, order_id, total_amount FROM orders RIGHT JOIN customers ON orders.customer_id = customers.customer_id;",
      "SELECT product_name, review_text, rating FROM reviews RIGHT JOIN products ON reviews.product_id = products.product_id;",
      "SELECT customer_id, feedback_text, feedback_date FROM feedback RIGHT JOIN customers ON feedback.customer_id = customers.customer_id;",
      "SELECT * FROM customers;",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT customer_id, first_name, last_name, email FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT order_id, customer_id, order_date, total_amount FROM orders WHERE total_amount > 1000;",
      "SELECT products.product_id, products.product_name, products.price, reviews.rating FROM products JOIN reviews ON products.product_id = reviews.product_id;",
      "SELECT customers.first_name, customers.last_name, orders.order_date, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT products.product_name, products.description, reviews.rating, reviews.review_text FROM products JOIN reviews ON products.product_id = reviews.product_id WHERE reviews.rating >= 4;",
      "SELECT reviews.rating, COUNT(*) AS total_reviews FROM reviews GROUP BY reviews.rating;",
      "SELECT customers.first_name, customers.last_name, SUM(orders.total_amount) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.first_name, customers.last_name;",
      "SELECT products.product_name, AVG(reviews.rating) AS average_rating FROM products JOIN reviews ON products.product_id = reviews.product_id GROUP BY products.product_name;",
      "SELECT customers.first_name, customers.last_name, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.first_name, customers.last_name HAVING COUNT(*) > 3;",
      "SELECT customers.first_name, customers.last_name, orders.order_date, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id ORDER BY orders.order_date DESC;",
      "SELECT customers.first_name, customers.last_name, orders.order_date, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id LIMIT 10;",
      "SELECT products.product_name, products.price, feedback.feedback_text, feedback.feedback_date FROM products JOIN feedback ON products.product_id = feedback.product_id;",
      "SELECT products.product_name, AVG(reviews.rating) AS average_rating, COUNT(feedback.feedback_id) AS total_feedback FROM products JOIN reviews ON products.product_id = reviews.product_id LEFT JOIN feedback ON products.product_id = feedback.product_id GROUP BY products.product_name;",
      "SELECT customers.first_name, customers.last_name, orders.order_date, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.total_amount BETWEEN 500 AND 1000;",
      "SELECT customers.first_name, customers.last_name, MAX(orders.total_amount) AS max_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.first_name, customers.last_name;",
      "SELECT products.product_name, products.price, COUNT(feedback.feedback_id) AS total_feedback FROM products LEFT JOIN feedback ON products.product_id = feedback.product_id GROUP BY products.product_name;",
      "SELECT customers.first_name, customers.last_name, reviews.rating, reviews.review_text FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id WHERE customers.first_name = 'Alice' AND reviews.rating > 3;",
      "SELECT customers.first_name, customers.last_name, orders.order_date, orders.total_amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE DATE_PART('year', orders.order_date) = 2022;"
    ]
  }
]