[
  {
    "statements": [
      "SELECT * FROM suppliers;",
      "SELECT supplier_name, supplier_location FROM suppliers;",
      "SELECT supplier_name FROM suppliers WHERE supplier_location = 'New York';",
      "SELECT * FROM suppliers WHERE supplier_id = 1;",
      "SELECT supplier_name, supplier_contact FROM suppliers WHERE supplier_id = 3;",
      "SELECT * FROM suppliers ORDER BY supplier_name ASC;",
      "SELECT * FROM suppliers ORDER BY supplier_id DESC;",
      "SELECT COUNT(*) FROM suppliers;",
      "SELECT MAX(supplier_id) FROM suppliers;",
      "SELECT supplier_id, supplier_name FROM suppliers WHERE supplier_id > 10;",
      "SELECT * FROM suppliers WHERE supplier_location LIKE '%California%';",
      "SELECT DISTINCT supplier_location FROM suppliers;",
      "SELECT supplier_name, LENGTH(supplier_contact) AS contact_length FROM suppliers;",
      "SELECT * FROM suppliers LIMIT 5;",
      "SELECT * FROM suppliers OFFSET 3;",
      "SELECT * FROM suppliers WHERE supplier_id BETWEEN 5 AND 10;",
      "SELECT * FROM suppliers WHERE supplier_id IN (2, 4, 6);",
      "SELECT * FROM suppliers WHERE supplier_name IN ('Supplier 1', 'Supplier 2');",
      "SELECT * FROM suppliers WHERE supplier_name IS NOT NULL;",
      "SELECT AVG(supplier_id) FROM suppliers;",
      "SELECT * FROM suppliers;",
      "SELECT supplier_id, supplier_name, supplier_location FROM suppliers ORDER BY supplier_name DESC;",
      "SELECT supplier_id, supplier_name, supplier_location FROM suppliers WHERE supplier_location='New York';",
      "SELECT supplier_name, supplier_contact FROM suppliers WHERE supplier_name LIKE 'A%';",
      "SELECT * FROM suppliers WHERE supplier_contact IS NOT NULL;",
      "SELECT COUNT(*) AS total_suppliers FROM suppliers;",
      "SELECT supplier_name, LENGTH(supplier_name) AS name_length FROM suppliers;",
      "SELECT DISTINCT supplier_location FROM suppliers;",
      "SELECT supplier_name, COUNT(*) AS total_contacts FROM suppliers GROUP BY supplier_name;",
      "SELECT supplier_name, supplier_contact FROM suppliers WHERE supplier_location='London' AND supplier_contact LIKE '%@gmail.com';",
      "SELECT supplier_id, supplier_name FROM suppliers WHERE supplier_id IN (1, 3, 5);",
      "SELECT supplier_name, CONCAT('Contact: ', supplier_contact) AS contact_info FROM suppliers;",
      "SELECT supplier_name, supplier_contact FROM suppliers WHERE supplier_location='Paris' AND (supplier_contact LIKE '%@gmail.com' OR supplier_contact LIKE '%@yahoo.com');",
      "SELECT supplier_name, supplier_location FROM suppliers WHERE supplier_name='Apple Inc' OR supplier_name='Microsoft Corp';",
      "SELECT supplier_name, SUBSTRING(supplier_contact, 1, 5) AS contact_prefix FROM suppliers;",
      "SELECT supplier_name, supplier_contact FROM suppliers WHERE LENGTH(supplier_contact) > 10;",
      "SELECT supplier_name, supplier_location, CASE WHEN supplier_location='New York' THEN 'East Coast' ELSE 'West Coast' END AS region FROM suppliers;",
      "SELECT supplier_name, supplier_contact FROM suppliers WHERE SUPPLIER_ID = 1;",
      "SELECT supplier_id, supplier_name FROM suppliers ORDER BY supplier_id ASC LIMIT 10;",
      "SELECT supplier_name, UPPER(supplier_name) AS upper_name FROM suppliers;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM suppliers;",
      "SELECT supplier_id, supplier_name, contact_person FROM suppliers;",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, price FROM products;",
      "SELECT supplier_id, COUNT(*) AS total_products FROM products GROUP BY supplier_id;",
      "SELECT supplier_name, AVG(price) AS avg_price FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id GROUP BY supplier_name;",
      "SELECT * FROM suppliers WHERE supplier_id = 'abcd-1234';",
      "SELECT product_name, stock_quantity FROM products WHERE supplier_id = 'abcd-1234';",
      "SELECT * FROM suppliers WHERE phone_number LIKE '+1%';",
      "SELECT supplier_id, supplier_name, supplier_address FROM suppliers WHERE supplier_name LIKE '%corp%';",
      "SELECT product_name, price FROM products WHERE price > 100;",
      "SELECT * FROM suppliers ORDER BY supplier_name ASC;",
      "SELECT product_name, stock_quantity FROM products ORDER BY stock_quantity DESC;",
      "SELECT supplier_id, COUNT(*) AS total_products FROM products GROUP BY supplier_id HAVING COUNT(*) > 5;",
      "SELECT supplier_name, AVG(price) AS avg_price FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id GROUP BY supplier_name HAVING AVG(price) > 50;",
      "SELECT * FROM products WHERE supplier_id IN (SELECT supplier_id FROM suppliers WHERE supplier_name = 'Supplier A');",
      "SELECT supplier_id, supplier_name FROM suppliers UNION SELECT supplier_id, supplier_name FROM suppliers WHERE supplier_name = 'Supplier B';",
      "SELECT supplier_name, SUM(price) AS total_spent FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id GROUP BY supplier_name;",
      "SELECT * FROM products LIMIT 10;",
      "SELECT * FROM suppliers OFFSET 5;",
      "SELECT * FROM suppliers WHERE supplier_name LIKE '%A%' AND phone_number IS NOT NULL;",
      "SELECT supplier_name, contact_person FROM suppliers WHERE contact_person IS NOT NULL ORDER BY supplier_name ASC;",
      "SELECT * FROM suppliers WHERE supplier_address LIKE '%Street%' AND phone_number LIKE '555%';",
      "SELECT supplier_name, SUM(price) AS total_price FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, product_name, price FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE price > 100 ORDER BY price DESC;",
      "SELECT supplier_name, AVG(price) AS average_price FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name HAVING AVG(price) > 50;",
      "SELECT supplier_id, product_name, stock_quantity FROM products WHERE supplier_id IN (SELECT supplier_id FROM suppliers WHERE supplier_name LIKE '%Supplier%');",
      "SELECT supplier_name, COUNT(product_id) AS total_products FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, MAX(price) AS highest_price FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, MIN(price) AS lowest_price FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, COUNT(product_id) AS total_products, SUM(stock_quantity) AS total_quantity FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name HAVING COUNT(product_id) > 2;",
      "SELECT supplier_name, product_name, price, stock_quantity FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name LIKE '%Supplier%' AND stock_quantity > 0;",
      "SELECT supplier_id, supplier_name, contact_person FROM suppliers WHERE supplier_id NOT IN (SELECT supplier_id FROM products);",
      "SELECT supplier_name, product_name, price, stock_quantity FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name LIKE '%Supplier%' ORDER BY supplier_name ASC, price DESC;",
      "SELECT supplier_name, product_name, price, stock_quantity FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name = 'ABC Suppliers';",
      "SELECT supplier_name, product_name, price, stock_quantity FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name = 'XYZ Suppliers';",
      "SELECT supplier_name, product_name, price, stock_quantity FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name = 'PQR Suppliers';",
      "SELECT supplier_name, product_name, price, stock_quantity FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name = 'LMN Suppliers';",
      "SELECT supplier_name, COUNT(product_id) AS total_products FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name LIKE 'S%' GROUP BY supplier_name;",
      "SELECT supplier_name, AVG(price) AS average_price FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name <> 'ABC Suppliers' GROUP BY supplier_name HAVING AVG(price) > 50;",
      "SELECT supplier_name, SUM(price) AS total_price FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name <> 'XYZ Suppliers' GROUP BY supplier_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Supplier;",
      "SELECT supplier_name, supplier_address FROM Supplier;",
      "SELECT supplier_id, supplier_email FROM Supplier;",
      "SELECT * FROM Product;",
      "SELECT product_name, product_price FROM Product;",
      "SELECT product_id, supplier_id FROM Product;",
      "SELECT * FROM PurchaseOrder;",
      "SELECT order_date, quantity FROM PurchaseOrder;",
      "SELECT order_id, total_price FROM PurchaseOrder;",
      "SELECT supplier_name, product_name FROM Supplier, Product WHERE Supplier.supplier_id = Product.supplier_id;",
      "SELECT supplier_name, product_name, order_date FROM Supplier, Product, PurchaseOrder WHERE Supplier.supplier_id = Product.supplier_id AND Product.product_id = PurchaseOrder.product_id;",
      "SELECT * FROM Supplier WHERE supplier_id = 1;",
      "SELECT * FROM Product WHERE product_price > 50.00;",
      "SELECT * FROM PurchaseOrder WHERE quantity >= 5;",
      "SELECT supplier_name, product_name FROM Supplier, Product WHERE Supplier.supplier_id = Product.supplier_id AND supplier_id = 1;",
      "SELECT COUNT(*) FROM Supplier;",
      "SELECT AVG(product_price) FROM Product;",
      "SELECT MIN(total_price) FROM PurchaseOrder;",
      "SELECT MAX(quantity) FROM PurchaseOrder;",
      "SELECT DISTINCT supplier_name FROM Supplier;",
      "SELECT * FROM Supplier;",
      "SELECT supplier_name, supplier_address FROM Supplier WHERE supplier_id = 1;",
      "SELECT product_name, product_price FROM Product WHERE product_price > 100;",
      "SELECT * FROM PurchaseOrder WHERE total_price > 500;",
      "SELECT supplier_name, product_name, total_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE s.supplier_id = 2 AND po.quantity > 10;",
      "SELECT s.supplier_name, p.product_name, po.total_price FROM Supplier s INNER JOIN Product p ON s.supplier_id = p.supplier_id INNER JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE po.order_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT supplier_name, COUNT(product_id) AS total_products FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id GROUP BY supplier_name HAVING total_products > 5;",
      "SELECT supplier_name, AVG(product_price) AS avg_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id GROUP BY supplier_name ORDER BY avg_price DESC;",
      "SELECT supplier_name, MAX(product_price) AS max_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id GROUP BY supplier_name ORDER BY max_price DESC;",
      "SELECT supplier_name, MIN(product_price) AS min_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id GROUP BY supplier_name ORDER BY min_price ASC;",
      "SELECT supplier_name, SUM(quantity) AS total_quantity FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id JOIN PurchaseOrder po ON p.product_id = po.product_id GROUP BY supplier_name ORDER BY total_quantity DESC;",
      "SELECT supplier_name, product_name, total_price, order_date FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE s.supplier_id = 3 AND po.order_date < '2022-06-01';",
      "SELECT supplier_id, supplier_name FROM Supplier UNION SELECT supplier_id, product_name FROM Product;",
      "SELECT supplier_name, product_name, total_price FROM Supplier s CROSS JOIN Product p JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE s.supplier_id = 4;",
      "SELECT supplier_name, product_name, total_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id LEFT JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE po.total_price IS NULL;",
      "SELECT supplier_name, product_name, total_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id RIGHT JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE p.product_price > 50;",
      "SELECT supplier_name, product_name, total_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id INNER JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE s.supplier_name LIKE '%A%';",
      "SELECT supplier_name, product_name, total_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE s.supplier_name IN ('Supplier A', 'Supplier B');",
      "SELECT supplier_name, product_name, total_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id JOIN PurchaseOrder po ON p.product_id = po.product_id WHERE s.supplier_id BETWEEN 5 AND 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM suppliers;",
      "SELECT supplier_name, contact_email FROM suppliers WHERE supplier_id = 1;",
      "SELECT * FROM products;",
      "SELECT product_name, unit_price FROM products WHERE supplier_id = 2;",
      "SELECT * FROM orders;",
      "SELECT order_date, quantity FROM orders WHERE product_id = 5;",
      "SELECT * FROM shipments;",
      "SELECT shipment_date FROM shipments WHERE supplier_id = 3;",
      "SELECT supplier_name, contact_name FROM suppliers WHERE supplier_id = 4;",
      "SELECT product_name, unit_price FROM products WHERE product_id = 6;",
      "SELECT order_date, quantity FROM orders WHERE order_id = 7;",
      "SELECT shipment_date FROM shipments WHERE shipment_id = 8;",
      "SELECT supplier_name, contact_email FROM suppliers WHERE supplier_id = 9;",
      "SELECT product_name, unit_price FROM products WHERE supplier_id = 10;",
      "SELECT order_date, quantity FROM orders WHERE product_id = 11;",
      "SELECT shipment_date FROM shipments WHERE supplier_id = 12;",
      "SELECT supplier_name, contact_name FROM suppliers WHERE supplier_id = 13;",
      "SELECT product_name, unit_price FROM products WHERE product_id = 14;",
      "SELECT order_date, quantity FROM orders WHERE order_id = 15;",
      "SELECT shipment_date FROM shipments WHERE shipment_id = 16;",
      "SELECT * FROM suppliers;",
      "SELECT supplier_id, supplier_name FROM suppliers WHERE supplier_name LIKE 'A%';",
      "SELECT supplier_id, supplier_name FROM suppliers WHERE supplier_id IN (SELECT supplier_id FROM products);",
      "SELECT suppliers.supplier_id, suppliers.supplier_name, COUNT(products.product_id) AS num_products FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY suppliers.supplier_id, suppliers.supplier_name;",
      "SELECT suppliers.supplier_name, products.product_name, shipments.shipment_date FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN shipments ON products.product_id = shipments.product_id;",
      "SELECT supplier_name, COUNT(order_id) AS num_orders FROM suppliers LEFT JOIN orders ON suppliers.supplier_id = orders.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, AVG(unit_price) AS avg_unit_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT supplier_name, MAX(quantity) AS max_quantity FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id GROUP BY supplier_name;",
      "SELECT supplier_name, SUM(unit_price * quantity) AS total_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id GROUP BY supplier_name;",
      "SELECT DISTINCT supplier_name FROM suppliers WHERE supplier_id IN (SELECT supplier_id FROM products WHERE unit_price > 100);",
      "SELECT supplier_name, AVG(unit_price) AS avg_unit_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name HAVING AVG(unit_price) > 50;",
      "SELECT supplier_name, COUNT(order_id) AS num_orders FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.supplier_id WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY supplier_name;",
      "SELECT supplier_name, MAX(quantity) AS max_quantity FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id GROUP BY supplier_name HAVING MAX(quantity) > 10;",
      "SELECT supplier_name, MIN(unit_price) AS min_unit_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id WHERE product_id IN (SELECT product_id FROM orders WHERE quantity > 5) GROUP BY supplier_name;",
      "SELECT supplier_name, AVG(unit_price) AS avg_unit_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id WHERE supplier_name LIKE '%Limited' GROUP BY supplier_name;",
      "SELECT supplier_name, COUNT(order_id) AS num_orders FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.supplier_id WHERE quantity >= 5 GROUP BY supplier_name ORDER BY num_orders DESC;",
      "SELECT supplier_name, MAX(unit_price) AS max_unit_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id WHERE product_id NOT IN (SELECT product_id FROM orders) GROUP BY supplier_name;",
      "SELECT supplier_name, SUM(unit_price * quantity) AS total_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id WHERE order_date < '2022-06-01' GROUP BY supplier_name;",
      "SELECT supplier_name, products.product_name, shipments.shipment_date FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN shipments ON products.product_id = shipments.product_id WHERE shipments.shipment_date BETWEEN '2022-06-01' AND '2022-12-31';",
      "SELECT supplier_name, COUNT(DISTINCT order_id) AS num_distinct_orders FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.supplier_id GROUP BY supplier_name HAVING COUNT(DISTINCT order_id) >= 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM suppliers;",
      "SELECT supplier_name, supplier_contact FROM suppliers;",
      "SELECT supplier_id, supplier_name, supplier_email FROM suppliers WHERE supplier_id = 1;",
      "SELECT * FROM products;",
      "SELECT product_name, product_price FROM products;",
      "SELECT product_id, product_name, product_price FROM products WHERE product_id = 1;",
      "SELECT * FROM orders;",
      "SELECT order_date, order_quantity FROM orders;",
      "SELECT order_id, order_date, order_quantity, order_status FROM orders WHERE order_status = 'Pending';",
      "SELECT * FROM employees;",
      "SELECT employee_name, employee_role FROM employees;",
      "SELECT employee_id, employee_name FROM employees WHERE employee_id = 1;",
      "SELECT * FROM locations;",
      "SELECT location_name, location_address FROM locations;",
      "SELECT location_id, location_name FROM locations WHERE location_id = 1;",
      "SELECT suppliers.supplier_name, products.product_name FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id;",
      "SELECT suppliers.supplier_name, products.product_name FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE products.product_price > 50;",
      "SELECT employee_id, employee_name, employee_role, location_name FROM employees JOIN locations ON employees.employee_id = locations.location_id;",
      "SELECT supplier_name, product_name, order_date FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id JOIN orders ON products.product_id = orders.product_id;",
      "SELECT location_name, location_address, employee_name, employee_role FROM locations JOIN employees ON locations.location_id = employees.employee_id;",
      "SELECT supplier_id, supplier_name, COUNT(*) AS total_products FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_id, supplier_name;",
      "SELECT * FROM suppliers;",
      "SELECT supplier_id, supplier_name, supplier_contact FROM suppliers WHERE supplier_id = 1;",
      "SELECT supplier_name, supplier_contact FROM suppliers WHERE supplier_name LIKE 'A%';",
      "SELECT COUNT(*) FROM suppliers;",
      "SELECT * FROM products WHERE product_price > 50;",
      "SELECT product_name, supplier_name FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id;",
      "SELECT product_name, order_quantity FROM products INNER JOIN orders ON products.product_id = orders.product_id;",
      "SELECT * FROM orders WHERE order_status = 'Pending';",
      "SELECT employee_name, employee_role FROM employees WHERE employee_role = 'Manager';",
      "SELECT supplier_name, product_name, order_quantity FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id;",
      "SELECT location_name, location_address FROM locations;",
      "SELECT supplier_name, product_name, order_quantity, order_date FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id ORDER BY order_date DESC;",
      "SELECT supplier_name, COUNT(product_id) AS total_products FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products;",
      "SELECT * FROM employees WHERE employee_id IN (SELECT employee_id FROM employees WHERE employee_role = 'Salesperson');",
      "SELECT supplier_name, AVG(product_price) AS average_price FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
      "SELECT location_address, COUNT(*) AS total_orders FROM locations INNER JOIN suppliers ON locations.location_id = suppliers.supplier_id INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id GROUP BY location_address;",
      "SELECT supplier_name, product_name, order_quantity FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id LEFT JOIN orders ON products.product_id = orders.product_id;",
      "SELECT employee_name, employee_role FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM employees WHERE employee_role = 'Manager');",
      "SELECT supplier_name, SUM(order_quantity) AS total_orders FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN orders ON products.product_id = orders.product_id GROUP BY supplier_name;"
    ]
  }
]