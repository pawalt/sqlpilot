[
  {
    "statements": [
      "SELECT * FROM software_upgrades;",
      "SELECT device_id, upgrade_version FROM software_upgrades;",
      "SELECT upgrade_version, upgrade_date FROM software_upgrades;",
      "SELECT * FROM software_upgrades WHERE device_id = 'abcd1234';",
      "SELECT * FROM software_upgrades WHERE device_id = 'xyz9876' AND upgrade_version = 2;",
      "SELECT * FROM software_upgrades WHERE upgrade_date > '2022-01-01';",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = 'abc456';",
      "SELECT device_id, MAX(upgrade_version) FROM software_upgrades GROUP BY device_id;",
      "SELECT device_id, COUNT(*) FROM software_upgrades GROUP BY device_id;",
      "SELECT device_id, SUM(upgrade_version) FROM software_upgrades GROUP BY device_id;",
      "SELECT * FROM software_upgrades ORDER BY upgrade_date DESC;",
      "SELECT * FROM software_upgrades ORDER BY device_id, upgrade_version ASC;",
      "SELECT device_id, AVG(upgrade_version) FROM software_upgrades GROUP BY device_id;",
      "SELECT COUNT(*) AS total_upgrades FROM software_upgrades;",
      "SELECT device_id, COUNT(*) AS total_upgrades FROM software_upgrades GROUP BY device_id;",
      "SELECT * FROM software_upgrades WHERE device_id IN ('abcd1234', 'xyz9876');",
      "SELECT * FROM software_upgrades WHERE device_id LIKE 'abc%';",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id LIKE '%456';",
      "SELECT * FROM software_upgrades WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT DISTINCT device_id FROM software_upgrades;",
      "SELECT * FROM software_upgrades WHERE device_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT device_id, MAX(upgrade_version) FROM software_upgrades GROUP BY device_id;",
      "SELECT device_id, MIN(upgrade_version) FROM software_upgrades GROUP BY device_id;",
      "SELECT device_id, AVG(upgrade_version) FROM software_upgrades GROUP BY device_id;",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE upgrade_version > 5 AND upgrade_date > '2022-01-01';",
      "SELECT COUNT(*) AS total_upgrades FROM software_upgrades;",
      "SELECT device_id, COUNT(*) AS total_upgrades FROM software_upgrades GROUP BY device_id HAVING COUNT(*) > 2;",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades ORDER BY upgrade_date DESC;",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades ORDER BY upgrade_version DESC;",
      "SELECT device_id, DENSE_RANK() OVER (ORDER BY upgrade_version DESC) AS upgrade_rank FROM software_upgrades;",
      "SELECT device_id, AVG(upgrade_version) OVER(PARTITION BY device_id) AS avg_upgrade_version FROM software_upgrades;",
      "SELECT DISTINCT device_id FROM software_upgrades;",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-06-30' AND upgrade_version > 3;",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id LIKE '%ABCD%';",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = (SELECT device_id FROM software_upgrades WHERE upgrade_version = 10);",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id IN ('123e4567-e89b-12d3-a456-426614174000', '456e4567-e89b-12d3-a456-426614174000');",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = '123e4567-e89b-12d3-a456-426614174000' UNION SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = '456e4567-e89b-12d3-a456-426614174000';",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = '123e4567-e89b-12d3-a456-426614174000' INTERSECT SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = '456e4567-e89b-12d3-a456-426614174000';",
      "SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = '123e4567-e89b-12d3-a456-426614174000' EXCEPT SELECT device_id, upgrade_version, upgrade_date FROM software_upgrades WHERE device_id = '456e4567-e89b-12d3-a456-426614174000';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM smart_home_devices;",
      "SELECT device_id, device_name FROM smart_home_devices;",
      "SELECT firmware_version FROM smart_home_devices;",
      "SELECT device_id, upgrade_date FROM upgrade_history;",
      "SELECT upgrade_status FROM upgrade_history;",
      "SELECT device_id, device_name, firmware_version FROM smart_home_devices WHERE firmware_version > 2.0;",
      "SELECT upgrade_id, upgrade_date, upgrade_status FROM upgrade_history WHERE device_id = 1;",
      "SELECT device_id, device_name FROM smart_home_devices ORDER BY device_name ASC;",
      "SELECT device_id, device_name FROM smart_home_devices ORDER BY device_id DESC;",
      "SELECT * FROM smart_home_devices WHERE device_name LIKE 'Th%';",
      "SELECT * FROM upgrade_history WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT COUNT(*) FROM smart_home_devices;",
      "SELECT MAX(firmware_version) AS max_firmware_version FROM smart_home_devices;",
      "SELECT MIN(firmware_version) AS min_firmware_version FROM smart_home_devices;",
      "SELECT AVG(firmware_version) AS avg_firmware_version FROM smart_home_devices;",
      "SELECT SUM(firmware_version) AS total_firmware_version FROM smart_home_devices;",
      "SELECT device_id, COUNT(upgrade_id) AS num_upgrades FROM upgrade_history GROUP BY device_id;",
      "SELECT device_id, COUNT(upgrade_id) AS num_upgrades FROM upgrade_history GROUP BY device_id HAVING COUNT(upgrade_id) > 2;",
      "SELECT device_id, MAX(upgrade_date) AS latest_upgrade_date FROM upgrade_history GROUP BY device_id;",
      "SELECT device_name, AVG(firmware_version) AS avg_firmware_version FROM smart_home_devices GROUP BY device_name;",
      "SELECT * FROM smart_home_devices;",
      "SELECT device_name, firmware_version FROM smart_home_devices WHERE firmware_version > 2.0;",
      "SELECT device_name, upgrade_date FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id;",
      "SELECT COUNT(device_id) AS total_devices FROM smart_home_devices;",
      "SELECT device_name, upgrade_status FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id WHERE upgrade_status = 'successful';",
      "SELECT * FROM smart_home_devices WHERE device_id IN (SELECT device_id FROM upgrade_history WHERE upgrade_status = 'failed');",
      "SELECT device_name, MAX(firmware_version) AS latest_version FROM smart_home_devices;",
      "SELECT device_name, AVG(firmware_version) AS average_version FROM smart_home_devices;",
      "SELECT device_name, upgrade_date FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id WHERE upgrade_status = 'pending' ORDER BY upgrade_date;",
      "SELECT device_id, COUNT(upgrade_id) AS total_upgrades FROM upgrade_history GROUP BY device_id;",
      "SELECT device_name, upgrade_date, ROW_NUMBER() OVER (ORDER BY upgrade_date) AS row_number FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id;",
      "SELECT device_name, firmware_version FROM smart_home_devices WHERE device_id = 1;",
      "SELECT * FROM smart_home_devices WHERE firmware_version BETWEEN 2.0 AND 3.0;",
      "SELECT device_name, upgrade_date FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id WHERE upgrade_date >= '2022-01-01';",
      "SELECT device_name, upgrade_status FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id ORDER BY upgrade_date DESC;",
      "SELECT device_name, firmware_version, upgrade_status FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT device_name, COUNT(upgrade_id) AS total_upgrades FROM smart_home_devices LEFT JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id GROUP BY device_name;",
      "SELECT device_name, MAX(upgrade_date) AS last_upgrade FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id GROUP BY device_name;",
      "SELECT device_name, AVG(firmware_version) AS average_version FROM smart_home_devices JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id GROUP BY device_name;",
      "SELECT device_name, COUNT(upgrade_id) AS total_upgrades FROM smart_home_devices LEFT JOIN upgrade_history ON smart_home_devices.device_id = upgrade_history.device_id GROUP BY device_name HAVING COUNT(upgrade_id) >= 3;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM smart_home_devices;",
      "SELECT device_name, firmware_version FROM smart_home_devices;",
      "SELECT device_id, upgrade_description FROM software_upgrades;",
      "SELECT * FROM upgrade_logs;",
      "SELECT device_id, upgrade_date FROM software_upgrades;",
      "SELECT device_name, upgrade_description FROM smart_home_devices, software_upgrades WHERE smart_home_devices.device_id = software_upgrades.device_id;",
      "SELECT * FROM smart_home_devices WHERE device_id = 1;",
      "SELECT device_name FROM smart_home_devices WHERE firmware_version = 'v2.0';",
      "SELECT upgrade_description FROM software_upgrades WHERE device_id = 2;",
      "SELECT * FROM upgrade_logs WHERE log_type = 'error';",
      "SELECT device_id, upgrade_description FROM software_upgrades WHERE upgrade_date > '2022-01-01';",
      "SELECT device_name, upgrade_date FROM smart_home_devices, software_upgrades WHERE smart_home_devices.device_id = software_upgrades.device_id AND upgrade_logs.upgrade_id = software_upgrades.upgrade_id;",
      "SELECT device_id, log_message FROM upgrade_logs WHERE log_type = 'warning';",
      "SELECT device_name FROM smart_home_devices ORDER BY device_id DESC;",
      "SELECT device_id, device_name FROM smart_home_devices WHERE firmware_version LIKE 'v%';",
      "SELECT device_name, upgrade_date FROM smart_home_devices, software_upgrades WHERE smart_home_devices.device_id = software_upgrades.device_id AND upgrade_description LIKE '%security%';",
      "SELECT device_id, upgrade_description FROM software_upgrades WHERE upgrade_description LIKE '%bug fix%';",
      "SELECT device_id, upgrade_date FROM software_upgrades WHERE upgrade_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT * FROM upgrade_logs WHERE log_type = 'info' ORDER BY log_id ASC;",
      "SELECT device_id, upgrade_description FROM software_upgrades GROUP BY device_id;",
      "SELECT * FROM smart_home_devices;",
      "SELECT device_id, device_name FROM smart_home_devices WHERE device_name LIKE 'Smart%';",
      "SELECT * FROM software_upgrades su JOIN smart_home_devices shd ON su.device_id = shd.device_id;",
      "SELECT shd.device_name, su.upgrade_description FROM software_upgrades su JOIN smart_home_devices shd ON su.device_id = shd.device_id WHERE su.upgrade_date > '2022-01-01';",
      "SELECT COUNT(*) AS total_upgrades FROM software_upgrades;",
      "SELECT shd.device_name, COUNT(su.upgrade_id) AS total_upgrades FROM smart_home_devices shd LEFT JOIN software_upgrades su ON shd.device_id = su.device_id GROUP BY shd.device_name;",
      "SELECT shd.device_name, MAX(su.upgrade_date) AS last_upgrade_date FROM smart_home_devices shd LEFT JOIN software_upgrades su ON shd.device_id = su.device_id GROUP BY shd.device_name;",
      "SELECT shd.device_name, AVG(su.upgrade_id) AS avg_upgrade_id FROM smart_home_devices shd LEFT JOIN software_upgrades su ON shd.device_id = su.device_id GROUP BY shd.device_name;",
      "SELECT shd.device_name, SUM(su.upgrade_id) AS total_upgrade_id FROM smart_home_devices shd LEFT JOIN software_upgrades su ON shd.device_id = su.device_id GROUP BY shd.device_name;",
      "SELECT shd.device_name, COUNT(ul.log_id) AS total_logs FROM smart_home_devices shd LEFT JOIN software_upgrades su ON shd.device_id = su.device_id LEFT JOIN upgrade_logs ul ON su.upgrade_id = ul.upgrade_id GROUP BY shd.device_name;",
      "SELECT shd.device_name, ul.log_message, ul.log_type FROM smart_home_devices shd LEFT JOIN software_upgrades su ON shd.device_id = su.device_id LEFT JOIN upgrade_logs ul ON su.upgrade_id = ul.upgrade_id;",
      "SELECT device_name, COUNT(upgrade_id) AS total_upgrades FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id GROUP BY device_name HAVING COUNT(upgrade_id) > 1;",
      "SELECT device_name, MAX(upgrade_date) AS last_upgrade_date FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id GROUP BY device_name HAVING MAX(upgrade_date) > '2022-01-01';",
      "SELECT shd.device_name, ul.log_message FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id JOIN upgrade_logs ul ON su.upgrade_id = ul.upgrade_id WHERE ul.log_type = 'error';",
      "SELECT shd.device_name, COUNT(ul.log_id) AS total_error_logs FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id JOIN upgrade_logs ul ON su.upgrade_id = ul.upgrade_id WHERE ul.log_type = 'error' GROUP BY shd.device_name;",
      "SELECT shd.device_name, MAX(ul.log_id) AS last_error_log_id FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id JOIN upgrade_logs ul ON su.upgrade_id = ul.upgrade_id WHERE ul.log_type = 'error' GROUP BY shd.device_name;",
      "SELECT shd.device_name, COUNT(DISTINCT su.upgrade_id) AS unique_upgrades FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id;",
      "SELECT shd.device_name, AVG(DISTINCT su.upgrade_id) AS avg_unique_upgrades FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id;",
      "SELECT shd.device_name, SUM(DISTINCT su.upgrade_id) AS total_unique_upgrades FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id;",
      "SELECT shd.device_name, COUNT(DISTINCT ul.log_id) AS unique_logs FROM smart_home_devices shd JOIN software_upgrades su ON shd.device_id = su.device_id JOIN upgrade_logs ul ON su.upgrade_id = ul.upgrade_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM smart_home_devices;",
      "SELECT device_name, firmware_version FROM smart_home_devices;",
      "SELECT device_name, last_upgrade_date FROM smart_home_devices WHERE firmware_version > 10;",
      "SELECT device_id, device_name FROM smart_home_devices ORDER BY device_name ASC;",
      "SELECT device_name, firmware_version FROM smart_home_devices WHERE last_upgrade_date < '2022-01-01';",
      "SELECT * FROM upgrade_logs;",
      "SELECT device_id, upgrade_date FROM upgrade_logs;",
      "SELECT upgrade_version, COUNT(*) FROM upgrade_logs GROUP BY upgrade_version;",
      "SELECT device_name, upgrade_version FROM smart_home_devices JOIN upgrade_logs ON smart_home_devices.device_id = upgrade_logs.device_id;",
      "SELECT device_id, COUNT(*) FROM upgrade_logs GROUP BY device_id HAVING COUNT(*) > 1;",
      "SELECT device_id, upgrade_date FROM upgrade_logs WHERE upgrade_version = 2;",
      "SELECT * FROM upgrade_jobs;",
      "SELECT device_id, job_status FROM upgrade_jobs WHERE completed_time IS NULL;",
      "SELECT device_id, scheduled_time FROM upgrade_jobs WHERE scheduled_time < NOW();",
      "SELECT device_id, MAX(scheduled_time) FROM upgrade_jobs;",
      "SELECT * FROM upgrade_errors;",
      "SELECT device_id, error_message FROM upgrade_errors WHERE error_date > '2022-01-01';",
      "SELECT device_id, COUNT(*) FROM upgrade_errors GROUP BY device_id;",
      "SELECT device_id, MAX(error_date) FROM upgrade_errors;",
      "SELECT device_id, error_message FROM upgrade_errors WHERE error_date > '2022-01-01' ORDER BY error_date DESC;",
      "SELECT * FROM smart_home_devices JOIN upgrade_logs ON smart_home_devices.device_id = upgrade_logs.device_id",
      "SELECT device_name, firmware_version FROM smart_home_devices WHERE firmware_version > 10",
      "SELECT device_name, last_upgrade_date FROM smart_home_devices WHERE last_upgrade_date BETWEEN '2022-01-01' AND '2022-05-31'",
      "SELECT COUNT(*) FROM upgrade_logs WHERE upgrade_version = 2",
      "SELECT device_name, firmware_version FROM smart_home_devices WHERE device_id = '123e4567-e89b-12d3-a456-426614174000'",
      "SELECT device_name, job_status, scheduled_time FROM smart_home_devices JOIN upgrade_jobs ON smart_home_devices.device_id = upgrade_jobs.device_id",
      "SELECT device_id, upgrade_version FROM upgrade_logs WHERE upgrade_date > '2022-06-01'",
      "SELECT error_id, error_message FROM upgrade_errors WHERE device_id = '123e4567-e89b-12d3-a456-426614174000'",
      "SELECT device_name, upgrade_version FROM smart_home_devices JOIN upgrade_logs ON smart_home_devices.device_id = upgrade_logs.device_id",
      "SELECT device_name, job_status, completed_time FROM smart_home_devices JOIN upgrade_jobs ON smart_home_devices.device_id = upgrade_jobs.device_id",
      "SELECT device_name, firmware_version FROM smart_home_devices WHERE firmware_version >= 20",
      "SELECT device_id, error_message FROM smart_home_devices JOIN upgrade_errors ON smart_home_devices.device_id = upgrade_errors.device_id",
      "SELECT device_name, last_upgrade_date FROM smart_home_devices WHERE last_upgrade_date < '2022-06-01'",
      "SELECT device_id, error_message, error_date FROM smart_home_devices JOIN upgrade_errors ON smart_home_devices.device_id = upgrade_errors.device_id",
      "SELECT device_name, upgrade_version FROM smart_home_devices JOIN upgrade_logs ON smart_home_devices.device_id = upgrade_logs.device_id",
      "SELECT device_name, last_upgrade_date FROM smart_home_devices WHERE last_upgrade_date < CURRENT_TIMESTAMP",
      "SELECT device_id, firmware_version FROM smart_home_devices WHERE firmware_version < 15",
      "SELECT device_id, error_message FROM smart_home_devices JOIN upgrade_errors ON smart_home_devices.device_id = upgrade_errors.device_id",
      "SELECT device_id, upgrade_version FROM upgrade_logs WHERE upgrade_version <= 3",
      "SELECT device_name, job_status, scheduled_time FROM smart_home_devices JOIN upgrade_jobs ON smart_home_devices.device_id = upgrade_jobs.device_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM smart_home_devices;",
      "SELECT device_id, device_name FROM smart_home_devices;",
      "SELECT device_name, firmware_version FROM smart_home_devices;",
      "SELECT * FROM device_updates;",
      "SELECT update_id, device_id FROM device_updates;",
      "SELECT update_type, update_status FROM device_updates;",
      "SELECT * FROM user_devices;",
      "SELECT user_id, device_name FROM user_devices;",
      "SELECT device_id, is_primary FROM user_devices;",
      "SELECT * FROM upgrade_logs;",
      "SELECT update_id, log_message FROM upgrade_logs;",
      "SELECT log_timestamp FROM upgrade_logs;",
      "SELECT * FROM firmware_versions;",
      "SELECT version_id, version_number FROM firmware_versions;",
      "SELECT release_date FROM firmware_versions;",
      "SELECT device_id, device_name, firmware_version FROM smart_home_devices JOIN device_updates ON smart_home_devices.device_id = device_updates.device_id;",
      "SELECT user_id, device_name, is_primary FROM user_devices JOIN smart_home_devices ON user_devices.device_id = smart_home_devices.device_id;",
      "SELECT update_id, log_message, log_timestamp FROM upgrade_logs JOIN device_updates ON upgrade_logs.update_id = device_updates.update_id;",
      "SELECT device_id, version_number, release_date FROM smart_home_devices JOIN firmware_versions ON smart_home_devices.firmware_version = firmware_versions.version_number;",
      "SELECT device_name, update_type, update_status, update_timestamp FROM smart_home_devices JOIN device_updates ON smart_home_devices.device_id = device_updates.device_id;",
      "SELECT user_id, device_id, device_name, is_primary, update_id, log_message, log_timestamp FROM user_devices JOIN upgrade_logs ON user_devices.device_id = upgrade_logs.update_id;",
      "SELECT * FROM smart_home_devices WHERE device_type = 'Thermostat';",
      "SELECT device_name, device_type FROM smart_home_devices WHERE firmware_version > 1.5;",
      "SELECT device_name, firmware_version FROM smart_home_devices WHERE device_type = 'Lightbulb' AND firmware_version < 2.0;",
      "SELECT COUNT(*) FROM device_updates WHERE update_status = 'Success';",
      "SELECT device_name, update_timestamp FROM smart_home_devices JOIN device_updates ON smart_home_devices.device_id = device_updates.device_id;",
      "SELECT user_id, device_name FROM user_devices WHERE is_primary = TRUE;",
      "SELECT COUNT(*) FROM user_devices;",
      "SELECT * FROM user_devices WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
      "SELECT device_id, log_message FROM device_updates JOIN upgrade_logs ON device_updates.update_id = upgrade_logs.update_id;",
      "SELECT d.device_id, d.device_name, u.log_message FROM smart_home_devices AS d JOIN device_updates AS u ON d.device_id = u.device_id JOIN upgrade_logs AS l ON u.update_id = l.update_id WHERE l.log_timestamp > '2022-01-01';",
      "SELECT AVG(firmware_version) as avg_firmware_version FROM smart_home_devices;",
      "SELECT device_type, COUNT(*) FROM smart_home_devices GROUP BY device_type;",
      "SELECT device_id, update_type FROM device_updates WHERE update_timestamp BETWEEN '2022-01-01' AND '2022-06-30';",
      "SELECT device_name, release_date FROM smart_home_devices JOIN firmware_versions ON smart_home_devices.firmware_version = firmware_versions.version_number;",
      "SELECT device_id, SUM(version_number) as total_versions FROM smart_home_devices JOIN firmware_versions ON smart_home_devices.firmware_version = firmware_versions.version_number GROUP BY device_id HAVING total_versions > 5;",
      "SELECT DISTINCT device_type FROM smart_home_devices;",
      "SELECT DISTINCT version_number FROM firmware_versions ORDER BY version_number DESC;",
      "SELECT device_name, MAX(firmware_version) as latest_firmware FROM smart_home_devices GROUP BY device_name;",
      "SELECT user_id, COUNT(device_id) as num_devices FROM user_devices GROUP BY user_id ORDER BY num_devices DESC;",
      "SELECT device_id, device_name FROM smart_home_devices UNION SELECT device_id, device_name FROM user_devices;"
    ]
  }
]