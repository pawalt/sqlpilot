<t>CREATE TABLE logistics.shipments (
  shipment_id UUID PRIMARY KEY,
  shipment_date DATE,
  origin_address TEXT,
  destination_address TEXT,
  total_weight DECIMAL
);</t><s>INSERT INTO logistics.shipments (shipment_id, shipment_date, origin_address, destination_address, total_weight) VALUES ('123e4567-e89b-12d3-a456-426614174000', '2023-07-15', '123 Main St', '456 Elm St', 100.5) ON CONFLICT (shipment_id) DO UPDATE SET shipment_date = '2023-07-15', origin_address = '123 Main St', destination_address = '456 Elm St', total_weight = 100.5;</s>
<t>CREATE TABLE logistics.shipments (
  shipment_id UUID PRIMARY KEY,
  shipment_date DATE,
  origin_address TEXT,
  destination_address TEXT,
  total_weight DECIMAL
);</t><s>insert into logistics.shipments (shipment_id, shipment_date, origin_address, destination_address, total_weight) values ('123e4567-e89b-12d3-a456-426614174000', '2023-07-15', '123 main st', '456 elm st', 100.5) on conflict (shipment_id) do update set shipment_date = '2023-07-15', origin_address = '123 main st', destination_address = '456 elm st', total_weight = 100.5;</s>
<t>CREATE TABLE logistics.shipments (
  shipment_id UUID PRIMARY KEY,
  shipment_date DATE,
  origin_address TEXT,
  destination_address TEXT,
  total_weight DECIMAL
);</t><s>INSERT INTO logistics.shipments (shipment_id, shipment_date, origin_address, destination_address, total_weight) VALUES ('223e4567-e89b-12d3-a456-426614174000', '2023-07-17', '456 Elm St', '789 Oak St', 150.75) ON CONFLICT (shipment_id) DO UPDATE SET shipment_date = '2023-07-17', origin_address = '456 Elm St', destination_address = '789 Oak St', total_weight = 150.75;</s>
<t>CREATE TABLE logistics.shipments (
  shipment_id UUID PRIMARY KEY,
  shipment_date DATE,
  origin_address TEXT,
  destination_address TEXT,
  total_weight DECIMAL
);</t><s>insert into logistics.shipments (shipment_id, shipment_date, origin_address, destination_address, total_weight) values ('223e4567-e89b-12d3-a456-426614174000', '2023-07-17', '456 elm st', '789 oak st', 150.75) on conflict (shipment_id) do update set shipment_date = '2023-07-17', origin_address = '456 elm st', destination_address = '789 oak st', total_weight = 150.75;</s>
<t>CREATE TABLE logistics.shipments (
  shipment_id UUID PRIMARY KEY,
  shipment_date DATE,
  origin_address TEXT,
  destination_address TEXT,
  total_weight DECIMAL
);</t><s>INSERT INTO logistics.shipments (shipment_id, shipment_date, origin_address, destination_address, total_weight) VALUES ('323e4567-e89b-12d3-a456-426614174000', '2023-07-20', '789 Oak St', '987 Pine St', 75.25) ON CONFLICT (shipment_id) DO UPDATE SET shipment_date = '2023-07-20', origin_address = '789 Oak St', destination_address = '987 Pine St', total_weight = 75.25;</s>
<t>CREATE TABLE logistics.shipments (
  shipment_id UUID PRIMARY KEY,
  shipment_date DATE,
  origin_address TEXT,
  destination_address TEXT,
  total_weight DECIMAL
);</t><s>insert into logistics.shipments (shipment_id, shipment_date, origin_address, destination_address, total_weight) values ('323e4567-e89b-12d3-a456-426614174000', '2023-07-20', '789 oak st', '987 pine st', 75.25) on conflict (shipment_id) do update set shipment_date = '2023-07-20', origin_address = '789 oak st', destination_address = '987 pine st', total_weight = 75.25;</s>
<t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))</t><s>UPSERT INTO shipments (shipment_id, shipment_date, shipment_location, shipment_status) VALUES (1, '2022-01-10', 'Location A', 'In Transit')</s>
<t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))</t><s>upsert into shipments (shipment_id, shipment_date, shipment_location, shipment_status) values (1, '2022-01-10', 'location a', 'in transit')</s>
<t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))</t><s>UPSERT INTO shipments (shipment_id, shipment_date, shipment_location, shipment_status) VALUES (1, '2022-01-10', 'Location A', 'In Transit')</s>
<t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))</t><s>upsert into shipments (shipment_id, shipment_date, shipment_location, shipment_status) values (1, '2022-01-10', 'location a', 'in transit')</s>
<t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))</t><s>UPSERT INTO shipments (shipment_id, shipment_date, shipment_location, shipment_status) VALUES (2, '2022-01-15', 'Location B', 'Delivered')</s>
<t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))</t><s>upsert into shipments (shipment_id, shipment_date, shipment_location, shipment_status) values (2, '2022-01-15', 'location b', 'delivered')</s>
<t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))</t><s>UPSERT INTO shipments (shipment_id, shipment_date, shipment_location, shipment_status) VALUES (2, '2022-01-15', 'Location B', 'Delivered')</s>
<t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))</t><s>upsert into shipments (shipment_id, shipment_date, shipment_location, shipment_status) values (2, '2022-01-15', 'location b', 'delivered')</s>
<t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))</t><s>UPSERT INTO shipments (shipment_id, shipment_date, shipment_location, shipment_status) VALUES (3, '2022-01-20', 'Location C', 'Pending')</s>
<t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))</t><s>upsert into shipments (shipment_id, shipment_date, shipment_location, shipment_status) values (3, '2022-01-20', 'location c', 'pending')</s>
<t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))</t><s>UPSERT INTO shipments (shipment_id, shipment_date, shipment_location, shipment_status) VALUES (3, '2022-01-20', 'Location C', 'Pending')</s>
<t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), product_description TEXT, product_price DECIMAL(10, 2))

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, shipment_date DATE, shipment_location VARCHAR(255), shipment_status VARCHAR(50))</t><s>upsert into shipments (shipment_id, shipment_date, shipment_location, shipment_status) values (3, '2022-01-20', 'location c', 'pending')</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>UPSERT INTO shipments (shipment_id, shipment_date, recipient_name, address, status) VALUES (1, '2022-06-15', 'John Doe', '123 Main Street', 'Shipped') ON DUPLICATE KEY UPDATE shipment_date = '2022-06-15', recipient_name = 'John Doe', address = '123 Main Street', status = 'Shipped';</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>upsert into shipments (shipment_id, shipment_date, recipient_name, address, status) values (1, '2022-06-15', 'john doe', '123 main street', 'shipped') on duplicate key update shipment_date = '2022-06-15', recipient_name = 'john doe', address = '123 main street', status = 'shipped';</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>UPSERT INTO shipments (shipment_id, shipment_date, recipient_name, address, status) VALUES (1, '2022-06-15', 'John Doe', '123 Main Street', 'Shipped') ON DUPLICATE KEY UPDATE shipment_date = '2022-06-15', recipient_name = 'John Doe', address = '123 Main Street', status = 'Shipped';</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>upsert into shipments (shipment_id, shipment_date, recipient_name, address, status) values (1, '2022-06-15', 'john doe', '123 main street', 'shipped') on duplicate key update shipment_date = '2022-06-15', recipient_name = 'john doe', address = '123 main street', status = 'shipped';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>UPSERT INTO shipments (shipment_id, shipment_date, recipient_name, address, status) VALUES (1, '2022-06-15', 'John Doe', '123 Main Street', 'Shipped') ON DUPLICATE KEY UPDATE shipment_date = '2022-06-15', recipient_name = 'John Doe', address = '123 Main Street', status = 'Shipped';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>upsert into shipments (shipment_id, shipment_date, recipient_name, address, status) values (1, '2022-06-15', 'john doe', '123 main street', 'shipped') on duplicate key update shipment_date = '2022-06-15', recipient_name = 'john doe', address = '123 main street', status = 'shipped';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>UPSERT INTO shipments (shipment_id, shipment_date, recipient_name, address, status) VALUES (1, '2022-06-15', 'John Doe', '123 Main Street', 'Shipped') ON DUPLICATE KEY UPDATE shipment_date = '2022-06-15', recipient_name = 'John Doe', address = '123 Main Street', status = 'Shipped';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>upsert into shipments (shipment_id, shipment_date, recipient_name, address, status) values (1, '2022-06-15', 'john doe', '123 main street', 'shipped') on duplicate key update shipment_date = '2022-06-15', recipient_name = 'john doe', address = '123 main street', status = 'shipped';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>UPSERT INTO shipments (shipment_id, shipment_date, recipient_name, address, status) VALUES (1, '2022-06-15', 'John Doe', '123 Main Street', 'Shipped') ON DUPLICATE KEY UPDATE shipment_date = '2022-06-15', recipient_name = 'John Doe', address = '123 Main Street', status = 'Shipped';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>upsert into shipments (shipment_id, shipment_date, recipient_name, address, status) values (1, '2022-06-15', 'john doe', '123 main street', 'shipped') on duplicate key update shipment_date = '2022-06-15', recipient_name = 'john doe', address = '123 main street', status = 'shipped';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>UPSERT INTO shipments (shipment_id, shipment_date, recipient_name, address, status) VALUES (1, '2022-06-15', 'John Doe', '123 Main Street', 'Shipped') ON DUPLICATE KEY UPDATE shipment_date = '2022-06-15', recipient_name = 'John Doe', address = '123 Main Street', status = 'Shipped';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>upsert into shipments (shipment_id, shipment_date, recipient_name, address, status) values (1, '2022-06-15', 'john doe', '123 main street', 'shipped') on duplicate key update shipment_date = '2022-06-15', recipient_name = 'john doe', address = '123 main street', status = 'shipped';</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>UPSERT INTO products (product_id, product_name, description, price) VALUES (101, 'Laptop', 'High performance laptop', 1500.00) ON DUPLICATE KEY UPDATE product_name = 'Laptop', description = 'High performance laptop', price = 1500.00;</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>upsert into products (product_id, product_name, description, price) values (101, 'laptop', 'high performance laptop', 1500.00) on duplicate key update product_name = 'laptop', description = 'high performance laptop', price = 1500.00;</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>UPSERT INTO products (product_id, product_name, description, price) VALUES (101, 'Laptop', 'High performance laptop', 1500.00) ON DUPLICATE KEY UPDATE product_name = 'Laptop', description = 'High performance laptop', price = 1500.00;</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>upsert into products (product_id, product_name, description, price) values (101, 'laptop', 'high performance laptop', 1500.00) on duplicate key update product_name = 'laptop', description = 'high performance laptop', price = 1500.00;</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>UPSERT INTO products (product_id, product_name, description, price) VALUES (101, 'Laptop', 'High performance laptop', 1500.00) ON DUPLICATE KEY UPDATE product_name = 'Laptop', description = 'High performance laptop', price = 1500.00;</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>upsert into products (product_id, product_name, description, price) values (101, 'laptop', 'high performance laptop', 1500.00) on duplicate key update product_name = 'laptop', description = 'high performance laptop', price = 1500.00;</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>UPSERT INTO products (product_id, product_name, description, price) VALUES (101, 'Laptop', 'High performance laptop', 1500.00) ON DUPLICATE KEY UPDATE product_name = 'Laptop', description = 'High performance laptop', price = 1500.00;</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>upsert into products (product_id, product_name, description, price) values (101, 'laptop', 'high performance laptop', 1500.00) on duplicate key update product_name = 'laptop', description = 'high performance laptop', price = 1500.00;</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>UPSERT INTO products (product_id, product_name, description, price) VALUES (101, 'Laptop', 'High performance laptop', 1500.00) ON DUPLICATE KEY UPDATE product_name = 'Laptop', description = 'High performance laptop', price = 1500.00;</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>upsert into products (product_id, product_name, description, price) values (101, 'laptop', 'high performance laptop', 1500.00) on duplicate key update product_name = 'laptop', description = 'high performance laptop', price = 1500.00;</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>UPSERT INTO products (product_id, product_name, description, price) VALUES (101, 'Laptop', 'High performance laptop', 1500.00) ON DUPLICATE KEY UPDATE product_name = 'Laptop', description = 'High performance laptop', price = 1500.00;</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>upsert into products (product_id, product_name, description, price) values (101, 'laptop', 'high performance laptop', 1500.00) on duplicate key update product_name = 'laptop', description = 'high performance laptop', price = 1500.00;</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>UPSERT INTO warehouses (warehouse_id, location, capacity, manager_name) VALUES (201, 'New York', 500, 'Jane Smith') ON DUPLICATE KEY UPDATE location = 'New York', capacity = 500, manager_name = 'Jane Smith';</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>upsert into warehouses (warehouse_id, location, capacity, manager_name) values (201, 'new york', 500, 'jane smith') on duplicate key update location = 'new york', capacity = 500, manager_name = 'jane smith';</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>UPSERT INTO warehouses (warehouse_id, location, capacity, manager_name) VALUES (201, 'New York', 500, 'Jane Smith') ON DUPLICATE KEY UPDATE location = 'New York', capacity = 500, manager_name = 'Jane Smith';</s>
<t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>upsert into warehouses (warehouse_id, location, capacity, manager_name) values (201, 'new york', 500, 'jane smith') on duplicate key update location = 'new york', capacity = 500, manager_name = 'jane smith';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>UPSERT INTO warehouses (warehouse_id, location, capacity, manager_name) VALUES (201, 'New York', 500, 'Jane Smith') ON DUPLICATE KEY UPDATE location = 'New York', capacity = 500, manager_name = 'Jane Smith';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);</t><s>upsert into warehouses (warehouse_id, location, capacity, manager_name) values (201, 'new york', 500, 'jane smith') on duplicate key update location = 'new york', capacity = 500, manager_name = 'jane smith';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>UPSERT INTO warehouses (warehouse_id, location, capacity, manager_name) VALUES (201, 'New York', 500, 'Jane Smith') ON DUPLICATE KEY UPDATE location = 'New York', capacity = 500, manager_name = 'Jane Smith';</s>
<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>upsert into warehouses (warehouse_id, location, capacity, manager_name) values (201, 'new york', 500, 'jane smith') on duplicate key update location = 'new york', capacity = 500, manager_name = 'jane smith';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>UPSERT INTO warehouses (warehouse_id, location, capacity, manager_name) VALUES (201, 'New York', 500, 'Jane Smith') ON DUPLICATE KEY UPDATE location = 'New York', capacity = 500, manager_name = 'Jane Smith';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);</t><s>upsert into warehouses (warehouse_id, location, capacity, manager_name) values (201, 'new york', 500, 'jane smith') on duplicate key update location = 'new york', capacity = 500, manager_name = 'jane smith';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>UPSERT INTO warehouses (warehouse_id, location, capacity, manager_name) VALUES (201, 'New York', 500, 'Jane Smith') ON DUPLICATE KEY UPDATE location = 'New York', capacity = 500, manager_name = 'Jane Smith';</s>
<t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(100),
    capacity INT,
    manager_name VARCHAR(50)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    shipment_date DATE,
    recipient_name VARCHAR(50),
    address VARCHAR(100),
    status VARCHAR(20)
);</t><s>upsert into warehouses (warehouse_id, location, capacity, manager_name) values (201, 'new york', 500, 'jane smith') on duplicate key update location = 'new york', capacity = 500, manager_name = 'jane smith';</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'New York', 100) ON DUPLICATE KEY UPDATE location=VALUES(location), capacity=VALUES(capacity);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into warehouse (warehouse_id, location, capacity) values (1, 'new york', 100) on duplicate key update location=values(location), capacity=values(capacity);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO employee (employee_id, name, role, warehouse_id) VALUES (1, 'John Doe', 'Manager', 1) ON DUPLICATE KEY UPDATE name=VALUES(name), role=VALUES(role), warehouse_id=VALUES(warehouse_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into employee (employee_id, name, role, warehouse_id) values (1, 'john doe', 'manager', 1) on duplicate key update name=values(name), role=values(role), warehouse_id=values(warehouse_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>INSERT INTO shipment (shipment_id, delivery_date, warehouse_id, employee_id) VALUES (1, '2022-08-25', 1, 1) ON DUPLICATE KEY UPDATE delivery_date=VALUES(delivery_date), warehouse_id=VALUES(warehouse_id), employee_id=VALUES(employee_id);</s>
<t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    shipment_id INT,
    FOREIGN KEY (shipment_id) REFERENCES shipment (shipment_id)
);

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY,
    delivery_date DATE NOT NULL,
    warehouse_id INT,
    employee_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id),
    FOREIGN KEY (employee_id) REFERENCES employee (employee_id)
);

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(100) NOT NULL,
    warehouse_id INT,
    FOREIGN KEY (warehouse_id) REFERENCES warehouse (warehouse_id)
);

CREATE TABLE warehouse (
    warehouse_id INT PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    capacity INT
);</t><s>insert into shipment (shipment_id, delivery_date, warehouse_id, employee_id) values (1, '2022-08-25', 1, 1) on duplicate key update delivery_date=values(delivery_date), warehouse_id=values(warehouse_id), employee_id=values(employee_id);</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update customer_name = 'john doe', customer_email = 'john.doe@example.com', customer_phone = '123456789';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Orders (order_id, customer_id, order_date, order_status) VALUES (1, 1, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE order_date = '2022-01-01', order_status = 'Pending';</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into orders (order_id, customer_id, order_date, order_status) values (1, 1, '2022-01-01', 'pending') on duplicate key update order_date = '2022-01-01', order_status = 'pending';</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>UPSERT INTO Products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.00) ON DUPLICATE KEY UPDATE product_name = 'Product A', product_price = 50.00;</s>
<t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT REFERENCES Orders(order_id), product_id INT REFERENCES Products(product_id), warehouse_id INT REFERENCES Warehouses(warehouse_id), shipment_date DATE);

CREATE TABLE IF NOT EXISTS Warehouses (warehouse_id INT PRIMARY KEY, warehouse_location STRING, warehouse_capacity INT);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, product_price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES Customers(customer_id), order_date DATE, order_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, customer_email STRING, customer_phone STRING);</t><s>upsert into products (product_id, product_name, product_price) values (1, 'product a', 50.00) on duplicate key update product_name = 'product a', product_price = 50.00;</s>
