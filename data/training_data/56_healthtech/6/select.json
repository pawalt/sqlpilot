[
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, health_history FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, preferences FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT health_history FROM TreatmentPlan WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE health_history LIKE '%flu%';",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT COUNT(*) FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT MAX(patient_id) FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT MIN(patient_id) FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT AVG(patient_id) FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT DISTINCT health_history FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan ORDER BY patient_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE patient_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE health_history IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE preferences LIKE 'cold%';",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM TreatmentPlan GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE health_history BETWEEN '2020-01-01' AND '2020-12-31';",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE patient_id = (SELECT MAX(patient_id) FROM TreatmentPlan);",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE health_history = (SELECT health_history FROM TreatmentPlan WHERE patient_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT AVG(LENGTH(health_history)) FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, health_history FROM TreatmentPlan WHERE patient_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, preferences FROM TreatmentPlan WHERE health_history LIKE '%allergy%';",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT COUNT(patient_id) AS num_patients FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, health_history, preferences FROM TreatmentPlan WHERE health_history LIKE '%diabetes%' AND preferences NOT LIKE '%sugar%';",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE health_history LIKE '%hypertension%' OR preferences LIKE '%low sodium%';",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT AVG(patient_id) AS avg_patient_id FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, health_history, preferences FROM TreatmentPlan WHERE patient_id <= 5;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT DISTINCT patient_id FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id FROM TreatmentPlan WHERE health_history LIKE '%asthma%' OR preferences LIKE '%inhaler%';",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE patient_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS num_records FROM TreatmentPlan GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, health_history FROM TreatmentPlan ORDER BY health_history DESC;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT health_history, COUNT(*) AS num_records FROM TreatmentPlan GROUP BY health_history;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT MAX(patient_id) AS max_patient_id FROM TreatmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, preferences FROM TreatmentPlan WHERE preferences IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, health_history, preferences FROM TreatmentPlan WHERE health_history LIKE '%allergy%' AND preferences IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE patient_id BETWEEN 6 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT patient_id, health_history, preferences FROM TreatmentPlan WHERE LENGTH(health_history) > 100;",
  "### TABLEDATA\n\nCREATE TABLE TreatmentPlan ( \n patient_id INT, \n health_history TEXT, \n preferences TEXT \n );\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlan WHERE patient_id = (SELECT MAX(patient_id) FROM TreatmentPlan);",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientHealthHistory;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition FROM PatientHealthHistory;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, treatment_plan FROM PatientHealthHistory WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientPreferences;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, preferred_treatment FROM PatientPreferences;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, preferred_treatment, lifestyle_choices FROM PatientPreferences WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, preferred_treatment FROM PatientHealthHistory INNER JOIN PatientPreferences ON PatientHealthHistory.patient_id = PatientPreferences.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT phh.patient_id, phh.health_condition, pp.preferred_treatment FROM PatientHealthHistory phh INNER JOIN PatientPreferences pp ON phh.patient_id = pp.patient_id WHERE phh.health_condition = 'Diabetes';",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientHealthHistory WHERE health_condition LIKE '%flu%';",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientPreferences WHERE lifestyle_choices LIKE '%vegan%';",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientHealthHistory WHERE treatment_plan IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientPreferences WHERE preferred_treatment IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition FROM PatientHealthHistory ORDER BY health_condition ASC;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, preferred_treatment FROM PatientPreferences ORDER BY patient_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition FROM PatientHealthHistory LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, preferred_treatment FROM PatientPreferences LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM PatientHealthHistory;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM PatientPreferences;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) FROM PatientHealthHistory;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT MIN(patient_id) FROM PatientPreferences;",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientHealthHistory WHERE health_condition = 'Diabetes'",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition FROM PatientHealthHistory WHERE treatment_plan LIKE '%medication%' AND health_condition = 'Hypertension'",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT phh.patient_id, phh.health_condition, pp.preferred_treatment FROM PatientHealthHistory phh INNER JOIN PatientPreferences pp ON phh.patient_id = pp.patient_id",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT phh.patient_id, phh.health_condition, pp.lifestyle_choices FROM PatientHealthHistory phh LEFT JOIN PatientPreferences pp ON phh.patient_id = pp.patient_id WHERE pp.lifestyle_choices = 'Healthy diet'",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientHealthHistory WHERE health_condition IN ('Asthma', 'Chronic pain')",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT phh.patient_id, phh.treatment_plan, pp.preferred_treatment FROM PatientHealthHistory phh RIGHT JOIN PatientPreferences pp ON phh.patient_id = pp.patient_id",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT phh.patient_id, phh.health_condition, pp.lifestyle_choices FROM PatientPreferences pp LEFT JOIN PatientHealthHistory phh ON pp.patient_id = phh.patient_id WHERE pp.lifestyle_choices IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT * FROM PatientHealthHistory WHERE health_condition LIKE '%illness%'",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM PatientHealthHistory",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) AS average_patient_id FROM PatientHealthHistory",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT MAX(patient_id) AS max_patient_id FROM PatientHealthHistory",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT MIN(patient_id) AS min_patient_id FROM PatientHealthHistory",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT health_condition) AS unique_health_conditions FROM PatientHealthHistory",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, treatment_plan FROM PatientHealthHistory WHERE patient_id = 100",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, treatment_plan FROM PatientHealthHistory ORDER BY patient_id DESC",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, treatment_plan FROM PatientHealthHistory WHERE patient_id BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, treatment_plan FROM PatientHealthHistory WHERE health_condition LIKE '%pain%' ORDER BY patient_id",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients, AVG(patient_id) AS average_patient_id FROM PatientHealthHistory",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, treatment_plan FROM PatientHealthHistory WHERE health_condition = 'Depression' AND treatment_plan LIKE '%therapy%'",
  "### TABLEDATA\n\nCREATE TABLE PatientHealthHistory (\n  patient_id INT PRIMARY KEY,\n  health_condition VARCHAR(255),\n  treatment_plan VARCHAR(500)\n);\n\n\nCREATE TABLE PatientPreferences (\n  patient_id INT PRIMARY KEY,\n  preferred_treatment VARCHAR(255),\n  lifestyle_choices VARCHAR(500)\n);\n\n### STATEMENT\n\nSELECT patient_id, health_condition, treatment_plan FROM PatientHealthHistory WHERE treatment_plan IS NULL",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, health_history FROM patients WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM treatment_plans;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT treatment_notes, recommendations FROM treatment_plans WHERE plan_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, treatment_notes FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT preferences.preference_category, preferences.preference_value FROM preferences WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT p.patient_name, t.treatment_notes FROM patients p JOIN treatment_plans t ON p.patient_id = t.patient_id WHERE p.age < 30;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT p.patient_name, tp.treatment_notes, tp.recommendations FROM patients p JOIN treatment_plans tp ON p.patient_id = tp.patient_id WHERE p.age BETWEEN 30 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT p.patient_name, pr.preference_category, pr.preference_value FROM patients p JOIN preferences pr ON p.patient_id = pr.patient_id WHERE pr.preference_category = 'diet';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT p.patient_id, tp.treatment_notes, pr.preference_value FROM patients p JOIN treatment_plans tp ON p.patient_id = tp.patient_id JOIN preferences pr ON p.patient_id = pr.patient_id WHERE tp.plan_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT p.patient_name, pr1.preference_category AS preference_category_1, pr1.preference_value AS preference_value_1, pr2.preference_category AS preference_category_2, pr2.preference_value AS preference_value_2 FROM patients p JOIN preferences pr1 ON p.patient_id = pr1.patient_id JOIN preferences pr2 ON p.patient_id = pr2.patient_id WHERE pr1.preference_category = 'exercise' AND pr2.preference_category = 'diet';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(tp.plan_id) AS num_plans FROM patients p LEFT JOIN treatment_plans tp ON p.patient_id = tp.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT p.patient_name, MAX(tp.plan_id) AS latest_plan_id FROM patients p LEFT JOIN treatment_plans tp ON p.patient_id = tp.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT p.patient_name FROM patients p JOIN treatment_plans tp ON p.patient_id = tp.patient_id WHERE tp.treatment_notes LIKE '%medication%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id AS id, patient_name AS name FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, COUNT(plan_id) AS num_plans FROM patients LEFT JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_id, AVG(age) AS avg_age FROM patients GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, MAX(age) AS max_age FROM patients GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, health_history FROM patients ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT preference_category FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM patients WHERE age > 50",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, health_history FROM patients WHERE patient_id IN (SELECT patient_id FROM treatment_plans)",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, age, treatment_notes FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT plan_id, treatment_notes FROM treatment_plans WHERE patient_id IN (SELECT patient_id FROM patients WHERE age < 30)",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, health_history, recommendations FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id WHERE treatment_notes LIKE '%medication%'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, age, preferences.preference_category FROM patients JOIN preferences ON patients.patient_id = preferences.patient_id",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, health_history, recommendations, preference_value FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM patients ORDER BY age DESC",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, age, health_history, preference_category FROM patients JOIN preferences ON patients.patient_id = preferences.patient_id ORDER BY age ASC",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, preferences.preference_category, recommendations FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id WHERE age > 40",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT preference_category FROM preferences",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM patients",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS total_plans FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id GROUP BY patient_name",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, AVG(age) AS avg_age FROM patients GROUP BY patient_name",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, preferences.preference_category, COUNT(*) AS total_preferences FROM patients JOIN preferences ON patients.patient_id = preferences.patient_id GROUP BY patient_name, preferences.preference_category",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS total_plans FROM patients LEFT JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id GROUP BY patient_name HAVING total_plans >= 2",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, MAX(age) AS max_age FROM patients",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, MIN(age) AS min_age FROM patients",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, preferences.preference_category, MAX(age) AS max_age FROM patients JOIN preferences ON patients.patient_id = preferences.patient_id GROUP BY patient_name, preferences.preference_category",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    age INT,\n    health_history TEXT,\n    preferences TEXT\n)\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    treatment_notes TEXT,\n    recommendations TEXT\n)\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    preference_category TEXT,\n    preference_value TEXT\n)\n\n### STATEMENT\n\nSELECT patient_name, AVG(age) AS avg_age FROM patients WHERE age > 60",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT name, age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, gender FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM HealthHistory;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT diagnosis, date FROM HealthHistory;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, diagnosis FROM HealthHistory;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Preferences;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, preference_type FROM Preferences;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT preference_id, preference_value FROM Preferences;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM TreatmentPlans;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, plan_details FROM TreatmentPlans;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT plan_id, patient_id FROM TreatmentPlans;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, Preferences.preference_value FROM Patients JOIN Preferences ON Patients.patient_id = Preferences.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis FROM Patients JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, TreatmentPlans.plan_details FROM Patients JOIN TreatmentPlans ON Patients.patient_id = TreatmentPlans.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis, TreatmentPlans.plan_details FROM Patients JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id JOIN TreatmentPlans ON Patients.patient_id = TreatmentPlans.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis, Preferences.preference_value FROM Patients JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id JOIN Preferences ON Patients.patient_id = Preferences.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.date, TreatmentPlans.plan_details, Preferences.preference_value FROM Patients JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id JOIN TreatmentPlans ON Patients.patient_id = TreatmentPlans.patient_id JOIN Preferences ON Patients.patient_id = Preferences.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis, Preferences.preference_value FROM Patients JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id LEFT JOIN Preferences ON Patients.patient_id = Preferences.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, name, age FROM Patients WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis FROM Patients INNER JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis, HealthHistory.date FROM Patients INNER JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id WHERE HealthHistory.date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, Preferences.preference_type, Preferences.preference_value FROM Patients INNER JOIN Preferences ON Patients.patient_id = Preferences.patient_id WHERE Preferences.preference_type = 'diet';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, TreatmentPlans.plan_details FROM Patients INNER JOIN TreatmentPlans ON Patients.patient_id = TreatmentPlans.patient_id WHERE TreatmentPlans.plan_details LIKE '%exercise%';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis FROM Patients INNER JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id WHERE HealthHistory.diagnosis IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis FROM Patients LEFT JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis FROM Patients RIGHT JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis FROM Patients FULL JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.diagnosis, Preferences.preference_value FROM Patients INNER JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id INNER JOIN Preferences ON Patients.patient_id = Preferences.patient_id WHERE Preferences.preference_value = 'low-sodium';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, COUNT(*) AS total_records FROM Patients LEFT JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id GROUP BY Patients.name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, SUM(CAST(TreatmentPlans.plan_details AS INT)) AS total_plans FROM Patients LEFT JOIN TreatmentPlans ON Patients.patient_id = TreatmentPlans.patient_id GROUP BY Patients.name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, MAX(age) AS max_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, MIN(age) AS min_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, HealthHistory.date, TreatmentPlans.plan_details FROM Patients LEFT JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id LEFT JOIN TreatmentPlans ON Patients.patient_id = TreatmentPlans.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, AVG(age) AS avg_age, MAX(age) AS max_age, MIN(age) AS min_age FROM Patients GROUP BY Patients.name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT NOT NULL,\n  gender VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE HealthHistory (\n  record_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  diagnosis VARCHAR(100) NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE Preferences (\n  preference_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  preference_type VARCHAR(50) NOT NULL,\n  preference_value VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE TreatmentPlans (\n  plan_id SERIAL PRIMARY KEY,\n  patient_id INT REFERENCES Patients(patient_id),\n  plan_details TEXT NULL\n);\n\n### STATEMENT\n\nSELECT Patients.name, COUNT(HealthHistory.record_id) AS total_records FROM Patients LEFT JOIN HealthHistory ON Patients.patient_id = HealthHistory.patient_id GROUP BY Patients.name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT name, age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, gender FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM health_history;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM health_history;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT food_preference FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM treatment_plans;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, start_date, end_date FROM treatment_plans;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM medication;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM medication;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, h.diagnosis FROM patients p JOIN health_history h ON p.patient_id = h.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, pp.food_preference FROM patients p JOIN preferences pp ON p.patient_id = pp.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, t.start_date, t.end_date FROM patients p JOIN treatment_plans t ON p.patient_id = t.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, m.medication_name FROM patients p JOIN medication m ON p.patient_id = m.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, h.diagnosis, t.plan_details FROM patients p JOIN health_history h ON p.patient_id = h.patient_id JOIN treatment_plans t ON p.patient_id = t.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, pp.food_preference, m.dosage FROM patients p JOIN preferences pp ON p.patient_id = pp.patient_id JOIN medication m ON p.patient_id = m.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, t.start_date, t.end_date, m.medication_name FROM patients p JOIN treatment_plans t ON p.patient_id = t.patient_id JOIN medication m ON p.patient_id = m.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, h.diagnosis, t.plan_details, m.dosage FROM patients p JOIN health_history h ON p.patient_id = h.patient_id JOIN treatment_plans t ON p.patient_id = t.patient_id JOIN medication m ON p.patient_id = m.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT p.name, pp.food_preference, t.start_date, t.end_date, m.medication_name FROM patients p JOIN preferences pp ON p.patient_id = pp.patient_id JOIN treatment_plans t ON p.patient_id = t.patient_id JOIN medication m ON p.patient_id = m.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, treatment_plans.start_date, medication.medication_name FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN medication ON patients.patient_id = medication.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.food_preference FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT preferences.food_preference, treatment_plans.plan_details FROM preferences JOIN treatment_plans ON preferences.patient_id = treatment_plans.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, treatment_plans.start_date, medication.medication_name FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN medication ON patients.patient_id = medication.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.activity_preference FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, treatment_plans.plan_details, medication.dosage FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN medication ON patients.patient_id = medication.patient_id WHERE age < 40;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT preferences.food_preference, treatment_plans.start_date, medication.medication_name FROM preferences JOIN treatment_plans ON preferences.patient_id = treatment_plans.patient_id JOIN medication ON preferences.patient_id = medication.patient_id WHERE preferences.activity_preference = 'Swimming';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.food_preference, medication.medication_name FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id JOIN medication ON patients.patient_id = medication.patient_id WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, treatment_plans.start_date, medication.medication_name, medication.dosage FROM patients JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN medication ON patients.patient_id = medication.patient_id WHERE treatment_plans.end_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT preferences.food_preference, treatment_plans.plan_details, medication.dosage FROM preferences JOIN treatment_plans ON preferences.patient_id = treatment_plans.patient_id JOIN medication ON preferences.patient_id = medication.patient_id WHERE preferences.activity_preference = 'Yoga';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.activity_preference, medication.dosage FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id JOIN medication ON patients.patient_id = medication.patient_id WHERE age >= 60;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.food_preference, treatment_plans.plan_details, medication.medication_name FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN medication ON patients.patient_id = medication.patient_id WHERE gender = 'Female' AND age > 30;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.food_preference, treatment_plans.start_date FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id WHERE treatment_plans.end_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT preferences.activity_preference, treatment_plans.plan_details, medication.medication_name, medication.dosage FROM preferences JOIN treatment_plans ON preferences.patient_id = treatment_plans.patient_id JOIN medication ON preferences.patient_id = medication.patient_id WHERE treatment_plans.start_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.food_preference, treatment_plans.plan_details, medication.medication_name, medication.dosage FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN medication ON patients.patient_id = medication.patient_id WHERE age < 50;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT preferences.food_preference, treatment_plans.plan_details, medication.medication_name, medication.dosage FROM preferences JOIN treatment_plans ON preferences.patient_id = treatment_plans.patient_id JOIN medication ON preferences.patient_id = medication.patient_id WHERE treatment_plans.end_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.food_preference, preferences.activity_preference, treatment_plans.start_date, medication.medication_name, medication.dosage FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id JOIN medication ON patients.patient_id = medication.patient_id WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    name TEXT,\n    age INT,\n    gender TEXT\n);\n\nCREATE TABLE health_history (\n    history_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE preferences (\n    preference_id INT PRIMARY KEY,\n    patient_id INT,\n    food_preference TEXT,\n    activity_preference TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE treatment_plans (\n    plan_id INT PRIMARY KEY,\n    patient_id INT,\n    start_date DATE,\n    end_date DATE,\n    plan_details TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE medication (\n    medication_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name TEXT,\n    dosage TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.name, health_history.diagnosis, preferences.activity_preference, treatment_plans.plan_details FROM patients JOIN health_history ON patients.patient_id = health_history.patient_id JOIN preferences ON patients.patient_id = preferences.patient_id JOIN treatment_plans ON patients.patient_id = treatment_plans.patient_id WHERE age < 50;"
]