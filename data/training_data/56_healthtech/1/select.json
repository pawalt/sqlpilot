[
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions WHERE dosage_mg > 100;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE patient_id = '12345678-1234-1234-1234-123456789012';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT patient_id FROM prescriptions ORDER BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT AVG(dosage_mg) FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT medication_name, COUNT(*) FROM prescriptions GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT DISTINCT medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE dosage_frequency = 'Daily';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage_mg FROM prescriptions WHERE dosage_frequency = 'Twice daily' ORDER BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE dosage_mg BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT patient_id, medication_name FROM prescriptions WHERE dosage_mg < 50 OR dosage_frequency = 'As needed';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions WHERE medication_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT patient_id, dosage_frequency FROM prescriptions WHERE dosage_mg <= 75;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, medication_name FROM prescriptions WHERE dosage_frequency = 'Weekly' AND dosage_mg >= 200;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT medication_name, MAX(dosage_mg) FROM prescriptions GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT medication_name, MIN(dosage_mg) FROM prescriptions GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT patient_id) FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT AVG(dosage_mg) AS average_dosage FROM prescriptions WHERE patient_id = '87654321-1234-1234-1234-210987654321';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions WHERE dosage_mg > 100",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE dosage_frequency = 'Once a day'",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM prescriptions GROUP BY patient_id HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT DISTINCT medication_name FROM prescriptions ORDER BY medication_name ASC",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT AVG(dosage_mg) AS average_dosage FROM prescriptions",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage_mg FROM prescriptions WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE medication_name LIKE '%Aspirin%'",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE dosage_mg BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT patient_id, SUM(dosage_mg) AS total_dosage FROM prescriptions GROUP BY patient_id",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n    prescription_id UUID PRIMARY KEY,\n    patient_id UUID,\n    medication_name VARCHAR(255),\n    dosage_mg INT,\n    dosage_frequency VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT medication_name, COUNT(*) AS prescription_count FROM prescriptions GROUP BY medication_name ORDER BY prescription_count DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM medication_info;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT medication_name, manufacturer FROM medication_info;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, medication_name, dosage FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE patient_id = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE dosage > 10;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions WHERE dosage < 5;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM medication_info WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT medication_name, manufacturer FROM medication_info WHERE medication_id = 'xyz789';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE medication_name LIKE '%Aspirin%';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM medication_info WHERE manufacturer IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage FROM prescriptions WHERE patient_id = 'def456' AND dosage <= 20;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE medication_name = 'Paracetamol';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id FROM prescriptions WHERE dosage >= 15;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT medication_name, quantity FROM medication_info WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions ORDER BY prescription_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM medication_info ORDER BY quantity ASC;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage FROM prescriptions LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM medication_info OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM prescriptions WHERE dosage > 100;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT manufacturer, quantity FROM medication_info WHERE quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescriptions.patient_id, medication_info.manufacturer FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions WHERE dosage < 50;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT patient_id, medication_name, manufacturer FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE dosage > 75;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE patient_id = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM prescriptions WHERE dosage BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, quantity FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE dosage > 75;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescriptions.patient_id, medication_info.quantity FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE medication_info.quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, manufacturer FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE prescriptions.patient_id = 'xyz789';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescriptions.prescription_id, medication_info.quantity FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE prescriptions.dosage > 50;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM medication_info WHERE manufacturer = 'ABC Pharmaceuticals';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM prescriptions WHERE medication_name LIKE '%pain%';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescriptions.patient_id, medication_info.manufacturer FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE prescriptions.dosage < 50;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions WHERE dosage = 50;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT patient_id, medication_name, manufacturer FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE quantity < 25;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE patient_id = 'def456';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM prescriptions WHERE dosage > 75;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tdosage FLOAT NOT NULL\n);\n\nCREATE TABLE medication_info (\n\tmedication_id UUID PRIMARY KEY,\n\tmedication_name VARCHAR(255) NOT NULL,\n\tmanufacturer VARCHAR(255),\n\tquantity INTEGER\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, quantity FROM prescriptions INNER JOIN medication_info ON prescriptions.medication_name = medication_info.medication_name WHERE dosage < 100;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medication_prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM medication_prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT * FROM dosage_history;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT prescription_id, dosage FROM dosage_history;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, medication_name FROM medication_prescriptions WHERE dosage > 50;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM patients WHERE date_of_birth < '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, patient_id FROM patients ORDER BY patient_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM medication_prescriptions ORDER BY prescription_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM medication_prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT AVG(dosage) FROM dosage_history;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) FROM medication_prescriptions INNER JOIN patients ON medication_prescriptions.patient_id = patients.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM medication_prescriptions INNER JOIN dosage_history ON medication_prescriptions.prescription_id = dosage_history.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM medication_prescriptions LEFT JOIN dosage_history ON medication_prescriptions.prescription_id = dosage_history.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, SUM(dosage) AS total_dosage FROM dosage_history GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(dosage) AS avg_dosage FROM medication_prescriptions INNER JOIN dosage_history ON medication_prescriptions.prescription_id = dosage_history.prescription_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT medication_name, AVG(dosage) AS avg_dosage FROM medication_prescriptions INNER JOIN dosage_history ON medication_prescriptions.prescription_id = dosage_history.prescription_id GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM dosage_history GROUP BY patient_id HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, MAX(dosage) FROM medication_prescriptions INNER JOIN dosage_history ON medication_prescriptions.prescription_id = dosage_history.prescription_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medication_prescriptions WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM patients WHERE date_of_birth < '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM medication_prescriptions WHERE dosage > 50;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id WHERE medication_name LIKE '%aspirin%';",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id WHERE dosage BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, history_id FROM patients JOIN dosage_history ON patients.patient_id = dosage_history.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT count(*) AS number_of_prescriptions FROM medication_prescriptions WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS number_of_prescriptions FROM patients JOIN medication_prescriptions ON patients.patient_id = medication_prescriptions.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(dosage) AS avg_dosage FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id GROUP BY patient_name HAVING avg_dosage > 50;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT medication_name, SUM(dosage) AS total_dosage FROM medication_prescriptions GROUP BY medication_name HAVING total_dosage > 500;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, MAX(dosage) AS max_dosage FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, MIN(dosage) AS min_dosage FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, date_prescribed FROM patients JOIN dosage_history ON patients.patient_id = dosage_history.patient_id WHERE date_prescribed >= '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, COUNT(*) AS number_of_prescriptions FROM patients JOIN medication_prescriptions ON patients.patient_id = medication_prescriptions.patient_id GROUP BY patient_name, medication_name;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(dosage) AS avg_dosage FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id GROUP BY patient_name ORDER BY avg_dosage DESC;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, MAX(dosage) AS max_dosage FROM medication_prescriptions JOIN patients ON medication_prescriptions.patient_id = patients.patient_id GROUP BY patient_name ORDER BY max_dosage DESC;",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage, date_prescribed FROM patients JOIN dosage_history ON patients.patient_id = dosage_history.patient_id WHERE date_prescribed BETWEEN '2020-01-01' AND '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage, date_prescribed FROM patients JOIN dosage_history ON patients.patient_id = dosage_history.patient_id WHERE patient_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE medication_prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT,\n    medication_name VARCHAR(50),\n    dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender CHAR(1)\n);\n\n\nCREATE TABLE dosage_history (\n    history_id INT PRIMARY KEY,\n    prescription_id INT,\n    dosage FLOAT,\n    date_prescribed DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_name FROM patients JOIN medication_prescriptions ON patients.patient_id = medication_prescriptions.patient_id WHERE medication_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM medications;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, medication_id FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT dosage_instructions FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM doctors;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name FROM doctors;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage_instructions FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id JOIN medications ON medications.medication_id = prescriptions.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE date_of_birth >= '1990-01-01' AND date_of_birth <= '1999-12-31';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM patients WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT prescription_id, dosage_instructions FROM prescriptions WHERE medication_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM medications WHERE medication_name LIKE '%pain%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM doctors ORDER BY doctor_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) AS average_patient_id FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name, COUNT(doctor_id) AS total_doctors FROM doctors GROUP BY doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(prescription_id) AS total_prescriptions FROM prescriptions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT medication_name, SUM(medication_id) AS total_medication_id FROM medications GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name, patient_name, medication_name FROM doctors JOIN prescriptions ON doctors.doctor_id = prescriptions.doctor_id JOIN patients ON patients.patient_id = prescriptions.patient_id JOIN medications ON medications.medication_id = prescriptions.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM patients p JOIN prescriptions pr ON p.patient_id = pr.patient_id JOIN medications m ON pr.medication_id = m.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage FROM patients p, prescriptions pr, medications m WHERE p.patient_id = pr.patient_id AND pr.medication_id = m.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, m.medication_name, pr.dosage_instructions FROM patients p JOIN prescriptions pr ON p.patient_id = pr.patient_id JOIN medications m ON pr.medication_id = m.medication_id WHERE p.date_of_birth >= '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, m.medication_name, pr.dosage_instructions FROM patients p, prescriptions pr, medications m WHERE p.patient_id = pr.patient_id AND pr.medication_id = m.medication_id AND p.date_of_birth >= '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name FROM doctors WHERE doctor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name, p.patient_name, m.medication_name FROM doctors d JOIN prescriptions pr ON d.doctor_id = pr.doctor_id JOIN patients p ON pr.patient_id = p.patient_id JOIN medications m ON pr.medication_id = m.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name, p.patient_name, m.medication_name FROM doctors d, prescriptions pr, patients p, medications m WHERE d.doctor_id = pr.doctor_id AND pr.patient_id = p.patient_id AND pr.medication_id = m.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name, p.patient_name, m.medication_name FROM doctors d JOIN prescriptions pr ON d.doctor_id = pr.doctor_id JOIN patients p ON pr.patient_id = p.patient_id JOIN medications m ON pr.medication_id = m.medication_id WHERE pr.dosage_instructions LIKE '%take%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT doctor_name, p.patient_name, m.medication_name FROM doctors d, prescriptions pr, patients p, medications m WHERE d.doctor_id = pr.doctor_id AND pr.patient_id = p.patient_id AND pr.medication_id = m.medication_id AND pr.dosage_instructions LIKE '%take%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(pr.prescription_id) AS total_prescriptions FROM patients p JOIN prescriptions pr ON p.patient_id = pr.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(pr.prescription_id) AS total_prescriptions FROM patients p, prescriptions pr WHERE p.patient_id = pr.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, COUNT(pr.prescription_id) AS total_prescriptions FROM doctors d JOIN prescriptions pr ON d.doctor_id = pr.doctor_id GROUP BY d.doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, COUNT(pr.prescription_id) AS total_prescriptions FROM doctors d, prescriptions pr WHERE d.doctor_id = pr.doctor_id GROUP BY d.doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, AVG(pr.prescription_id) AS avg_prescriptions FROM patients p JOIN prescriptions pr ON p.patient_id = pr.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, AVG(pr.prescription_id) AS avg_prescriptions FROM patients p, prescriptions pr WHERE p.patient_id = pr.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, AVG(pr.prescription_id) AS avg_prescriptions FROM doctors d JOIN prescriptions pr ON d.doctor_id = pr.doctor_id GROUP BY d.doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, AVG(pr.prescription_id) AS avg_prescriptions FROM doctors d, prescriptions pr WHERE d.doctor_id = pr.doctor_id GROUP BY d.doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, SUM(pr.prescription_id) AS total_prescriptions FROM patients p JOIN prescriptions pr ON p.patient_id = pr.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_name, SUM(pr.prescription_id) AS total_prescriptions FROM patients p, prescriptions pr WHERE p.patient_id = pr.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, SUM(pr.prescription_id) AS total_prescriptions FROM doctors d JOIN prescriptions pr ON d.doctor_id = pr.doctor_id GROUP BY d.doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50) NOT NULL,\n    date_of_birth DATE NOT NULL\n);\n\nCREATE TABLE medications (\n    medication_id INT PRIMARY KEY,\n    medication_name VARCHAR(50) NOT NULL,\n    dosage VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE prescriptions (\n    prescription_id INT PRIMARY KEY,\n    patient_id INT NOT NULL,\n    medication_id INT NOT NULL,\n    dosage_instructions TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),\n    FOREIGN KEY (medication_id) REFERENCES medications(medication_id)\n);\n\nCREATE TABLE doctors (\n    doctor_id INT PRIMARY KEY,\n    doctor_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, SUM(pr.prescription_id) AS total_prescriptions FROM doctors d, prescriptions pr WHERE d.doctor_id = pr.doctor_id GROUP BY d.doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT id, medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM doctors;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT name, specialization FROM doctors;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacies;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT name, location FROM pharmacies;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions_history;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id FROM prescriptions_history;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, patients.name FROM prescriptions JOIN patients ON prescriptions.patient_id = patients.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, patients.name FROM prescriptions LEFT JOIN patients ON prescriptions.patient_id = patients.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, patients.name, prescriptions_history.prescription_date FROM prescriptions JOIN prescriptions_history ON prescriptions.id = prescriptions_history.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, patients.name, prescriptions_history.prescription_date FROM prescriptions LEFT JOIN prescriptions_history ON prescriptions.id = prescriptions_history.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, patients.name, prescriptions_history.prescription_date FROM prescriptions JOIN prescriptions_history ON prescriptions.id = prescriptions_history.prescription_id JOIN patients ON prescriptions.patient_id = patients.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, patients.name, prescriptions_history.prescription_date FROM prescriptions LEFT JOIN prescriptions_history ON prescriptions.id = prescriptions_history.prescription_id LEFT JOIN patients ON prescriptions.patient_id = patients.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, doctors.name FROM prescriptions JOIN doctors ON prescriptions.medication_name = doctors.specialization;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, doctors.name FROM prescriptions LEFT JOIN doctors ON prescriptions.medication_name = doctors.specialization;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, pharmacies.name FROM prescriptions JOIN pharmacies ON prescriptions.id = pharmacies.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prescriptions.id, prescriptions.medication_name, pharmacies.name FROM prescriptions LEFT JOIN pharmacies ON prescriptions.id = pharmacies.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT id, medication_name FROM prescriptions WHERE dosage > 10;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name, p.age, pr.medication_name FROM patients p INNER JOIN prescriptions pr ON p.id = pr.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT d.name, d.specialization, pr.medication_name FROM doctors d INNER JOIN prescriptions pr ON d.id = pr.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT ph.name, pr.medication_name, ph.location FROM pharmacies ph INNER JOIN prescriptions pr ON ph.id = pr.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT ph.name AS pharmacy_name, p.name AS patient_name, pr.medication_name FROM pharmacies ph INNER JOIN prescriptions_history phis ON ph.id = phis.id INNER JOIN patients p ON phis.patient_id = p.id INNER JOIN prescriptions pr ON phis.prescription_id = pr.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name AS patient_name, prh.prescription_date FROM patients p INNER JOIN prescriptions_history prh ON p.id = prh.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS prescription_count FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(dosage) AS average_dosage FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age, MIN(age) AS min_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT gender, COUNT(*) AS patient_count FROM patients GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT pr.medication_name, COUNT(*) AS prescription_count FROM prescriptions pr INNER JOIN prescriptions_history ph ON pr.id = ph.prescription_id GROUP BY pr.medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT prh.prescription_date, COUNT(*) AS prescription_count FROM prescriptions_history prh GROUP BY prh.prescription_date ORDER BY prescription_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name, pr.medication_name, ph.location FROM patients p INNER JOIN prescriptions pr ON p.id = pr.patient_id INNER JOIN pharmacies ph ON pr.id = ph.id ORDER BY p.name, pr.medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name, pr.medication_name, ph.location FROM patients p INNER JOIN prescriptions pr ON p.id = pr.patient_id INNER JOIN pharmacies ph ON pr.id = ph.id WHERE p.age > 50;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name, pr.medication_name, ph.location FROM patients p INNER JOIN prescriptions pr ON p.id = pr.patient_id INNER JOIN pharmacies ph ON pr.id = ph.id WHERE ph.location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name, pr.medication_name, d.specialization FROM patients p INNER JOIN prescriptions pr ON p.id = pr.patient_id INNER JOIN doctors d ON pr.id = d.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name AS patient_name, prh.prescription_date, d.name AS doctor_name FROM patients p INNER JOIN prescriptions_history prh ON p.id = prh.patient_id INNER JOIN doctors d ON prh.prescription_id = d.id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage FLOAT\n);\n\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  age INT,\n  gender VARCHAR(10)\n);\n\n\nCREATE TABLE doctors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  specialization VARCHAR(255)\n);\n\n\nCREATE TABLE pharmacies (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE prescriptions_history (\n  id INT PRIMARY KEY,\n  prescription_id INT,\n  patient_id INT,\n  prescription_date DATE\n);\n\n### STATEMENT\n\nSELECT p.name AS patient_name, prh.prescription_date, ph.name AS pharmacy_name FROM patients p INNER JOIN prescriptions_history prh ON p.id = prh.patient_id INNER JOIN pharmacies ph ON prh.prescription_id = ph.id;"
]