<t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), medical_condition VARCHAR(100))</t><stat>UPSERT INTO patients (id, name, age, gender, medical_condition) VALUES (1, 'John Doe', 30, 'Male', 'None')</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), medical_condition VARCHAR(100))</t><stat>upsert into patients (id, name, age, gender, medical_condition) values (1, 'john doe', 30, 'male', 'none')</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), medical_condition VARCHAR(100))</t><stat>UPSERT INTO patients (id, name, age, gender, medical_condition) VALUES (2, 'Jane Smith', 25, 'Female', 'Allergies')</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), medical_condition VARCHAR(100))</t><stat>upsert into patients (id, name, age, gender, medical_condition) values (2, 'jane smith', 25, 'female', 'allergies')</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), medical_condition VARCHAR(100))</t><stat>UPSERT INTO patients (id, name, age, gender, medical_condition) VALUES (3, 'Alice Johnson', 35, 'Female', 'Diabetes')</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), medical_condition VARCHAR(100))</t><stat>upsert into patients (id, name, age, gender, medical_condition) values (3, 'alice johnson', 35, 'female', 'diabetes')</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))

CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))</t><stat>UPSERT INTO patients (id, name, age, gender, city) VALUES (1, 'John Doe', 30, 'Male', 'New York') ON DUPLICATE KEY UPDATE name = 'John Doe', age = 30, gender = 'Male', city = 'New York';</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))

CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))</t><stat>upsert into patients (id, name, age, gender, city) values (1, 'john doe', 30, 'male', 'new york') on duplicate key update name = 'john doe', age = 30, gender = 'male', city = 'new york';</stat><divider><t>CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))

CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))</t><stat>UPSERT INTO patients (id, name, age, gender, city) VALUES (1, 'John Doe', 30, 'Male', 'New York') ON DUPLICATE KEY UPDATE name = 'John Doe', age = 30, gender = 'Male', city = 'New York';</stat><divider><t>CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))

CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))</t><stat>upsert into patients (id, name, age, gender, city) values (1, 'john doe', 30, 'male', 'new york') on duplicate key update name = 'john doe', age = 30, gender = 'male', city = 'new york';</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))

CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))</t><stat>UPSERT INTO patients (id, name, age, gender, city) VALUES (2, 'Jane Smith', 25, 'Female', 'Los Angeles') ON DUPLICATE KEY UPDATE name = 'Jane Smith', age = 25, gender = 'Female', city = 'Los Angeles';</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))

CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))</t><stat>upsert into patients (id, name, age, gender, city) values (2, 'jane smith', 25, 'female', 'los angeles') on duplicate key update name = 'jane smith', age = 25, gender = 'female', city = 'los angeles';</stat><divider><t>CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))

CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))</t><stat>UPSERT INTO patients (id, name, age, gender, city) VALUES (2, 'Jane Smith', 25, 'Female', 'Los Angeles') ON DUPLICATE KEY UPDATE name = 'Jane Smith', age = 25, gender = 'Female', city = 'Los Angeles';</stat><divider><t>CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))

CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))</t><stat>upsert into patients (id, name, age, gender, city) values (2, 'jane smith', 25, 'female', 'los angeles') on duplicate key update name = 'jane smith', age = 25, gender = 'female', city = 'los angeles';</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))

CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))</t><stat>UPSERT INTO appointments (id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 101, '2022-12-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 101, appointment_date = '2022-12-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))

CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))</t><stat>upsert into appointments (id, patient_id, doctor_id, appointment_date, status) values (1, 1, 101, '2022-12-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 101, appointment_date = '2022-12-15', status = 'scheduled';</stat><divider><t>CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))

CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))</t><stat>UPSERT INTO appointments (id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 101, '2022-12-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 101, appointment_date = '2022-12-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE appointments (id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(20))

CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50))</t><stat>upsert into appointments (id, patient_id, doctor_id, appointment_date, status) values (1, 1, 101, '2022-12-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 101, appointment_date = '2022-12-15', status = 'scheduled';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>UPSERT INTO patients (patient_id, patient_name, age, diagnosis, appointment_date) VALUES (1, 'Alice', 25, 'Fever', '2022-04-15') ON DUPLICATE KEY UPDATE patient_name = 'Alice', age = 25, diagnosis = 'Fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>upsert into patients (patient_id, patient_name, age, diagnosis, appointment_date) values (1, 'alice', 25, 'fever', '2022-04-15') on duplicate key update patient_name = 'alice', age = 25, diagnosis = 'fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>UPSERT INTO patients (patient_id, patient_name, age, diagnosis, appointment_date) VALUES (1, 'Alice', 25, 'Fever', '2022-04-15') ON DUPLICATE KEY UPDATE patient_name = 'Alice', age = 25, diagnosis = 'Fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>upsert into patients (patient_id, patient_name, age, diagnosis, appointment_date) values (1, 'alice', 25, 'fever', '2022-04-15') on duplicate key update patient_name = 'alice', age = 25, diagnosis = 'fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>UPSERT INTO patients (patient_id, patient_name, age, diagnosis, appointment_date) VALUES (1, 'Alice', 25, 'Fever', '2022-04-15') ON DUPLICATE KEY UPDATE patient_name = 'Alice', age = 25, diagnosis = 'Fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>upsert into patients (patient_id, patient_name, age, diagnosis, appointment_date) values (1, 'alice', 25, 'fever', '2022-04-15') on duplicate key update patient_name = 'alice', age = 25, diagnosis = 'fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>UPSERT INTO patients (patient_id, patient_name, age, diagnosis, appointment_date) VALUES (1, 'Alice', 25, 'Fever', '2022-04-15') ON DUPLICATE KEY UPDATE patient_name = 'Alice', age = 25, diagnosis = 'Fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>upsert into patients (patient_id, patient_name, age, diagnosis, appointment_date) values (1, 'alice', 25, 'fever', '2022-04-15') on duplicate key update patient_name = 'alice', age = 25, diagnosis = 'fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>UPSERT INTO patients (patient_id, patient_name, age, diagnosis, appointment_date) VALUES (1, 'Alice', 25, 'Fever', '2022-04-15') ON DUPLICATE KEY UPDATE patient_name = 'Alice', age = 25, diagnosis = 'Fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>upsert into patients (patient_id, patient_name, age, diagnosis, appointment_date) values (1, 'alice', 25, 'fever', '2022-04-15') on duplicate key update patient_name = 'alice', age = 25, diagnosis = 'fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>UPSERT INTO patients (patient_id, patient_name, age, diagnosis, appointment_date) VALUES (1, 'Alice', 25, 'Fever', '2022-04-15') ON DUPLICATE KEY UPDATE patient_name = 'Alice', age = 25, diagnosis = 'Fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>upsert into patients (patient_id, patient_name, age, diagnosis, appointment_date) values (1, 'alice', 25, 'fever', '2022-04-15') on duplicate key update patient_name = 'alice', age = 25, diagnosis = 'fever', appointment_date = '2022-04-15';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialization, schedule) VALUES (1, 'Dr. Smith', 'Pediatrics', 'Monday - Friday') ON DUPLICATE KEY UPDATE doctor_name = 'Dr. Smith', specialization = 'Pediatrics', schedule = 'Monday - Friday';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>upsert into doctors (doctor_id, doctor_name, specialization, schedule) values (1, 'dr. smith', 'pediatrics', 'monday - friday') on duplicate key update doctor_name = 'dr. smith', specialization = 'pediatrics', schedule = 'monday - friday';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialization, schedule) VALUES (1, 'Dr. Smith', 'Pediatrics', 'Monday - Friday') ON DUPLICATE KEY UPDATE doctor_name = 'Dr. Smith', specialization = 'Pediatrics', schedule = 'Monday - Friday';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>upsert into doctors (doctor_id, doctor_name, specialization, schedule) values (1, 'dr. smith', 'pediatrics', 'monday - friday') on duplicate key update doctor_name = 'dr. smith', specialization = 'pediatrics', schedule = 'monday - friday';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialization, schedule) VALUES (1, 'Dr. Smith', 'Pediatrics', 'Monday - Friday') ON DUPLICATE KEY UPDATE doctor_name = 'Dr. Smith', specialization = 'Pediatrics', schedule = 'Monday - Friday';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>upsert into doctors (doctor_id, doctor_name, specialization, schedule) values (1, 'dr. smith', 'pediatrics', 'monday - friday') on duplicate key update doctor_name = 'dr. smith', specialization = 'pediatrics', schedule = 'monday - friday';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialization, schedule) VALUES (1, 'Dr. Smith', 'Pediatrics', 'Monday - Friday') ON DUPLICATE KEY UPDATE doctor_name = 'Dr. Smith', specialization = 'Pediatrics', schedule = 'Monday - Friday';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>upsert into doctors (doctor_id, doctor_name, specialization, schedule) values (1, 'dr. smith', 'pediatrics', 'monday - friday') on duplicate key update doctor_name = 'dr. smith', specialization = 'pediatrics', schedule = 'monday - friday';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialization, schedule) VALUES (1, 'Dr. Smith', 'Pediatrics', 'Monday - Friday') ON DUPLICATE KEY UPDATE doctor_name = 'Dr. Smith', specialization = 'Pediatrics', schedule = 'Monday - Friday';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>upsert into doctors (doctor_id, doctor_name, specialization, schedule) values (1, 'dr. smith', 'pediatrics', 'monday - friday') on duplicate key update doctor_name = 'dr. smith', specialization = 'pediatrics', schedule = 'monday - friday';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialization, schedule) VALUES (1, 'Dr. Smith', 'Pediatrics', 'Monday - Friday') ON DUPLICATE KEY UPDATE doctor_name = 'Dr. Smith', specialization = 'Pediatrics', schedule = 'Monday - Friday';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>upsert into doctors (doctor_id, doctor_name, specialization, schedule) values (1, 'dr. smith', 'pediatrics', 'monday - friday') on duplicate key update doctor_name = 'dr. smith', specialization = 'pediatrics', schedule = 'monday - friday';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 1, '2022-04-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, status) values (1, 1, 1, '2022-04-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'scheduled';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 1, '2022-04-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, status) values (1, 1, 1, '2022-04-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'scheduled';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 1, '2022-04-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, status) values (1, 1, 1, '2022-04-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'scheduled';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 1, '2022-04-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, status) values (1, 1, 1, '2022-04-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'scheduled';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 1, '2022-04-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, status) values (1, 1, 1, '2022-04-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'scheduled';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, status) VALUES (1, 1, 1, '2022-04-15', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'Scheduled';</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, status VARCHAR(50));

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name VARCHAR(100), specialization VARCHAR(100), schedule VARCHAR(255));

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(100), age INT, diagnosis VARCHAR(255), appointment_date DATE);</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, status) values (1, 1, 1, '2022-04-15', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-04-15', status = 'scheduled';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO patient (patient_id, patient_name, age, gender) VALUES (1, 'Alice', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Alice', age = 25, gender = 'Female';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into patient (patient_id, patient_name, age, gender) values (1, 'alice', 25, 'female') on conflict (patient_id) do update set patient_name = 'alice', age = 25, gender = 'female';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO doctor (doctor_id, doctor_name, specialization, hospital_id) VALUES (1, 'Dr. Smith', 'Cardiology', 123) ON CONFLICT (doctor_id) DO UPDATE SET doctor_name = 'Dr. Smith', specialization = 'Cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into doctor (doctor_id, doctor_name, specialization, hospital_id) values (1, 'dr. smith', 'cardiology', 123) on conflict (doctor_id) do update set doctor_name = 'dr. smith', specialization = 'cardiology', hospital_id = 123;</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>UPSERT INTO appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2022-10-12', '10:00:00') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat><divider><t>CREATE TABLE medical_record (
  record_id INT PRIMARY KEY,
  patient_id INT,
  diagnosis VARCHAR(100),
  treatment VARCHAR(100),
  prescription VARCHAR(100)
);


CREATE TABLE appointment (
  appointment_id INT PRIMARY KEY,
  patient_id INT,
  doctor_id INT,
  appointment_date DATE,
  appointment_time TIME
);


CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY,
  doctor_name VARCHAR(50),
  specialization VARCHAR(50),
  hospital_id INT
);


CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  patient_name VARCHAR(50),
  age INT,
  gender VARCHAR(10)
);
</t><stat>upsert into appointment (appointment_id, patient_id, doctor_id, appointment_date, appointment_time) values (1, 1, 1, '2022-10-12', '10:00:00') on conflict (appointment_id) do update set patient_id = 1, doctor_id = 1, appointment_date = '2022-10-12', appointment_time = '10:00:00';</stat>