[
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score FROM PatientOutcomes;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE outcome_score > 50;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM PatientOutcomes;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT MAX(outcome_score) FROM PatientOutcomes;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT AVG(outcome_score) FROM PatientOutcomes;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes ORDER BY outcome_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM PatientOutcomes GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE treatment_date = '2022-11-15';",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE patient_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM PatientOutcomes WHERE outcome_score <= 30 GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE treatment_date BETWEEN '2022-10-01' AND '2022-10-31';",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT AVG(outcome_score) AS avg_score FROM PatientOutcomes;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE outcome_score IN (50, 60, 70);",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT treatment_date FROM PatientOutcomes;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE patient_id IN (1001, 1002, 1003);",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE outcome_score > (SELECT AVG(outcome_score) FROM PatientOutcomes);",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE YEAR(treatment_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, MAX(outcome_score) FROM PatientOutcomes GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE DATEDIFF(NOW(), treatment_date) <= 30;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE outcome_score > 50;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, treatment_date FROM PatientOutcomes WHERE treatment_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT AVG(outcome_score) AS avg_score FROM PatientOutcomes WHERE treatment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT * FROM PatientOutcomes WHERE outcome_score < 30 ORDER BY treatment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM PatientOutcomes WHERE outcome_score >= 70;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT MIN(outcome_score) AS min_score, MAX(outcome_score) AS max_score FROM PatientOutcomes WHERE treatment_date < '2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS total_records FROM PatientOutcomes GROUP BY patient_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT AVG(outcome_score) AS avg_score, COUNT(*) AS total_records FROM PatientOutcomes GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT patient_id FROM PatientOutcomes WHERE treatment_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score, DATEDIFF(CURDATE(), treatment_date) AS days_since_treatment FROM PatientOutcomes WHERE outcome_score < 40;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, treatment_date, outcome_score FROM PatientOutcomes WHERE outcome_score BETWEEN 30 AND 60 AND treatment_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, treatment_date, outcome_score FROM PatientOutcomes WHERE treatment_date < '2022-10-01' ORDER BY outcome_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score, DATEDIFF(treatment_date, '2022-01-01') AS days_since_start FROM PatientOutcomes WHERE outcome_score > 50;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score, MONTH(treatment_date) AS treatment_month FROM PatientOutcomes WHERE MONTH(treatment_date) = 7;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score FROM PatientOutcomes WHERE YEAR(treatment_date) = YEAR(CURDATE());",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score, treatment_date FROM PatientOutcomes WHERE MONTH(treatment_date) = 9 ORDER BY outcome_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score FROM PatientOutcomes WHERE treatment_date = (SELECT MAX(treatment_date) FROM PatientOutcomes);",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score FROM PatientOutcomes WHERE treatment_date = (SELECT MIN(treatment_date) FROM PatientOutcomes);",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, AVG(outcome_score) AS avg_score FROM PatientOutcomes GROUP BY patient_id HAVING avg_score > 40;",
  "### TABLEDATA\n\nCREATE TABLE PatientOutcomes (\n    patient_id INT PRIMARY KEY,\n    treatment_date DATE,\n    outcome_score INT\n)\n\n### STATEMENT\n\nSELECT patient_id, outcome_score, treatment_date FROM PatientOutcomes WHERE patient_id IN (SELECT patient_id FROM PatientOutcomes WHERE outcome_score > 60);",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, patient_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT * FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT treatment_name, treatment_effectiveness FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM Patients WHERE patient_age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT treatment_id, treatment_name FROM Treatments WHERE treatment_effectiveness > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE admission_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT * FROM Treatments WHERE treatment_date BETWEEN '2021-01-01' AND '2021-03-31';",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name FROM Patients LEFT JOIN Treatments ON Patients.patient_id = Treatments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name FROM Patients RIGHT JOIN Treatments ON Patients.patient_id = Treatments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id WHERE treatment_effectiveness > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(treatment_effectiveness) as avg_effectiveness FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(treatment_id) as treatment_count FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, MAX(patient_age) as max_age FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, MIN(patient_age) as min_age FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_name FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT DISTINCT treatment_name FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, treatment_date FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id ORDER BY treatment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, admission_date FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id ORDER BY admission_date ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM Patients WHERE patient_age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, admission_date FROM Patients WHERE admission_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, admission_date FROM Patients WHERE patient_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT * FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT p.patient_name, t.treatment_name FROM Patients p JOIN Treatments t ON p.patient_id = t.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, treatment_name FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id WHERE treatment_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(treatment_effectiveness) AS avg_effectiveness FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id GROUP BY Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name FROM Patients LEFT JOIN Treatments ON Patients.patient_id = Treatments.patient_id WHERE treatment_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(treatment_id) AS num_treatments FROM Patients LEFT JOIN Treatments ON Patients.patient_id = Treatments.patient_id GROUP BY Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, MIN(treatment_date) AS first_treatment_date FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id GROUP BY Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_name FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT patient_age) AS num_unique_ages FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, CASE WHEN patient_age < 18 THEN 'Child' ELSE 'Adult' END AS age_group FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, DATEDIFF(CURDATE(), admission_date) AS days_since_admission FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, admission_date FROM Patients ORDER BY admission_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, treatment_effectiveness FROM Treatments WHERE treatment_effectiveness > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, treatment_effectiveness FROM Treatments WHERE treatment_effectiveness <= 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, treatment_effectiveness FROM Treatments WHERE treatment_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, treatment_effectiveness FROM Treatments WHERE treatment_name IN ('Medication A', 'Therapy B');",
  "### TABLEDATA\n\nCREATE TABLE Patients ( \n\tpatient_id UUID PRIMARY KEY, \n\tpatient_name STRING, \n\tpatient_age INT, \n\tadmission_date DATE \n);\n\nCREATE TABLE Treatments ( \n\ttreatment_id UUID PRIMARY KEY, \n\tpatient_id UUID REFERENCES Patients(patient_id), \n\ttreatment_name STRING, \n\treatment_effectiveness FLOAT, \n\ttreatment_date DATE \n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, admission_date, treatment_name FROM Patients LEFT JOIN Treatments ON Patients.patient_id = Treatments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_id, patient_name, gender FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT treatment_name, cost FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT treatment_id, treatment_name, effectiveness_rating FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Outcomes;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT outcome_description, outcome_date FROM Outcomes;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT outcome_id, outcome_description, patient_id FROM Outcomes;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Treatments.treatment_name FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Outcomes.outcome_description FROM Patients JOIN Outcomes ON Patients.patient_id = Outcomes.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT Treatments.treatment_name, Outcomes.outcome_description FROM Treatments JOIN Outcomes ON Treatments.patient_id = Outcomes.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Treatments.treatment_name, Outcomes.outcome_description FROM Patients JOIN Treatments ON Patients.patient_id = Treatments.patient_id JOIN Outcomes ON Patients.patient_id = Outcomes.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Treatments WHERE cost < 1000;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Outcomes WHERE outcome_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_id, COUNT(treatment_id) AS total_treatments FROM Treatments GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, AVG(effectiveness_rating) AS avg_rating FROM Treatments JOIN Patients ON Treatments.patient_id = Patients.patient_id GROUP BY Patients.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, MAX(cost) AS max_cost FROM Treatments JOIN Patients ON Treatments.patient_id = Patients.patient_id GROUP BY Patients.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, outcome_description FROM Patients LEFT JOIN Outcomes ON Patients.patient_id = Outcomes.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, gender, age FROM Patients WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT t.treatment_name, t.cost, p.patient_name FROM Treatments t INNER JOIN Patients p ON t.patient_id = p.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT p.patient_name, o.outcome_description FROM Patients p LEFT JOIN Outcomes o ON p.patient_id = o.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(t.treatment_id) AS num_treatments FROM Patients p LEFT JOIN Treatments t ON p.patient_id = t.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(o.outcome_id) AS num_outcomes FROM Patients p LEFT JOIN Outcomes o ON p.patient_id = o.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT p.patient_name, AVG(t.cost) AS avg_cost FROM Patients p LEFT JOIN Treatments t ON p.patient_id = t.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT p.patient_id, p.patient_name, SUM(t.cost) AS total_cost FROM Patients p LEFT JOIN Treatments t ON p.patient_id = t.patient_id GROUP BY p.patient_id, p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, admission_date, discharge_date, DATEDIFF(discharge_date, admission_date) AS length_of_stay FROM Patients WHERE admission_date IS NOT NULL AND discharge_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, AVG(effectiveness_rating) AS avg_rating FROM Treatments t INNER JOIN Patients p ON t.patient_id = p.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, MIN(age) AS min_age, MAX(age) AS max_age FROM Patients GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Treatments WHERE cost > 500 AND effectiveness_rating > 7;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE age >= 18 AND age <= 65;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT t.treatment_name, p.patient_name, o.outcome_description FROM Treatments t INNER JOIN Patients p ON t.patient_id = p.patient_id INNER JOIN Outcomes o ON p.patient_id = o.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT p.patient_name, o.outcome_date FROM Patients p INNER JOIN Outcomes o ON p.patient_id = o.patient_id WHERE outcome_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, COUNT(outcome_id) AS num_outcomes FROM Patients p INNER JOIN Outcomes o ON p.patient_id = o.patient_id GROUP BY patient_name HAVING num_outcomes > 1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, admission_date, discharge_date, TIMESTAMPDIFF(DAY, admission_date, discharge_date) AS length_of_stay_days FROM Patients WHERE admission_date IS NOT NULL AND discharge_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT AVG(cost) AS avg_cost, AVG(effectiveness_rating) AS avg_rating FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, SUM(cost) AS total_cost FROM Treatments t INNER JOIN Patients p ON t.patient_id = p.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    gender VARCHAR(10),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE\n)\n\nCREATE TABLE Treatments (\n    treatment_id INT PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    effectiveness_rating INT,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE Outcomes (\n    outcome_id INT PRIMARY KEY,\n    outcome_description TEXT,\n    outcome_date DATE,\n    patient_id INT,\n    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, AVG(cost) AS avg_cost, MAX(effectiveness_rating) AS max_rating FROM Treatments t INNER JOIN Patients p ON t.patient_id = p.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, date_of_birth FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM Patients WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT treatment_name, cost FROM Treatments WHERE cost > 100;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT treatment_name, duration FROM Treatments WHERE duration < 7;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Visits;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT visit_date, doctor_name FROM Visits WHERE visit_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT visit_id, diagnosis FROM Visits WHERE doctor_name='Dr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Outcomes;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT outcome_id, outcome_description FROM Outcomes WHERE outcome_type='Improvement';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT outcome_description, recovery_status FROM Outcomes WHERE recovery_status='Complete';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, doctor_name FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT treatment_name, cost FROM Treatments WHERE treatment_id IN (SELECT treatment_id FROM Outcomes WHERE recovery_status='Complete');",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, treatment_name, visit_date FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id JOIN Treatments ON Treatments.treatment_id = (SELECT treatment_id FROM Outcomes WHERE Outcomes.visit_id = Visits.visit_id);",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Treatments ORDER BY cost DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender, height, weight FROM Patients WHERE height > 170 AND weight < 70;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT doctor_name, COUNT(*) AS visit_count FROM Visits GROUP BY doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, SUM(cost) AS total_cost FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id JOIN Treatments ON Treatments.treatment_id = (SELECT treatment_id FROM Outcomes WHERE Outcomes.visit_id = Visits.visit_id) GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(weight) AS avg_weight, MAX(weight) AS max_weight, MIN(weight) AS min_weight FROM Patients GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender FROM Patients WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT treatment_name, cost FROM Treatments WHERE cost > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT visit_id, patient_name, visit_date, diagnosis FROM Visits JOIN Patients ON Visits.patient_id = Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Treatments WHERE effectiveness_score >= 0.8 ORDER BY cost DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, doctor_name, diagnosis FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id WHERE doctor_name='Dr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT outcome_description, outcome_type, recovery_status FROM Outcomes WHERE outcome_type='Follow-up';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, cost, duration FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id JOIN Treatments ON Visits.visit_id = Treatments.treatment_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(cost) AS avg_cost FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MIN(weight) AS min_weight, MAX(weight) AS max_weight FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT doctor_name, COUNT(*) AS total_visits FROM Visits GROUP BY doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, outcome_description FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id JOIN Outcomes ON Visits.visit_id = Outcomes.outcome_id WHERE diagnosis='Fever';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, cost, duration, effectiveness_score FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id JOIN Treatments ON Visits.visit_id = Treatments.treatment_id WHERE cost < 500 AND duration > 7;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, doctor_name, outcome_type FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id JOIN Outcomes ON Visits.visit_id = Outcomes.outcome_id WHERE outcome_type='Recovery';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT treatment_name, AVG(cost) AS avg_cost, SUM(duration) AS total_duration FROM Treatments GROUP BY treatment_name HAVING avg_cost > 2000;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS total_visits FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id GROUP BY patient_name ORDER BY total_visits DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT doctor_name, AVG(effectiveness_score) AS avg_effectiveness FROM Visits JOIN Treatments ON Visits.visit_id = Treatments.treatment_id GROUP BY doctor_name HAVING avg_effectiveness > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, MAX(weight) - MIN(weight) AS weight_difference FROM Patients GROUP BY patient_name HAVING weight_difference > 10;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n    patient_id UUID PRIMARY KEY,\n    patient_name VARCHAR(50),\n    date_of_birth DATE,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE Treatments (\n    treatment_id UUID PRIMARY KEY,\n    treatment_name VARCHAR(50),\n    cost DECIMAL(10, 2),\n    duration INT,\n    effectiveness_score FLOAT\n);\n\n\nCREATE TABLE Visits (\n    visit_id UUID PRIMARY KEY,\n    patient_id UUID REFERENCES Patients(patient_id),\n    visit_date DATE,\n    doctor_name VARCHAR(50),\n    diagnosis VARCHAR(100)\n);\n\n\nCREATE TABLE Outcomes (\n    outcome_id UUID PRIMARY KEY,\n    visit_id UUID REFERENCES Visits(visit_id),\n    outcome_description TEXT,\n    outcome_type VARCHAR(20),\n    recovery_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment_name, outcome_description FROM Patients JOIN Visits ON Patients.patient_id = Visits.patient_id JOIN Outcomes ON Visits.visit_id = Outcomes.outcome_id WHERE outcome_type='Follow-up';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM Patients WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT treatment_name, cost FROM Treatments;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Visits;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT visit_date, diagnosis FROM Visits WHERE visit_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Outcomes;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT outcome_description, effectiveness_score FROM Outcomes WHERE effectiveness_score > 3.5;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Visits.visit_date, Visits.diagnosis FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Treatments.treatment_name, Visits.diagnosis FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id INNER JOIN Treatments ON Treatments.treatment_id = Visits.doctor_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Visits.visit_date, Medications.medication_name FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id LEFT JOIN Medications ON Visits.visit_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Treatments.treatment_name, Outcomes.outcome_description FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id INNER JOIN Treatments ON Treatments.treatment_id = Visits.doctor_id INNER JOIN Outcomes ON Visits.visit_id = Outcomes.visit_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Visits.visit_date, Visits.diagnosis, Medications.medication_name FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id LEFT JOIN Medications ON Visits.visit_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Visits.visit_date, Treatments.treatment_name, Outcomes.outcome_description FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id INNER JOIN Treatments ON Treatments.treatment_id = Visits.doctor_id INNER JOIN Outcomes ON Visits.visit_id = Outcomes.visit_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender, visit_date, diagnosis, outcome_description FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id INNER JOIN Outcomes ON Visits.visit_id = Outcomes.visit_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Visits.visit_date, Treatments.treatment_name, Outcomes.outcome_description, Medications.medication_name FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id INNER JOIN Treatments ON Treatments.treatment_id = Visits.doctor_id INNER JOIN Outcomes ON Visits.visit_id = Outcomes.visit_id LEFT JOIN Medications ON Outcomes.outcome_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender, visit_date, diagnosis, outcome_description, medication_name FROM Patients INNER JOIN Visits ON Patients.patient_id = Visits.patient_id INNER JOIN Outcomes ON Visits.visit_id = Outcomes.visit_id LEFT JOIN Medications ON Outcomes.outcome_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender, date_of_birth FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Treatments WHERE cost > 100;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT treatment_name, description FROM Treatments WHERE cost > 100;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, v.visit_date, v.diagnosis FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, m.medication_name, m.dosage FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id INNER JOIN Medications m ON o.visit_id = m.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(v.visit_id) AS num_visits FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT t.treatment_name, COUNT(v.visit_id) AS num_visits FROM Treatments t INNER JOIN Visits v ON t.treatment_id = v.treatment_id GROUP BY t.treatment_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, MAX(o.effectiveness_score) AS max_score FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, AVG(o.effectiveness_score) AS avg_score FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, SUM(o.effectiveness_score) AS total_score FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT t.treatment_name, SUM(o.effectiveness_score) AS total_score FROM Treatments t INNER JOIN Visits v ON t.treatment_id = v.treatment_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id GROUP BY t.treatment_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, m.medication_name, o.effectiveness_score FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id INNER JOIN Medications m ON o.medication_id = m.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, v.visit_date, o.outcome_description FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, AVG(o.effectiveness_score) AS avg_effectiveness, MAX(o.effectiveness_score) AS max_effectiveness FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, v.visit_date, t.treatment_name, o.effectiveness_score FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Treatments t ON v.treatment_id = t.treatment_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, SUM(t.cost) AS total_cost FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Treatments t ON v.treatment_id = t.treatment_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, o.outcome_description, t.treatment_name FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id INNER JOIN Treatments t ON v.treatment_id = t.treatment_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT t.treatment_name, COUNT(v.visit_id) AS num_visits, AVG(o.effectiveness_score) AS avg_effectiveness FROM Treatments t INNER JOIN Visits v ON t.treatment_id = v.treatment_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id GROUP BY t.treatment_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(100),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address VARCHAR(200)\n);\n\nCREATE TABLE Treatments (\n  treatment_id INT PRIMARY KEY,\n  treatment_name VARCHAR(100),\n  description TEXT,\n  cost DECIMAL(10, 2)\n);\n\nCREATE TABLE Visits (\n  visit_id INT PRIMARY KEY,\n  patient_id INT,\n  visit_date DATE,\n  doctor_id INT,\n  diagnosis VARCHAR(200),\n  CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)\n);\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(100),\n  dosage VARCHAR(50)\n);\n\nCREATE TABLE Outcomes (\n  outcome_id INT PRIMARY KEY,\n  visit_id INT,\n  outcome_description TEXT,\n  effectiveness_score DECIMAL(5, 2),\n  CONSTRAINT fk_visit_id FOREIGN KEY (visit_id) REFERENCES Visits(visit_id)\n);\n\n### STATEMENT\n\nSELECT p.patient_name, v.visit_date, t.treatment_name, o.effectiveness_score, t.cost FROM Patients p INNER JOIN Visits v ON p.patient_id = v.patient_id INNER JOIN Treatments t ON v.treatment_id = t.treatment_id INNER JOIN Outcomes o ON v.visit_id = o.visit_id;"
]