[
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE alert_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, alert_message FROM drug_interactions WHERE interaction_type = 'Severe';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions ORDER BY alert_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE patient_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, alert_message FROM drug_interactions WHERE alert_level < 3;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(alert_level) FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) FROM drug_interactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, MIN(alert_level), MAX(alert_level) FROM drug_interactions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE drug_name LIKE '%paracetamol%';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE alert_message IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE interaction_type IN ('Moderate', 'Severe');",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE alert_level BETWEEN 2 AND 4;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE alert_message LIKE '%Warning%' ORDER BY alert_level;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(alert_level) AS avg_alert_level, COUNT(*) AS num_interactions FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, alert_level FROM drug_interactions WHERE drug_name = 'Metformin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE alert_level = 3;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM drug_interactions WHERE patient_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM drug_interactions WHERE interaction_type = 'Severe';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS num_interactions FROM drug_interactions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE patient_id = 200 AND interaction_type = 'Moderate';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, AVG(alert_level) AS avg_alert_level FROM drug_interactions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT patient_id) AS num_patients FROM drug_interactions WHERE alert_level > 2;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, MAX(alert_level) AS max_alert_level FROM drug_interactions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS num_interactions FROM drug_interactions GROUP BY drug_name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, MIN(alert_level) AS min_alert_level FROM drug_interactions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE alert_message LIKE '%warning%';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, AVG(alert_level) AS avg_alert_level FROM drug_interactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS num_interactions FROM drug_interactions WHERE alert_message IS NOT NULL GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT interaction_type FROM drug_interactions WHERE alert_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, SUM(alert_level) AS total_alert_level FROM drug_interactions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, MAX(alert_level) AS max_alert_level FROM drug_interactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE alert_level BETWEEN 2 AND 4;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, alert_message FROM drug_interactions WHERE alert_message IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, COUNT(*) AS num_interactions FROM drug_interactions GROUP BY drug_name, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n  patient_id INT,\n  drug_name VARCHAR(255),\n  interaction_type VARCHAR(50),\n  alert_level INT,\n  alert_message TEXT\n);\n\n### STATEMENT\n\nSELECT patient_id, AVG(alert_level) AS avg_alert_level FROM drug_interactions WHERE alert_message LIKE '%urgent%' GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_description FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients WHERE gender='Other';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients ORDER BY date_of_birth;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_description FROM drug_interactions ORDER BY interaction_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE date_of_birth > '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients WHERE date_of_birth < '1970-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM patients INNER JOIN drug_interactions ON patients.patient_id = drug_interactions.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies, drug_name FROM patients INNER JOIN drug_interactions ON patients.patient_id = drug_interactions.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, interaction_description FROM patients LEFT JOIN drug_interactions ON patients.patient_id = drug_interactions.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies, gender, interaction_description FROM patients INNER JOIN drug_interactions ON patients.patient_id = drug_interactions.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE gender = 'Male' AND year(date_of_birth) > 1990",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients WHERE gender = 'Female' ORDER BY date_of_birth DESC",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients WHERE LENGTH(allergies) > 0",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE drug_name = 'Aspirin'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, interaction_description FROM patients JOIN drug_interactions ON patients.patient_id = drug_interactions.patient_id WHERE drug_name = 'Penicillin'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients WHERE patient_id IN (SELECT patient_id FROM drug_interactions WHERE drug_name = 'Ibuprofen')",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender, allergies FROM patients WHERE gender <> 'Other' AND year(date_of_birth) < 1980",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_name FROM patients",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT patient_id) FROM patients",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender, drug_name, interaction_description FROM patients JOIN drug_interactions ON patients.patient_id = drug_interactions.patient_id WHERE patients.gender = 'Female'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients WHERE date_of_birth BETWEEN '1980-01-01' AND '1990-12-31'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients WHERE allergies LIKE '%Peanuts%'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients WHERE gender = 'Male' AND year(date_of_birth) < 1970",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients WHERE patient_name LIKE 'M%'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_description FROM drug_interactions WHERE patient_id IN (SELECT patient_id FROM patients WHERE gender = 'Female')",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM patients WHERE allergies IS NULL",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender, drug_name, interaction_description FROM patients JOIN drug_interactions ON patients.patient_id = drug_interactions.patient_id WHERE patients.gender = 'Male' ORDER BY patient_name ASC",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, allergies FROM patients WHERE LENGTH(allergies) > 0 ORDER BY date_of_birth DESC",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM patients WHERE gender = 'Other'",
  "### TABLEDATA\n\nCREATE TABLE patients (\n   patient_id INT PRIMARY KEY,\n   patient_name VARCHAR(50),\n   date_of_birth DATE,\n   gender ENUM('Male', 'Female', 'Other'),\n   allergies TEXT\n);\n\nCREATE TABLE drug_interactions (\n   interaction_id INT PRIMARY KEY,\n   patient_id INT,\n   drug_name VARCHAR(50),\n   interaction_description TEXT,\n   FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender FROM patients WHERE date_of_birth > '2000-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, birth_date FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage, prescription_date FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_description FROM Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, birth_date, gender, allergies FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_id, medication_name, dosage, prescription_date, patient_id FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT interaction_id, medication_id1, medication_id2, interaction_type, interaction_description FROM Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name, Interactions.interaction_type FROM Patients, Medications, Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name, Interactions.interaction_type FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN Interactions ON Medications.medication_id = Interactions.medication_id1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(patient_id) AS num_prescriptions FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS num_interactions FROM Interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_name, AVG(DATEDIFF(NOW(), prescription_date)) AS average_days_since_prescription FROM Medications GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, prescription_date FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id WHERE DATEDIFF(NOW(), prescription_date) > 30;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, interaction_description FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN Interactions ON Medications.medication_id = Interactions.medication_id1 WHERE interaction_description LIKE '%adverse%' ORDER BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage, prescription_date, interaction_description FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN Interactions ON Medications.medication_id = Interactions.medication_id1 WHERE interaction_type = 'Allergy' ORDER BY patient_name, prescription_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, birth_date FROM Patients WHERE birth_date BETWEEN '1990-01-01' AND '2000-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage, prescription_date FROM Medications WHERE dosage LIKE '%mg';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM Patients WHERE allergies IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name, interaction_description FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN Interactions ON Medications.medication_id = Interactions.medication_id1 WHERE interaction_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, birth_date FROM Patients WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage, prescription_date FROM Medications WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name FROM Patients INNER JOIN Medications ON Patients.patient_id = Medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE allergies LIKE '%peanut%';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Medications WHERE prescription_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_description FROM Interactions WHERE medication_id1 = 1 AND medication_id2 = 2;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, birth_date FROM Patients WHERE YEAR(birth_date) < 1990;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM Medications WHERE patient_id IN (SELECT patient_id FROM Patients WHERE gender = 'Female');",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_patients FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(NOW(), birth_date)) AS avg_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(medication_id) AS num_medications FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS num_interactions FROM Interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_name, SUM(CAST(SUBSTRING(dosage, 1, CHAR_LENGTH(dosage) - 3) AS INT)) AS total_dosage FROM Medications GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM Patients WHERE allergies IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Interactions ORDER BY interaction_id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT medication_name FROM Medications UNION SELECT interaction_description FROM Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT patient_name, birth_date FROM Patients ORDER BY birth_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  birth_date DATE,\n  gender VARCHAR(10),\n  allergies VARCHAR(255)\n);\n\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage VARCHAR(20),\n  prescription_date DATE,\n  patient_id INT REFERENCES Patients(patient_id)\n);\n\n\nCREATE TABLE Interactions (\n  interaction_id INT PRIMARY KEY,\n  medication_id1 INT REFERENCES Medications(medication_id),\n  medication_id2 INT REFERENCES Medications(medication_id),\n  interaction_type VARCHAR(20),\n  interaction_description VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(num_interactions) AS avg_interactions FROM (SELECT patient_id, COUNT(*) AS num_interactions FROM Interactions GROUP BY patient_id) AS interactions_count;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, gender FROM Patients WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT medication_name, frequency FROM Medications WHERE frequency = 'Daily';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM Alerts;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT alert_message, alert_status FROM Alerts;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, DrugInteractions.interaction_description FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Alerts.alert_message FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id1 JOIN Alerts ON DrugInteractions.interaction_id = Alerts.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name, DrugInteractions.interaction_description FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name, DrugInteractions.interaction_description, Alerts.alert_message FROM Patients JOIN Medications ON Patients.patient_id = Medications.patient_id JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id1 JOIN Alerts ON DrugInteractions.interaction_id = Alerts.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, allergies FROM Patients WHERE allergies IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM Medications WHERE dosage LIKE '%mg%';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM DrugInteractions WHERE interaction_description LIKE '%contraindication%';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT alert_message, alert_status FROM Alerts WHERE alert_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE date_of_birth >= '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM Medications WHERE frequency = 'Twice Daily';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender FROM Patients WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT medication_name, dosage, frequency, Patients.patient_name FROM Medications INNER JOIN Patients ON Medications.patient_id = Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description, medication_name FROM DrugInteractions LEFT JOIN Medications ON DrugInteractions.medication_id1 = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT alert_message, alert_status, Patients.patient_name, medication_name FROM Alerts INNER JOIN DrugInteractions ON Alerts.interaction_id = DrugInteractions.interaction_id INNER JOIN Medications ON DrugInteractions.medication_id1 = Medications.medication_id INNER JOIN Patients ON Medications.patient_id = Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE date_of_birth > '1980-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, allergies, frequency FROM Patients LEFT JOIN Medications ON Patients.patient_id = Medications.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT interaction_id FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT alert_message, interaction_description FROM Alerts INNER JOIN DrugInteractions ON Alerts.interaction_id = DrugInteractions.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT interaction_id, medication_name FROM DrugInteractions LEFT JOIN Medications ON DrugInteractions.medication_id2 = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, alert_message, alert_status FROM Patients INNER JOIN Medications ON Patients.patient_id = Medications.patient_id INNER JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id1 INNER JOIN Alerts ON DrugInteractions.interaction_id = Alerts.interaction_id WHERE alert_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT AVG(CHAR_LENGTH(patient_name)) AS avg_name_length FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS num_alerts FROM Patients INNER JOIN Medications ON Patients.patient_id = Medications.patient_id INNER JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id1 INNER JOIN Alerts ON DrugInteractions.interaction_id = Alerts.interaction_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT medication_name, COUNT(*) AS num_interactions FROM Medications INNER JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id2 GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, AVG(CHAR_LENGTH(patient_name)) AS avg_name_length, SUM(CHAR_LENGTH(patient_name)) AS total_name_length FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, COUNT(DISTINCT gender) AS gender_count FROM Patients GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT medication_name FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, MAX(date_of_birth) AS oldest_dob, MIN(date_of_birth) AS youngest_dob FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT alert_status, COUNT(*) AS num_alerts FROM Alerts GROUP BY alert_status;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, MAX(date_of_birth) - MIN(date_of_birth) AS age_difference FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  allergies TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id UUID PRIMARY KEY,\n  medication_name VARCHAR(50) NOT NULL,\n  dosage VARCHAR(20),\n  frequency VARCHAR(20),\n  patient_id UUID REFERENCES Patients(patient_id)\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id UUID PRIMARY KEY,\n  medication_id1 UUID REFERENCES Medications(medication_id),\n  medication_id2 UUID REFERENCES Medications(medication_id),\n  interaction_description TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id UUID PRIMARY KEY,\n  interaction_id UUID REFERENCES DrugInteractions(interaction_id),\n  alert_message TEXT,\n  alert_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT patient_name, allergies, interaction_description, alert_message, alert_status FROM Patients INNER JOIN Medications ON Patients.patient_id = Medications.patient_id INNER JOIN DrugInteractions ON Medications.medication_id = DrugInteractions.medication_id1 INNER JOIN Alerts ON DrugInteractions.interaction_id = Alerts.interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_id, medical_history FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT medication_name, dosage FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Allergies;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_id, allergen FROM Allergies;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Alerts;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT alert_id, alert_message, alert_date FROM Alerts;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name FROM Patients, Medications WHERE Patients.patient_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, medical_history, medication_name, dosage FROM Patients, Medications WHERE Patients.patient_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Medications.medication_name, DrugInteractions.interaction_description FROM Patients, Medications, DrugInteractions WHERE Patients.patient_id = DrugInteractions.medication1_id AND Medications.medication_id = DrugInteractions.medication2_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, allergen, reaction FROM Patients, Allergies WHERE Patients.patient_id = Allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT Patients.patient_name, Alerts.alert_message, Alerts.alert_date FROM Patients, Alerts WHERE Patients.patient_id = Alerts.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, medication_name, interaction_description, allergen, reaction FROM Patients, Medications, DrugInteractions, Allergies WHERE Patients.patient_id = Medications.medication_id AND Medications.medication_id = DrugInteractions.medication1_id AND DrugInteractions.medication2_id = Allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT Alerts.alert_message, patient_name, medication_name, interaction_description FROM Alerts, Patients, Medications, DrugInteractions WHERE Patients.patient_id = Alerts.patient_id AND Medications.medication_id = DrugInteractions.medication1_id AND DrugInteractions.medication2_id = Alerts.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, medication_name, dosage, allergen, reaction FROM Patients, Medications, Allergies WHERE Patients.patient_id = Medications.medication_id AND Medications.medication_id = Allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT Patients.patient_id, Medications.medication_id, DrugInteractions.interaction_id, Allergies.allergy_id, Alerts.alert_id FROM Patients, Medications, DrugInteractions, Allergies, Alerts WHERE Patients.patient_id = Medications.medication_id AND Medications.medication_id = DrugInteractions.medication1_id AND DrugInteractions.medication2_id = Allergies.patient_id AND Allergies.patient_id = Alerts.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM Patients WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Medications WHERE dosage > 50;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT medication_name, frequency, side_effects FROM Medications WHERE dosage <= 20 AND frequency = 'Twice a day';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, gender, medical_history FROM Patients JOIN Allergies ON Patients.patient_id = Allergies.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT medication_name FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, alert_message, alert_date FROM Patients JOIN Alerts ON Patients.patient_id = Alerts.patient_id WHERE alert_date BETWEEN '2022-01-01' AND '2022-05-31';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_alerts FROM Alerts WHERE alert_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, medical_history, allergen FROM Patients JOIN Allergies ON Patients.patient_id = Allergies.patient_id WHERE allergen = 'Peanuts';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT medication_name, dosage, side_effects FROM Medications WHERE medication_id IN (SELECT medication1_id FROM DrugInteractions WHERE medication2_id = 3);",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, medication_name FROM Patients JOIN Medications ON Patients.patient_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, alert_message, alert_date FROM Patients LEFT JOIN Alerts ON Patients.patient_id = Alerts.patient_id WHERE alert_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(dosage) AS average_dosage FROM Medications;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, alert_message, alert_date FROM Patients JOIN Alerts ON Patients.patient_id = Alerts.patient_id WHERE alert_message LIKE '%urgent%';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, alert_message, alert_date FROM Patients JOIN Alerts ON Patients.patient_id = Alerts.patient_id ORDER BY alert_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, medical_history FROM (SELECT * FROM Patients WHERE gender = 'Male' OR gender = 'Female') AS filtered_patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, allergy_id FROM Patients JOIN Allergies ON Patients.patient_id = Allergies.patient_id GROUP BY patient_name HAVING COUNT(allergy_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, interaction_description FROM Patients JOIN DrugInteractions ON Patients.patient_id = DrugInteractions.medication1_id JOIN Medications ON DrugInteractions.medication2_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_name, interaction_description FROM Patients JOIN DrugInteractions ON Patients.patient_id = DrugInteractions.medication2_id JOIN Medications ON DrugInteractions.medication1_id = Medications.medication_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  medical_history TEXT\n)\n\nCREATE TABLE Medications (\n  medication_id INT PRIMARY KEY,\n  medication_name VARCHAR(50),\n  dosage FLOAT,\n  frequency VARCHAR(20),\n  side_effects TEXT\n)\n\nCREATE TABLE DrugInteractions (\n  interaction_id INT PRIMARY KEY,\n  medication1_id INT,\n  medication2_id INT,\n  interaction_description TEXT\n)\n\nCREATE TABLE Allergies (\n  allergy_id INT PRIMARY KEY,\n  patient_id INT,\n  allergen VARCHAR(50),\n  reaction TEXT\n)\n\nCREATE TABLE Alerts (\n  alert_id INT PRIMARY KEY,\n  patient_id INT,\n  alert_message TEXT,\n  alert_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS total_alerts FROM Alerts GROUP BY patient_id HAVING COUNT(*) > 2;"
]