<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>DELETE FROM cybersecurity_data WHERE id = 1;</s>
<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>delete from cybersecurity_data where id = 1;</s>
<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>DELETE FROM cybersecurity_data WHERE username = 'admin';</s>
<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>delete from cybersecurity_data where username = 'admin';</s>
<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>DELETE FROM cybersecurity_data WHERE email = 'test@example.com';</s>
<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>delete from cybersecurity_data where email = 'test@example.com';</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>DELETE FROM users WHERE id = 1;</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>delete from users where id = 1;</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>DELETE FROM users WHERE username = 'john_doe';</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>delete from users where username = 'john_doe';</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>DELETE FROM users WHERE email = 'john@example.com';</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>delete from users where email = 'john@example.com';</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>DELETE FROM users WHERE user_id = 1;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>delete from users where user_id = 1;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>DELETE FROM users WHERE user_id = 1;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>delete from users where user_id = 1;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>DELETE FROM users WHERE user_id = 1;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>delete from users where user_id = 1;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>DELETE FROM users WHERE user_id = 1;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>delete from users where user_id = 1;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>DELETE FROM users WHERE user_id = 1;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>delete from users where user_id = 1;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>DELETE FROM users WHERE user_id = 1;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>delete from users where user_id = 1;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>DELETE FROM incidents WHERE incident_id = 2;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>delete from incidents where incident_id = 2;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>DELETE FROM incidents WHERE incident_id = 2;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>delete from incidents where incident_id = 2;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>DELETE FROM incidents WHERE incident_id = 2;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>delete from incidents where incident_id = 2;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>DELETE FROM incidents WHERE incident_id = 2;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>delete from incidents where incident_id = 2;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>DELETE FROM incidents WHERE incident_id = 2;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>delete from incidents where incident_id = 2;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>DELETE FROM incidents WHERE incident_id = 2;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>delete from incidents where incident_id = 2;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>DELETE FROM logs WHERE log_id = 3;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>delete from logs where log_id = 3;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>DELETE FROM logs WHERE log_id = 3;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>delete from logs where log_id = 3;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>DELETE FROM logs WHERE log_id = 3;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>delete from logs where log_id = 3;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>DELETE FROM logs WHERE log_id = 3;</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>delete from logs where log_id = 3;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>DELETE FROM logs WHERE log_id = 3;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>delete from logs where log_id = 3;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>DELETE FROM logs WHERE log_id = 3;</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>delete from logs where log_id = 3;</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM users WHERE user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from users where user_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM permissions WHERE permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from permissions where permission_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>DELETE FROM roles WHERE role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>delete from roles where role_id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM users WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from users where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM roles WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from roles where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>DELETE FROM permissions WHERE id = 1</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>delete from permissions where id = 1</s>
