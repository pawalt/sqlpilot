<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</s>
<t>CREATE TABLE cybersecurity_data (id INT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50), email VARCHAR(50))</t><s>create table cybersecurity_data (id int primary key, username varchar(50), password varchar(50), email varchar(50))</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL);</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>create table users (id int primary key, username varchar(50) not null, email varchar(100) not null, password varchar(100) not null);</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50) NOT NULL, price DECIMAL(10,2) NOT NULL);</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>create table products (id int primary key, name varchar(50) not null, price decimal(10,2) not null);</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>CREATE TABLE orders (id INT PRIMARY KEY, user_id INT NOT NULL, product_id INT NOT NULL, quantity INT NOT NULL);</s>
<t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>create table orders (id int primary key, user_id int not null, product_id int not null, quantity int not null);</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>create table users ( user_id int primary key, username varchar(50) not null, email varchar(100) unique, password varchar(100) not null );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>create table users ( user_id int primary key, username varchar(50) not null, email varchar(100) unique, password varchar(100) not null );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>create table users ( user_id int primary key, username varchar(50) not null, email varchar(100) unique, password varchar(100) not null );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>create table users ( user_id int primary key, username varchar(50) not null, email varchar(100) unique, password varchar(100) not null );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>create table users ( user_id int primary key, username varchar(50) not null, email varchar(100) unique, password varchar(100) not null );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>create table users ( user_id int primary key, username varchar(50) not null, email varchar(100) unique, password varchar(100) not null );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>create table incidents ( incident_id int primary key, incident_type varchar(50) not null, description text, reported_by int, foreign key (reported_by) references users(user_id) );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>create table incidents ( incident_id int primary key, incident_type varchar(50) not null, description text, reported_by int, foreign key (reported_by) references users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>create table incidents ( incident_id int primary key, incident_type varchar(50) not null, description text, reported_by int, foreign key (reported_by) references users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>create table incidents ( incident_id int primary key, incident_type varchar(50) not null, description text, reported_by int, foreign key (reported_by) references users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>create table incidents ( incident_id int primary key, incident_type varchar(50) not null, description text, reported_by int, foreign key (reported_by) references users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>create table incidents ( incident_id int primary key, incident_type varchar(50) not null, description text, reported_by int, foreign key (reported_by) references users(user_id) );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>create table logs ( log_id int primary key, log_type varchar(50) not null, timestamp timestamp not null, message text, user_id int, foreign key (user_id) references users(user_id) );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>create table logs ( log_id int primary key, log_type varchar(50) not null, timestamp timestamp not null, message text, user_id int, foreign key (user_id) references users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><s>create table logs ( log_id int primary key, log_type varchar(50) not null, timestamp timestamp not null, message text, user_id int, foreign key (user_id) references users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</s>
<t>CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>create table logs ( log_id int primary key, log_type varchar(50) not null, timestamp timestamp not null, message text, user_id int, foreign key (user_id) references users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );</t><s>create table logs ( log_id int primary key, log_type varchar(50) not null, timestamp timestamp not null, message text, user_id int, foreign key (user_id) references users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );</s>
<t>CREATE TABLE logs ( log_id INT PRIMARY KEY, log_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, message TEXT, user_id INT, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE incidents ( incident_id INT PRIMARY KEY, incident_type VARCHAR(50) NOT NULL, description TEXT, reported_by INT, FOREIGN KEY (reported_by) REFERENCES users(user_id) );

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, password VARCHAR(100) NOT NULL );</t><s>create table logs ( log_id int primary key, log_type varchar(50) not null, timestamp timestamp not null, message text, user_id int, foreign key (user_id) references users(user_id) );</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists users (user_id serial primary key, username varchar(50) not null, password varchar(50) not null, email varchar(100) not null, role varchar(20) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists permissions (permission_id serial primary key, permission_name varchar(50) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists roles (role_id serial primary key, role_name varchar(20) not null, description text not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT REFERENCES users(user_id) ON DELETE CASCADE, role_id INT REFERENCES roles(role_id) ON DELETE CASCADE)

CREATE TABLE IF NOT EXISTS roles (role_id SERIAL PRIMARY KEY, role_name VARCHAR(20) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (permission_id SERIAL PRIMARY KEY, permission_name VARCHAR(50) NOT NULL, description TEXT NOT NULL)

CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, role VARCHAR(20) NOT NULL)</t><s>create table if not exists user_roles (user_id int references users(user_id) on delete cascade, role_id int references roles(role_id) on delete cascade)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists users (id int primary key, username varchar(50) not null, password varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists roles (id int primary key, role_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</s>
<t>CREATE TABLE IF NOT EXISTS role_permissions (role_id INT, permission_id INT, PRIMARY KEY (role_id, permission_id), FOREIGN KEY (role_id) REFERENCES roles(id), FOREIGN KEY (permission_id) REFERENCES permissions(id))

CREATE TABLE IF NOT EXISTS user_roles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id), FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (role_id) REFERENCES roles(id))

CREATE TABLE IF NOT EXISTS permissions (id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS roles (id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><s>create table if not exists permissions (id int primary key, permission_name varchar(50) not null)</s>
