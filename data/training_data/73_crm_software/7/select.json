[
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM inventory WHERE quantity <= 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, price FROM inventory WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(price) FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, price FROM inventory ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM inventory WHERE product_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM inventory WHERE quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, price FROM inventory WHERE quantity > 20 AND price < 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, price FROM inventory WHERE quantity >= 10 OR price > 200;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM inventory WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM inventory WHERE product_name IN ('Apple', 'Banana', 'Orange');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM inventory WHERE price = (SELECT MAX(price) FROM inventory);",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM inventory WHERE price = (SELECT MIN(price) FROM inventory);",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory WHERE quantity IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM inventory WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, price FROM inventory WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity <= 10 AND price < 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(price) FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(price) FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity*price AS total_value FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(price) AS avg_price FROM inventory GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_records FROM inventory GROUP BY product_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM inventory ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM inventory ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, price FROM inventory LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, price FROM inventory OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, price FROM inventory LIMIT 5 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, price FROM inventory WHERE product_name LIKE '%apple%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, price FROM inventory WHERE product_name IN ('apple', 'banana', 'orange');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, price FROM inventory WHERE quantity > 0 AND (product_name LIKE '%apple%' OR price > 50);",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT DEFAULT 0,\n    price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, price * quantity AS total_value FROM inventory WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products WHERE stock_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price < 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, stock_quantity FROM products WHERE product_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, customer_name FROM orders WHERE order_date = '2022-12-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM orders WHERE delivery_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(price) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(price) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(price) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(stock_quantity) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price, stock_quantity, price * stock_quantity AS total_value FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_orders FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_orders FROM orders GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, AVG(price) AS avg_price FROM products GROUP BY product_name HAVING AVG(price) > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products WHERE stock_quantity > 0",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price < 100",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, stock_quantity, price FROM products WHERE product_id = 5",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_name LIKE '%Apple%'",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, SUM(stock_quantity) AS total_stock FROM products GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, AVG(price) AS average_price FROM products GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS order_count FROM orders GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products JOIN orders ON products.product_id = orders.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT o.order_id, p.product_name, o.customer_name, p.price FROM orders o JOIN products p ON o.product_id = p.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT o.order_id, p.product_name, o.customer_name, p.price FROM orders o JOIN products p ON o.product_id = p.product_id WHERE o.order_date >= '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT o.order_id, p.product_name, o.customer_name, p.price FROM orders o JOIN products p ON o.product_id = p.product_id WHERE p.price BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT o.order_id, p.product_name, o.customer_name, p.price FROM orders o JOIN products p ON o.product_id = p.product_id WHERE o.delivery_date < '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_orders FROM orders GROUP BY customer_name ORDER BY total_orders DESC",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price, SUM(stock_quantity) AS total_stock FROM products GROUP BY product_name, price",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(price) AS average_order_price FROM orders o JOIN products p ON o.product_id = p.product_id GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_orders, SUM(price) AS total_spent FROM orders GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT o.order_id, p.product_name, o.customer_name, p.price, SUM(p.price) OVER(PARTITION BY o.customer_name) AS total_spent FROM orders o JOIN products p ON o.product_id = p.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name FROM products UNION SELECT customer_name FROM orders",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name, price FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  stock_quantity INT,\n  price DECIMAL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  customer_name STRING,\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_id IN (SELECT product_id FROM orders WHERE order_date < '2022-06-01')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE phone_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE delivery_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price, stock_quantity FROM products WHERE stock_quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT order_id, customer_id, product_id, order_date FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE phone_number LIKE '123%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price, stock_quantity FROM products WHERE stock_quantity > 20 AND price < 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE email IS NOT NULL AND phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, delivery_date FROM orders WHERE delivery_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price, stock_quantity FROM products WHERE product_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE stock_quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE stock_quantity BETWEEN 5 AND 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT order_id, customer_id, order_date FROM orders WHERE delivery_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT order_id, customer_id, order_date FROM orders WHERE delivery_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_date > '2021-06-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT p.product_name, p.price, o.order_date FROM products p JOIN orders o ON p.product_id = o.product_id WHERE p.stock_quantity > 20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2021-01-01' AND '2021-06-30';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name HAVING total_orders > 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(p.price) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id GROUP BY c.customer_name HAVING total_spent > 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(p.price) AS average_price FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id GROUP BY c.customer_name HAVING average_price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE order_date > '2021-09-01');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM orders);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id GROUP BY c.customer_name, p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE EXISTS (SELECT * FROM orders WHERE customer_id = customers.customer_id);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE NOT EXISTS (SELECT * FROM orders WHERE customer_id = customers.customer_id);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    product_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id WHERE c.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price, product_quantity FROM products WHERE product_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_id, stock_quantity, last_updated FROM inventory WHERE stock_quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_id, order_date, customer_name FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customers WHERE customer_phone LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT products.product_name, inventory.stock_quantity FROM products JOIN inventory ON products.product_id = inventory.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT products.product_name, products.product_price, inventory.stock_quantity FROM products JOIN inventory ON products.product_id = inventory.product_id WHERE inventory.stock_quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT orders.order_id, orders.order_date, customers.customer_name FROM orders JOIN customers ON orders.customer_name = customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT orders.order_id, orders.order_date, products.product_name, customers.customer_name FROM orders JOIN products ON orders.product_id = products.product_id JOIN customers ON orders.customer_name = customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT orders.order_id, orders.order_date, products.product_name, inventory.stock_quantity FROM orders JOIN products ON orders.product_id = products.product_id JOIN inventory ON products.product_id = inventory.product_id WHERE inventory.stock_quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price, product_quantity, stock_quantity, last_updated FROM products JOIN inventory ON products.product_id = inventory.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, product_price, customer_name FROM products JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price, stock_quantity, last_updated FROM products JOIN inventory ON products.product_id = inventory.product_id WHERE product_price < 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, order_date FROM customers JOIN orders ON customers.customer_name = orders.customer_name WHERE customer_email LIKE '%example.com%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY customer_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price, product_quantity FROM products WHERE product_price > 50",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT inventory_id, product_id, stock_quantity, last_updated FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date, customer_name FROM orders",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products JOIN inventory ON products.product_id = inventory.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM orders JOIN customers ON orders.customer_name = customers.customer_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, product_quantity FROM products WHERE product_quantity < (SELECT AVG(product_quantity) FROM products)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_price DESC",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(stock_quantity) AS total_stock FROM products JOIN inventory ON products.product_id = inventory.product_id GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM customers",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id IN (SELECT product_id FROM inventory WHERE stock_quantity > 100)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT product_name, stock_quantity, last_updated FROM products JOIN inventory ON products.product_id = inventory.product_id WHERE stock_quantity < 50",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_orders FROM orders GROUP BY customer_name HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT MAX(product_price) AS highest_price FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2),\n    product_quantity INT\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(order_id) AS avg_order_id FROM orders GROUP BY customer_name HAVING AVG(order_id) > 5",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM product;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT name, price FROM product;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, name, description FROM product WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, product_id, quantity FROM inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, order_date FROM 'order' WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, order_date FROM 'order' ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM order_item;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM order_item GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(price * quantity) AS total_price FROM order_item GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, product_id, quantity FROM order_item WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_id FROM order_item;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, name FROM product UNION SELECT id, name FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT P.name AS product_name, O.order_date, O.status FROM product P JOIN order_item OI ON P.id = OI.product_id JOIN 'order' O ON OI.order_id = O.id;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT C.name AS customer_name, O.order_date, O.status FROM customer C JOIN 'order' O ON C.id = O.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT OI.order_id, P.name AS product_name, O.order_date FROM order_item OI JOIN product P ON OI.product_id = P.id JOIN 'order' O ON OI.order_id = O.id;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT DISTINCT OI.order_id, O.customer_id, SUM(OI.price * OI.quantity) AS total_price FROM order_item OI JOIN 'order' O ON OI.order_id = O.id GROUP BY OI.order_id, O.customer_id HAVING total_price > 500;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM product;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT name, description, price FROM product WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT name, description, price FROM product WHERE name LIKE '%iPhone%';",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, customer.email, order.order_date FROM customer INNER JOIN order ON customer.id = order.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, order_item.quantity, product.name FROM customer INNER JOIN order ON customer.id = order.customer_id INNER JOIN order_item ON order.id = order_item.order_id INNER JOIN product ON order_item.product_id = product.id;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, order.order_date, order_item.quantity, product.price FROM customer INNER JOIN order ON customer.id = order.customer_id INNER JOIN order_item ON order.id = order_item.order_id INNER JOIN product ON order_item.product_id = product.id WHERE order.status = 'delivered';",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, SUM(order_item.quantity * product.price) AS total_spent FROM customer INNER JOIN order ON customer.id = order.customer_id INNER JOIN order_item ON order.id = order_item.order_id INNER JOIN product ON order_item.product_id = product.id GROUP BY customer.name;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name AS customer_name, order_item.quantity AS order_quantity, product.name AS product_name, product.price AS product_price FROM customer INNER JOIN order ON customer.id = order.customer_id INNER JOIN order_item ON order.id = order_item.order_id INNER JOIN product ON order_item.product_id = product.id ORDER BY product.price DESC;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, order.order_date, SUM(order_item.quantity) AS total_quantity, AVG(product.price) AS avg_price FROM customer INNER JOIN order ON customer.id = order.customer_id INNER JOIN order_item ON order.id = order_item.order_id INNER JOIN product ON order_item.product_id = product.id GROUP BY customer.name, order.order_date;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, MAX(order.order_date) AS latest_order_date FROM customer INNER JOIN order ON customer.id = order.customer_id GROUP BY customer.name;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, COUNT(order.id) AS total_orders FROM customer LEFT JOIN order ON customer.id = order.customer_id GROUP BY customer.name;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name FROM customer WHERE customer.id NOT IN (SELECT customer_id FROM order);",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, order.order_date, order.status FROM customer LEFT JOIN order ON customer.id = order.customer_id WHERE order.id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product.name AS product_name, SUM(order_item.quantity) AS total_quantity FROM product INNER JOIN order_item ON product.id = order_item.product_id GROUP BY product.name;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, order_item.quantity, product.price FROM customer INNER JOIN order ON customer.id = order.customer_id INNER JOIN order_item ON order.id = order_item.order_id INNER JOIN product ON order_item.product_id = product.id WHERE order_item.price > product.price;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, order.order_date, order.status, product.name AS product_name, order_item.quantity FROM customer INNER JOIN order ON customer.id = order.customer_id INNER JOIN order_item ON order.id = order_item.order_id INNER JOIN product ON order_item.product_id = product.id WHERE order_item.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT DISTINCT product.name, product.description FROM product INNER JOIN order_item ON product.id = order_item.product_id WHERE order_item.quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name FROM customer WHERE EXISTS (SELECT * FROM order WHERE customer.id = order.customer_id);",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product.name, order_item.quantity FROM product INNER JOIN order_item ON product.id = order_item.product_id GROUP BY product.name HAVING SUM(order_item.quantity) > 50;",
  "### TABLEDATA\n\nCREATE TABLE product (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE customer (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  address TEXT\n);\n\n\nCREATE TABLE order (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE order_item (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer.name, COUNT(DISTINCT order.id) AS total_orders FROM customer INNER JOIN order ON customer.id = order.customer_id GROUP BY customer.name HAVING total_orders > 1;"
]