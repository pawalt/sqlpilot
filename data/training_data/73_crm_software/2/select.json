[
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT username, email FROM CustomerAccounts WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerAccounts;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id FROM CustomerAccounts WHERE email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT username FROM CustomerAccounts WHERE permissions->>'role' = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE username IN ('user1', 'user2', 'user3');",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id, username FROM CustomerAccounts WHERE customer_id IN ('123e4567-e89b-12d3-a456-426614174001', '123e4567-e89b-12d3-a456-426614174002');",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE permissions @> '{",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE username = 'john_doe' AND password = 'secure123'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id, email FROM CustomerAccounts WHERE username LIKE 'user%' ORDER BY email ASC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE permissions @> '{",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\n'user_role':'admin'}'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT DISTINCT username FROM CustomerAccounts WHERE email LIKE '%@gmail.com%'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id, email, permissions->'user_role' AS role FROM CustomerAccounts WHERE username = 'alice'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM CustomerAccounts",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT MAX(CHAR_LENGTH(username)) AS max_length FROM CustomerAccounts",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE customer_id IN (SELECT customer_id FROM Orders WHERE total_amount > 100)",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE email ILIKE '%@company.com'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT username, jsonb_array_length(permissions->'roles') AS num_roles FROM CustomerAccounts",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE permissions->>'account_type' = 'gold'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_orders FROM CustomerAccounts LEFT JOIN Orders ON CustomerAccounts.customer_id = Orders.customer_id GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id, email FROM CustomerAccounts WHERE jsonb_array_length(permissions->'access_locations') > 2",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE username NOT LIKE 'test_%'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT DISTINCT jsonb_array_elements_text(permissions->'roles') AS role FROM CustomerAccounts",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts ORDER BY username DESC, email DESC",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT AVG(jsonb_array_length(permissions->'access_locations')) AS avg_access FROM CustomerAccounts",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id, email FROM CustomerAccounts WHERE to_tsvector(email) @@ to_tsquery('gmail')",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE permissions ? 'admin_role'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT customer_id, email FROM CustomerAccounts WHERE email LIKE '%@company.com' AND (permissions ? 'admin_role' OR permissions ? 'superadmin_role')",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n    customer_id UUID PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(50),\n    email VARCHAR(100),\n    permissions JSONB\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT customer_id, username, email FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT username, password FROM customer_accounts WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM permissions;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT permission_name FROM permissions;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT permission_id, permission_name FROM permissions WHERE permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customer_accounts WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM permissions WHERE permission_name LIKE 'admin%';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT customer_id, username FROM customer_accounts WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE customer_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM permissions WHERE permission_id < 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT permission_name FROM permissions WHERE permission_name = 'read';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT username, email FROM customer_accounts ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT customer_id, username FROM customer_accounts WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM permissions WHERE permission_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE username IN ('alice', 'bob');",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) AS max_customer_id FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) AS avg_customer_id FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT username, email FROM customer_accounts WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts JOIN permissions ON customer_accounts.customer_id = permissions.permission_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM permissions WHERE permission_name = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customer_accounts WHERE customer_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT username FROM customer_accounts WHERE customer_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE password IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE email NOT LIKE '%yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_permissions FROM customer_accounts JOIN permissions ON customer_accounts.customer_id = permissions.permission_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customer_accounts;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT DISTINCT permission_name FROM permissions;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE username LIKE '%smith%' OR email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_accounts WHERE customer_id < 5 OR customer_id > 15;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_permissions FROM customer_accounts JOIN permissions ON customer_accounts.customer_id = permissions.permission_id HAVING num_permissions > 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  password VARCHAR(50),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) UNIQUE\n);\n\n### STATEMENT\n\nSELECT username, email FROM customer_accounts WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM accounts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_id, customer_id, account_type FROM accounts;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_id, balance FROM accounts WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_id, account_type, balance FROM accounts WHERE balance > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM permissions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT permission_id, account_id FROM permissions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT permission_id, permission_level FROM permissions WHERE account_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id JOIN permissions p ON a.account_id = p.account_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, a.balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id WHERE a.balance < 0;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id JOIN permissions p ON a.account_id = p.account_id WHERE p.permission_level = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, a.balance, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id JOIN permissions p ON a.account_id = p.account_id WHERE a.balance > 10000 AND p.permission_level = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, a.balance, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id JOIN permissions p ON a.account_id = p.account_id WHERE c.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM accounts WHERE account_type = 'savings';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM permissions WHERE permission_level = 'user';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, a.balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id WHERE a.balance < 0;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, a.balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id WHERE a.balance < -1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_id, account_type, balance FROM accounts WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM accounts WHERE account_type = 'Savings';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id JOIN permissions p ON p.account_id = a.account_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, SUM(balance) AS total_balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_type, MAX(balance) AS max_balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id GROUP BY c.customer_name, account_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, SUM(balance) AS total_balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id WHERE balance > 1000 GROUP BY c.customer_name, a.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, COUNT(*) AS num_accounts FROM customers c JOIN accounts a ON c.customer_id = a.customer_id GROUP BY c.customer_name, a.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.account_type, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id JOIN permissions p ON p.account_id = a.account_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name FROM customers c LEFT JOIN accounts a ON c.customer_id = a.customer_id WHERE a.account_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_id, balance FROM customers c RIGHT JOIN accounts a ON c.customer_id = a.customer_id WHERE c.customer_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_type, balance FROM customers c FULL JOIN accounts a ON c.customer_id = a.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.customer_name, a.account_id, a.balance, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id LEFT JOIN permissions p ON a.account_id = p.account_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.customer_name, a.account_id, a.balance, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id RIGHT JOIN permissions p ON a.account_id = p.account_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.customer_name, a.account_id, a.balance, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id INNER JOIN permissions p ON a.account_id = p.account_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.customer_name, a.account_id, a.balance, p.permission_level FROM customers c JOIN accounts a ON c.customer_id = a.customer_id FULL JOIN permissions p ON a.account_id = p.account_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(100),\n  password VARCHAR(50)\n);\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(20),\n  balance DECIMAL(10, 2)\n);\n\nCREATE TABLE permissions (\n  permission_id INT PRIMARY KEY,\n  account_id INT,\n  permission_level VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_type, balance FROM customers c JOIN accounts a ON c.customer_id = a.customer_id WHERE c.customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, account_type FROM CustomerAccounts;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT permission_name, description FROM AccountPermissions;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT full_name, email, address FROM CustomerDetails;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, login_time FROM LoginHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, login_time, logout_time FROM LoginHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, l.login_time FROM CustomerDetails c JOIN LoginHistory l ON c.customer_id = l.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, l.login_time, p.permission_name FROM CustomerDetails c JOIN LoginHistory l ON c.customer_id = l.customer_id JOIN AccountPermissions p ON p.permission_id = l.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, l.login_time, h.logout_time FROM CustomerDetails c JOIN LoginHistory l ON c.customer_id = l.customer_id JOIN LoginHistory h ON c.customer_id = h.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, c.email, a.account_type FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, c.email, a.account_type, p.permission_name FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id JOIN AccountPermissions p ON p.permission_id = c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE account_type = 'premium';",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerDetails WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT login_id, login_time FROM LoginHistory WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts ORDER BY registration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, l.login_time FROM CustomerDetails c INNER JOIN LoginHistory l ON c.customer_id = l.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('day', logout_time - login_time)) AS avg_session_duration FROM LoginHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, COUNT(l.login_id) AS total_logins FROM CustomerDetails c INNER JOIN LoginHistory l ON c.customer_id = l.customer_id GROUP BY c.full_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT p.permission_name, COUNT(l.login_id) AS total_logins FROM AccountPermissions p JOIN LoginHistory l ON p.permission_id = l.customer_id GROUP BY p.permission_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerDetails UNION ALL SELECT * FROM CustomerAccounts;",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, account_type FROM CustomerAccounts WHERE registration_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM CustomerAccounts WHERE customer_id = 1001",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT full_name, email FROM CustomerDetails WHERE phone_number LIKE '%123%'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, login_time FROM LoginHistory ORDER BY login_time DESC",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, c.email, a.account_type FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, l.login_time FROM CustomerDetails c JOIN LoginHistory l ON c.customer_id = l.customer_id WHERE l.login_time >= '2022-05-01'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, p.permission_name FROM CustomerDetails c JOIN AccountPermissions p ON c.customer_id = p.permission_id",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, a.account_type, l.login_time FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id JOIN LoginHistory l ON c.customer_id = l.customer_id",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, l.login_time, a.account_type FROM CustomerDetails c JOIN LoginHistory l ON c.customer_id = l.customer_id JOIN CustomerAccounts a ON c.customer_id = a.customer_id WHERE l.login_time >= '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, a.account_type, p.permission_name FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id JOIN AccountPermissions p ON c.customer_id = p.permission_id",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, p.permission_name FROM CustomerDetails c JOIN AccountPermissions p ON c.customer_id = p.permission_id WHERE p.permission_name LIKE '%admin%'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, a.account_type, l.login_time FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id JOIN LoginHistory l ON c.customer_id = l.customer_id WHERE l.login_time IS NULL",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, a.account_type, l.login_time, d.email FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id JOIN LoginHistory l ON c.customer_id = l.customer_id JOIN CustomerDetails d ON c.customer_id = d.customer_id WHERE l.login_time IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, a.account_type, l.login_time, d.email FROM CustomerDetails c JOIN CustomerAccounts a ON c.customer_id = a.customer_id JOIN LoginHistory l ON c.customer_id = l.customer_id JOIN CustomerDetails d ON c.customer_id = d.customer_id WHERE l.login_time > '2022-07-01'",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerAccounts",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_type, COUNT(*) FROM CustomerAccounts GROUP BY account_type",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, COUNT(l.login_id) AS total_logins FROM CustomerDetails c JOIN LoginHistory l ON c.customer_id = l.customer_id GROUP BY c.full_name",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.full_name, MAX(l.login_time) AS last_login FROM CustomerDetails c JOIN LoginHistory l ON c.customer_id = l.customer_id GROUP BY c.full_name",
  "### TABLEDATA\n\nCREATE TABLE CustomerAccounts (\n  customer_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(50) NOT NULL,\n  account_type VARCHAR(50),\n  registration_date DATE\n)\n\nCREATE TABLE AccountPermissions (\n  permission_id INT PRIMARY KEY,\n  permission_name VARCHAR(50) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE CustomerDetails (\n  customer_id INT PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  address TEXT,\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE LoginHistory (\n  login_id INT PRIMARY KEY,\n  customer_id INT,\n  login_time TIMESTAMP,\n  logout_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT p.permission_name, COUNT(*) FROM AccountPermissions p JOIN CustomerDetails c ON p.permission_id = c.customer_id GROUP BY p.permission_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM accounts",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_id, balance FROM accounts",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM login_credentials",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, username FROM login_credentials",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM permissions",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT permission_id, customer_id, permission_type FROM permissions",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM log_activity",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT log_id, event_type, timestamp FROM log_activity",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_id, balance, status FROM accounts",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, username, password FROM login_credentials",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT permission_id, permission_type FROM permissions",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT log_id, event_type FROM log_activity",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, address FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_id, balance FROM accounts WHERE status = 'active'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, password FROM login_credentials WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT permission_type FROM permissions WHERE customer_id = 2",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, event_type FROM log_activity WHERE timestamp > '2022-01-01 00:00:00'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, customers.email, accounts.balance FROM customers INNER JOIN accounts ON customers.customer_id = accounts.customer_id WHERE accounts.balance > 1000",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, accounts.balance, log_activity.event_type FROM customers INNER JOIN accounts ON customers.customer_id = accounts.customer_id INNER JOIN log_activity ON customers.customer_id = log_activity.customer_id WHERE accounts.balance < 5000 AND log_activity.event_type = 'login'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, login_credentials.username, permissions.permission_type FROM customers INNER JOIN login_credentials ON customers.customer_id = login_credentials.customer_id INNER JOIN permissions ON customers.customer_id = permissions.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.customer_name, a.balance, l.event_type FROM customers c INNER JOIN accounts a ON c.customer_id = a.customer_id INNER JOIN log_activity l ON c.customer_id = l.customer_id WHERE a.balance > 2000 AND l.event_type = 'purchase'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.customer_name, a.balance, l.timestamp FROM customers c INNER JOIN accounts a ON c.customer_id = a.customer_id INNER JOIN log_activity l ON c.customer_id = l.customer_id WHERE a.balance < 1000 AND l.timestamp > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.customer_name, p.permission_type, l.event_type FROM customers c INNER JOIN permissions p ON c.customer_id = p.customer_id INNER JOIN log_activity l ON c.customer_id = l.customer_id WHERE p.permission_type = 'admin' AND l.event_type = 'logout'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail VARCHAR(100),\n\tphone_number VARCHAR(15),\n\taddress VARCHAR(255)\n)\n\nCREATE TABLE accounts (\n\taccount_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tbalance DECIMAL(10,2),\n\tstatus VARCHAR(20)\n)\n\nCREATE TABLE login_credentials (\n\tcredential_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tusername VARCHAR(50),\n\tpassword VARCHAR(50)\n)\n\nCREATE TABLE permissions (\n\tpermission_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpermission_type VARCHAR(50)\n)\n\nCREATE TABLE log_activity (\n\tlog_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tevent_type VARCHAR(50),\n\ttimestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.customer_name, a.balance, p.permission_type FROM customers c INNER JOIN accounts a ON c.customer_id = a.customer_id INNER JOIN permissions p ON c.customer_id = p.customer_id WHERE a.balance > ..."
]