[
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET total_spent = 1500.50 WHERE customer_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET loyalty_points = 100 WHERE customer_id = 1002;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET total_spent = 2000.75, loyalty_points = 150 WHERE customer_id = 1003;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET total_spent = total_spent + 100, loyalty_points = CASE WHEN total_spent > 1000 THEN loyalty_points + 10 ELSE loyalty_points + 5 END WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET total_spent = total_spent * 1.1, loyalty_points = loyalty_points + 2 WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET total_spent = 0, loyalty_points = 0 WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE loyalty_program_customers SET loyalty_points = loyalty_points + 100 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE loyalty_program_customers SET customer_name = 'Alice' WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE loyalty_rewards SET required_points = 500 WHERE reward_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE loyalty_program_customers SET loyalty_points = loyalty_points + 100 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE loyalty_program_customers SET loyalty_points = loyalty_points - 50 WHERE customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE loyalty_rewards SET required_points = required_points + 200 WHERE reward_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET loyalty_points = loyalty_points + 10 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nUPDATE purchases SET purchase_amount = purchase_amount * 1.1 WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nUPDATE rewards SET reward_points_required = 50 WHERE reward_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nUPDATE loyalty_program SET loyalty_points = loyalty_points + 50 WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nUPDATE purchases SET purchase_amount = 100.50, purchase_date = '2022-10-15' WHERE customer_id = 456 AND purchase_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nUPDATE rewards SET reward_description = 'Special Offer', reward_points_required = 200 WHERE customer_id = 789 AND reward_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nUPDATE loyalty_program.customers SET loyalty_points = loyalty_points + 100 WHERE customer_id = '65b9f1c5-a9bf-4c07-9b5c-2c157b1f9cb2';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nUPDATE loyalty_program.orders SET order_total = order_total * 1.1 WHERE customer_id = '65b9f1c5-a9bf-4c07-9b5c-2c157b1f9cb2';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nUPDATE loyalty_program.rewards SET loyalty_points_required = loyalty_points_required - 50 WHERE reward_id = 'ff207651-9d0a-4ae7-a3d4-a6f9fbfb3825';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nUPDATE loyalty_program.customers SET loyalty_points = loyalty_points + 100 WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nUPDATE loyalty_program.orders SET order_total = order_total * 1.1 WHERE order_date < NOW() - INTERVAL '1' DAY;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nUPDATE loyalty_program.customer_rewards SET redeemed = TRUE, received_date = CURRENT_DATE WHERE customer_id = '123e4567-e89b-12d3-a456-426614174001' AND reward_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nUPDATE customers SET loyalty_points = loyalty_points + 10 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nUPDATE purchases SET total_amount = total_amount * 1.1 WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nUPDATE rewards SET point_cost = point_cost - 5 WHERE reward_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nUPDATE customers SET loyalty_points = loyalty_points + 50 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nUPDATE purchases SET total_amount = total_amount * 1.1 WHERE purchase_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nUPDATE rewards SET point_cost = point_cost - 10, expiration_date = '2023-12-31' WHERE reward_id = 2;"
]