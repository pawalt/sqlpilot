[
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT total_spent FROM loyalty_program WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, loyalty_points FROM loyalty_program WHERE total_spent > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE loyalty_points < 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_spent FROM loyalty_program WHERE loyalty_points >= 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM loyalty_program WHERE customer_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name FROM loyalty_program WHERE total_spent BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, loyalty_points FROM loyalty_program WHERE total_spent < 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM loyalty_program WHERE loyalty_points >= 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program WHERE total_spent <= 2000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM loyalty_program WHERE customer_name IN ('John', 'Emily');",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name FROM loyalty_program WHERE loyalty_points > 200;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM loyalty_program WHERE total_spent = 1500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM loyalty_program WHERE loyalty_points = 0;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE customer_id IN (3, 7, 9);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE loyalty_points BETWEEN 10 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_spent, loyalty_points FROM loyalty_program WHERE customer_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE total_spent > 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_spent) AS total_spent_sum FROM loyalty_program GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points FROM loyalty_program WHERE total_spent >= 1000 AND loyalty_points > 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points * 2 AS updated_points FROM loyalty_program WHERE total_spent < 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent, loyalty_points FROM loyalty_program ORDER BY total_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_spent, loyalty_points FROM loyalty_program WHERE total_spent BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_spent, loyalty_points FROM loyalty_program WHERE loyalty_points = (SELECT MAX(loyalty_points) FROM loyalty_program);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent, ROUND(total_spent * 0.1, 2) AS discount FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_spent) AS total_spent_sum, AVG(total_spent) AS total_spent_avg FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS loyalty_program_count FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_spent, loyalty_points FROM loyalty_program WHERE customer_id IN (1, 5, 10, 15);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE loyalty_points IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE customer_name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent, loyalty_points FROM loyalty_program WHERE total_spent > 100 AND loyalty_points < 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE total_spent = (SELECT MIN(total_spent) FROM loyalty_program);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_spent FROM loyalty_program WHERE total_spent > (SELECT AVG(total_spent) FROM loyalty_program);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_name, CASE WHEN total_spent > 500 THEN 'High Spender' ELSE 'Regular Spender' END AS spending_category FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  total_spent DECIMAL(10, 2),\n  loyalty_points INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_spent, loyalty_points FROM loyalty_program WHERE customer_name NOT LIKE '%test%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program_customers;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM loyalty_program_customers;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name FROM loyalty_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, required_points FROM loyalty_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, reward_id FROM loyalty_program_customers, loyalty_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points, reward_id, reward_name, required_points FROM loyalty_program_customers, loyalty_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program_customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, loyalty_points FROM loyalty_program_customers WHERE customer_name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_rewards WHERE required_points > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name FROM loyalty_rewards WHERE reward_name LIKE '%gift%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers ORDER BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, required_points FROM loyalty_rewards ORDER BY required_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, reward_id, reward_name FROM loyalty_program_customers, loyalty_rewards WHERE customer_id = reward_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points, reward_name FROM loyalty_program_customers, loyalty_rewards WHERE loyalty_points >= required_points;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program_customers LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_rewards LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE loyalty_points < 50 ORDER BY loyalty_points DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, required_points FROM loyalty_rewards WHERE required_points BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE loyalty_points > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(loyalty_points) AS total_points FROM loyalty_program_customers GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_name FROM loyalty_program_customers JOIN loyalty_rewards ON loyalty_points >= required_points;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE loyalty_points <= 500 AND customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points, reward_name FROM loyalty_program_customers LEFT JOIN loyalty_rewards ON loyalty_points >= required_points;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_name FROM loyalty_program_customers JOIN loyalty_rewards ON loyalty_points BETWEEN required_points - 100 AND required_points + 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers ORDER BY loyalty_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, required_points, (loyalty_points - required_points) AS points_diff FROM loyalty_program_customers, loyalty_rewards WHERE customer_id = reward_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE loyalty_points < (SELECT AVG(loyalty_points) FROM loyalty_program_customers);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_customers FROM loyalty_program_customers GROUP BY customer_name HAVING total_customers > 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_name FROM loyalty_program_customers LEFT OUTER JOIN loyalty_rewards ON loyalty_points >= required_points;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE customer_id IN (SELECT customer_id FROM loyalty_program_customers WHERE loyalty_points >= 500);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, required_points FROM loyalty_program_customers INNER JOIN loyalty_rewards ON loyalty_points >= required_points ORDER BY required_points ASC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE loyalty_points = (SELECT MAX(loyalty_points) FROM loyalty_program_customers);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(loyalty_points) AS total_points FROM loyalty_program_customers JOIN loyalty_rewards ON loyalty_points >= required_points GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE loyalty_points < 100 OR loyalty_points > 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_name FROM loyalty_program_customers INNER JOIN loyalty_rewards ON loyalty_points + required_points > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(loyalty_points) AS avg_points FROM loyalty_program_customers GROUP BY customer_name HAVING avg_points > 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program_customers WHERE customer_name LIKE '%son' OR customer_name LIKE '%sen';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program_customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(255) NOT NULL,\n  required_points INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, required_points FROM loyalty_program_customers INNER JOIN loyalty_rewards ON loyalty_points < required_points;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points FROM loyalty_program WHERE loyalty_points > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, purchase_amount FROM purchases WHERE purchase_amount > 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT purchase_id, customer_id, purchase_amount, purchase_date FROM purchases WHERE purchase_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT * FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, reward_description, reward_points_required FROM rewards WHERE reward_points_required < 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, reward_description FROM rewards WHERE customer_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, reward_description, reward_points_required FROM rewards WHERE customer_id = 102 AND reward_points_required >= 200;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points, purchase_amount, purchase_date FROM loyalty_program JOIN purchases ON loyalty_program.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, loyalty_points, reward_description, reward_points_required FROM loyalty_program JOIN rewards ON loyalty_program.customer_id = rewards.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT L.customer_name, R.reward_description FROM loyalty_program L JOIN rewards R ON L.customer_id = R.customer_id WHERE R.reward_points_required < 300;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT L.customer_name, P.purchase_amount FROM loyalty_program L JOIN purchases P ON L.customer_id = P.customer_id WHERE P.purchase_date >= '2022-06-01' AND P.purchase_amount < 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(purchase_amount) AS min_purchase_amount FROM purchases GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(loyalty_points) AS max_loyalty_points FROM loyalty_program GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(purchase_amount) AS total_purchase_amount FROM purchases GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT COUNT(customer_id) AS total_customers FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT AVG(loyalty_points) AS avg_loyalty_points FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(purchase_id) AS total_purchases FROM purchases GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points FROM loyalty_program WHERE loyalty_points > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, purchase_amount, purchase_date FROM purchases JOIN loyalty_program ON purchases.customer_id = loyalty_program.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, purchase_amount, purchase_date FROM loyalty_program LEFT JOIN purchases ON purchases.customer_id = loyalty_program.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_description FROM loyalty_program JOIN rewards ON loyalty_program.customer_id = rewards.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_description FROM loyalty_program RIGHT JOIN rewards ON loyalty_program.customer_id = rewards.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_description FROM loyalty_program INNER JOIN rewards ON loyalty_program.customer_id = rewards.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_description FROM loyalty_program LEFT JOIN rewards ON loyalty_program.customer_id = rewards.customer_id WHERE loyalty_points > 200;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_description FROM loyalty_program RIGHT JOIN rewards ON loyalty_program.customer_id = rewards.customer_id WHERE reward_points_required < 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_description FROM loyalty_program INNER JOIN rewards ON loyalty_program.customer_id = rewards.customer_id WHERE loyalty_points > 100 AND reward_points_required < 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(purchase_amount) AS total_spent FROM purchases JOIN loyalty_program ON purchases.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(purchase_amount) AS avg_spent FROM purchases JOIN loyalty_program ON purchases.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(purchase_id) AS total_purchases FROM purchases JOIN loyalty_program ON purchases.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(purchase_amount) AS max_spent FROM purchases JOIN loyalty_program ON purchases.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(purchase_amount) AS min_spent FROM purchases JOIN loyalty_program ON purchases.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(reward_points_required) AS total_points_required FROM rewards JOIN loyalty_program ON rewards.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(reward_points_required) AS avg_points_required FROM rewards JOIN loyalty_program ON rewards.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(reward_id) AS total_rewards FROM rewards JOIN loyalty_program ON rewards.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(reward_points_required) AS max_points_required FROM rewards JOIN loyalty_program ON rewards.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    loyalty_points INT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_amount DECIMAL,\n    purchase_date DATE\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    customer_id INT,\n    reward_description VARCHAR(100),\n    reward_points_required INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(reward_points_required) AS min_points_required FROM rewards JOIN loyalty_program ON rewards.customer_id = loyalty_program.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.customers;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM loyalty_program.customers;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_points FROM loyalty_program.customers;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.orders;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, customer_id, order_total FROM loyalty_program.orders;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT order_date FROM loyalty_program.orders;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, loyalty_points_required FROM loyalty_program.rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT description FROM loyalty_program.rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, reward_id FROM loyalty_program.customer_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT redeemed, received_date FROM loyalty_program.customer_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points FROM loyalty_program.customers WHERE loyalty_points > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, order_total FROM loyalty_program.orders WHERE order_total > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_name, loyalty_points_required FROM loyalty_program.rewards WHERE loyalty_points_required < 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, reward_id FROM loyalty_program.customer_rewards WHERE redeemed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.customers ORDER BY customer_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, order_total FROM loyalty_program.orders ORDER BY order_total ASC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_name, loyalty_points_required FROM loyalty_program.rewards ORDER BY loyalty_points_required DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, reward_id FROM loyalty_program.customer_rewards ORDER BY customer_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.orders WHERE order_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.customers;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points FROM loyalty_program.customers WHERE loyalty_points > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, order_total, order_date FROM loyalty_program.customers JOIN loyalty_program.orders ON customers.customer_id = orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.orders WHERE order_date >= '2022-01-01' AND order_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(order_total) AS total_spent FROM loyalty_program.customers JOIN loyalty_program.orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_name, loyalty_points_required FROM loyalty_program.rewards WHERE loyalty_points_required <= 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.customer_rewards WHERE redeemed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, rewards.reward_name FROM loyalty_program.customer_rewards JOIN loyalty_program.customers ON customers.customer_id = customer_rewards.customer_id JOIN loyalty_program.rewards ON rewards.reward_id = customer_rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.orders WHERE order_total > 1000 ORDER BY order_total DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, redeemed FROM loyalty_program.customers JOIN loyalty_program.customer_rewards ON customers.customer_id = customer_rewards.customer_id WHERE redeemed = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, description FROM loyalty_program.customers JOIN loyalty_program.customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN loyalty_program.rewards ON rewards.reward_id = customer_rewards.reward_id WHERE redeemed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, received_date FROM loyalty_program.customers JOIN loyalty_program.customer_rewards ON customers.customer_id = customer_rewards.customer_id WHERE received_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_orders FROM loyalty_program.orders GROUP BY customer_id HAVING total_orders > 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(order_total) AS total_spent, COUNT(order_id) AS total_orders FROM loyalty_program.customers JOIN loyalty_program.orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id HAVING total_orders > 3;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(loyalty_points_required) AS total_points_required FROM loyalty_program.customers JOIN loyalty_program.customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN loyalty_program.rewards ON rewards.reward_id = customer_rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.orders WHERE order_total BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points + loyalty_points_required AS total_points FROM loyalty_program.customers JOIN loyalty_program.customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN loyalty_program.rewards ON rewards.reward_id = customer_rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, order_date::DATE, EXTRACT(MONTH FROM order_date) AS order_month FROM loyalty_program.customers JOIN loyalty_program.orders ON customers.customer_id = orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(reward_id) AS total_rewards FROM loyalty_program.customers JOIN loyalty_program.customer_rewards ON customers.customer_id = customer_rewards.customer_id WHERE redeemed = TRUE GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program.customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE loyalty_program.orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    order_total DECIMAL(10,2) NOT NULL,\n    order_date TIMESTAMP\n);\n\nCREATE TABLE loyalty_program.rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    loyalty_points_required INT NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE loyalty_program.customer_rewards (\n    customer_id UUID REFERENCES loyalty_program.customers(customer_id),\n    reward_id UUID REFERENCES loyalty_program.rewards(reward_id),\n    redeemed BOOLEAN DEFAULT FALSE,\n    received_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program.orders JOIN loyalty_program.customers ON orders.customer_id = customers.customer_id JOIN loyalty_program.rewards ON orders.order_total >= rewards.loyalty_points_required;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT purchase_id, customer_id, total_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_id, reward_id, claimed_date FROM customer_rewards;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT reward_name, point_cost FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_tiers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, purchases.purchase_date, total_amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, rewards.reward_name, claimed_date FROM customers INNER JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id INNER JOIN rewards ON customer_rewards.reward_id = rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, rewards.reward_name FROM customers LEFT JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id LEFT JOIN rewards ON customer_rewards.reward_id = rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, tier_name FROM customers JOIN loyalty_tiers ON loyalty_points >= point_threshold;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, tier_name FROM customers JOIN loyalty_tiers ON loyalty_points >= point_threshold WHERE customers.customer_id NOT IN (SELECT customer_id FROM customer_rewards);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, reward_name FROM customers JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id WHERE claimed_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, purchases.total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchase_date >= '2022-01-01' AND purchase_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, COUNT(reward_id) AS num_rewards FROM customers LEFT JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id GROUP BY customers.customer_name, loyalty_points;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, SUM(total_amount) AS total_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name, loyalty_points;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, AVG(total_amount) AS avg_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name, loyalty_points;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, MAX(total_amount) AS max_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name, loyalty_points;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, MIN(total_amount) AS min_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name, loyalty_points;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, reward_name, point_cost FROM customers JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE total_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchase_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, tier_name FROM customers JOIN loyalty_tiers ON customers.loyalty_points >= loyalty_tiers.point_threshold;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_amount) AS total_spent FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(purchase_id) AS total_purchases FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(total_amount) AS min_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(total_amount) AS max_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(total_amount) AS average_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, reward_name, claimed_date FROM customers JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id WHERE claimed_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, reward_name, claimed_date FROM customers LEFT JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id WHERE claimed_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(reward_id) AS total_rewards_claimed FROM customers LEFT JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, total_amount, CASE WHEN total_amount > 100 THEN 'High Value' ELSE 'Low Value' END AS purchase_category FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, loyalty_points, CASE WHEN loyalty_points > 1000 THEN 'Gold' WHEN loyalty_points > 500 THEN 'Silver' ELSE 'Bronze' END AS loyalty_tier FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, reward_name, point_cost, expiration_date FROM customers JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id WHERE expiration_date >= CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, reward_name, point_cost, expiration_date FROM customers JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id WHERE expiration_date < CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, reward_name, claimed_date FROM customers JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id ORDER BY claimed_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, reward_name, claimed_date FROM customers JOIN customer_rewards ON customers.customer_id = customer_rewards.customer_id JOIN rewards ON customer_rewards.reward_id = rewards.reward_id ORDER BY claimed_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50) NOT NULL,\n   loyalty_points INT DEFAULT 0\n);\n\nCREATE TABLE purchases (\n   purchase_id INT PRIMARY KEY,\n   customer_id INT,\n   purchase_date DATE,\n   total_amount FLOAT,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE rewards (\n   reward_id INT PRIMARY KEY,\n   reward_name VARCHAR(50) NOT NULL,\n   point_cost INT,\n   expiration_date DATE\n);\n\nCREATE TABLE customer_rewards (\n   customer_id INT,\n   reward_id INT,\n   claimed_date DATE,\n   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n   FOREIGN KEY (reward_id) REFERENCES rewards(reward_id),\n   PRIMARY KEY (customer_id, reward_id)\n);\n\nCREATE TABLE loyalty_tiers (\n   tier_id INT PRIMARY KEY,\n   tier_name VARCHAR(50) NOT NULL,\n   point_threshold INT\n);\n\n### STATEMENT\n\nSELECT customer_name, purchase_date, total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customer_name LIKE 'A%';"
]