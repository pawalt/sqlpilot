[
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1, 'John Doe', 'john.doe@example.com', '2022-01-01', TRUE, 80) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', email = 'john.doe@example.com', subscription_date = '2022-01-01', segmentation_status = TRUE, behavior_score = 80;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '2022-02-15', FALSE, 65) ON CONFLICT (customer_id) DO UPDATE   SET customer_name = 'Alice Smith', email = 'alice.smith@example.com', subscription_date = '2022-02-15', segmentation_status = FALSE, behavior_score = 65;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (3, 'Mary Johnson', 'mary.johnson@example.com', '2022-03-20', TRUE, 90) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mary Johnson', email = 'mary.johnson@example.com', subscription_date = '2022-03-20', segmentation_status = TRUE, behavior_score = 90;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (4, 'Bob Brown', 'bob.brown@example.com', '2022-04-12', FALSE, 75) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Brown', email = 'bob.brown@example.com', subscription_date = '2022-04-12', segmentation_status = FALSE, behavior_score = 75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (5, 'Sarah Miller', 'sarah.miller@example.com', '2022-05-08', TRUE, 85) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Miller', email = 'sarah.miller@example.com', subscription_date = '2022-05-08', segmentation_status = TRUE, behavior_score = 85;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (6, 'David Wilson', 'david.wilson@example.com', '2022-06-25', FALSE, 70) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David Wilson', email = 'david.wilson@example.com', subscription_date = '2022-06-25', segmentation_status = FALSE, behavior_score = 70;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (7, 'Anna Davis', 'anna.davis@example.com', '2022-07-30', TRUE, 95) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Anna Davis', email = 'anna.davis@example.com', subscription_date = '2022-07-30', segmentation_status = TRUE, behavior_score = 95;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (8, 'Chris White', 'chris.white@example.com', '2022-08-17', FALSE, 60) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Chris White', email = 'chris.white@example.com', subscription_date = '2022-08-17', segmentation_status = FALSE, behavior_score = 60;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (9, 'Laura Parker', 'laura.parker@example.com', '2022-09-10', TRUE, 80) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Laura Parker', email = 'laura.parker@example.com', subscription_date = '2022-09-10', segmentation_status = TRUE, behavior_score = 80;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (10, 'Kevin Adams', 'kevin.adams@example.com', '2022-10-05', FALSE, 70) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Kevin Adams', email = 'kevin.adams@example.com', subscription_date = '2022-10-05', segmentation_status = FALSE, behavior_score = 70;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (11, 'Emily Young', 'emily.young@example.com', '2022-11-18', TRUE, 90) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Young', email = 'emily.young@example.com', subscription_date = '2022-11-18', segmentation_status = TRUE, behavior_score = 90;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (12, 'Mark Turner', 'mark.turner@example.com', '2022-12-07', FALSE, 75) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mark Turner', email = 'mark.turner@example.com', subscription_date = '2022-12-07', segmentation_status = FALSE, behavior_score = 75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (13, 'Jessica Evans', 'jessica.evans@example.com', '2023-01-15', TRUE, 85) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jessica Evans', email = 'jessica.evans@example.com', subscription_date = '2023-01-15', segmentation_status = TRUE, behavior_score = 85;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (14, 'Steven Morris', 'steven.morris@example.com', '2023-02-20', FALSE, 65) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Steven Morris', email = 'steven.morris@example.com', subscription_date = '2023-02-20', segmentation_status = FALSE, behavior_score = 65;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (15, 'Rachel Cooper', 'rachel.cooper@example.com', '2023-03-10', TRUE, 75) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Rachel Cooper', email = 'rachel.cooper@example.com', subscription_date = '2023-03-10', segmentation_status = TRUE, behavior_score = 75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (16, 'Daniel Parker', 'daniel.parker@example.com', '2023-04-22', FALSE, 80) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Daniel Parker', email = 'daniel.parker@example.com', subscription_date = '2023-04-22', segmentation_status = FALSE, behavior_score = 80;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (17, 'Julia Reed', 'julia.reed@example.com', '2023-05-28', TRUE, 70) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Julia Reed', email = 'julia.reed@example.com', subscription_date = '2023-05-28', segmentation_status = TRUE, behavior_score = 70;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (18, 'Michael Hill', 'michael.hill@example.com', '2023-06-15', FALSE, 90) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Hill', email = 'michael.hill@example.com', subscription_date = '2023-06-15', segmentation_status = FALSE, behavior_score = 90;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (19, 'Nicole King', 'nicole.king@example.com', '2023-07-20', TRUE, 60) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Nicole King', email = 'nicole.king@example.com', subscription_date = '2023-07-20', segmentation_status = TRUE, behavior_score = 60;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (20, 'Richard Lopez', 'richard.lopez@example.com', '2023-08-25', FALSE, 80) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Richard Lopez', email = 'richard.lopez@example.com', subscription_date = '2023-08-25', segmentation_status = FALSE, behavior_score = 80;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1001, 'John Doe', 'john.doe@example.com', '2022-01-01', TRUE, 80) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', email = 'john.doe@example.com', subscription_date = '2022-01-01', segmentation_status = TRUE, behavior_score = 80",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1002, 'Jane Smith', 'jane.smith@example.com', '2022-01-02', FALSE, 90) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', email = 'jane.smith@example.com', subscription_date = '2022-01-02', segmentation_status = FALSE, behavior_score = 90",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1003, 'Michael Johnson', 'michael.johnson@example.com', '2022-01-03', TRUE, 75) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Johnson', email = 'michael.johnson@example.com', subscription_date = '2022-01-03', segmentation_status = TRUE, behavior_score = 75",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1004, 'Emily Brown', 'emily.brown@example.com', '2022-01-04', FALSE, 85) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Brown', email = 'emily.brown@example.com', subscription_date = '2022-01-04', segmentation_status = FALSE, behavior_score = 85",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1005, 'William Davis', 'william.davis@example.com', '2022-01-05', TRUE, 70) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'William Davis', email = 'william.davis@example.com', subscription_date = '2022-01-05', segmentation_status = TRUE, behavior_score = 70",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1006, 'Olivia Miller', 'olivia.miller@example.com', '2022-01-06', FALSE, 95) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia Miller', email = 'olivia.miller@example.com', subscription_date = '2022-01-06', segmentation_status = FALSE, behavior_score = 95",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, subscription_date, segmentation_status, behavior_score) VALUES (1007, 'James Wilson', 'james.wilson@example.com', '2022-01-07', TRUE, 60) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'James Wilson', email = 'james.wilson@example.com', subscription_date = '2022-01-07', segmentation_status = TRUE, behavior_sco...",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (2, 'Jane Smith', 'jane.smith@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (4, 'Bob Brown', 'bob.brown@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (5, 'Emily Davis', 'emily.davis@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (6, 'Michael Wilson', 'michael.wilson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (7, 'Sara Moore', 'sara.moore@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (8, 'David Taylor', 'david.taylor@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (9, 'Anna Martinez', 'anna.martinez@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (10, 'Peter Adams', 'peter.adams@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (11, 'Linda White', 'linda.white@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (12, 'Mark Wilson', 'mark.wilson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (13, 'Mary Brown', 'mary.brown@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (14, 'Thomas Miller', 'thomas.miller@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (15, 'Laura Harris', 'laura.harris@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (16, 'Chris Thompson', 'chris.thompson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (17, 'Karen Clark', 'karen.clark@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (18, 'Jason Young', 'jason.young@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (19, 'Nicole Allen', 'nicole.allen@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (20, 'Daniel Scott', 'daniel.scott@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (1, 'John Doe', 'john@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (2, 'Jane Smith', 'jane@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', email = 'jane@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (3, 'Alice Johnson', 'alice@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (4, 'Bob Brown', 'bob@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Brown', email = 'bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (5, 'Mary Wilson', 'mary@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mary Wilson', email = 'mary@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (6, 'David Lee', 'david@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David Lee', email = 'david@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (7, 'Sarah Johnson', 'sarah@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Johnson', email = 'sarah@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (8, 'Kevin Brown', 'kevin@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Kevin Brown', email = 'kevin@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (9, 'Hannah Taylor', 'hannah@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Hannah Taylor', email = 'hannah@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (10, 'Michael Wilson', 'michael@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Wilson', email = 'michael@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (11, 'Laura Miller', 'laura@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Laura Miller', email = 'laura@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (12, 'Peter Davis', 'peter@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Peter Davis', email = 'peter@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (13, 'Samantha White', 'samantha@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Samantha White', email = 'samantha@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (14, 'Jack Wilson', 'jack@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jack Wilson', email = 'jack@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (15, 'Emily Anderson', 'emily@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Anderson', email = 'emily@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (16, 'Daniel Harris', 'daniel@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Daniel Harris', email = 'daniel@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (17, 'Nicole Thompson', 'nicole@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Nicole Thompson', email = 'nicole@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (18, 'James Wilson', 'james@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'James Wilson', email = 'james@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (19, 'Megan Brown', 'megan@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Megan Brown', email = 'megan@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (20, 'Christopher Martinez', 'christopher@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Christopher Martinez', email = 'christopher@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (1, 'Alice', 'alice@example.com', 30, 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (2, 'Bob', 'bob@example.com', 25, 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (3, 'Charlie', 'charlie@example.com', 35, 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (4, 'David', 'david@example.com', 28, 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (5, 'Eve', 'eve@example.com', 33, 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (6, 'Frank', 'frank@example.com', 40, 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (7, 'Grace', 'grace@example.com', 27, 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (8, 'Henry', 'henry@example.com', 32, 'Segment B') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (9, 'Ivy', 'ivy@example.com', 38, 'Segment C') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (10, 'Jack', 'jack@example.com', 29, 'Segment A') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, age = excluded.age, segment = excluded.segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (1, 'Campaign A', '2023-01-01', '2023-01-31', 'Active') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = excluded.campaign_name, start_date = excluded.start_date, end_date = excluded.end_date, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (2, 'Campaign B', '2023-02-01', '2023-02-28', 'Inactive') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = excluded.campaign_name, start_date = excluded.start_date, end_date = excluded.end_date, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (3, 'Campaign C', '2023-03-01', '2023-03-31', 'Active') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = excluded.campaign_name, start_date = excluded.start_date, end_date = excluded.end_date, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (4, 'Campaign D', '2023-04-01', '2023-04-30', 'Inactive') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = excluded.campaign_name, start_date = excluded.start_date, end_date = excluded.end_date, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (5, 'Campaign E', '2023-05-01', '2023-05-31', 'Active') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = excluded.campaign_name, start_date = excluded.start_date, end_date = excluded.end_date, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (1, 1, 1, 'Open', CURRENT_TIMESTAMP) ON CONFLICT (behavior_id) DO UPDATE SET customer_id = excluded.customer_id, campaign_id = excluded.campaign_id, behavior_type = excluded.behavior_type, behavior_date = excluded.behavior_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (2, 2, 2, 'Click', CURRENT_TIMESTAMP) ON CONFLICT (behavior_id) DO UPDATE SET customer_id = excluded.customer_id, campaign_id = excluded.campaign_id, behavior_type = excluded.behavior_type, behavior_date = excluded.behavior_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (3, 3, 3, 'Open', CURRENT_TIMESTAMP) ON CONFLICT (behavior_id) DO UPDATE SET customer_id = excluded.customer_id, campaign_id = excluded.campaign_id, behavior_type = excluded.behavior_type, behavior_date = excluded.behavior_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (4, 4, 4, 'Click', CURRENT_TIMESTAMP) ON CONFLICT (behavior_id) DO UPDATE SET customer_id = excluded.customer_id, campaign_id = excluded.campaign_id, behavior_type = excluded.behavior_type, behavior_date = excluded.behavior_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (5, 5, 5, 'Open', CURRENT_TIMESTAMP) ON CONFLICT (behavior_id) DO UPDATE SET customer_id = excluded.customer_id, campaign_id = excluded.campaign_id, behavior_type = excluded.behavior_type, behavior_date = excluded.behavior_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (1, 'John Doe', 'john@example.com', 30, 'Premium') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john@example.com', age = 30, segment = 'Premium';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (2, 'Alice Smith', 'alice@example.com', 25, 'Standard') ON DUPLICATE KEY UPDATE name = 'Alice Smith', email = 'alice@example.com', age = 25, segment = 'Standard';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (3, 'Bob Johnson', 'bob@example.com', 35, 'Premium') ON DUPLICATE KEY UPDATE name = 'Bob Johnson', email = 'bob@example.com', age = 35, segment = 'Premium';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (4, 'Mary Brown', 'mary@example.com', 40, 'Standard') ON DUPLICATE KEY UPDATE name = 'Mary Brown', email = 'mary@example.com', age = 40, segment = 'Standard';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, age, segment) VALUES (5, 'Sarah Miller', 'sarah@example.com', 28, 'Premium') ON DUPLICATE KEY UPDATE name = 'Sarah Miller', email = 'sarah@example.com', age = 28, segment = 'Premium';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 'Active') ON DUPLICATE KEY UPDATE campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (2, 'Holiday Special', '2022-11-20', '2022-12-31', 'Inactive') ON DUPLICATE KEY UPDATE campaign_name = 'Holiday Special', start_date = '2022-11-20', end_date = '2022-12-31', status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (3, 'Spring Promotion', '2022-04-01', '2022-05-31', 'Active') ON DUPLICATE KEY UPDATE campaign_name = 'Spring Promotion', start_date = '2022-04-01', end_date = '2022-05-31', status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (4, 'End of Year Sale', '2022-12-01', '2022-12-31', 'Pending') ON DUPLICATE KEY UPDATE campaign_name = 'End of Year Sale', start_date = '2022-12-01', end_date = '2022-12-31', status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO email_campaigns (campaign_id, campaign_name, start_date, end_date, status) VALUES (5, 'New Year Campaign', '2023-01-01', '2023-01-31', 'Active') ON DUPLICATE KEY UPDATE campaign_name = 'New Year Campaign', start_date = '2023-01-01', end_date = '2023-01-31', status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (1, 1, 1, 'Click', '2022-06-02 10:15:00') ON DUPLICATE KEY UPDATE customer_id = 1, campaign_id = 1, behavior_type = 'Click', behavior_date = '2022-06-02 10:15:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (2, 2, 1, 'Open', '2022-06-03 08:30:00') ON DUPLICATE KEY UPDATE customer_id = 2, campaign_id = 1, behavior_type = 'Open', behavior_date = '2022-06-03 08:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (3, 3, 2, 'Click', '2022-11-25 15:45:00') ON DUPLICATE KEY UPDATE customer_id = 3, campaign_id = 2, behavior_type = 'Click', behavior_date = '2022-11-25 15:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (4, 4, 2, 'Open', '2022-11-26 09:20:00') ON DUPLICATE KEY UPDATE customer_id = 4, campaign_id = 2, behavior_type = 'Open', behavior_date = '2022-11-26 09:20:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_behavior (behavior_id, customer_id, campaign_id, behavior_type, behavior_date) VALUES (5, 5, 3, 'Click', '2022-04-05 11:30:00') ON DUPLICATE KEY UPDATE customer_id = 5, campaign_id = 3, behavior_type = 'Click', behavior_date = '2022-04-05 11:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (1, 'Alice', 'alice@gmail.com', 'Segment A', 'Behavior X') ON DUPLICATE KEY UPDATE customer_name = 'Alice', customer_email = 'alice@gmail.com', customer_segment = 'Segment A', customer_behavior = 'Behavior X'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (2, 'Bob', 'bob@gmail.com', 'Segment B', 'Behavior Y') ON DUPLICATE KEY UPDATE customer_name = 'Bob', customer_email = 'bob@gmail.com', customer_segment = 'Segment B', customer_behavior = 'Behavior Y'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (3, 'Charlie', 'charlie@gmail.com', 'Segment C', 'Behavior Z') ON DUPLICATE KEY UPDATE customer_name = 'Charlie', customer_email = 'charlie@gmail.com', customer_segment = 'Segment C', customer_behavior = 'Behavior Z'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (4, 'David', 'david@gmail.com', 'Segment D', 'Behavior W') ON DUPLICATE KEY UPDATE customer_name = 'David', customer_email = 'david@gmail.com', customer_segment = 'Segment D', customer_behavior = 'Behavior W'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (5, 'Eve', 'eve@gmail.com', 'Segment E', 'Behavior V') ON DUPLICATE KEY UPDATE customer_name = 'Eve', customer_email = 'eve@gmail.com', customer_segment = 'Segment E', customer_behavior = 'Behavior V'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (6, 'Frank', 'frank@gmail.com', 'Segment F', 'Behavior U') ON DUPLICATE KEY UPDATE customer_name = 'Frank', customer_email = 'frank@gmail.com', customer_segment = 'Segment F', customer_behavior = 'Behavior U'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (7, 'Grace', 'grace@gmail.com', 'Segment G', 'Behavior T') ON DUPLICATE KEY UPDATE customer_name = 'Grace', customer_email = 'grace@gmail.com', customer_segment = 'Segment G', customer_behavior = 'Behavior T'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (8, 'Henry', 'henry@gmail.com', 'Segment H', 'Behavior S') ON DUPLICATE KEY UPDATE customer_name = 'Henry', customer_email = 'henry@gmail.com', customer_segment = 'Segment H', customer_behavior = 'Behavior S'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (9, 'Ivy', 'ivy@gmail.com', 'Segment I', 'Behavior R') ON DUPLICATE KEY UPDATE customer_name = 'Ivy', customer_email = 'ivy@gmail.com', customer_segment = 'Segment I', customer_behavior = 'Behavior R'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (10, 'Jack', 'jack@gmail.com', 'Segment A', 'Behavior X') ON DUPLICATE KEY UPDATE customer_name = 'Jack', customer_email = 'jack@gmail.com', customer_segment = 'Segment A', customer_behavior = 'Behavior X'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (11, 'Karen', 'karen@gmail.com', 'Segment B', 'Behavior Y') ON DUPLICATE KEY UPDATE customer_name = 'Karen', customer_email = 'karen@gmail.com', customer_segment = 'Segment B', customer_behavior = 'Behavior Y'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (12, 'Leo', 'leo@gmail.com', 'Segment C', 'Behavior Z') ON DUPLICATE KEY UPDATE customer_name = 'Leo', customer_email = 'leo@gmail.com', customer_segment = 'Segment C', customer_behavior = 'Behavior Z'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (13, 'Mia', 'mia@gmail.com', 'Segment D', 'Behavior W') ON DUPLICATE KEY UPDATE customer_name = 'Mia', customer_email = 'mia@gmail.com', customer_segment = 'Segment D', customer_behavior = 'Behavior W'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (14, 'Nick', 'nick@gmail.com', 'Segment E', 'Behavior V') ON DUPLICATE KEY UPDATE customer_name = 'Nick', customer_email = 'nick@gmail.com', customer_segment = 'Segment E', customer_behavior = 'Behavior V'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (15, 'Olivia', 'olivia@gmail.com', 'Segment F', 'Behavior U') ON DUPLICATE KEY UPDATE customer_name = 'Olivia', customer_email = 'olivia@gmail.com', customer_segment = 'Segment F', customer_behavior = 'Behavior U'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (16, 'Peter', 'peter@gmail.com', 'Segment G', 'Behavior T') ON DUPLICATE KEY UPDATE customer_name = 'Peter', customer_email = 'peter@gmail.com', customer_segment = 'Segment G', customer_behavior = 'Behavior T'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (17, 'Queen', 'queen@gmail.com', 'Segment H', 'Behavior S') ON DUPLICATE KEY UPDATE customer_name = 'Queen', customer_email = 'queen@gmail.com', customer_segment = 'Segment H', customer_behavior = 'Behavior S'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (18, 'Ryan', 'ryan@gmail.com', 'Segment I', 'Behavior R') ON DUPLICATE KEY UPDATE customer_name = 'Ryan', customer_email = 'ryan@gmail.com', customer_segment = 'Segment I', customer_behavior = 'Behavior R'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (19, 'Sarah', 'sarah@gmail.com', 'Segment A', 'Behavior X') ON DUPLICATE KEY UPDATE customer_name = 'Sarah', customer_email = 'sarah@gmail.com', customer_segment = 'Segment A', customer_behavior = 'Behavior X'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (20, 'Tom', 'tom@gmail.com', 'Segment B', 'Behavior Y') ON DUPLICATE KEY UPDATE customer_name = 'Tom', customer_email = 'tom@gmail.com', customer_segment = 'Segment B', customer_behavior = 'Behavior Y'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (1, 'John Doe', 'john.doe@example.com', 'Premium', 'Active') ON CONFLICT (customer_id) DO UPDATE SET customer_segment = 'Premium', customer_behavior = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_segment, customer_behavior) VALUES (2, 'Jane Smith', 'jane.smith@example.com', 'Gold', 'Inactive') ON CONFLICT (customer_id) DO UPDATE SET customer_segment = 'Gold', customer_behavior = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date, target_segment) VALUES (101, 'Black Friday Sale', '2022-11-25', '2022-11-28', 'Premium') ON CONFLICT (campaign_id) DO UPDATE SET start_date = '2022-11-25', end_date = '2022-11-28', target_segment = 'Premium';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date, target_segment) VALUES (102, 'Holiday Specials', '2022-12-15', '2022-12-31', 'Gold') ON CONFLICT (campaign_id) DO UPDATE SET start_date = '2022-12-15', end_date = '2022-12-31', target_segment = 'Gold';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO campaign_performance (performance_id, campaign_id, customer_id, conversion_rate, revenue_generated) VALUES (201, 101, 1, 0.10, 500.00) ON CONFLICT (performance_id) DO UPDATE SET conversion_rate = 0.10, revenue_generated = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO campaign_performance (performance_id, campaign_id, customer_id, conversion_rate, revenue_generated) VALUES (202, 102, 2, 0.05, 250.00) ON CONFLICT (performance_id) DO UPDATE SET conversion_rate = 0.05, revenue_generated = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO campaign_responses (response_id, campaign_id, customer_id, response_date, response_type) VALUES (301, 101, 1, '2022-11-26 10:00:00', 'Click') ON CONFLICT (response_id) DO UPDATE SET response_date = '2022-11-26 10:00:00', response_type = 'Click';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nUPSERT INTO campaign_responses (response_id, campaign_id, customer_id, response_date, response_type) VALUES (302, 102, 2, '2022-12-20 15:30:00', 'Purchase') ON CONFLICT (response_id) DO UPDATE SET response_date = '2022-12-20 15:30:00', response_type = 'Purchase';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (1, 'Segment A') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment A';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (2, 'Segment B') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment B';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (3, 'Segment C') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment C';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (4, 'Segment D') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment D';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (5, 'Segment E') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment E';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (6, 'Segment F') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment F';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (7, 'Segment G') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment G';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (8, 'Segment H') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment H';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (9, 'Segment I') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment I';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (10, 'Segment J') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment J';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (11, 'Segment K') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment K';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (12, 'Segment L') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment L';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (13, 'Segment M') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment M';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (14, 'Segment N') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment N';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (15, 'Segment O') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment O';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (16, 'Segment P') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment P';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (17, 'Segment Q') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment Q';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (18, 'Segment R') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment R';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (19, 'Segment S') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment S';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_segments (segment_id, segment_name) VALUES (20, 'Segment T') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment T';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (1, 'Segment A') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment A updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (2, 'Segment B') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment B updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (3, 'Segment C') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment C updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (4, 'Segment D') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment D updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (5, 'Segment E') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment E updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (6, 'Segment F') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment F updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (7, 'Segment G') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment G updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (8, 'Segment H') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment H updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (9, 'Segment I') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment I updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (10, 'Segment J') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment J updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (11, 'Segment K') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment K updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (12, 'Segment L') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment L updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (13, 'Segment M') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment M updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (14, 'Segment N') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment N updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (15, 'Segment O') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment O updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (16, 'Segment P') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment P updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (17, 'Segment Q') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment Q updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (18, 'Segment R') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment R updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (19, 'Segment S') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment S updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_segments (segment_id, segment_name) VALUES (20, 'Segment T') ON CONFLICT (segment_id) DO UPDATE SET segment_name = 'Segment T updated';"
]