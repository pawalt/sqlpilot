[
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, behavior_score FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, subscription_date FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE segmentation_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, behavior_score FROM customers WHERE behavior_score > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY behavior_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY subscription_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT AVG(behavior_score) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT MAX(behavior_score) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT segmentation_status FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE behavior_score BETWEEN 40 AND 80;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, behavior_score FROM customers WHERE segmentation_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE subscription_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, behavior_score FROM customers WHERE customer_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE behavior_score IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM customers WHERE behavior_score < 20;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE behavior_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE segmentation_status = TRUE ORDER BY subscription_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, behavior_score FROM customers WHERE segmentation_status = FALSE AND behavior_score BETWEEN 50 AND 70;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE MONTH(subscription_date) = 10 AND YEAR(subscription_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, behavior_score FROM customers WHERE customer_id IN (1001, 1005, 1009);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE behavior_score > 90 AND segmentation_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, behavior_score FROM customers WHERE behavior_score > (SELECT AVG(behavior_score) FROM customers);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM customers WHERE segmentation_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, subscription_date FROM customers WHERE DATE(subscription_date) >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email, behavior_score FROM customers WHERE behavior_score < 60 ORDER BY behavior_score ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT AVG(behavior_score) AS avg_score, MAX(behavior_score) AS max_score, MIN(behavior_score) AS min_score FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, behavior_score FROM customers WHERE behavior_score = (SELECT MAX(behavior_score) FROM customers);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_name) AS unique_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, behavior_score FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, subscription_date FROM customers WHERE behavior_score > 70 AND MONTH(subscription_date) = 6;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE segmentation_status = FALSE OR behavior_score < 40;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, segmentation_status FROM customers WHERE segmentation_status = TRUE GROUP BY segmentation_status HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, subscription_date FROM customers WHERE YEAR(subscription_date) BETWEEN 2020 AND 2021;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, behavior_score FROM customers WHERE segmentation_status = FALSE AND behavior_score < (SELECT AVG(behavior_score) FROM customers);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    subscription_date DATE,\n    segmentation_status BOOLEAN,\n    behavior_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, behavior_score FROM customers WHERE behavior_score > 85 ORDER BY behavior_score DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM campaign_segments;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_id, segment_name FROM campaign_segments WHERE segment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_name, criteria FROM campaign_segments WHERE segment_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM campaign_segments WHERE segment_id IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_name, criteria FROM campaign_segments WHERE criteria NOT LIKE 'abc%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email LIKE '%@domain.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_name, criteria FROM campaign_segments WHERE criteria LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_name, criteria FROM campaign_segments WHERE segment_name = 'VIP';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, s.segment_name FROM customers c JOIN campaign_segments s ON c.customer_id = s.segment_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers c JOIN campaign_segments s ON c.customer_id = s.segment_id WHERE s.criteria = 'segment_criteria';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers WHERE customer_name LIKE '%Doe%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) FROM customers GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers c LEFT JOIN campaign_segments s ON c.customer_id = s.segment_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) FROM customers GROUP BY customer_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id NOT IN (SELECT segment_id FROM campaign_segments);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(segment_id) FROM customers c JOIN campaign_segments s ON c.customer_id = s.segment_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(*) FROM customers c JOIN campaign_segments s ON c.customer_id = s.segment_id GROUP BY c.customer_name ORDER BY COUNT(*) DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers UNION SELECT segment_name, criteria FROM campaign_segments;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE campaign_segments (\n  segment_id INT PRIMARY KEY,\n  segment_name VARCHAR(255),\n  criteria VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1 UNION ALL SELECT * FROM customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM email_campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name, start_date, end_date FROM email_campaigns WHERE status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, behavior_type, behavior_date FROM customer_behavior WHERE campaign_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, segment FROM customers WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE name LIKE 'John%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM email_campaigns WHERE start_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE segment = 'VIP';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE behavior_type = 'Click';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name, status FROM email_campaigns WHERE end_date >= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE behavior_date >= '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, segment FROM customers WHERE age < 20;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT behavior_id, behavior_type, behavior_date FROM customer_behavior WHERE customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE age >= 40;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT campaign_id, start_date, end_date FROM email_campaigns WHERE end_date > start_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers WHERE segment IN ('VIP', 'Regular');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE behavior_date BETWEEN '2022-04-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, name, segment FROM customers WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM email_campaigns WHERE start_date <= CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT campaign_name, status FROM email_campaigns WHERE end_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, e.campaign_name, cb.behavior_type FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id JOIN email_campaigns e ON cb.campaign_id = e.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, e.campaign_name, cb.behavior_type FROM customers c LEFT JOIN customer_behavior cb ON c.customer_id = cb.customer_id LEFT JOIN email_campaigns e ON cb.campaign_id = e.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(cb.behavior_id) AS behavior_count FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id GROUP BY c.customer_id, c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, MAX(cb.behavior_date) AS last_behavior_date FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id GROUP BY c.customer_id, c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(e.status = 'Sent') AS sent_campaigns, SUM(e.status = 'Open') AS opened_campaigns FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id JOIN email_campaigns e ON cb.campaign_id = e.campaign_id GROUP BY c.customer_id, c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, cb.behavior_type, COUNT(*) AS behavior_count FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id WHERE cb.behavior_date >= '2022-01-01' GROUP BY c.customer_id, c.name, cb.behavior_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, e.campaign_name, cb.behavior_type, cb.behavior_date FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id JOIN email_campaigns e ON cb.campaign_id = e.campaign_id WHERE cb.behavior_date >= '2022-01-01' ORDER BY cb.behavior_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(DISTINCT cb.campaign_id) AS distinct_campaigns FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id GROUP BY c.customer_id, c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(DATEDIFF(e.end_date, e.start_date)) AS campaign_duration FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id JOIN email_campaigns e ON cb.campaign_id = e.campaign_id GROUP BY c.customer_id, c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, e.campaign_name, COUNT(*) AS behavior_count FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id JOIN email_campaigns e ON cb.campaign_id = e.campaign_id WHERE cb.behavior_type = 'Click' GROUP BY c.customer_id, c.name, e.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, cb.behavior_type, COUNT(*) AS behavior_count FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id WHERE MONTH(cb.behavior_date) = 2 GROUP BY c.customer_id, c.name, cb.behavior_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, e.campaign_name, cb.behavior_type, cb.behavior_date FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id JOIN email_campaigns e ON cb.campaign_id = e.campaign_id WHERE YEAR(cb.behavior_date) = 2022 ORDER BY cb.behavior_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    segment VARCHAR(50)\n);\n\nCREATE TABLE email_campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE customer_behavior (\n    behavior_id INT PRIMARY KEY,\n    customer_id INT,\n    campaign_id INT,\n    behavior_type VARCHAR(50),\n    behavior_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, e.campaign_name, cb.behavior_type, cb.behavior_date FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id JOIN email_campaigns e ON cb.campaign_id = e.campaign_id WHERE cb.behavior_date BETWEEN '2022-01-01' AND CURRENT_TIMESTAMP ORDER BY cb.behavior_date ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_segment FROM customers WHERE customer_segment = 'High Value'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM campaigns",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT campaign_name, target_segment FROM campaigns",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM campaigns WHERE start_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM campaign_performance",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT campaign_id, conversion_rate, revenue_generated FROM campaign_performance WHERE conversion_rate >= 0.1",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM campaign_responses",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT response_id, response_type FROM campaign_responses",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT campaign_id, COUNT(customer_id) as total_customers FROM campaign_responses GROUP BY campaign_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_name, response_date FROM customers c JOIN campaign_responses cr ON c.customer_id = cr.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT cp.campaign_name, cr.response_date, c.customer_name FROM campaigns cp JOIN campaign_responses cr ON cp.campaign_id = cr.campaign_id JOIN customers c ON cr.customer_id = c.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, cp.campaign_name, cp.revenue_generated FROM customers c JOIN campaign_performance cp ON c.customer_id = cp.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT cr.response_type, cp.conversion_rate FROM campaign_performance cp JOIN campaign_responses cr ON cp.campaign_id = cr.campaign_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(cp.revenue_generated) as total_revenue FROM customers c JOIN campaign_performance cp ON c.customer_id = cp.customer_id GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT campaign_name, AVG(conversion_rate) as avg_conversion_rate FROM campaign_performance GROUP BY campaign_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT campaign_name, MAX(revenue_generated) as max_revenue FROM campaign_performance GROUP BY campaign_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_segment, COUNT(customer_id) as total_customers FROM customers GROUP BY customer_segment",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT MAX(revenue_generated) as max_revenue, MIN(revenue_generated) as min_revenue FROM campaign_performance",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date, target_segment FROM campaigns WHERE target_segment = 'New Customers'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, cr.response_date, cr.response_type FROM customers c LEFT JOIN campaign_responses cr ON c.customer_id = cr.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_segment='High Value';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_segment='Low Value';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_segment FROM customers WHERE customer_behavior='Active';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_segment FROM customers WHERE customer_behavior='Inactive';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, cp.revenue_generated FROM customers c JOIN campaign_performance cp ON c.customer_id = cp.customer_id WHERE cp.conversion_rate > 0.1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, ca.campaign_name, ca.start_date, ca.end_date FROM customers c JOIN campaigns ca ON c.customer_segment = ca.target_segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT cs.customer_name, cs.customer_email, cp.conversion_rate, cp.revenue_generated FROM customers cs JOIN campaign_performance cp ON cs.customer_id = cp.customer_id WHERE cp.revenue_generated > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT cr.response_date, cr.response_type FROM campaign_responses cr JOIN campaigns ca ON cr.campaign_id = ca.campaign_id WHERE ca.start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, cp.revenue_generated FROM customers c JOIN campaign_performance cp ON c.customer_id = cp.customer_id WHERE cp.revenue_generated BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT AVG(conversion_rate) FROM campaign_performance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT MAX(revenue_generated) FROM campaign_performance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT MIN(revenue_generated) FROM campaign_performance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT SUM(revenue_generated) FROM campaign_performance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT customer_segment, AVG(revenue_generated) FROM customers c JOIN campaign_performance cp ON c.customer_id = cp.customer_id GROUP BY customer_segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT target_segment, COUNT(*) FROM campaign_responses cr JOIN campaigns ca ON cr.campaign_id = ca.campaign_id GROUP BY target_segment;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(cp.revenue_generated) AS total_revenue FROM customers c JOIN campaign_performance cp ON c.customer_id = cp.customer_id GROUP BY c.customer_name HAVING total_revenue > 5000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT cs.customer_name, ca.campaign_name, cr.response_date, cr.response_type FROM customers cs JOIN campaigns ca ON cs.customer_segment = ca.target_segment JOIN campaign_responses cr ON ca.campaign_id = cr.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_segment VARCHAR(50),\n    customer_behavior VARCHAR(50)\n)\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    target_segment VARCHAR(50)\n)\n\nCREATE TABLE campaign_performance (\n    performance_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    conversion_rate FLOAT,\n    revenue_generated DECIMAL(10, 2)\n)\n\nCREATE TABLE campaign_responses (\n    response_id INT PRIMARY KEY,\n    campaign_id INT,\n    customer_id INT,\n    response_date TIMESTAMP,\n    response_type VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, cp.conversion_rate, cp.revenue_generated FROM customers c JOIN campaign_performance cp ON c.customer_id = cp.customer_id WHERE cp.conversion_rate > (SELECT AVG(conversion_rate) FROM campaign_performance);",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_segments;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_id, segment_name FROM customer_segments WHERE segment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, email_opened, link_clicked FROM customer_behavior WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM campaign_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_id, segment_id, start_date, end_date FROM campaign_data WHERE campaign_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM email_content;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT email_id, campaign_id, subject, content FROM email_content WHERE email_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM email_receivers;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT email_id, receiver_email, send_date FROM email_receivers WHERE email_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT cs.segment_name, eh.subject FROM customer_segments cs JOIN campaign_data cd ON cs.segment_id = cd.segment_id JOIN email_content eh ON cd.campaign_id = eh.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT cs.segment_name, eb.email_opened FROM customer_segments cs JOIN campaign_data cd ON cs.segment_id = cd.segment_id JOIN customer_behavior eb ON cd.segment_id = eb.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_segments;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM campaign_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM email_content;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM email_receivers;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(segment_id) FROM customer_segments;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(campaign_id) FROM campaign_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(email_id) FROM email_content;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_segments WHERE segment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, email_opened, link_clicked FROM customer_behavior WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM campaign_data WHERE start_date < '2022-01-01' AND end_date > '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT email_id, subject FROM email_content WHERE subject LIKE '%promotion%';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM email_receivers WHERE send_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_name FROM customer_segments WHERE segment_name = 'VIP' OR segment_name = 'Premium';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_id, start_date, end_date FROM campaign_data WHERE segment_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT email_id, subject FROM email_content WHERE content LIKE '%special offer%' AND campaign_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE email_opened = TRUE AND link_clicked = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT email_id, receiver_email FROM email_receivers WHERE receiver_email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_id, AVG(end_date - start_date) AS avg_duration FROM campaign_data GROUP BY segment_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_segments JOIN campaign_data ON customer_segments.segment_id = campaign_data.segment_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT email_id, subject FROM email_content JOIN email_receivers ON email_content.email_id = email_receivers.email_id WHERE receiver_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT segment_id) AS total_segments FROM campaign_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(end_date) AS latest_campaign_end_date FROM campaign_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_id, COUNT(customer_id) AS total_customers FROM customer_behavior GROUP BY segment_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_segments WHERE segment_id IN (SELECT segment_id FROM campaign_data WHERE start_date > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(end_date - start_date) AS avg_campaign_duration FROM campaign_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT segment_name, COUNT(customer_id) AS total_customers FROM customer_behavior JOIN customer_segments ON customer_behavior.customer_id = customer_segments.segment_id GROUP BY segment_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_segments (\n    segment_id INT PRIMARY KEY,\n    segment_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    email_opened BOOLEAN NOT NULL,\n    link_clicked BOOLEAN NOT NULL\n);\n\n\nCREATE TABLE campaign_data (\n    campaign_id INT PRIMARY KEY,\n    segment_id INT REFERENCES customer_segments(segment_id) ON DELETE CASCADE,\n    start_date TIMESTAMP NOT NULL,\n    end_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE email_content (\n    email_id INT PRIMARY KEY,\n    campaign_id INT REFERENCES campaign_data(campaign_id) ON DELETE CASCADE,\n    subject VARCHAR(255) NOT NULL,\n    content TEXT NOT NULL\n);\n\n\nCREATE TABLE email_receivers (\n    email_id INT REFERENCES email_content(email_id) ON DELETE CASCADE,\n    receiver_email VARCHAR(255) NOT NULL,\n    send_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT email_id, receiver_email FROM email_receivers WHERE send_date = (SELECT MAX(send_date) FROM email_receivers);"
]