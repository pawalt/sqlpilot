[
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_type FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_notes FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_type, interaction_date FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE customer_id = 200 AND interaction_type = 'Call';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, interaction_notes FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date > '2022-01-01' AND interaction_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_date FROM interactions WHERE customer_id = 300;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_notes FROM interactions WHERE interaction_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE customer_id = 400 AND interaction_date > '2022-01-01' AND interaction_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_notes FROM interactions WHERE interaction_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_notes LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date FROM interactions WHERE interaction_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type = 'Call' AND interaction_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_type, interaction_notes FROM interactions WHERE customer_id = 500;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE customer_id = 1 AND interaction_date = '2021-10-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM interactions WHERE interaction_type = 'Meeting' AND interaction_date BETWEEN '2021-09-01' AND '2021-09-30';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, interaction_date, interaction_notes FROM interactions WHERE customer_id = 5 AND interaction_type LIKE '%Call%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date > '2021-10-15' ORDER BY interaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, COUNT(*) AS interaction_count FROM interactions GROUP BY customer_id, interaction_type HAVING interaction_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(DATEDIFF(interaction_date, '2021-01-01')) AS avg_days_between_interactions FROM interactions GROUP BY customer_id HAVING avg_days_between_interactions < 30;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT(interaction_type) AS unique_interaction_types FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_notes IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, MAX(interaction_date) AS last_interaction_date FROM interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(DISTINCT(interaction_type)) AS unique_interaction_types_count FROM interactions GROUP BY customer_id HAVING unique_interaction_types_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, AVG(DATEDIFF(interaction_date, '2021-01-01')) AS avg_days_since_start FROM interactions GROUP BY customer_id, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS interaction_count FROM interactions GROUP BY interaction_type ORDER BY interaction_count DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM interactions WHERE interaction_date = (SELECT MAX(interaction_date) FROM interactions);",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM interactions WHERE interaction_type = (SELECT interaction_type FROM interactions GROUP BY interaction_type ORDER BY COUNT(*) DESC LIMIT 1);",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM interactions WHERE customer_id IN (SELECT customer_id FROM interactions GROUP BY customer_id HAVING COUNT(*) > 2);",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM interactions WHERE interaction_date BETWEEN '2021-10-01' AND '2021-10-31' UNION SELECT customer_id, interaction_type, interaction_date FROM interactions WHERE interaction_date BETWEEN '2021-09-01' AND '2021-09-30';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM interactions WHERE interaction_date = (SELECT MAX(interaction_date) FROM interactions WHERE customer_id = 10);",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_notes, COUNT(*) AS interaction_count FROM interactions GROUP BY interaction_notes HAVING interaction_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM interactions WHERE interaction_type LIKE '%Meeting%' AND interaction_date < '2021-10-15';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR(50),\n  interaction_date DATE,\n  interaction_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_date FROM interactions WHERE interaction_type = 'Call' AND interaction_date > '2021-09-01' AND interaction_notes LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id FROM Calls WHERE duration_minutes > 10;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(call_date) FROM Calls WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT call_id, call_date FROM Calls WHERE customer_id = 456 AND duration_minutes < 5;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(duration_minutes) FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(duration_minutes) FROM Calls WHERE call_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Emails WHERE subject LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT email_id, email_date FROM Emails WHERE customer_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM Emails;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(customer_id) FROM Emails WHERE email_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(email_date) FROM Emails;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Calls INNER JOIN Emails ON Calls.customer_id = Emails.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(email_id) AS email_count FROM Emails GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(duration_minutes) AS avg_duration, MAX(duration_minutes) AS max_duration FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id, DATEDIFF(NOW(), call_date) AS days_since_call FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT email_id, body FROM Emails WHERE email_date = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(email_id) AS email_count FROM Emails GROUP BY customer_id HAVING email_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id, duration_minutes * 1.5 AS billable_duration FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS unique_customers FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Calls UNION SELECT * FROM Emails;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id, call_date, duration_minutes FROM Calls WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT email_id, customer_id, email_date, subject FROM Emails WHERE customer_id IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id, call_date, duration_minutes FROM Calls WHERE call_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT email_id, customer_id, email_date, subject FROM Emails WHERE email_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(duration_minutes) AS avg_duration FROM Calls GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(email_id) AS num_emails FROM Emails GROUP BY customer_id HAVING num_emails > 5;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(duration_minutes) AS longest_call_duration FROM Calls GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(duration_minutes) AS shortest_call_duration FROM Calls GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(email_id) AS num_emails FROM Emails GROUP BY customer_id ORDER BY num_emails DESC;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(duration_minutes) AS total_call_duration FROM Calls GROUP BY customer_id ORDER BY total_call_duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(duration_minutes) AS avg_call_duration FROM Calls WHERE call_date > '2022-01-01' GROUP BY customer_id ORDER BY avg_call_duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(email_id) AS num_emails FROM Emails WHERE email_date > '2021-12-01' GROUP BY customer_id ORDER BY num_emails DESC;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_date, subject FROM Emails WHERE subject LIKE '%urgent%' ORDER BY email_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(duration_minutes) AS longest_call_duration FROM Calls WHERE duration_minutes > 10 GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(duration_minutes) AS avg_call_duration FROM Calls WHERE duration_minutes < 5 GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(email_id) AS num_emails FROM Emails WHERE body LIKE '%important%' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_date, subject FROM Emails WHERE customer_id = 2 AND email_date > '2022-02-15' ORDER BY email_date;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(duration_minutes) AS avg_call_duration FROM Calls WHERE call_date > '2022-03-01' GROUP BY customer_id HAVING avg_call_duration > 15;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(duration_minutes) AS shortest_call_duration FROM Calls WHERE customer_id = 3 GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_date, subject FROM Emails WHERE email_date BETWEEN '2022-01-01' AND '2022-03-01' ORDER BY email_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_date DATE,\n  duration_minutes INT\n);\n\n\nCREATE TABLE Emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_date DATE,\n  subject VARCHAR(255),\n  body TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(email_id) AS num_emails FROM Emails WHERE email_date < '2021-12-01' GROUP BY customer_id HAVING num_emails < 3;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_datetime FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT call_datetime, call_duration FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_content FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT email_datetime, email_subject FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meetings;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, meeting_location FROM meetings;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT meeting_datetime, meeting_notes FROM meetings;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id, call_duration FROM calls WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT email_id, email_datetime FROM emails WHERE customer_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT meeting_id, meeting_location FROM meetings WHERE customer_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM calls WHERE call_datetime BETWEEN '2023-01-01' AND '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM emails WHERE email_datetime >= '2023-06-01';",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meetings WHERE meeting_datetime <= '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM calls WHERE call_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM emails WHERE LENGTH(email_content) > 100;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meetings WHERE CHAR_LENGTH(meeting_notes) > 200;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS average_duration FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(call_duration) AS max_duration FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM calls WHERE call_duration > 10",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_datetime FROM calls WHERE customer_id = 123",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_datetime FROM calls WHERE call_duration > 20",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(call_duration) AS avg_duration FROM calls GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(call_duration) AS max_duration FROM calls GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_calls FROM calls GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_datetime FROM calls WHERE call_duration > 30 ORDER BY call_datetime DESC",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_duration, call_datetime FROM calls WHERE call_datetime BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT email_id, customer_id, email_datetime FROM emails WHERE customer_id = 456",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_subject FROM emails WHERE LENGTH(email_content) > 100",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_emails FROM emails GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_datetime, email_subject FROM emails WHERE email_datetime < '2022-03-15'",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(LENGTH(email_content)) AS avg_content_length FROM emails GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(LENGTH(email_content)) AS max_content_length FROM emails GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email_datetime FROM emails WHERE email_subject LIKE '%urgent%'",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT meeting_id, customer_id, meeting_datetime FROM meetings WHERE customer_id = 789",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, meeting_location FROM meetings WHERE meeting_datetime > '2022-02-01'",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_meetings FROM meetings GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, meeting_datetime, meeting_location FROM meetings WHERE meeting_notes IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE calls (\n  call_id INT PRIMARY KEY,\n  customer_id INT,\n  call_datetime TIMESTAMP,\n  call_duration INT\n);\n\n\nCREATE TABLE emails (\n  email_id INT PRIMARY KEY,\n  customer_id INT,\n  email_datetime TIMESTAMP,\n  email_subject VARCHAR(255),\n  email_content TEXT\n);\n\n\nCREATE TABLE meetings (\n  meeting_id INT PRIMARY KEY,\n  customer_id INT,\n  meeting_datetime TIMESTAMP,\n  meeting_location VARCHAR(100),\n  meeting_notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(LENGTH(meeting_notes)) AS avg_notes_length FROM meetings GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id, call_duration FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT call_id, call_date FROM Calls WHERE call_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Emails;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT email_id, customer_id, email_subject FROM Emails;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT email_id, email_date FROM Emails WHERE LENGTH(email_body) > 100;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Meetings;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT meeting_id, customer_id, meeting_duration FROM Meetings;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT meeting_id, meeting_date FROM Meetings WHERE meeting_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_phone FROM Customers WHERE LENGTH(customer_name) > 10;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT Customers.customer_id, customer_name, email_id, email_subject FROM Customers JOIN Emails ON Customers.customer_id = Emails.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(call_id) AS total_calls FROM Calls GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(call_duration) AS longest_call FROM Calls GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(meeting_duration) AS avg_meeting_duration FROM Meetings GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, count(email_id) AS total_emails FROM Customers LEFT JOIN Emails ON Customers.customer_id = Emails.customer_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_calls, MAX(call_duration) AS longest_call_duration FROM Calls;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_emails, MIN(email_date) AS oldest_email_date FROM Emails;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(meeting_duration) AS total_meeting_duration FROM Meetings GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Calls WHERE call_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, call_duration FROM Calls WHERE call_duration > 20;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_id, call_duration FROM Calls WHERE call_duration BETWEEN 10 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(call_id) AS total_calls FROM Customers JOIN Calls ON Customers.customer_id = Calls.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(call_duration) AS longest_call_duration FROM Customers JOIN Calls ON Customers.customer_id = Calls.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(call_duration) AS average_call_duration FROM Customers JOIN Calls ON Customers.customer_id = Calls.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, call_date FROM Customers JOIN Calls ON Customers.customer_id = Calls.customer_id WHERE call_duration > 15;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, call_date FROM Customers JOIN Calls ON Customers.customer_id = Calls.customer_id WHERE call_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject FROM Customers JOIN Emails ON Customers.customer_id = Emails.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, meeting_duration FROM Customers JOIN Meetings ON Customers.customer_id = Meetings.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(meeting_duration) AS longest_meeting_duration FROM Customers JOIN Meetings ON Customers.customer_id = Meetings.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(meeting_duration) AS average_meeting_duration FROM Customers JOIN Meetings ON Customers.customer_id = Meetings.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, meeting_date FROM Customers JOIN Meetings ON Customers.customer_id = Meetings.customer_id WHERE meeting_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT customer_name, meeting_date FROM Customers JOIN Meetings ON Customers.customer_id = Meetings.customer_id WHERE meeting_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Calls.call_duration FROM Customers JOIN Calls ON Customers.customer_id = Calls.customer_id WHERE Calls.call_duration > 15;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Emails.email_subject FROM Customers JOIN Emails ON Customers.customer_id = Emails.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Emails.email_date FROM Customers JOIN Emails ON Customers.customer_id = Emails.customer_id WHERE Emails.email_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Meetings.meeting_duration FROM Customers JOIN Meetings ON Customers.customer_id = Meetings.customer_id WHERE Meetings.meeting_duration > 20;",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Meetings.meeting_date FROM Customers JOIN Meetings ON Customers.customer_id = Meetings.customer_id WHERE Meetings.meeting_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_duration INT,\n    call_date DATE\n);\n\nCREATE TABLE Emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject VARCHAR,\n    email_body TEXT,\n    email_date DATE\n);\n\nCREATE TABLE Meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_duration INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Calls.call_duration, Emails.email_subject, Meetings.meeting_duration FROM Customers LEFT JOIN Calls ON Customers.customer_id = Calls.customer_id LEFT JOIN Emails ON Customers.customer_id = Emails.customer_id LEFT JOIN Meetings ON Customers.customer_id = Meetings.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT call_id, customer_id FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT call_date, call_duration FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT email_id, customer_id FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT email_subject, email_body FROM emails;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM meetings;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT meeting_id, customer_id FROM meetings;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT meeting_date, meeting_notes FROM meetings;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT interaction_id, customer_id FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, calls.call_date FROM customers INNER JOIN calls ON customers.customer_id = calls.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, emails.email_subject FROM customers INNER JOIN emails ON customers.customer_id = emails.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, meetings.meeting_date FROM customers INNER JOIN meetings ON customers.customer_id = meetings.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, interactions.interaction_type FROM customers INNER JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT calls.call_date, emails.email_subject FROM calls INNER JOIN emails ON calls.customer_id = emails.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers JOIN calls ON customers.customer_id = calls.customer_id WHERE call_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject FROM customers JOIN emails ON customers.customer_id = emails.customer_id WHERE email_subject = 'Request for information';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, meeting_date FROM customers JOIN meetings ON customers.customer_id = meetings.customer_id WHERE meeting_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_type FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interaction_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) FROM calls;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) FROM calls WHERE call_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number, call_date FROM customers JOIN calls ON customers.customer_id = calls.customer_id WHERE call_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, meeting_date, meeting_notes FROM customers JOIN meetings ON customers.customer_id = meetings.customer_id WHERE meeting_date BETWEEN '2022-04-01' AND '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject FROM customers JOIN emails ON customers.customer_id = emails.customer_id WHERE email_body LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(call_id) AS call_count FROM calls GROUP BY customer_id HAVING call_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(meeting_date) AS last_meeting_date FROM customers JOIN meetings ON customers.customer_id = meetings.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM customers WHERE customer_id IN (SELECT customer_id FROM calls WHERE call_date >= '2022-03-01');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(call_duration) AS avg_call_duration FROM customers JOIN calls ON customers.customer_id = calls.customer_id GROUP BY customer_name HAVING avg_call_duration > 15;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_date FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id ORDER BY interaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name, meeting_date FROM customers JOIN meetings ON customers.customer_id = meetings.customer_id ORDER BY meeting_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, email_id FROM customers LEFT JOIN emails ON customers.customer_id = emails.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(interaction_date) AS first_interaction_date FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, email_subject FROM customers JOIN emails ON customers.customer_id = emails.customer_id WHERE customer_name LIKE '%Doe%' ORDER BY email_subject ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name TEXT,\n    phone_number TEXT\n);\n\n\nCREATE TABLE calls (\n    call_id INT PRIMARY KEY,\n    customer_id INT,\n    call_date DATE,\n    call_duration INT\n);\n\n\nCREATE TABLE emails (\n    email_id INT PRIMARY KEY,\n    customer_id INT,\n    email_subject TEXT,\n    email_body TEXT\n);\n\n\nCREATE TABLE meetings (\n    meeting_id INT PRIMARY KEY,\n    customer_id INT,\n    meeting_date DATE,\n    meeting_notes TEXT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type TEXT,\n    interaction_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(DISTINCT email_id) AS email_count FROM customers JOIN emails ON customers.customer_id = emails.customer_id GROUP BY customer_name HAVING email_count > 2;"
]