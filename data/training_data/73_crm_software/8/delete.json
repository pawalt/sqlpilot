[
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customer_support_tickets WHERE ticket_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customer_support_tickets WHERE status = 'resolved';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customer_support_tickets WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customer_support_tickets WHERE ticket_id = 123 AND status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customer_support_tickets WHERE customer_id = 456 AND support_agent_id = 789 AND status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customer_support_tickets WHERE created_at < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nDELETE FROM customersupport_tickets WHERE ticket_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nDELETE FROM issue_resolution WHERE resolution_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nDELETE FROM customersupport_tickets WHERE customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nDELETE FROM customersupport_tickets WHERE customer_name = 'John Doe' AND priority > 3;",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nDELETE FROM customersupport_tickets WHERE priority = (SELECT MAX(priority) FROM customersupport_tickets);",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nDELETE FROM issue_resolution WHERE resolved_at < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM tickets WHERE ticket_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM ticket_comments WHERE comment_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM tickets WHERE open_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id IN (SELECT customer_id FROM customers WHERE email LIKE '%gmail.com');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM ticket_comments WHERE ticket_id IN (SELECT ticket_id FROM tickets WHERE status = 'Closed');",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM tickets WHERE ticket_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM support_reps WHERE support_rep_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM tickets WHERE customer_id = 101 AND status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id = 201 OR customer_id = 202;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM resolutions WHERE resolution_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nDELETE FROM tickets WHERE ticket_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id = '223e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nDELETE FROM agents WHERE agent_id = '323e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nDELETE FROM ticket_responses WHERE response_time < NOW() - INTERVAL '24 hours';",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id IN (SELECT customer_id FROM tickets WHERE status = 'resolved');",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nDELETE FROM tickets WHERE resolved_at < NOW() - INTERVAL '1 week';"
]