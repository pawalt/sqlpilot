[
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customer_support_tickets;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customer_support_tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customer_support_tickets RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customer_support_tickets;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customer_support_tickets RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    issue_description TEXT,\n    support_agent_id INT,\n    status VARCHAR(20),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customer_support_tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customersupport_tickets;",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE issue_resolution;",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customersupport_tickets, issue_resolution;",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customersupport_tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE issue_resolution CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE customersupport_tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    issue_description TEXT,\n    support_agent VARCHAR,\n    priority INTEGER\n);\n\n\nCREATE TABLE issue_resolution (\n    resolution_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    resolution_description TEXT,\n    resolved_at TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES customersupport_tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customersupport_tickets RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE ticket_comments;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE customers CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name STRING,\n  email STRING\n)\n\nCREATE TABLE tickets (\n  ticket_id UUID PRIMARY KEY,\n  customer_id UUID REFERENCES customers(customer_id),\n  open_date TIMESTAMP,\n  close_date TIMESTAMP,\n  status STRING\n)\n\nCREATE TABLE ticket_comments (\n  comment_id UUID PRIMARY KEY,\n  ticket_id UUID REFERENCES tickets(ticket_id),\n  comment TEXT,\n  posted_by STRING,\n  posted_date TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE ticket_comments CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customers;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE support_reps;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE customers;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    customer_id INT,\n    support_rep_id INT,\n    issue_description TEXT,\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100)\n);\n\n\nCREATE TABLE support_reps (\n    support_rep_id INT PRIMARY KEY,\n    support_rep_name VARCHAR(50),\n    support_rep_email VARCHAR(100)\n);\n\n\nCREATE TABLE resolutions (\n    resolution_id INT PRIMARY KEY,\n    ticket_id INT,\n    resolution_details TEXT,\n    resolution_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE support_reps;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE customers;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nTRUNCATE tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nTRUNCATE customers CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    customer_id UUID,\n    issue_description TEXT,\n    status VARCHAR(50),\n    created_at TIMESTAMP,\n    resolved_at TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n)\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100),\n    department VARCHAR(50)\n)\n\nCREATE TABLE departments (\n    department_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    manager_id UUID\n)\n\nCREATE TABLE ticket_responses (\n    response_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    response_text TEXT,\n    response_time TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n)\n\n### STATEMENT\n\nTRUNCATE agents CASCADE;"
]