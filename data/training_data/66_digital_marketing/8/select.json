[
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT sales_amount FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT id, channel_name FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE sales_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE conversions > 50;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT id, channel_name, sales_amount FROM marketing_channels WHERE conversions <= 10;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels ORDER BY sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels ORDER BY conversions ASC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT AVG(sales_amount) FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT SUM(conversions) FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT MAX(sales_amount) FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT MIN(conversions) FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT channel_name FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE channel_name LIKE 'Social%';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE channel_name IN ('Email', 'Paid Search');",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE sales_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE conversions IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE sales_amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT AVG(sales_amount) AS avg_sales FROM marketing_channels",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, conversions FROM marketing_channels WHERE conversions < 10 ORDER BY conversions DESC",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount, conversions FROM marketing_channels WHERE channel_name LIKE '%Social%'",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT MIN(sales_amount) AS min_sales, MAX(sales_amount) AS max_sales FROM marketing_channels",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE sales_amount BETWEEN 500 AND 1000",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, conversions FROM marketing_channels WHERE conversions > (SELECT AVG(conversions) FROM marketing_channels)",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE channel_name IN ('Email', 'Paid Search')",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_channels FROM marketing_channels",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, conversions FROM marketing_channels WHERE conversions = (SELECT MIN(conversions) FROM marketing_channels)",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE sales_amount = (SELECT MAX(sales_amount) FROM marketing_channels)",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE sales_amount > (SELECT AVG(sales_amount) FROM marketing_channels)",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount, conversions FROM marketing_channels WHERE channel_name NOT LIKE '%Offline%' ORDER BY sales_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount, conversions FROM marketing_channels WHERE channel_name NOT IN ('TV', 'Radio')",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT channel_name) AS unique_channels FROM marketing_channels",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE sales_amount < (SELECT MIN(sales_amount) FROM marketing_channels)",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount FROM marketing_channels WHERE conversions = (SELECT MAX(conversions) FROM marketing_channels)",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT SUM(sales_amount) AS total_sales FROM marketing_channels",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    id INT PRIMARY KEY,\n    channel_name VARCHAR(255),\n    sales_amount DECIMAL(10, 2),\n    conversions INT\n);\n\n### STATEMENT\n\nSELECT channel_name, sales_amount, conversions FROM marketing_channels WHERE channel_name LIKE '%Online%' ORDER BY sales_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT * FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, monthly_cost FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, monthly_cost FROM marketing_channels WHERE monthly_cost > 500;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT * FROM sales_conversions;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT conversion_date, conversion_amount FROM sales_conversions;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT * FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, conversion_date FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_id, channel_name, monthly_cost, target_audience FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT * FROM marketing_channels WHERE channel_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, monthly_cost FROM marketing_channels WHERE target_audience = 'Young Adults';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT * FROM marketing_channels ORDER BY monthly_cost DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, COUNT(*) AS total_conversions FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, SUM(conversion_amount) AS total_conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, AVG(monthly_cost) AS avg_monthly_cost FROM marketing_channels GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, MAX(monthly_cost) AS max_monthly_cost FROM marketing_channels GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, MIN(monthly_cost) AS min_monthly_cost FROM marketing_channels GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, MONTH(conversion_date) AS conversion_month FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, YEAR(conversion_date) AS conversion_year FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, MONTH(conversion_date) AS conversion_month, SUM(conversion_amount) AS total_conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id GROUP BY channel_name, MONTH(conversion_date);",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, monthly_cost FROM marketing_channels WHERE monthly_cost > 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience FROM marketing_channels WHERE channel_id IN (SELECT channel_id FROM sales_conversions WHERE conversion_amount > 500);",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, conversion_date FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE conversion_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, SUM(conversion_amount) AS total_conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT DISTINCT channel_name, target_audience FROM marketing_channels WHERE monthly_cost < 5000 ORDER BY channel_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, COUNT(*) AS conversion_count FROM sales_conversions JOIN marketing_channels ON sales_conversions.channel_id = marketing_channels.channel_id GROUP BY channel_name HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, MAX(monthly_cost) AS max_cost, MIN(monthly_cost) AS min_cost FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, AVG(monthly_cost) AS avg_cost FROM marketing_channels GROUP BY channel_name HAVING avg_cost > 2000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience FROM marketing_channels WHERE channel_name LIKE '%social%' AND monthly_cost < 3000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, conversion_date FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE MONTH(conversion_date) = 2;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, SUM(conversion_amount) AS total_conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE target_audience LIKE '%young%' GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id ORDER BY conversion_amount DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, AVG(monthly_cost) AS avg_cost FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE conversion_date < '2022-05-01' GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, conversion_date, SUM(conversion_amount) AS total_conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE conversion_date BETWEEN '2022-03-01' AND '2022-03-31' GROUP BY channel_name, conversion_date;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, MONTH(conversion_date) AS conversion_month FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE conversion_month = 4;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE conversion_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, SUM(conversion_amount) AS total_conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id GROUP BY channel_name HAVING total_conversion_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, MAX(monthly_cost) AS max_cost FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE target_audience LIKE '%women%' GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, AVG(conversion_amount) AS avg_conversion_amount FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE target_audience LIKE '%men%' GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (channel_id INT PRIMARY KEY, channel_name VARCHAR(50), monthly_cost DECIMAL(10, 2), target_audience VARCHAR(100));\n\nCREATE TABLE sales_conversions (conversion_id INT PRIMARY KEY, channel_id INT, conversion_date DATE, conversion_amount DECIMAL(10, 2), FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id));\n\n### STATEMENT\n\nSELECT channel_name, target_audience, conversion_date, COUNT(*) AS conversion_count FROM marketing_channels JOIN sales_conversions ON marketing_channels.channel_id = sales_conversions.channel_id WHERE MONTH(conversion_date) = 1 GROUP BY channel_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT sale_id, customer_id, sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT sale_date FROM sales_data WHERE sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM conversion_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, conversion_date FROM conversion_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT channel_name, channel_type FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, sale_amount FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT channel_name FROM marketing_channels WHERE channel_type = 'Digital';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, sale_amount FROM sales_data ORDER BY sale_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE customer_id = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT channel_name FROM marketing_channels WHERE channel_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, conversion_date FROM conversion_data WHERE conversion_date >= '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, conversion_date, marketing_channel FROM conversion_data WHERE marketing_channel IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT marketing_channel FROM conversion_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT sale_id, customer_id, sale_date FROM sales_data WHERE sale_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, conversion_date FROM conversion_data ORDER BY conversion_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT MAX(sale_amount) AS max_sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT MIN(sale_amount) AS min_sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data INNER JOIN conversion_data ON sales_data.customer_id = conversion_data.customer_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_amount FROM sales_data WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, sale_amount FROM sales_data WHERE sale_amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT MAX(sale_amount) AS max_sale_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT channel_name, channel_type FROM marketing_channels WHERE channel_type = 'Online'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_amount, sale_date, channel_name FROM sales_data JOIN marketing_channels ON sales_data.marketing_channel = marketing_channels.channel_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_conversions FROM conversion_data GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM sales_data GROUP BY marketing_channel",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, conversion_date, channel_name FROM conversion_data LEFT JOIN marketing_channels ON conversion_data.marketing_channel = marketing_channels.channel_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT SUM(sale_amount) AS total_sales FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT channel_name, COUNT(*) AS total_conversions FROM conversion_data JOIN marketing_channels ON conversion_data.marketing_channel = marketing_channels.channel_name GROUP BY channel_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(sale_amount) AS avg_sale_amount FROM sales_data GROUP BY customer_id HAVING AVG(sale_amount) > 2000",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT channel_name, COUNT(*) AS total_sales FROM sales_data JOIN marketing_channels ON sales_data.marketing_channel = marketing_channels.channel_name GROUP BY channel_name HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT MAX(sale_amount) AS max_sale_amount, MIN(sale_amount) AS min_sale_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_sales, AVG(sale_amount) AS avg_sale_amount FROM sales_data GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT channel_name, SUM(sale_amount) AS total_sales FROM sales_data JOIN marketing_channels ON sales_data.marketing_channel = marketing_channels.channel_name GROUP BY channel_name ORDER BY total_sales DESC",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_conversions, COUNT(DISTINCT marketing_channel) AS unique_channels FROM conversion_data GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    customer_id UUID,\n    sale_amount DECIMAL,\n    sale_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE conversion_data (\n    conversion_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    conversion_date DATE,\n    marketing_channel VARCHAR\n)\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR,\n    channel_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT conversion_date, COUNT(*) AS total_conversions FROM conversion_data GROUP BY conversion_date HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT channel_name, channel_description FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT channel_name FROM marketing_channels WHERE channel_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT sale_amount, sale_date FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT * FROM conversions;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT conversion_date, conversion_type FROM conversions;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT * FROM roi_analysis;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT sale_id, conversion_id, roi FROM roi_analysis;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT sale_amount, sale_date, channel_id FROM sales WHERE sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT channel_name, channel_description FROM marketing_channels WHERE channel_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT sale_amount FROM sales ORDER BY sale_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT conversion_date FROM conversions WHERE channel_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sales WHERE sale_date >= '2022-01-01' AND sale_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT MAX(roi) AS max_roi FROM roi_analysis WHERE sale_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_conversions FROM conversions;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT SUM(sale_amount) AS total_sales FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT channel_id, COUNT(*) AS total_sales FROM sales GROUP BY channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT channel_name, AVG(roi) AS avg_roi FROM marketing_channels JOIN sales ON marketing_channels.channel_id = sales.channel_id JOIN roi_analysis ON sales.sale_id = roi_analysis.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT channel_name, channel_description FROM marketing_channels WHERE channel_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT s.channel_id, s.sale_amount, c.channel_name FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT s.sale_id, s.sale_amount, c.channel_name, c.channel_description FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id WHERE s.sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT s.sale_id, s.sale_amount, c.channel_name, co.conversion_date FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id JOIN conversions co ON s.channel_id = co.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT s.sale_id, s.sale_amount, co.conversion_type, ra.roi FROM sales s JOIN conversions co ON s.channel_id = co.channel_id JOIN roi_analysis ra ON s.sale_id = ra.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, COUNT(s.sale_id) AS sale_count FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id GROUP BY c.channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, SUM(s.sale_amount) AS total_sales FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id GROUP BY c.channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, AVG(ra.roi) AS avg_roi FROM roi_analysis ra JOIN conversions co ON ra.conversion_id = co.conversion_id JOIN marketing_channels c ON co.channel_id = c.channel_id GROUP BY c.channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, MAX(s.sale_amount) AS max_sale_amount FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id GROUP BY c.channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, MIN(s.sale_amount) AS min_sale_amount FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id GROUP BY c.channel_name;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, co.conversion_type, COUNT(*) AS conversion_count FROM conversions co JOIN marketing_channels c ON co.channel_id = c.channel_id GROUP BY c.channel_name, co.conversion_type;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, co.conversion_type, AVG(ra.roi) AS avg_roi FROM conversions co JOIN marketing_channels c ON co.channel_id = c.channel_id JOIN roi_analysis ra ON co.conversion_id = ra.conversion_id GROUP BY c.channel_name, co.conversion_type;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, s.sale_amount, co.conversion_type, ra.roi FROM sales s JOIN conversions co ON s.channel_id = co.channel_id JOIN roi_analysis ra ON co.conversion_id = ra.conversion_id JOIN marketing_channels c ON s.channel_id = c.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, s.sale_amount, ra.roi FROM sales s JOIN roi_analysis ra ON s.sale_id = ra.sale_id JOIN marketing_channels c ON s.channel_id = c.channel_id WHERE s.sale_amount > 500 AND ra.roi > 1.5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, s.sale_amount, co.conversion_type, ra.roi, co.conversion_date FROM sales s JOIN conversions co ON s.channel_id = co.channel_id JOIN roi_analysis ra ON co.conversion_id = ra.conversion_id JOIN marketing_channels c ON s.channel_id = c.channel_id WHERE ra.roi > 2.0;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, s.sale_amount FROM sales s JOIN marketing_channels c ON s.channel_id = c.channel_id WHERE s.sale_date BETWEEN '2023-01-01' AND '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, s.sale_amount, co.conversion_type, ra.roi FROM sales s JOIN conversions co ON s.channel_id = co.channel_id JOIN roi_analysis ra ON co.conversion_id = ra.conversion_id JOIN marketing_channels c ON s.channel_id = c.channel_id WHERE c.channel_name LIKE '%Google%';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, s.sale_amount, co.conversion_type, ra.roi FROM sales s JOIN conversions co ON s.channel_id = co.channel_id JOIN roi_analysis ra ON co.conversion_id = ra.conversion_id JOIN marketing_channels c ON s.channel_id = c.channel_id WHERE c.channel_name IN ('Google Ads', 'Facebook Ads');",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL,\n    channel_description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_amount DECIMAL(10,2) NOT NULL,\n    channel_id INT,\n    sale_date DATE,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions (\n    conversion_id INT PRIMARY KEY,\n    conversion_date DATE,\n    channel_id INT,\n    conversion_type VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    analysis_id INT PRIMARY KEY,\n    sale_id INT,\n    conversion_id INT,\n    roi DECIMAL(10,2),\n    FOREIGN KEY (sale_id) REFERENCES sales(sale_id),\n    FOREIGN KEY (conversion_id) REFERENCES conversions(conversion_id)\n);\n\n### STATEMENT\n\nSELECT c.channel_name, s.sale_amount, co.conversion_type, ra.roi FROM sales s JOIN conversions co ON s.channel_id = co.channel_id JOIN roi_analysis ra ON co.conversion_id = ra.conversion_id JOIN marketing_channels c ON s.channel_id = c.channel_id ORDER BY s.sale_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT channel_name FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT sale_amount, sale_date FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT conversion_date FROM conversions_data WHERE channel_id = '12345';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT roi_value FROM roi_analysis WHERE conversion_id = '67890';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_name FROM marketing_campaigns WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels JOIN sales_data ON marketing_channels.channel_id = sales_data.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data JOIN marketing_channels ON sales_data.channel_id = marketing_channels.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data JOIN conversions_data ON sales_data.channel_id = conversions_data.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM conversions_data JOIN marketing_channels ON conversions_data.channel_id = marketing_channels.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM conversions_data JOIN roi_analysis ON conversions_data.conversion_id = roi_analysis.conversion_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_campaigns JOIN conversions_data ON marketing_campaigns.campaign_id = conversions_data.conversion_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_campaigns JOIN conversions_data ON marketing_campaigns.campaign_id = conversions_data.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_campaigns JOIN conversions_data ON marketing_campaigns.campaign_id = conversions_data.conversion_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_campaigns JOIN conversions_data ON marketing_campaigns.start_date < conversions_data.conversion_date;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_campaigns JOIN conversions_data ON marketing_campaigns.end_date < conversions_data.conversion_date;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_campaigns JOIN conversions_data ON marketing_campaigns.start_date < conversions_data.conversion_date AND marketing_campaigns.end_date > conversions_data.conversion_date;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT mc.channel_name, sd.sale_amount FROM marketing_channels mc JOIN sales_data sd ON mc.channel_id = sd.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT cd.channel_id, rd.roi_value FROM conversions_data cd JOIN roi_analysis rd ON cd.conversion_id = rd.conversion_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT channel_id, channel_name FROM marketing_channels WHERE channel_name LIKE 'Digital%';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(sale_amount) AS max_sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(roi_value) AS avg_roi_value FROM roi_analysis INNER JOIN conversions_data ON roi_analysis.conversion_id = conversions_data.conversion_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM marketing_campaigns WHERE start_date >= '2021-01-01' AND end_date <= '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sales_data WHERE sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT channel_name, sale_amount, sale_date FROM marketing_channels INNER JOIN sales_data ON marketing_channels.channel_id = sales_data.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT conversion_id, conversion_date, channel_name FROM conversions_data INNER JOIN marketing_channels ON conversions_data.channel_id = marketing_channels.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount, SUM(roi_value) AS total_roi FROM sales_data INNER JOIN conversions_data ON sales_data.channel_id = conversions_data.channel_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT channel_name FROM marketing_channels;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM conversions_data WHERE channel_id IN (SELECT channel_id FROM marketing_channels WHERE channel_name = 'Social Media');",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM marketing_campaigns ORDER BY start_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT channel_name, sale_amount, sale_date FROM sales_data WHERE sale_date BETWEEN '2021-01-01' AND '2021-06-30';",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM roi_analysis WHERE roi_value > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_name, COUNT(*) AS total_conversions FROM marketing_campaigns INNER JOIN conversions_data ON marketing_campaigns.campaign_id = conversions_data.campaign_id GROUP BY marketing_campaigns.campaign_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT channel_name, AVG(sale_amount) AS avg_sale_amount FROM marketing_channels INNER JOIN sales_data ON marketing_channels.channel_id = sales_data.channel_id GROUP BY channel_name HAVING AVG(sale_amount) > 500;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM marketing_campaigns WHERE start_date >= '2021-01-01' AND end_date <= '2021-12-31' ORDER BY start_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(roi_value) AS max_roi_value FROM conversions_data INNER JOIN roi_analysis ON conversions_data.conversion_id = roi_analysis.conversion_id;",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM marketing_campaigns WHERE campaign_id IN (SELECT campaign_id FROM conversions_data WHERE DATE_PART('month', conversion_date) = 1);",
  "### TABLEDATA\n\nCREATE TABLE marketing_channels (\n    channel_id UUID PRIMARY KEY,\n    channel_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    sale_amount DECIMAL NOT NULL,\n    sale_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE conversions_data (\n    conversion_id UUID PRIMARY KEY,\n    conversion_date DATE NOT NULL,\n    channel_id UUID NOT NULL,\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE roi_analysis (\n    roi_id UUID PRIMARY KEY,\n    roi_value DECIMAL NOT NULL,\n    conversion_id UUID NOT NULL,\n    FOREIGN KEY (conversion_id) REFERENCES conversions_data(conversion_id)\n);\n\nCREATE TABLE marketing_campaigns (\n    campaign_id UUID PRIMARY KEY,\n    campaign_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT channel_name, SUM(sale_amount) AS total_sales FROM marketing_channels INNER JOIN sales_data ON marketing_channels.channel_id = sales_data.channel_id GROUP BY channel_name ORDER BY total_sales DESC;"
]