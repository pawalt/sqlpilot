[
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (1, 'John Doe', 'johndoe@example.com', '1234567890', 30, 'Male', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (2, 'Jane Smith', 'janesmith@example.com', '0987654321', 25, 'Female', 'Facebook')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (3, 'Alice Johnson', 'alicejohnson@example.com', '5555555555', 35, 'Female', 'Instagram')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (4, 'Bob Brown', 'bobbrown@example.com', '9999999999', 40, 'Male', 'Twitter')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (5, 'Samuel Lee', 'samuelle@example.com', '7777777777', 28, 'Male', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (6, 'Emily Wilson', 'emilywilson@example.com', '4444444444', 22, 'Female', 'Facebook')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (7, 'Michael Davis', 'michaeldavis@example.com', '6666666666', 32, 'Male', 'Instagram')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (8, 'Sophia Martinez', 'sophiamartinez@example.com', '1111111111', 29, 'Female', 'Twitter')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (9, 'William Rodriguez', 'williamrodriguez@example.com', '2222222222', 31, 'Male', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (10, 'Olivia Thomas', 'oliviathomas@example.com', '3333333333', 27, 'Female', 'Facebook')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (11, 'Daniel White', 'danielwhite@example.com', '8888888888', 33, 'Male', 'Instagram')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (12, 'Ava Clark', 'avaclark@example.com', '0000000000', 26, 'Female', 'Twitter')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (13, 'James Turner', 'jamesturner@example.com', '1212121212', 34, 'Male', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (14, 'Mia Adams', 'miaadams@example.com', '3434343434', 23, 'Female', 'Facebook')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (15, 'Ethan Hall', 'ethanhall@example.com', '5656565656', 36, 'Male', 'Instagram')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (16, 'Isabella Baker', 'isabellabaker@example.com', '7878787878', 24, 'Female', 'Twitter')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (17, 'David King', 'davidking@example.com', '9999999999', 37, 'Male', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (18, 'Grace Hill', 'gracehill@example.com', '8888888888', 21, 'Female', 'Facebook')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (19, 'Joseph Adams', 'josephadams@example.com', '7777777777', 38, 'Male', 'Instagram')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (20, 'Lily Moore', 'lilymoore@example.com', '6666666666', 20, 'Female', 'Twitter')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890', 30, 'Male', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210', 25, 'Female', 'Mobile App')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (3, 'Michael Johnson', 'michael.johnson@example.com', '456-789-0123', 35, 'Male', 'Social Media')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (4, 'Emily Davis', 'emily.davis@example.com', '789-012-3456', 28, 'Female', 'Email Campaign')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (5, 'David Wilson', 'david.wilson@example.com', '345-678-9012', 32, 'Male', 'Referral Program')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (6, 'Sarah Brown', 'sarah.brown@example.com', '012-345-6789', 27, 'Female', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (7, 'Robert Lee', 'robert.lee@example.com', '234-567-8901', 40, 'Male', 'Mobile App')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (8, 'Amanda Martinez', 'amanda.martinez@example.com', '567-890-1234', 22, 'Female', 'Social Media')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (9, 'James Taylor', 'james.taylor@example.com', '890-123-4567', 38, 'Male', 'Email Campaign')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (10, 'Olivia Miller', 'olivia.miller@example.com', '456-789-0123', 29, 'Female', 'Referral Program')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (11, 'Kevin Anderson', 'kevin.anderson@example.com', '123-456-7890', 33, 'Male', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (12, 'Sophia Garcia', 'sophia.garcia@example.com', '987-654-3210', 26, 'Female', 'Mobile App')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (13, 'Daniel Brown', 'daniel.brown@example.com', '456-789-0123', 31, 'Male', 'Social Media')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (14, 'Mia Robinson', 'mia.robinson@example.com', '789-012-3456', 24, 'Female', 'Email Campaign')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (15, 'Ethan Hall', 'ethan.hall@example.com', '345-678-9012', 36, 'Male', 'Referral Program')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (16, 'Lily Reed', 'lily.reed@example.com', '012-345-6789', 21, 'Female', 'Website')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (17, 'Bryan Cox', 'bryan.cox@example.com', '234-567-8901', 37, 'Male', 'Mobile App')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (18, 'Emma Baker', 'emma.baker@example.com', '567-890-1234', 30, 'Female', 'Social Media')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (19, 'Evan Morris', 'evan.morris@example.com', '890-123-4567', 23, 'Male', 'Email Campaign')",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\temail_address VARCHAR(100),\n\tphone_number VARCHAR(20),\n\tage INT,\n\tgender VARCHAR(10),\n\tsource_channel VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profiles (customer_id, customer_name, email_address, phone_number, age, gender, source_channel) VALUES (20, 'Grace Hill', 'grace.hill@example.com', '456-789-0123', 34, 'Female', 'Referral Program')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (1, 'John', 'Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='John', last_name='Doe', email='john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Jane', last_name='Smith', email='jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (3, 'Alice', 'Johnson', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Alice', last_name='Johnson', email='alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (4, 'Bob', 'Williams', 'bob.williams@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Bob', last_name='Williams', email='bob.williams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (5, 'Mary', 'Davis', 'mary.davis@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Mary', last_name='Davis', email='mary.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (6, 'Michael', 'Brown', 'michael.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Michael', last_name='Brown', email='michael.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (7, 'Sarah', 'Miller', 'sarah.miller@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Sarah', last_name='Miller', email='sarah.miller@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (8, 'David', 'Wilson', 'david.wilson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='David', last_name='Wilson', email='david.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (9, 'Jessica', 'Martinez', 'jessica.martinez@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Jessica', last_name='Martinez', email='jessica.martinez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (10, 'Chris', 'Anderson', 'chris.anderson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Chris', last_name='Anderson', email='chris.anderson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (11, 'Julia', 'Thompson', 'julia.thompson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Julia', last_name='Thompson', email='julia.thompson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (12, 'Brian', 'Hernandez', 'brian.hernandez@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Brian', last_name='Hernandez', email='brian.hernandez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (13, 'Amanda', 'Young', 'amanda.young@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Amanda', last_name='Young', email='amanda.young@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (14, 'Kevin', 'Garcia', 'kevin.garcia@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Kevin', last_name='Garcia', email='kevin.garcia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (15, 'Laura', 'Scott', 'laura.scott@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Laura', last_name='Scott', email='laura.scott@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (16, 'Eric', 'Adams', 'eric.adams@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Eric', last_name='Adams', email='eric.adams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (17, 'Natalie', 'Baker', 'natalie.baker@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Natalie', last_name='Baker', email='natalie.baker@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (18, 'Scott', 'Lewis', 'scott.lewis@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Scott', last_name='Lewis', email='scott.lewis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (19, 'Hannah', 'Perez', 'hannah.perez@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Hannah', last_name='Perez', email='hannah.perez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (20, 'Mark', 'King', 'mark.king@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name='Mark', last_name='King', email='mark.king@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (1, 'John', 'Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET last_name = 'Smith'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (3, 'Alice', 'Johnson', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (101, 1, '2022-01-01', 100.00) ON CONFLICT (order_id) DO UPDATE SET total_amount = 100.00",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (102, 2, '2022-01-02', 150.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-01-02'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (103, 3, '2022-01-03', 200.00) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Jane', 'Smith', 'jane.smith@example.com', '0987654321') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Social Media', 'Online', 'Engaging with customers on social platforms') ON CONFLICT (channel_id) DO UPDATE SET channel_name = EXCLUDED.channel_name, channel_type = EXCLUDED.channel_type, channel_description = EXCLUDED.channel_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Email Marketing', 'Online', 'Sending promotional emails to customers') ON CONFLICT (channel_id) DO UPDATE SET channel_name = EXCLUDED.channel_name, channel_type = EXCLUDED.channel_type, channel_description = EXCLUDED.channel_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (1, 1, '2022-08-15 10:00:00', 'Customer responded positively to the social media post') ON CONFLICT (interaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, channel_id = EXCLUDED.channel_id, date_time = EXCLUDED.date_time, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (2, 2, '2022-08-16 09:30:00', 'Sent promotional email with new product offerings') ON CONFLICT (interaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, channel_id = EXCLUDED.channel_id, date_time = EXCLUDED.date_time, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Alice', 'Johnson', 'alice.johnson@example.com', '9876543210') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Bob', 'Brown', 'bob.brown@example.com', '5432167890') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('SMS Marketing', 'Offline', 'Sending promotional messages via SMS') ON CONFLICT (channel_id) DO UPDATE SET channel_name = EXCLUDED.channel_name, channel_type = EXCLUDED.channel_type, channel_description = EXCLUDED.channel_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Billboard Ads', 'Offline', 'Advertising on billboards in strategic locations') ON CONFLICT (channel_id) DO UPDATE SET channel_name = EXCLUDED.channel_name, channel_type = EXCLUDED.channel_type, channel_description = EXCLUDED.channel_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (3, 3, '2022-08-17 14:00:00', 'Customer engaged with the SMS promotion') ON CONFLICT (interaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, channel_id = EXCLUDED.channel_id, date_time = EXCLUDED.date_time, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (4, 4, '2022-08-18 11:45:00', 'Noticed increased foot traffic near billboard ad site') ON CONFLICT (interaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, channel_id = EXCLUDED.channel_id, date_time = EXCLUDED.date_time, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Sarah', 'Taylor', 'sarah.taylor@example.com', '6543219870') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Michael', 'Clark', 'michael.clark@example.com', '2109876543') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('TV Commercials', 'Offline', 'Airing promotional content on TV channels') ON CONFLICT (channel_id) DO UPDATE SET channel_name = EXCLUDED.channel_name, channel_type = EXCLUDED.channel_type, channel_description = EXCLUDED.channel_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Radio Ads', 'Offline', 'Broadcasting advertisements on radio stations') ON CONFLICT (channel_id) DO UPDATE SET channel_name = EXCLUDED.channel_name, channel_type = EXCLUDED.channel_type, channel_description = EXCLUDED.channel_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (5, 5, '2022-08-19 16:30:00', 'Customer recalled the TV commercial and visited the website') ON CONFLICT (interaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, channel_id = EXCLUDED.channel_id, date_time = EXCLUDED.date_time, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (6, 6, '2022-08-20 13:15:00', 'Heard radio ad while driving and called the toll-free number') ON CONFLICT (interaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, channel_id = EXCLUDED.channel_id, date_time = EXCLUDED.date_time, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Olivia', 'Miller', 'olivia.miller@example.com', '8765432109') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('David', 'Wilson', 'david.wilson@example.com', '3210987654') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('John', 'Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (email) DO UPDATE SET first_name = 'John', last_name = 'Doe', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Alice', 'Smith', 'alice.smith@example.com', '987-654-3210') ON CONFLICT (email) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Social Media', 'Social', 'Platform for social interaction') ON CONFLICT (channel_name) DO UPDATE SET channel_type = 'Social', channel_description = 'Platform for social interaction';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Email Marketing', 'Email', 'Promotional emails to customers') ON CONFLICT (channel_name) DO UPDATE SET channel_type = 'Email', channel_description = 'Promotional emails to customers';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (1, 1, '2022-01-15 10:30:00', 'Customer engaged on Social Media') ON CONFLICT (customer_id, channel_id, date_time) DO UPDATE SET interaction_description = 'Customer engaged on Social Media';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (2, 2, '2022-01-20 15:45:00', 'Customer received promotional email') ON CONFLICT (customer_id, channel_id, date_time) DO UPDATE SET interaction_description = 'Customer received promotional email';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Jane', 'Williams', 'jane.williams@example.com', '555-123-4567') ON CONFLICT (email) DO UPDATE SET first_name = 'Jane', last_name = 'Williams', phone_number = '555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Bob', 'Johnson', 'bob.johnson@example.com', '111-222-3333') ON CONFLICT (email) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', phone_number = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Paid Advertising', 'Advertisement', 'Placement of ads on websites') ON CONFLICT (channel_name) DO UPDATE SET channel_type = 'Advertisement', channel_description = 'Placement of ads on websites';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Referral Program', 'Referral', 'Customers refer others for discounts') ON CONFLICT (channel_name) DO UPDATE SET channel_type = 'Referral', channel_description = 'Customers refer others for discounts';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (3, 3, '2022-02-05 09:00:00', 'Customer clicked on advertisement') ON CONFLICT (customer_id, channel_id, date_time) DO UPDATE SET interaction_description = 'Customer clicked on advertisement';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (4, 4, '2022-02-10 14:15:00', 'Customer referred a friend for discount') ON CONFLICT (customer_id, channel_id, date_time) DO UPDATE SET interaction_description = 'Customer referred a friend for discount';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Karen', 'Miller', 'karen.miller@example.com', '777-888-9999') ON CONFLICT (email) DO UPDATE SET first_name = 'Karen', last_name = 'Miller', phone_number = '777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Sam', 'Brown', 'sam.brown@example.com', '321-654-9870') ON CONFLICT (email) DO UPDATE SET first_name = 'Sam', last_name = 'Brown', phone_number = '321-654-9870';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('SEO Strategy', 'SEO', 'Optimizing website for search engines') ON CONFLICT (channel_name) DO UPDATE SET channel_type = 'SEO', channel_description = 'Optimizing website for search engines';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_name, channel_type, channel_description) VALUES ('Webinar Sessions', 'Webinar', 'Educational webinars for customers') ON CONFLICT (channel_name) DO UPDATE SET channel_type = 'Webinar', channel_description = 'Educational webinars for customers';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (5, 5, '2022-03-20 11:30:00', 'Customer visited webinar session') ON CONFLICT (customer_id, channel_id, date_time) DO UPDATE SET interaction_description = 'Customer visited webinar session';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (customer_id, channel_id, date_time, interaction_description) VALUES (6, 6, '2022-03-25 16:45:00', 'Customer optimized website for SEO') ON CONFLICT (customer_id, channel_id, date_time) DO UPDATE SET interaction_description = 'Customer optimized website for SEO';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Mike', 'Anderson', 'mike.anderson@example.com', '444-555-6666') ON CONFLICT (email) DO UPDATE SET first_name = 'Mike', last_name = 'Anderson', phone_number = '444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id SERIAL PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50),\n    channel_description TEXT\n);\n\nCREATE TABLE customer_interaction (\n    interaction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    channel_id INT REFERENCES marketing_channels(channel_id),\n    date_time TIMESTAMP,\n    interaction_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (first_name, last_name, email, phone_number) VALUES ('Emily', 'Clark', 'emily.clark@example.com', '666-333-9999') ON CONFLICT (email) DO UPDATE SET first_name = 'Emily', last_name = 'Clark', phone_number = '666-333-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (1, 'John Doe', 'john@example.com', '1234567890', '123 Main St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (2, 'Jane Smith', 'jane@example.com', '9876543210', '456 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (3, 'Alice Johnson', 'alice@example.com', '5551234567', '789 Oak St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (4, 'Bob Williams', 'bob@example.com', '7778889999', '321 Pine St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (5, 'Emily Brown', 'emily@example.com', '9990001111', '654 Birch St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (101, 1, '2022-05-15', 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (102, 2, '2022-06-20', 200.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (103, 3, '2022-07-25', 150.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (104, 4, '2022-08-30', 120.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (105, 5, '2022-09-05', 180.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (201, 'Laptop', 800.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (202, 'Smartphone', 600.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (203, 'Headphones', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (204, 'Tablet', 400.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (205, 'Camera', 300.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (301, 'Online', 'Digital');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (302, 'TV Ads', 'Traditional');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (303, 'Social Media', 'Digital');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (304, 'Email Campaign', 'Digital');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (305, 'Billboards', 'Traditional');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890', '123 Main Street');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2022-01-01', 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (1, 'Product A', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (1, 'Channel A', 'Online');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE customers SET address = '456 Elm Street' WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE orders SET total_amount = 120.00 WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '111-222-3333', '456 Oak Avenue');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (2, 2, '2022-01-02', 150.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (2, 'Product B', 75.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (2, 'Channel B', 'Print');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE customers SET phone_number = '555-555-5555' WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE orders SET total_amount = 180.00 WHERE order_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (3, 'Alice Brown', 'alice.brown@example.com', '987-654-3210', '789 Pine Road');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (3, 3, '2022-01-03', 200.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (3, 'Product C', 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (3, 'Channel C', 'TV Ads');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE customers SET email = 'alice.brown@newexample.com' WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE orders SET total_amount = 220.00 WHERE order_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (4, 'Mike Johnson', 'mike.johnson@example.com', '333-444-5555', '987 Maple Lane');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (4, 4, '2022-01-04', 250.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price) VALUES (4, 'Product D', 120.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(200)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO marketing_channels (channel_id, channel_name, channel_type) VALUES (4, 'Channel D', 'Radio Ads');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES ('1', 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount) VALUES ('1', '1', '2022-01-01', 100.00) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = '1', transaction_date = '2022-01-01', amount = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('1', '1', '2022-01-01', 200.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = '1', order_date = '2022-01-01', total_amount = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date) VALUES ('1', 'Marketing Campaign', '2022-01-01', '2022-01-31') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Marketing Campaign', start_date = '2022-01-01', end_date = '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO channels (channel_id, channel_name, platform) VALUES ('1', 'Social Media', 'Facebook') ON CONFLICT (channel_id) DO UPDATE SET channel_name = 'Social Media', platform = 'Facebook';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES ('2', 'Jane', 'Smith', 'jane.smith@example.com', '9876543210') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '9876543210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount) VALUES ('2', '2', '2022-01-02', 150.00) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = '2', transaction_date = '2022-01-02', amount = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('2', '2', '2022-01-02', 300.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = '2', order_date = '2022-01-02', total_amount = 300.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date) VALUES ('2', 'Sales Campaign', '2022-02-01', '2022-02-28') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Sales Campaign', start_date = '2022-02-01', end_date = '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO channels (channel_id, channel_name, platform) VALUES ('2', 'Email', 'Mailchimp') ON CONFLICT (channel_id) DO UPDATE SET channel_name = 'Email', platform = 'Mailchimp';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES ('3', 'Alice', 'Johnson', 'alice.johnson@example.com', '5555555555') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com', phone_number = '5555555555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount) VALUES ('3', '3', '2022-01-03', 120.00) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = '3', transaction_date = '2022-01-03', amount = 120.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('3', '3', '2022-01-03', 250.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = '3', order_date = '2022-01-03', total_amount = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date) VALUES ('3', 'Promotional Campaign', '2022-03-01', '2022-03-31') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Promotional Campaign', start_date = '2022-03-01', end_date = '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO channels (channel_id, channel_name, platform) VALUES ('3', 'SMS', 'Twilio') ON CONFLICT (channel_id) DO UPDATE SET channel_name = 'SMS', platform = 'Twilio';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES ('4', 'Bob', 'Brown', 'bob.brown@example.com', '1111111111') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Bob', last_name = 'Brown', email = 'bob.brown@example.com', phone_number = '1111111111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount) VALUES ('4', '4', '2022-01-04', 180.00) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = '4', transaction_date = '2022-01-04', amount = 180.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('4', '4', '2022-01-04', 280.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = '4', order_date = '2022-01-04', total_amount = 280.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date) VALUES ('4', 'Holiday Campaign', '2022-04-01', '2022-04-30') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Holiday Campaign', start_date = '2022-04-01', end_date = '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nUPSERT INTO channels (channel_id, channel_name, platform) VALUES ('4', 'Search Ads', 'Google Ads') ON CONFLICT (channel_id) DO UPDATE SET channel_name = 'Search Ads', platform = 'Google Ads';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES ('1', 'John', 'Doe', 'john.doe@example.com', '123456789') ON CONFLICT (customer_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES ('2', 'Jane', 'Smith', 'jane.smith@example.com', '987654321') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount) VALUES ('1', '1', '2022-01-01', 100.50) ON CONFLICT (transaction_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount) VALUES ('2', '2', '2022-01-02', 200.75) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, transaction_date = EXCLUDED.transaction_date, amount = EXCLUDED.amount",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('1', '1', '2022-01-01', 150.25) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('2', '2', '2022-01-02', 300.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, order_date = EXCLUDED.order_date, total_amount = EXCLUDED.total_amount",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date) VALUES ('1', 'Summer Sale', '2022-06-01', '2022-06-30') ON CONFLICT (campaign_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO campaigns (campaign_id, campaign_name, start_date, end_date) VALUES ('2', 'Holiday Promotion', '2022-12-01', '2022-12-31') ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = EXCLUDED.campaign_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO channels (channel_id, channel_name, platform) VALUES ('1', 'Email', 'Gmail') ON CONFLICT (channel_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  transaction_date DATE,\n  amount DECIMAL(10, 2)\n)\n\nCREATE TABLE orders (\n  order_id UUID PRIMARY KEY,\n  customer_id UUID,\n  order_date DATE,\n  total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE campaigns (\n  campaign_id UUID PRIMARY KEY,\n  campaign_name VARCHAR,\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE channels (\n  channel_id UUID PRIMARY KEY,\n  channel_name VARCHAR,\n  platform VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO channels (channel_id, channel_name, platform) VALUES ('2', 'Social Media', 'Facebook') ON CONFLICT (channel_id) DO UPDATE SET channel_name = EXCLUDED.channel_name, platform = EXCLUDED.platform"
]