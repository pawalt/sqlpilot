<t>CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>REVOKE SELECT, UPDATE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>revoke select, update on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>REVOKE SELECT, UPDATE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>revoke select, update on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>REVOKE INSERT, DELETE ON ads FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>revoke insert, delete on ads from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>REVOKE INSERT, DELETE ON ads FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>revoke insert, delete on ads from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>REVOKE ALL PRIVILEGES ON campaigns FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>revoke all privileges on campaigns from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>REVOKE ALL PRIVILEGES ON campaigns FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id UUID PRIMARY KEY,
    ad_name VARCHAR(255) NOT NULL,
    campaign_id UUID NOT NULL REFERENCES campaigns(campaign_id),
    ad_type VARCHAR(20) NOT NULL,
    bid_amount NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);


CREATE TABLE campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget NUMERIC NOT NULL,
    status VARCHAR(20) NOT NULL
);
</t><stat>revoke all privileges on campaigns from user3;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE INSERT, DELETE ON customers FROM username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>revoke insert, delete on customers from username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE INSERT, DELETE ON customers FROM username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>revoke insert, delete on customers from username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE INSERT, DELETE ON customers FROM username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>revoke insert, delete on customers from username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE INSERT, DELETE ON customers FROM username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>revoke insert, delete on customers from username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE INSERT, DELETE ON customers FROM username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>revoke insert, delete on customers from username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE INSERT, DELETE ON customers FROM username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>revoke insert, delete on customers from username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE SELECT ON campaigns FROM username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>revoke select on campaigns from username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE SELECT ON campaigns FROM username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>revoke select on campaigns from username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE SELECT ON campaigns FROM username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>revoke select on campaigns from username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE SELECT ON campaigns FROM username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>revoke select on campaigns from username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE SELECT ON campaigns FROM username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>revoke select on campaigns from username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE SELECT ON campaigns FROM username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>revoke select on campaigns from username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE UPDATE ON interactions FROM username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>revoke update on interactions from username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE UPDATE ON interactions FROM username;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>revoke update on interactions from username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE UPDATE ON interactions FROM username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;</t><stat>revoke update on interactions from username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE UPDATE ON interactions FROM username;</stat><divider><t>CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>revoke update on interactions from username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE UPDATE ON interactions FROM username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;</t><stat>revoke update on interactions from username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>REVOKE UPDATE ON interactions FROM username;</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, customer_id INT NOT NULL, campaign_id INT NOT NULL, interaction_type VARCHAR(20) NOT NULL, interaction_date TIMESTAMP NOT NULL) ENGINE=InnoDB;

CREATE TABLE campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE NOT NULL, end_date DATE NOT NULL, budget DECIMAL(10,2) NOT NULL) ENGINE=InnoDB;

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL) ENGINE=InnoDB;</t><stat>revoke update on interactions from username;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON campaigns FROM user1;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE SELECT ON ads FROM user2;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke select on ads from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>REVOKE INSERT, UPDATE, DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE impressions (
    impression_id INT PRIMARY KEY,
    ad_id INT,
    customer_id INT,
    impression_date TIMESTAMP,
    impression_cost DECIMAL(10, 2)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    email VARCHAR(50),
    phone_number VARCHAR(20)
);


CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(50) NOT NULL,
    campaign_id INT,
    ad_type VARCHAR(50),
    ad_status VARCHAR(20)
);


CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE
);
</t><stat>revoke insert, update, delete on customers from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON campaigns FROM user1;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on campaigns from user1;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ad_groups FROM user2;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ad_groups from user2;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);</t><stat>revoke delete on ads from user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ads FROM user3;</stat><divider><t>CREATE TABLE audience_mapping (
    mapping_id INT PRIMARY KEY,
    audience_id INT REFERENCES audiences(audience_id),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE audiences (
    audience_id INT PRIMARY KEY,
    audience_name VARCHAR(255)
);

CREATE TABLE ads (
    ad_id INT PRIMARY KEY,
    ad_name VARCHAR(255),
    ad_group_id INT REFERENCES ad_groups(ad_group_id)
);

CREATE TABLE ad_groups (
    ad_group_id INT PRIMARY KEY,
    ad_group_name VARCHAR(255),
    campaign_id INT REFERENCES campaigns(campaign_id)
);

CREATE TABLE campaigns (
    campaign_id INT PRIMARY KEY,
    campaign_name VARCHAR(255),
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ads from user3;</stat>