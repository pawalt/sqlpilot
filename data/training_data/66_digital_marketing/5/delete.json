[
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM social_media_engagement_metrics WHERE post_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM social_media_engagement_metrics WHERE likes < 10;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM social_media_engagement_metrics WHERE shares > 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM social_media_engagement_metrics WHERE likes > 100 AND comments < 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM social_media_engagement_metrics WHERE post_id IN (SELECT post_id FROM posts WHERE date < '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM social_media_engagement_metrics WHERE shares = 0;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM posts WHERE post_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM posts WHERE likes < 10;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM posts WHERE likes < 100 AND shares > 50",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE followers > 1000 AND followings < 500",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM posts WHERE post_id = 5",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nDELETE FROM SocialMediaPosts WHERE post_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nDELETE FROM AudienceEngagement WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nDELETE FROM ContentStrategyMetrics WHERE metric_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nDELETE FROM SocialMediaPosts WHERE likes > 100 AND shares < 50;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nDELETE FROM AudienceEngagement WHERE likes < 10 OR shares < 5;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nDELETE FROM ContentStrategyMetrics WHERE metric_value < 0.5 AND date_recorded < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM posts WHERE post_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM comments WHERE comment_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM posts WHERE user_id = 2 AND created_at < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM comments WHERE user_id = 3 OR post_id = 4",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM engagements WHERE engagement_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM likes WHERE like_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM comments WHERE comment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM engagements WHERE user_id = 101 AND post_id = 201",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM likes WHERE user_id = 102",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM comments WHERE post_id = 202"
]