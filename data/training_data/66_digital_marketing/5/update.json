[
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nUPDATE social_media_engagement_metrics SET likes = 100 WHERE post_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nUPDATE social_media_engagement_metrics SET comments = 50 WHERE post_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nUPDATE social_media_engagement_metrics SET shares = 20, engagement_rate = 0.75 WHERE post_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nUPDATE social_media_engagement_metrics SET likes = likes + 1, comments = comments + 2 WHERE post_id = 1234;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nUPDATE social_media_engagement_metrics SET likes = likes + 5, shares = shares + 3 WHERE post_id = 5678;",
  "### TABLEDATA\n\nCREATE TABLE social_media_engagement_metrics (\n    post_id INT,\n    likes INT,\n    comments INT,\n    shares INT,\n    engagement_rate FLOAT\n);\n\n### STATEMENT\n\nUPDATE social_media_engagement_metrics SET comments = comments + 1, engagement_rate = (likes + comments + shares) / 3 WHERE post_id = 9101;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE posts SET likes = likes + 1 WHERE post_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE users SET followers = followers + 1 WHERE user_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE posts SET comments = comments + 1 WHERE post_id = 1002;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE posts SET likes = likes + 1, shares = shares + 2 WHERE post_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE users SET followers = followers - 10, following = following + 5 WHERE user_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username varchar(255),\n    followers INT,\n    following INT,\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE posts SET post_content = 'Updated content', comments = comments + 1 WHERE post_id = 1002;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nUPDATE SocialMediaPosts SET likes = likes + 1 WHERE post_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nUPDATE AudienceEngagement SET likes = likes + 1 WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nUPDATE ContentStrategyMetrics SET metric_value = metric_value * 1.1 WHERE metric_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nUPDATE SocialMediaPosts SET likes = likes + 1 WHERE post_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nUPDATE AudienceEngagement SET likes = likes * 2, shares = shares + 1 WHERE user_id = 54321 AND post_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE SocialMediaPosts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    likes INT,\n    comments INT,\n    shares INT\n);\n\n\nCREATE TABLE AudienceEngagement (\n    user_id INT PRIMARY KEY,\n    post_id INT,\n    comment TEXT,\n    likes INT,\n    shares INT\n);\n\n\nCREATE TABLE ContentStrategyMetrics (\n    metric_id INT PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value FLOAT,\n    date_recorded DATE\n);\n\n### STATEMENT\n\nUPDATE ContentStrategyMetrics SET metric_value = metric_value * 1.1, date_recorded = '2022-10-15' WHERE metric_id = 98765;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE users SET user_name = 'John Doe' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE posts SET post_content = 'Updated post content' WHERE post_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE comments SET comment_text = 'Updated comment text' WHERE comment_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE users SET user_name = 'John Doe' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE posts SET post_content = 'Updated post content' WHERE post_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT,\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment_text TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE comments SET comment_text = 'New comment text' WHERE comment_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE posts SET post_content = 'Updated content' WHERE post_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE likes SET like_timestamp = CURRENT_TIMESTAMP WHERE like_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE posts SET post_content = 'Updated post content' WHERE post_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  date_joined DATE\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_content TEXT,\n  created_at TIMESTAMP\n)\n\nCREATE TABLE likes (\n  like_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_timestamp TIMESTAMP\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  comment_content TEXT,\n  comment_timestamp TIMESTAMP\n)\n\nCREATE TABLE engagements (\n  engagement_id INT PRIMARY KEY,\n  user_id INT REFERENCES users(user_id),\n  post_id INT REFERENCES posts(post_id),\n  like_id INT REFERENCES likes(like_id),\n  comment_id INT REFERENCES comments(comment_id),\n  engagement_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE likes SET like_timestamp = CURRENT_TIMESTAMP WHERE like_id = 1;"
]