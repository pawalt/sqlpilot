[
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT feedback_id, customer_id FROM feedback_sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, COUNT(*) AS total_count FROM feedback_sentiment_analysis GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) AS avg_score FROM feedback_sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_sentiment_analysis WHERE platform = 'Twitter';",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT feedback_id, customer_id FROM feedback_sentiment_analysis WHERE sentiment_score < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, COUNT(*) AS negative_count FROM feedback_sentiment_analysis WHERE sentiment_score < 0;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(sentiment_score) AS avg_score FROM feedback_sentiment_analysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_feedbacks FROM feedback_sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_sentiment_analysis ORDER BY sentiment_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, sentiment_score FROM feedback_sentiment_analysis WHERE feedback LIKE '%good%';",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM feedback_sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, COUNT(*) AS total_count FROM feedback_sentiment_analysis WHERE sentiment_score < 0.5 GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) AS avg_score, platform FROM feedback_sentiment_analysis GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, MAX(sentiment_score) AS max_score FROM feedback_sentiment_analysis GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) AS avg_score, platform FROM feedback_sentiment_analysis WHERE platform = 'Facebook';",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_feedbacks FROM feedback_sentiment_analysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM feedback_sentiment_analysis WHERE customer_id = '12345678-1234-1234-1234-123456789abc';",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, COUNT(*) AS positive_count FROM feedback_sentiment_analysis WHERE sentiment_score > 0.5 GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, AVG(sentiment_score) FROM feedback_sentiment_analysis GROUP BY platform",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM feedback_sentiment_analysis GROUP BY customer_id HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, COUNT(*) FROM feedback_sentiment_analysis WHERE sentiment_score > 0.5 GROUP BY platform",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE sentiment_score < 0.3 ORDER BY customer_id DESC",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform = 'Twitter' ORDER BY feedback_id ASC",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT platform FROM feedback_sentiment_analysis",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, MAX(sentiment_score) FROM feedback_sentiment_analysis GROUP BY customer_id ORDER BY MAX(sentiment_score) DESC",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, SUM(sentiment_score) FROM feedback_sentiment_analysis GROUP BY customer_id, platform HAVING SUM(sentiment_score) > 5",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, AVG(sentiment_score) FROM feedback_sentiment_analysis WHERE platform = 'Facebook' GROUP BY customer_id, platform",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, AVG(sentiment_score) AS average_score FROM feedback_sentiment_analysis GROUP BY customer_id, platform HAVING AVG(sentiment_score) > 0.4",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, MAX(sentiment_score) FROM feedback_sentiment_analysis GROUP BY platform",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, AVG(sentiment_score) AS average_score FROM feedback_sentiment_analysis GROUP BY platform HAVING AVG(sentiment_score) < 0.5",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE sentiment_score BETWEEN 0.2 AND 0.6",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform = 'Instagram' AND sentiment_score > 0.7",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback, sentiment_score FROM feedback_sentiment_analysis WHERE feedback_id = 'd2ac6254-bbbd-4cbb-8705-ffb2e0d7ae29'",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(sentiment_score) FROM feedback_sentiment_analysis WHERE platform IN ('Facebook', 'Twitter') GROUP BY customer_id HAVING AVG(sentiment_score) > 0.6",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform = 'Twitter' AND feedback LIKE '%good%'",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE LENGTH(feedback) > 100",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT customer_id, platform, feedback FROM feedback_sentiment_analysis WHERE platform IN ('Instagram', 'Facebook') ORDER BY customer_id, platform DESC",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, COUNT(DISTINCT customer_id) FROM feedback_sentiment_analysis GROUP BY platform",
  "### TABLEDATA\n\nCREATE TABLE feedback_sentiment_analysis (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    platform TEXT NOT NULL,\n    feedback TEXT NOT NULL,\n    sentiment_score FLOAT\n)\n\n### STATEMENT\n\nSELECT platform, AVG(sentiment_score) AS average_score FROM feedback_sentiment_analysis GROUP BY platform HAVING COUNT(*) > 2",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, platform, feedback_text, sentiment_score FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback WHERE platform = 'Twitter';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text, sentiment_score FROM customer_feedback WHERE sentiment_score > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, COUNT(*) FROM customer_feedback GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(sentiment_score) FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, sentiment_result, analysis_timestamp FROM sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, sentiment_result FROM sentiment_analysis WHERE sentiment_result = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, platform FROM customer_feedback WHERE platform = 'Facebook' AND sentiment_score < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, COUNT(*) FROM customer_feedback WHERE platform LIKE 'I%' GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(sentiment_score) FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) AS average_score FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text FROM customer_feedback ORDER BY feedback_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sentiment_result, COUNT(*) FROM sentiment_analysis GROUP BY sentiment_result;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, platform, sentiment_score FROM customer_feedback WHERE feedback_id IN (1, 5, 10);",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, AVG(sentiment_score) FROM customer_feedback GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT platform) FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, sentiment_score FROM customer_feedback WHERE feedback_id BETWEEN 3 AND 8;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) FROM customer_feedback WHERE platform = 'Instagram';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, COUNT(feedback_id) FROM customer_feedback GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text FROM customer_feedback WHERE CHAR_LENGTH(feedback_text) > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback WHERE platform='Twitter' AND sentiment_score < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(sentiment_score) FROM customer_feedback WHERE platform='Facebook';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, sentiment_result FROM customer_feedback JOIN sentiment_analysis ON customer_feedback.feedback_id = sentiment_analysis.feedback_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, AVG(sentiment_score) FROM customer_feedback GROUP BY platform HAVING AVG(sentiment_score) > 0.4;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback WHERE feedback_text LIKE '%great%' AND platform='Instagram';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT platform FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, sentiment_result, analysis_timestamp FROM sentiment_analysis WHERE EXTRACT(MONTH FROM analysis_timestamp) = 7;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(feedback_id), sentiment_result FROM sentiment_analysis WHERE sentiment_result='Positive' GROUP BY sentiment_result;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, sentiment_result, analysis_timestamp FROM sentiment_analysis ORDER BY analysis_timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, COUNT(*) AS total_feedback FROM customer_feedback GROUP BY platform ORDER BY total_feedback DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, AVG(sentiment_score) AS average_score FROM customer_feedback GROUP BY platform ORDER BY average_score DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback WHERE feedback_id IN (SELECT feedback_id FROM sentiment_analysis WHERE sentiment_result='Negative');",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, SUM(sentiment_score) FROM customer_feedback GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, MIN(sentiment_score), MAX(sentiment_score) FROM customer_feedback GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, platform, sentiment_result FROM customer_feedback LEFT JOIN sentiment_analysis ON customer_feedback.feedback_id = sentiment_analysis.feedback_id WHERE analysis_timestamp BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(50),\n  feedback_text TEXT,\n  sentiment_score FLOAT\n);\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_result VARCHAR(20),\n  analysis_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT platform, COUNT(feedback_id) FROM customer_feedback WHERE feedback_id IN (SELECT feedback_id FROM sentiment_analysis WHERE sentiment_result='Neutral') GROUP BY platform;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feedback_id, customer_id, sentiment_score FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customer",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM platform",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, platform_type FROM platform",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feedback_text FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM customer",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback WHERE sentiment_score > 0.5",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback WHERE feedback_text LIKE '%good%'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, platform_type FROM platform WHERE platform_type = 'Social Media'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name FROM customer WHERE email = 'example@gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feedback_id, customer_id, sentiment_score FROM customer_feedback WHERE sentiment_score < 0.2",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name FROM platform WHERE platform_type = 'Review Site'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM customer WHERE customer_name = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback ORDER BY created_at DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feedback_id, customer_id, sentiment_score FROM customer_feedback LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customer LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM platform WHERE platform_type = 'E-commerce'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name FROM platform WHERE platform_type != 'Social Media'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customer WHERE email LIKE '%@example.com%'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE customer.customer_name LIKE 'A%' ORDER BY customer_feedback.created_at DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customer WHERE phone_number LIKE '%123%'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, platform_type FROM platform WHERE platform_type = 'social_media'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feedback_text, sentiment_score FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id WHERE sentiment_score > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS feedback_count FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id GROUP BY customer_name ORDER BY feedback_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(sentiment_score) AS avg_sentiment FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id GROUP BY customer_name ORDER BY avg_sentiment DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, AVG(sentiment_score) AS avg_sentiment FROM customer_feedback JOIN platform ON customer_feedback.platform_id = platform.platform_id GROUP BY platform_name ORDER BY avg_sentiment DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS feedback_count FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE feedback_text LIKE '%great%' GROUP BY customer_name ORDER BY feedback_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(sentiment_score) AS avg_sentiment FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE feedback_text LIKE '%bad%' GROUP BY customer_name ORDER BY avg_sentiment ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer.customer_name, platform.platform_name FROM customer_join customer_feedback ON customer.customer_id = customer_feedback.customer_idJOIN platform ON customer_feedback.platform_id = platform.platform_id ORDER BY customer.customer_name, platform.platform_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, platform_type, COUNT(*) AS feedback_count FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id GROUP BY customer_name, platform_type ORDER BY customer_name, platform_type, feedback_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, feedback_text FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE platform_id = '12345678-1234-1234-1234-1234567890ab';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, feedback_text FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id WHERE platform_id IN ('12345678-1234-1234-1234-1234567890ab', '87654321-4321-4321-4321-0987654321ba');",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, platform_name, sentiment_score FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id WHERE customer_id = 'abcd1234-abcd-abcd-abcd-abcd1234abcd';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    platform_id UUID,\n    feedback_text TEXT,\n    sentiment_score FLOAT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE platform (\n    platform_id UUID PRIMARY KEY,\n    platform_name VARCHAR(50),\n    platform_type VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, platform_name, created_at FROM customer_feedback JOIN customer ON customer_feedback.customer_id = customer.customer_id JOIN platform ON customer_feedback.platform_id = platform.platform_id WHERE created_at >= '2022-01-01' AND created_at <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feedback_text FROM CustomerFeedback WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM PlatformFeedback;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, feedback_text FROM PlatformFeedback WHERE sentiment_score < -0.5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) AS average_score FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM SentimentAnalysis WHERE analyzed_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Customer WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, platform_name FROM PlatformFeedback WHERE id = 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feedback_id, analysis_result FROM SentimentAnalysis WHERE feedback_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(sentiment_score) AS max_score FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, COUNT(*) AS feedback_count FROM PlatformFeedback GROUP BY platform_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerFeedback WHERE feedback_text LIKE '%great%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) AS average_score, COUNT(*) AS total_feedbacks FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, analysis_result FROM SentimentAnalysis WHERE analyzed_at BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, AVG(sentiment_score) AS average_score FROM PlatformFeedback GROUP BY platform_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feedback_text, sentiment_score FROM CustomerFeedback ORDER BY sentiment_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Customer WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, MAX(sentiment_score) AS max_score FROM PlatformFeedback GROUP BY platform_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feedback_text, sentiment_score FROM PlatformFeedback UNION SELECT id, feedback_text, sentiment_score FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerFeedback WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT platform_name, feedback_text FROM PlatformFeedback WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email, CustomerFeedback.feedback_text FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT PlatformFeedback.platform_name, SentimentAnalysis.analysis_result FROM SentimentAnalysis JOIN PlatformFeedback ON SentimentAnalysis.feedback_id = PlatformFeedback.id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email, CustomerFeedback.sentiment_score FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id WHERE Customer.name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, COUNT(CustomerFeedback.id) AS num_feedbacks FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id GROUP BY Customer.name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT CustomerFeedback.id, CustomerFeedback.sentiment_score FROM CustomerFeedback WHERE CustomerFeedback.sentiment_score > (SELECT AVG(sentiment_score) FROM CustomerFeedback);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email, COUNT(SentimentAnalysis.id) AS num_analysis FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id GROUP BY Customer.name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email, SentimentAnalysis.analyzed_at FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id ORDER BY SentimentAnalysis.analyzed_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT CustomerFeedback.feedback_text, COUNT(SentimentAnalysis.id) AS num_analysis FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id GROUP BY CustomerFeedback.feedback_text HAVING COUNT(SentimentAnalysis.id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email FROM Customer WHERE Customer.id NOT IN (SELECT feedback_id FROM SentimentAnalysis);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email FROM Customer LEFT JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id WHERE CustomerFeedback.id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email FROM Customer WHERE Customer.id IN (SELECT id FROM PlatformFeedback WHERE platform_name = 'Twitter');",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email FROM Customer WHERE Customer.id IN (SELECT feedback_id FROM SentimentAnalysis WHERE analyzed_at BETWEEN '2022-01-01' AND '2022-01-31');",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email FROM Customer WHERE Customer.id NOT IN (SELECT feedback_id FROM SentimentAnalysis WHERE analysis_result = 'Positive');",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analyzed_at FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE CustomerFeedback.sentiment_score = (SELECT MAX(sentiment_score) FROM CustomerFeedback);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analysis_result FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE SentimentAnalysis.analyzed_at = (SELECT MAX(analyzed_at) FROM SentimentAnalysis);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analysis_result FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE CustomerFeedback.sentiment_score = (SELECT MIN(sentiment_score) FROM CustomerFeedback);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT CustomerFeedback.id, CustomerFeedback.feedback_text, SentimentAnalysis.analysis_result FROM CustomerFeedback JOIN SentimentAnalysis ON CustomerFeedback.id = SentimentAnalysis.feedback_id WHERE SentimentAnalysis.analyzed_at = (SELECT MIN(analyzed_at) FROM SentimentAnalysis);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n    id INT PRIMARY KEY,\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE PlatformFeedback (\n    id INT PRIMARY KEY,\n    platform_name VARCHAR(50),\n    feedback_text TEXT,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE SentimentAnalysis (\n    id INT PRIMARY KEY,\n    feedback_id INT,\n    analysis_result TEXT,\n    analyzed_at TIMESTAMP\n);\n\nCREATE TABLE Customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customer.name, Customer.email, CustomerFeedback.sentiment_score FROM Customer JOIN CustomerFeedback ON Customer.id = CustomerFeedback.id WHERE CustomerFeedback.id IN (SELECT feedback_id FROM SentimentAnalysis WHERE analysis_result = 'Negative');",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, timestamp FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_sentiment_analysis",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT analysis_id, sentiment_score, sentiment_label FROM customer_sentiment_analysis",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_platforms",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT platform_id, platform_name FROM customer_platforms",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT profile_id, platform_id, profile_name FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_responses",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT response_id, feedback_id, profile_id FROM customer_responses",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text FROM customer_feedback WHERE sentiment='positive'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT analysis_id, feedback_id, sentiment_score FROM customer_sentiment_analysis WHERE sentiment_label='happy'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT profile_id, platform_id, profile_name FROM customer_profiles WHERE platform_id = 1",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_feedback ORDER BY timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT profile_id, profile_name FROM customer_profiles WHERE profile_email LIKE '%gmail.com%'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text FROM customer_feedback WHERE platform='Twitter'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT analysis_id, sentiment_score FROM customer_sentiment_analysis WHERE sentiment_score > 0.7",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE profile_name LIKE 'John%'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT count(*) FROM customer_feedback",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT platform_name, COUNT(*) FROM customer_profiles JOIN customer_platforms ON customer_profiles.platform_id = customer_platforms.platform_id GROUP BY platform_name",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customer_feedback;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, sentiment FROM customer_feedback WHERE sentiment='Positive';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, feedback_text FROM customer_feedback WHERE platform='Twitter';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, timestamp FROM customer_feedback ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT analysis_id, feedback_id, sentiment_score FROM customer_sentiment_analysis WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT analysis_id, sentiment_label, analysis_date FROM customer_sentiment_analysis WHERE analysis_date = '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT platform_id, platform_name FROM customer_platforms;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT platform_id, platform_name FROM customer_platforms WHERE platform_name LIKE '%book%';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT profile_id, platform_id, profile_name FROM customer_profiles WHERE platform_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT profile_id, profile_name, profile_email FROM customer_profiles WHERE profile_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT response_id, feedback_id, profile_id, response_text FROM customer_responses WHERE feedback_id = 10 AND profile_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT response_id, feedback_id, profile_id, response_date FROM customer_responses WHERE response_date BETWEEN '2022-04-01' AND '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform FROM customer_feedback JOIN customer_responses ON customer_feedback.feedback_id = customer_responses.feedback_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, sentiment_score FROM customer_feedback JOIN customer_sentiment_analysis ON customer_feedback.feedback_id = customer_sentiment_analysis.feedback_id WHERE sentiment_score > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT profile_id, profile_name, platform_name FROM customer_profiles JOIN customer_platforms ON customer_profiles.platform_id = customer_platforms.platform_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, response_text FROM customer_feedback LEFT JOIN customer_responses ON customer_feedback.feedback_id = customer_responses.feedback_id WHERE response_text IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, sentiment FROM customer_feedback WHERE sentiment IN ('Positive', 'Negative');",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT analysis_id, analysis_date, sentiment_label FROM customer_sentiment_analysis WHERE sentiment_label NOT LIKE '%Neutral%';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT profile_id, platform_id, profile_name, profile_email FROM customer_profiles WHERE profile_email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, timestamp FROM customer_feedback WHERE timestamp > '2022-05-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  feedback_id INT PRIMARY KEY,\n  platform VARCHAR(255),\n  feedback_text TEXT,\n  sentiment VARCHAR(50),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE customer_sentiment_analysis (\n  analysis_id INT PRIMARY KEY,\n  feedback_id INT,\n  sentiment_score FLOAT,\n  sentiment_label VARCHAR(50),\n  analysis_date DATE\n)\n\nCREATE TABLE customer_platforms (\n  platform_id INT PRIMARY KEY,\n  platform_name VARCHAR(255)\n)\n\nCREATE TABLE customer_profiles (\n  profile_id INT PRIMARY KEY,\n  platform_id INT,\n  profile_name VARCHAR(255),\n  profile_email VARCHAR(255)\n)\n\nCREATE TABLE customer_responses (\n  response_id INT PRIMARY KEY,\n  feedback_id INT,\n  profile_id INT,\n  response_text TEXT,\n  response_date DATE\n)\n\n### STATEMENT\n\nSELECT feedback_id, platform, feedback_text FROM customer_feedback WHERE feedback_id NOT IN (SELECT feedback_id FROM customer_responses);"
]