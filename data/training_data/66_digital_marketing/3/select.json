[
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT preference1 FROM UserPreferences WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference2 FROM UserPreferences WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference1 = 'value1';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1, preference3 FROM UserPreferences WHERE user_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference2 = 'value2';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE preference2 = 'value3';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference3 = 'value4';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference2, preference3 FROM UserPreferences WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference1 = 'value5';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1, preference2 FROM UserPreferences WHERE user_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference2 = 'value6';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference3 FROM UserPreferences WHERE preference2 = 'value7';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference3 = 'value8';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1, preference3 FROM UserPreferences WHERE user_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference1 = 'value9';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference2 FROM UserPreferences WHERE user_id = 8;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference2 = 'value10';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1, preference2 FROM UserPreferences WHERE preference2 = 'value11';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference3 = 'value12';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE preference2 = 'value';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM UserPreferences WHERE preference1 LIKE '%value%';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM UserPreferences GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference2 FROM UserPreferences WHERE preference1 = 'value1' AND preference3 = 'value2';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM UserPreferences;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1, preference2 FROM UserPreferences WHERE preference1 != preference2;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT MAX(user_id) FROM UserPreferences;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT preference1) FROM UserPreferences;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, CONCAT(preference1, preference2) AS preferences_concat FROM UserPreferences;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference2 FROM UserPreferences ORDER BY preference2 DESC;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE preference1 = 'value' AND preference2 LIKE '%pattern%';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE user_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE preference1 IN ('value1', 'value2', 'value3');",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference3 FROM UserPreferences WHERE preference2 IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE preference1 = 'value' OR (preference2 = 'value' AND preference3 = 'value');",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE preference1 = 'value' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(user_id) FROM UserPreferences;",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference2 FROM UserPreferences WHERE preference1 = 'value' UNION SELECT user_id, preference2 FROM UserPreferences WHERE preference1 = 'value';",
  "### TABLEDATA\n\nCREATE TABLE UserPreferences (\n    user_id INT,\n    preference1 VARCHAR,\n    preference2 VARCHAR,\n    preference3 VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, preference1 FROM UserPreferences WHERE preference1 = 'value' HAVING COUNT(user_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 25;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE location LIKE '%City%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, location FROM users WHERE age < 18;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, location FROM users WHERE age >= 18 AND gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, p.theme FROM users u JOIN user_preferences p ON u.user_id = p.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, p.language FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE p.theme = 'Dark';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT MIN(age) AS min_age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, AVG(p.font_size) AS avg_font_size FROM users u JOIN user_preferences p ON u.user_id = p.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(p.preference_id) AS num_preferences FROM users u LEFT JOIN user_preferences p ON u.user_id = p.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.location, COUNT(u.user_id) AS num_users FROM users u GROUP BY u.location;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.location, COUNT(u.user_id) AS num_users FROM users u GROUP BY u.location HAVING COUNT(u.user_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.email, p.theme FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE p.language='English';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, p.theme, p.font_size FROM users u LEFT JOIN user_preferences p ON u.user_id = p.user_id WHERE p.font_size > 14;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.location, p.language FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE u.location LIKE 'New%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.email, p.font_size FROM users u INNER JOIN user_preferences p ON u.user_id = p.user_id WHERE p.language = 'French';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.age, COUNT(p.preference_id) AS total_preferences FROM users u LEFT JOIN user_preferences p ON u.user_id = p.user_id GROUP BY u.username, u.age;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT gender) AS total_genders FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT MAX(font_size) AS max_font_size FROM user_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.age, p.language FROM users u LEFT JOIN user_preferences p ON u.user_id = p.user_id WHERE p.theme = 'Dark';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, p.theme, p.language FROM users u INNER JOIN user_preferences p ON u.user_id = p.user_id WHERE p.language != 'German';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.email, p.font_size FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE u.age < 35;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users, MIN(age) AS min_age, MAX(age) AS max_age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, p.theme, p.font_size FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE u.gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT u.username, p.theme FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE u.location = 'London';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.email, u.age, p.theme FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE u.location = 'Paris' AND p.language = 'French';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.email, p.language, p.font_size FROM users u JOIN user_preferences p ON u.user_id = p.user_id WHERE p.theme LIKE '%Sky%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10),\n    location VARCHAR(100)\n);\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(50),\n    language VARCHAR(50),\n    font_size INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT u.username, u.email, p.language, p.font_size FROM users u INNER JOIN user_preferences p ON u.user_id = p.user_id WHERE p.language IN ('English', 'Spanish');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT username, email, age FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE age > 25",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, interaction_type, interaction_timestamp FROM interactions",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM personalized_content",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT content_title, personalization_score FROM personalized_content",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT content_id, content_title, user_id FROM personalized_content WHERE personalization_score > 0.8",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT u.username, p.content_title FROM users u JOIN personalized_content p ON u.user_id = p.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT u.username, i.interaction_type FROM users u JOIN interactions i ON u.user_id = i.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT p.content_title, i.interaction_timestamp FROM personalized_content p JOIN interactions i ON p.user_id = i.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT u.username, p.content_description FROM users u JOIN personalized_content p ON u.user_id = p.user_id WHERE u.age < 30",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT u.username, i.interaction_type FROM users u JOIN interactions i ON u.user_id = i.user_id WHERE i.interaction_timestamp > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT u.username, p.personalization_score FROM users u JOIN personalized_content p ON u.user_id = p.user_id WHERE p.personalization_score < 0.5",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS interaction_count FROM interactions GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, AVG(personalization_score) AS avg_score FROM personalized_content GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, MAX(age) AS max_age FROM users GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, MIN(personalization_score) AS min_score FROM personalized_content GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(*) AS interaction_count FROM users u JOIN interactions i ON u.user_id = i.user_id GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT u.username, AVG(p.personalization_score) AS avg_score FROM users u JOIN personalized_content p ON u.user_id = p.user_id GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 30",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE age BETWEEN 25 AND 40",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username LIKE 'a%'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE preferences ->> 'language' = 'English'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT username, email, interactions.interaction_type FROM users JOIN interactions ON users.user_id = interactions.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_timestamp > NOW() - INTERVAL '1 day'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT count(*) FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, content_title, personalization_score FROM personalized_content WHERE personalization_score > 0.5",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT username, email, content_title FROM users JOIN personalized_content ON users.user_id = personalized_content.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT interaction_type FROM interactions",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT avg(personalization_score) FROM personalized_content GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_data ->> 'category' = 'sports'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT age, count(*) FROM users GROUP BY age",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, count(*) FROM interactions GROUP BY user_id HAVING count(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, count(*) as num_interactions FROM interactions GROUP BY user_id ORDER BY num_interactions DESC",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, count(*) as num_interactions FROM interactions GROUP BY user_id ORDER BY num_interactions ASC",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT username, email, content_title, interaction_timestamp FROM users JOIN interactions ON users.user_id = interactions.user_id JOIN personalized_content ON users.user_id = personalized_content.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, count(*) as num_interactions FROM interactions GROUP BY user_id HAVING count(*) > 5 ORDER BY num_interactions DESC",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE age < (SELECT avg(age) FROM users)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT user_id, sum(personalization_score) FROM personalized_content GROUP BY user_id HAVING sum(personalization_score) > 10",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    preferences JSON\n)\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_timestamp TIMESTAMP,\n    interaction_data JSON\n)\n\nCREATE TABLE personalized_content (\n    content_id INT PRIMARY KEY,\n    content_title VARCHAR(255),\n    content_description TEXT,\n    user_id INT,\n    personalization_score FLOAT\n)\n\n### STATEMENT\n\nSELECT username, email, count(*) as num_interactions FROM users JOIN interactions ON users.user_id = interactions.user_id GROUP BY users.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, age FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, interaction_date FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, interaction_type FROM user_interactions WHERE interaction_type = 'like';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT session_id, start_time, end_time FROM user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, start_time FROM user_sessions WHERE start_time >= '2021-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM personalized_content;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT content_id, user_id, content_type FROM personalized_content;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, content_details FROM personalized_content WHERE user_id = '12345678-1234-1234-1234-1234567890AB';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, email FROM users JOIN user_sessions ON users.user_id = user_sessions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM user_interactions JOIN users ON user_interactions.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, start_time, view_date FROM user_sessions JOIN personalized_content ON user_sessions.user_id = personalized_content.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM user_interactions WHERE interaction_date >= '2021-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, start_time FROM user_sessions WHERE end_time IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT content_id, view_date FROM personalized_content WHERE view_date >= '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE 'John%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, content_type FROM personalized_content WHERE content_type = 'article';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, age, preferences FROM users WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE preferences->>'theme' = 'dark';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, u.email, i.interaction_type, i.interaction_date FROM users u INNER JOIN user_interactions i ON u.user_id = i.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, c.content_type, c.view_date FROM users u INNER JOIN personalized_content c ON u.user_id = c.user_id WHERE c.view_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, s.start_time, s.end_time FROM users u INNER JOIN user_sessions s ON u.user_id = s.user_id WHERE s.start_time < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, i.interaction_type, c.content_type FROM users u INNER JOIN user_interactions i ON u.user_id = i.user_id INNER JOIN personalized_content c ON u.user_id = c.user_id WHERE i.interaction_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(age) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(age) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(age) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(*) FROM users u INNER JOIN user_interactions i ON u.user_id = i.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) FROM user_interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT content_type, COUNT(*) FROM personalized_content GROUP BY content_type;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(*) FROM users u INNER JOIN user_sessions s ON u.user_id = s.user_id WHERE s.start_time BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, SUM(age) FROM users u GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, AVG(age) AS avg_age FROM users GROUP BY username HAVING AVG(age) > 25;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, MAX(u.age) AS max_age, MIN(u.age) AS min_age FROM users u GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username STRING,\n  email STRING,\n  age INT,\n  preferences JSON\n)\n\nCREATE TABLE user_interactions (\n  interaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  interaction_type STRING,\n  interaction_date TIMESTAMP,\n  interaction_details JSON\n)\n\nCREATE TABLE user_sessions (\n  session_id UUID PRIMARY KEY,\n  user_id UUID,\n  start_time TIMESTAMP,\n  end_time TIMESTAMP\n)\n\nCREATE TABLE personalized_content (\n  content_id UUID PRIMARY KEY,\n  user_id UUID,\n  content_type STRING,\n  content_details JSON,\n  view_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(*), MAX(u.age) AS max_age FROM users u GROUP BY u.username HAVING COUNT(*) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT username, email FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, registration_date FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM user_preferences",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, category FROM user_preferences",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM user_interactions",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, interaction_type FROM user_interactions",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM content",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT title, category FROM content",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM personalized_content",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, content_id FROM personalized_content",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, c.title FROM users u JOIN personalized_content pc ON u.user_id = pc.user_id JOIN content c ON pc.content_id = c.content_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, c.title FROM users u JOIN personalized_content pc ON u.user_id = pc.user_id JOIN content c ON pc.content_id = c.content_id WHERE u.username = 'example_user'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, c.title FROM users u JOIN personalized_content pc ON u.user_id = pc.user_id JOIN content c ON pc.content_id = c.content_id WHERE c.category = 'example_category'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, p.category FROM users u JOIN user_preferences p ON u.user_id = p.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, i.interaction_type FROM users u JOIN user_interactions i ON u.user_id = i.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, c.title FROM users u JOIN personalized_content pc ON u.user_id = pc.user_id JOIN content c ON pc.content_id = c.content_id WHERE c.category = 'example_category' ORDER BY u.username ASC",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, c.title FROM users u JOIN personalized_content pc ON u.user_id = pc.user_id JOIN content c ON pc.content_id = c.content_id WHERE c.category = 'example_category' ORDER BY c.title DESC",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(pc.content_id) AS total_content FROM users u JOIN personalized_content pc ON u.user_id = pc.user_id GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, AVG(i.interaction_id) AS avg_interaction_id FROM users u JOIN user_interactions i ON u.user_id = i.user_id GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE registration_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.user_id, u.username, COUNT(ui.interaction_id) AS total_interactions FROM users u JOIN user_interactions ui ON u.user_id = ui.user_id GROUP BY u.user_id, u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, up.category, c.title FROM users u JOIN user_preferences up ON u.user_id = up.user_id JOIN content c ON up.category = c.category;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(pc.content_id) AS total_personalized_content FROM users u LEFT JOIN personalized_content pc ON u.user_id = pc.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users u INNER JOIN user_interactions ui ON u.user_id = ui.user_id WHERE ui.interaction_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(ui.interaction_id) AS total_interactions ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u LEFT JOIN user_interactions ui ON u.user_id = ui.user_id WHERE ui.interaction_date >= '2022-01-01' GROUP BY u.username HAVING COUNT(ui.interaction_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, up.preference_type, c.content_text ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_preferences up ON u.user_id = up.user_id LEFT JOIN content c ON up.preference_id = c.content_id WHERE up.category = 'Tech';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, up.category, c.title ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_preferences up ON u.user_id = up.user_id JOIN content c ON up.category = c.category WHERE u.user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(ui.interaction_id) AS total_interactions ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_interactions ui ON u.user_id = ui.user_id WHERE ui.interaction_date >= '2022-01-01' GROUP BY u.username HAVING COUNT(ui.interaction_id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, up.category, c.title ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_preferences up ON u.user_id = up.user_id JOIN content c ON up.category = c.category WHERE up.preference_type = 'Video';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(pc.content_id) AS total_personalized_content ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN personalized_content pc ON u.user_id = pc.user_id GROUP BY u.username HAVING COUNT(pc.content_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(ui.interaction_id) AS total_interactions ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_interactions ui ON u.user_id = ui.user_id GROUP BY u.username HAVING COUNT(ui.interaction_id) < 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users u, user_interactions ui, user_preferences up, personalized_content pc ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nWHERE u.user_id = ui.user_id AND u.user_id = up.user_id AND u.user_id = pc.user_id AND ui.interaction_id = pc.interaction_id AND up.preference_id = pc.content_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, up.preference_type, c.title, ui.interaction_date ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_preferences up ON u.user_id = up.user_id LEFT JOIN content c ON up.preference_id = c.content_id JOIN user_interactions ui ON u.user_id = ui.user_id WHERE u.username = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(ui.interaction_id) AS total_interactions ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u LEFT JOIN user_interactions ui ON u.user_id = ui.user_id GROUP BY u.username HAVING COUNT(ui.interaction_id) < 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, up.category, c.title ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_preferences up ON u.user_id = up.user_id JOIN content c ON up.category = c.category WHERE up.preference_type = 'Article';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users u LEFT JOIN user_preferences up ON u.user_id = up.user_id WHERE up.category IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(pc.content_id) AS total_personalized_content ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN personalized_content pc ON u.user_id = pc.user_id GROUP BY u.username HAVING COUNT(pc.content_id) < 4;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nSELECT u.username, up.category, c.title ",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    registration_date TIMESTAMP\n)\n\nCREATE TABLE user_preferences (\n    preference_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    category VARCHAR(50),\n    preference_type VARCHAR(50)\n)\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n)\n\nCREATE TABLE content (\n    content_id INT PRIMARY KEY,\n    title VARCHAR(100),\n    category VARCHAR(50),\n    content_text TEXT\n)\n\nCREATE TABLE personalized_content (\n    user_id INT REFERENCES users(user_id),\n    content_id INT REFERENCES content(content_id),\n    interaction_id INT REFERENCES user_interactions(interaction_id)\n)\n\n### STATEMENT\n\nFROM users u JOIN user_preferences up ON u.user_id = up.user_id JOIN content c ON up.category = c.category WHERE u.username = 'Bob';"
]