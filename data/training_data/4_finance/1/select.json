[
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_date, total_expenses FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, report_date, net_profit FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, total_income, total_expenses, net_profit FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE net_profit > 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE total_income > total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_date, total_income, total_expenses FROM financial_reports WHERE report_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, net_profit FROM financial_reports WHERE net_profit < 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE total_income > 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_expenses FROM financial_reports WHERE report_name LIKE 'Q1%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, total_income FROM financial_reports WHERE total_income BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_date, total_income FROM financial_reports WHERE total_income < 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, total_expenses FROM financial_reports WHERE total_expenses > 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income, net_profit FROM financial_reports ORDER BY net_profit DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports ORDER BY report_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_date, total_income, net_profit FROM financial_reports ORDER BY total_income DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports ORDER BY total_expenses ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, net_profit FROM financial_reports ORDER BY report_name;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, total_income FROM financial_reports WHERE total_income > 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income, total_expenses FROM financial_reports WHERE total_income > total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_expenses, net_profit FROM financial_reports WHERE total_expenses > 5000 AND net_profit < 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE total_income < 5000 OR net_profit > 2000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, total_income, total_expenses FROM financial_reports WHERE total_income > 10000 AND total_expenses < 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, net_profit FROM financial_reports WHERE net_profit BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, total_income FROM financial_reports WHERE report_date = '2021-05-20';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income, total_expenses, net_profit FROM financial_reports WHERE net_profit > total_income - total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE net_profit > total_income * 0.1;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_expenses FROM financial_reports WHERE total_expenses > (SELECT AVG(total_expenses) FROM financial_reports);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, report_date FROM financial_reports WHERE MONTH(report_date) = 3 AND total_income > 8000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE YEAR(report_date) = 2021;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE report_name LIKE '%Q2%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE total_income > (SELECT MIN(total_income) FROM financial_reports);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, total_income, total_expenses, net_profit FROM financial_reports WHERE total_income > 10000 OR net_profit < -5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE total_income = (SELECT MAX(total_income) FROM financial_reports);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_expenses, net_profit FROM financial_reports ORDER BY net_profit DESC, total_expenses ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_expenses, net_profit FROM financial_reports WHERE total_expenses > net_profit;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE net_profit > total_income;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2),\n    net_profit DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income, total_expenses, net_profit FROM financial_reports WHERE total_income > total_expenses - 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, revenue FROM financial_data WHERE expenses > 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data WHERE revenue > expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(revenue) AS total_revenue FROM financial_data;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(expenses) AS avg_expenses FROM financial_data;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, revenue FROM financial_data ORDER BY revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE total_profit > 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(total_profit) AS max_profit FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT MIN(total_profit) AS min_profit FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(report_id) AS total_reports FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports ORDER BY report_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data WHERE id = 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data WHERE revenue BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(revenue) AS total_revenue, AVG(expenses) AS avg_expenses FROM financial_data;",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_name, total_profit FROM financial_reports WHERE report_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_name, total_profit FROM financial_reports WHERE report_name LIKE '%Q1%';",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data WHERE revenue > expenses",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, revenue, expenses FROM financial_data WHERE revenue > 10000",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data ORDER BY revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data WHERE id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(revenue), AVG(expenses) FROM financial_data",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date >= '2022-01-01' AND report_date <= '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_name, total_profit FROM financial_reports WHERE total_profit > 50000",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports ORDER BY total_profit DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_name, total_profit FROM financial_reports WHERE report_name LIKE '%Quarterly%'",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data INNER JOIN financial_reports ON financial_data.id = financial_reports.report_id",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data LEFT JOIN financial_reports ON financial_data.id = financial_reports.report_id",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data RIGHT JOIN financial_reports ON financial_data.id = financial_reports.report_id",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data FULL JOIN financial_reports ON financial_data.id = financial_reports.report_id",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_data INNER JOIN financial_reports ON financial_data.id = financial_reports.report_id WHERE total_profit > 50000",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(total_profit) FROM financial_reports",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT MIN(revenue) FROM financial_data",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM financial_data",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_name, COUNT(*) AS num_reports FROM financial_reports GROUP BY report_name HAVING num_reports > 1",
  "### TABLEDATA\n\nCREATE TABLE financial_data (\n    id INT PRIMARY KEY,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name VARCHAR(255),\n    report_date DATE,\n    total_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(revenue) AS avg_revenue, AVG(expenses) AS avg_expenses FROM financial_data",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, report_date, report_name FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM incomes;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT income_id, category, amount FROM incomes;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT expense_id, category, amount FROM expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, total_income, total_expenses FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, SUM(amount) AS total_income FROM incomes GROUP BY report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, SUM(amount) AS total_expenses FROM expenses GROUP BY report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_id, financial_reports.report_date, incomes.amount AS income_amount, expenses.amount AS expense_amount FROM financial_reports LEFT JOIN incomes ON financial_reports.report_id = incomes.report_id LEFT JOIN expenses ON financial_reports.report_id = expenses.report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_id, financial_reports.report_date, financial_reports.report_name, SUM(incomes.amount) AS total_income, SUM(expenses.amount) AS total_expenses FROM financial_reports LEFT JOIN incomes ON financial_reports.report_id = incomes.report_id LEFT JOIN expenses ON financial_reports.report_id = expenses.report_id GROUP BY financial_reports.report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_date, incomes.category, incomes.amount FROM financial_reports JOIN incomes ON financial_reports.report_id = incomes.report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_date, expenses.category, expenses.amount FROM financial_reports JOIN expenses ON financial_reports.report_id = expenses.report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_name, incomes.category, SUM(incomes.amount) AS total_income FROM financial_reports JOIN incomes ON financial_reports.report_id = incomes.report_id GROUP BY financial_reports.report_name, incomes.category;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_name, expenses.category, SUM(expenses.amount) AS total_expenses FROM financial_reports JOIN expenses ON financial_reports.report_id = expenses.report_id GROUP BY financial_reports.report_name, expenses.category;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_date, incomes.category, SUM(incomes.amount) AS total_income FROM financial_reports JOIN incomes ON financial_reports.report_id = incomes.report_id GROUP BY financial_reports.report_date, incomes.category;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_date, expenses.category, SUM(expenses.amount) AS total_expenses FROM financial_reports JOIN expenses ON financial_reports.report_id = expenses.report_id GROUP BY financial_reports.report_date, expenses.category;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_name, COUNT(incomes.income_id) AS income_count FROM financial_reports JOIN incomes ON financial_reports.report_id = incomes.report_id GROUP BY financial_reports.report_name;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_name, COUNT(expenses.expense_id) AS expense_count FROM financial_reports JOIN expenses ON financial_reports.report_id = expenses.report_id GROUP BY financial_reports.report_name;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_date, incomes.category, AVG(incomes.amount) AS avg_income FROM financial_reports JOIN incomes ON financial_reports.report_id = incomes.report_id GROUP BY financial_reports.report_date, incomes.category;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT financial_reports.report_date, expenses.category, AVG(expenses.amount) AS avg_expense FROM financial_reports JOIN expenses ON financial_reports.report_id = expenses.report_id GROUP BY financial_reports.report_date, expenses.category;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, report_date FROM financial_reports WHERE total_income > total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE report_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, total_expenses FROM financial_reports WHERE total_income BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, total_income, total_expenses FROM financial_reports ORDER BY total_income DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM incomes JOIN financial_reports ON incomes.report_id = financial_reports.report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT category, amount FROM incomes WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE report_name LIKE 'Q%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_name, total_expenses FROM financial_reports WHERE YEAR(report_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, category, amount FROM expenses WHERE category = 'Office Supplies';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, category, amount FROM expenses WHERE amount IN (SELECT MAX(amount) FROM expenses);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, AVG(amount) AS avg_expense FROM expenses GROUP BY report_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, SUM(amount) AS total_income FROM incomes GROUP BY report_id HAVING total_income > 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income - total_expenses AS profit_loss FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, report_date, total_income FROM financial_reports WHERE report_id IN (SELECT report_id FROM incomes WHERE category = 'Salaries');",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, total_expenses FROM financial_reports WHERE report_id NOT IN (SELECT report_id FROM expenses WHERE category = 'Utilities');",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_name, total_income FROM financial_reports WHERE total_income = (SELECT MAX(total_income) FROM financial_reports);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, SUM(amount) AS total_expenses FROM expenses GROUP BY report_id ORDER BY total_expenses DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, category, amount FROM expenses WHERE amount > (SELECT MAX(amount) FROM incomes);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n  report_id INT NOT NULL,\n  report_date DATE NOT NULL,\n  report_name VARCHAR(255) NOT NULL,\n  total_income DECIMAL(10, 2),\n  total_expenses DECIMAL(10, 2) \n);\n\n\nCREATE TABLE incomes (\n  income_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (income_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n\nCREATE TABLE expenses (\n  expense_id INT NOT NULL,\n  report_id INT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  PRIMARY KEY (expense_id),\n  FOREIGN KEY (report_id) REFERENCES financial_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, AVG(total_income) AS avg_income FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM FinancialReports;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT report_name, report_date FROM FinancialReports WHERE report_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Employees;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM Employees WHERE department = 'Engineering';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT transaction_date, amount FROM Transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Departments;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, department_head FROM Departments WHERE department_head = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name FROM FinancialReports WHERE report_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, position FROM Employees WHERE hire_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT transaction_id, description FROM Transactions WHERE employee_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name FROM Departments WHERE department_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM FinancialReports WHERE report_data->>'status' = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Employees WHERE department IN ('HR', 'Finance');",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, department_head FROM Departments WHERE department_head != 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name FROM Employees WHERE position LIKE '%Manager%';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_id, department_name FROM Departments WHERE department_name LIKE '%Sale%' OR department_name LIKE '%Marketing%';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT transaction_date, amount FROM Transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT report_name FROM FinancialReports WHERE report_data->>'category' IN ('Finance', 'Sales');",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name FROM Employees WHERE department = 'HR' AND position = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM FinancialReports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name FROM FinancialReports WHERE report_date < '2021-06-01'",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Employees WHERE department = 'Engineering'",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name FROM Employees WHERE hire_date > '2020-01-01'",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT Transactions.transaction_id, Transactions.amount, Employees.employee_name FROM Transactions JOIN Employees ON Transactions.employee_id = Employees.employee_id",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, department_head FROM Departments WHERE department_head = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date FROM FinancialReports JOIN Employees ON Employees.employee_id = FinancialReports.report_id",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, department_name FROM FinancialReports JOIN Employees ON Employees.department = FinancialReports.report_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM Employees WHERE employee_id IN (SELECT employee_id FROM Departments WHERE department_head = 'Jane Smith')",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date FROM FinancialReports WHERE report_date BETWEEN '2021-01-01' AND '2021-06-30' AND report_name LIKE '%Q1%'",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, COUNT(*) AS employee_count FROM Employees GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, SUM(amount) AS total_amount FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, AVG(amount) AS average_amount FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, SUM(amount) AS total_spent FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id WHERE amount > 1000 GROUP BY employee_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, MAX(amount) AS highest_transaction FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, MIN(amount) AS lowest_transaction FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, COUNT(*) AS transaction_count FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, MAX(amount) AS largest_transaction FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id WHERE description LIKE '%large%' GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, COUNT(*) AS transaction_count FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id GROUP BY employee_name",
  "### TABLEDATA\n\nCREATE TABLE FinancialReports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255),\n report_date DATE,\n report_data JSONB\n);\n\nCREATE TABLE Employees (\n employee_id SERIAL PRIMARY KEY,\n employee_name VARCHAR(255),\n department VARCHAR(100),\n position VARCHAR(100),\n hire_date DATE\n);\n\nCREATE TABLE Transactions (\n transaction_id SERIAL PRIMARY KEY,\n transaction_date DATE,\n amount DECIMAL(10, 2),\n description TEXT,\n employee_id INT,\n FOREIGN KEY (employee_id) REFERENCES Employees(employee_id)\n);\n\nCREATE TABLE Departments (\n department_id SERIAL PRIMARY KEY,\n department_name VARCHAR(100),\n department_head VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT department_name, AVG(amount) AS average_transaction FROM Employees JOIN Transactions ON Employees.employee_id = Transactions.employee_id WHERE transaction_date > '2021-01-01' GROUP BY department_name",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Financial_Report;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_date, revenue FROM Financial_Report WHERE report_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, revenue_amount FROM Revenue_Details WHERE report_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT expense_type, expense_amount FROM Expense_Details WHERE report_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT employee_name, salary FROM Employee_Salaries WHERE employee_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, budget_amount FROM Department_Budget WHERE department_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_date, revenue, expenses FROM Financial_Report WHERE report_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, revenue_amount FROM Revenue_Details WHERE report_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT expense_type, expense_amount FROM Expense_Details WHERE report_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT employee_name, salary FROM Employee_Salaries WHERE employee_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, budget_amount FROM Department_Budget WHERE department_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Financial_Report WHERE report_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, revenue_amount FROM Revenue_Details WHERE product_name LIKE '%Product%';",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT expense_type, expense_amount FROM Expense_Details WHERE expense_type = 'Travel';",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT employee_name, salary FROM Employee_Salaries WHERE salary > 50000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, budget_amount FROM Department_Budget WHERE budget_amount < 100000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_id, report_date, revenue, expenses FROM Financial_Report WHERE revenue > expenses;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, revenue_amount FROM Revenue_Details WHERE revenue_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT expense_type, expense_amount FROM Expense_Details WHERE expense_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT employee_name, salary FROM Employee_Salaries WHERE salary BETWEEN 40000 AND 60000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Financial_Report WHERE report_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, revenue_amount FROM Revenue_Details WHERE revenue_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, budget_amount FROM Department_Budget WHERE budget_amount < 50000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_id, SUM(revenue) AS total_revenue FROM Financial_Report GROUP BY report_id;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT employee_name, salary FROM Employee_Salaries ORDER BY salary DESC;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(revenue_amount) AS total_revenue FROM Revenue_Details GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, SUM(budget_amount) AS total_budget FROM Department_Budget GROUP BY department_name;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Financial_Report WHERE revenue > expenses;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT employee_name, salary FROM Employee_Salaries WHERE salary > 60000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(revenue_amount) AS avg_revenue FROM Revenue_Details GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, MAX(budget_amount) AS max_budget FROM Department_Budget;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_date, SUM(revenue) - SUM(expenses) AS profit_loss FROM Financial_Report GROUP BY report_date;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Financial_Report WHERE report_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, revenue_amount FROM Revenue_Details WHERE report_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, budget_amount FROM Department_Budget WHERE budget_amount > 70000;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_id, MAX(revenue) AS max_revenue FROM Financial_Report GROUP BY report_id;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT employee_name, salary FROM Employee_Salaries WHERE employee_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(revenue_amount) AS min_revenue FROM Revenue_Details GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT department_name, budget_amount FROM Department_Budget WHERE department_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Report (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    revenue DECIMAL,\n    expenses DECIMAL\n);\n\n\nCREATE TABLE Revenue_Details (\n    revenue_id INT PRIMARY KEY,\n    report_id INT,\n    product_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Expense_Details (\n    expense_id INT PRIMARY KEY,\n    report_id INT,\n    expense_type VARCHAR(255),\n    expense_amount DECIMAL,\n    FOREIGN KEY (report_id) REFERENCES Financial_Report(report_id)\n);\n\n\nCREATE TABLE Employee_Salaries (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    salary DECIMAL\n);\n\n\nCREATE TABLE Department_Budget (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(255),\n    budget_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Financial_Report WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';"
]