<t>CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);</t><stat>INSERT INTO accounts (id, account_name, account_type, balance) VALUES (1, 'John Doe', 'Savings', 100.00) ON CONFLICT (id) DO UPDATE SET account_name = 'John Doe', account_type = 'Savings', balance = 100.00;</stat><divider><t>CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);</t><stat>insert into accounts (id, account_name, account_type, balance) values (1, 'john doe', 'savings', 100.00) on conflict (id) do update set account_name = 'john doe', account_type = 'savings', balance = 100.00;</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);</t><stat>INSERT INTO accounts (id, account_name, account_type, balance) VALUES (1, 'John Doe', 'Savings', 100.00) ON CONFLICT (id) DO UPDATE SET account_name = 'John Doe', account_type = 'Savings', balance = 100.00;</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);</t><stat>insert into accounts (id, account_name, account_type, balance) values (1, 'john doe', 'savings', 100.00) on conflict (id) do update set account_name = 'john doe', account_type = 'savings', balance = 100.00;</stat><divider><t>CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);</t><stat>INSERT INTO accounts (id, account_name, account_type, balance) VALUES (2, 'Alice Smith', 'Checking', 500.00) ON CONFLICT (id) DO UPDATE SET account_name = 'Alice Smith', account_type = 'Checking', balance = 500.00;</stat><divider><t>CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);</t><stat>insert into accounts (id, account_name, account_type, balance) values (2, 'alice smith', 'checking', 500.00) on conflict (id) do update set account_name = 'alice smith', account_type = 'checking', balance = 500.00;</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);</t><stat>INSERT INTO accounts (id, account_name, account_type, balance) VALUES (2, 'Alice Smith', 'Checking', 500.00) ON CONFLICT (id) DO UPDATE SET account_name = 'Alice Smith', account_type = 'Checking', balance = 500.00;</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);</t><stat>insert into accounts (id, account_name, account_type, balance) values (2, 'alice smith', 'checking', 500.00) on conflict (id) do update set account_name = 'alice smith', account_type = 'checking', balance = 500.00;</stat><divider><t>CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);</t><stat>INSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 50.00, '2022-01-15') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 1, transaction_type = 'Deposit', amount = 50.00, transaction_date = '2022-01-15';</stat><divider><t>CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);</t><stat>insert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 50.00, '2022-01-15') on conflict (transaction_id) do update set account_id = 1, transaction_type = 'deposit', amount = 50.00, transaction_date = '2022-01-15';</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);</t><stat>INSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 50.00, '2022-01-15') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 1, transaction_type = 'Deposit', amount = 50.00, transaction_date = '2022-01-15';</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES accounts(id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10,2),
    transaction_date DATE
);

CREATE TABLE accounts (
    id INT PRIMARY KEY,
    account_name VARCHAR(50),
    account_type VARCHAR(50),
    balance DECIMAL(10,2)
);</t><stat>insert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 50.00, '2022-01-15') on conflict (transaction_id) do update set account_id = 1, transaction_type = 'deposit', amount = 50.00, transaction_date = '2022-01-15';</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Accounts (account_id, account_name, balance) VALUES (1, 'John Doe', 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'John Doe', balance = 1500.00</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into accounts (account_id, account_name, balance) values (1, 'john doe', 1000.00) on conflict (account_id) do update set account_name = 'john doe', balance = 1500.00</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Accounts (account_id, account_name, balance) VALUES (1, 'John Doe', 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'John Doe', balance = 1500.00</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into accounts (account_id, account_name, balance) values (1, 'john doe', 1000.00) on conflict (account_id) do update set account_name = 'john doe', balance = 1500.00</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Accounts (account_id, account_name, balance) VALUES (1, 'John Doe', 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'John Doe', balance = 1500.00</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into accounts (account_id, account_name, balance) values (1, 'john doe', 1000.00) on conflict (account_id) do update set account_name = 'john doe', balance = 1500.00</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>UPSERT INTO Accounts (account_id, account_name, balance) VALUES (1, 'John Doe', 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'John Doe', balance = 1500.00</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>upsert into accounts (account_id, account_name, balance) values (1, 'john doe', 1000.00) on conflict (account_id) do update set account_name = 'john doe', balance = 1500.00</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Accounts (account_id, account_name, balance) VALUES (1, 'John Doe', 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'John Doe', balance = 1500.00</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into accounts (account_id, account_name, balance) values (1, 'john doe', 1000.00) on conflict (account_id) do update set account_name = 'john doe', balance = 1500.00</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>UPSERT INTO Accounts (account_id, account_name, balance) VALUES (1, 'John Doe', 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'John Doe', balance = 1500.00</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>upsert into accounts (account_id, account_name, balance) values (1, 'john doe', 1000.00) on conflict (account_id) do update set account_name = 'john doe', balance = 1500.00</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Transactions (transaction_id, amount, transaction_type, account_id) VALUES (1, 50.00, 'debit', 1) ON CONFLICT (transaction_id) DO UPDATE SET amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into transactions (transaction_id, amount, transaction_type, account_id) values (1, 50.00, 'debit', 1) on conflict (transaction_id) do update set amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Transactions (transaction_id, amount, transaction_type, account_id) VALUES (1, 50.00, 'debit', 1) ON CONFLICT (transaction_id) DO UPDATE SET amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into transactions (transaction_id, amount, transaction_type, account_id) values (1, 50.00, 'debit', 1) on conflict (transaction_id) do update set amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Transactions (transaction_id, amount, transaction_type, account_id) VALUES (1, 50.00, 'debit', 1) ON CONFLICT (transaction_id) DO UPDATE SET amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into transactions (transaction_id, amount, transaction_type, account_id) values (1, 50.00, 'debit', 1) on conflict (transaction_id) do update set amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>UPSERT INTO Transactions (transaction_id, amount, transaction_type, account_id) VALUES (1, 50.00, 'debit', 1) ON CONFLICT (transaction_id) DO UPDATE SET amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>upsert into transactions (transaction_id, amount, transaction_type, account_id) values (1, 50.00, 'debit', 1) on conflict (transaction_id) do update set amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Transactions (transaction_id, amount, transaction_type, account_id) VALUES (1, 50.00, 'debit', 1) ON CONFLICT (transaction_id) DO UPDATE SET amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into transactions (transaction_id, amount, transaction_type, account_id) values (1, 50.00, 'debit', 1) on conflict (transaction_id) do update set amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>UPSERT INTO Transactions (transaction_id, amount, transaction_type, account_id) VALUES (1, 50.00, 'debit', 1) ON CONFLICT (transaction_id) DO UPDATE SET amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>upsert into transactions (transaction_id, amount, transaction_type, account_id) values (1, 50.00, 'debit', 1) on conflict (transaction_id) do update set amount = 50.00, transaction_type = 'debit', account_id = 1</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Users (user_id, username, email, account_id) VALUES (1, 'johndoe', 'johndoe@example.com', 1) ON CONFLICT (user_id) DO UPDATE SET username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into users (user_id, username, email, account_id) values (1, 'johndoe', 'johndoe@example.com', 1) on conflict (user_id) do update set username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Users (user_id, username, email, account_id) VALUES (1, 'johndoe', 'johndoe@example.com', 1) ON CONFLICT (user_id) DO UPDATE SET username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into users (user_id, username, email, account_id) values (1, 'johndoe', 'johndoe@example.com', 1) on conflict (user_id) do update set username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Users (user_id, username, email, account_id) VALUES (1, 'johndoe', 'johndoe@example.com', 1) ON CONFLICT (user_id) DO UPDATE SET username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into users (user_id, username, email, account_id) values (1, 'johndoe', 'johndoe@example.com', 1) on conflict (user_id) do update set username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>UPSERT INTO Users (user_id, username, email, account_id) VALUES (1, 'johndoe', 'johndoe@example.com', 1) ON CONFLICT (user_id) DO UPDATE SET username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>upsert into users (user_id, username, email, account_id) values (1, 'johndoe', 'johndoe@example.com', 1) on conflict (user_id) do update set username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>UPSERT INTO Users (user_id, username, email, account_id) VALUES (1, 'johndoe', 'johndoe@example.com', 1) ON CONFLICT (user_id) DO UPDATE SET username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))</t><stat>upsert into users (user_id, username, email, account_id) values (1, 'johndoe', 'johndoe@example.com', 1) on conflict (user_id) do update set username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>UPSERT INTO Users (user_id, username, email, account_id) VALUES (1, 'johndoe', 'johndoe@example.com', 1) ON CONFLICT (user_id) DO UPDATE SET username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username TEXT, email TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, amount FLOAT, transaction_type TEXT, account_id INT, FOREIGN KEY (account_id) REFERENCES Accounts(account_id))

CREATE TABLE Accounts (account_id INT PRIMARY KEY, account_name TEXT, balance FLOAT)</t><stat>upsert into users (user_id, username, email, account_id) values (1, 'johndoe', 'johndoe@example.com', 1) on conflict (user_id) do update set username = 'johndoe', email = 'johndoe@example.com', account_id = 1</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO users (id, name, email, age) VALUES (1, 'John Doe', 'john.doe@example.com', 30) ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into users (id, name, email, age) values (1, 'john doe', 'john.doe@example.com', 30) on conflict (id) do update set name = 'john doe', email = 'john.doe@example.com', age = 30</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.00, '2022-01-01') on conflict (transaction_id) do update set user_id = 1, amount = 100.00, transaction_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>INSERT INTO accounts (account_number, user_id, balance, account_type) VALUES (12345, 1, 500.00, 'Savings') ON CONFLICT (account_number) DO UPDATE SET user_id = 1, balance = 500.00, account_type = 'Savings'</stat><divider><t>CREATE TABLE invoices (invoice_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), invoice_date DATE)

CREATE TABLE accounts (account_number INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2), account_type VARCHAR(50))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date DATE)

CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), age INT)</t><stat>insert into accounts (account_number, user_id, balance, account_type) values (12345, 1, 500.00, 'savings') on conflict (account_number) do update set user_id = 1, balance = 500.00, account_type = 'savings'</stat><divider><t>CREATE TABLE account (account_id INT PRIMARY KEY, account_name STRING)</t><stat>UPSERT INTO account (account_id, account_name) VALUES (1, 'John Doe')</stat><divider><t>CREATE TABLE account (account_id INT PRIMARY KEY, account_name STRING)</t><stat>upsert into account (account_id, account_name) values (1, 'john doe')</stat><divider><t>CREATE TABLE account (account_id INT PRIMARY KEY, account_name STRING)</t><stat>UPSERT INTO account (account_id, account_name) VALUES (2, 'Jane Smith')</stat><divider><t>CREATE TABLE account (account_id INT PRIMARY KEY, account_name STRING)</t><stat>upsert into account (account_id, account_name) values (2, 'jane smith')</stat><divider><t>CREATE TABLE account (account_id INT PRIMARY KEY, account_name STRING)</t><stat>UPSERT INTO account (account_id, account_name) VALUES (3, 'Alice Johnson')</stat><divider><t>CREATE TABLE account (account_id INT PRIMARY KEY, account_name STRING)</t><stat>upsert into account (account_id, account_name) values (3, 'alice johnson')</stat>