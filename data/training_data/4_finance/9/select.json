[
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, kpi_name FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name, value FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, value, date FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name FROM financial_kpis WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE value > 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(value) FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(value) FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(value) FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis ORDER BY value DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis ORDER BY date ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, kpi_name, value, date FROM financial_kpis WHERE id = 3 AND value < 50;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE value BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE kpi_name LIKE '%revenue%';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT kpi_name FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(value) FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE value > 100",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name, AVG(value) FROM financial_kpis GROUP BY kpi_name",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, kpi_name FROM financial_kpis WHERE DATE(date) = '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE kpi_name LIKE '%revenue%'",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(value), MIN(value) FROM financial_kpis",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name, SUM(value) FROM financial_kpis GROUP BY kpi_name HAVING SUM(value) > 1000",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM financial_kpis WHERE date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis ORDER BY value DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name, date FROM financial_kpis WHERE value > 500 ORDER BY date DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT kpi_name FROM financial_kpis",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE kpi_name = 'Profit Margin' AND date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, value FROM financial_kpis WHERE date < '2022-01-01' OR date > '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(value) AS average_value FROM financial_kpis",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE id IN (1, 3, 5)",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name, MAX(value) FROM financial_kpis GROUP BY kpi_name ORDER BY MAX(value) DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE value = (SELECT MAX(value) FROM financial_kpis)",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name, COUNT(*) AS num_records FROM financial_kpis GROUP BY kpi_name HAVING num_records > 5",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, kpi_name, value * 1.2 AS adjusted_value FROM financial_kpis",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE YEAR(date) = 2022",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(255),\n  value FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT kpi_name, COUNT(*) AS num_records FROM financial_kpis GROUP BY kpi_name ORDER BY num_records DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, kpi_name, value FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, kpi_name, date FROM financial_kpis;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_value FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_value, category FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, category FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE kpi_name = 'Revenue';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE value > 1000000;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE category = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_value < 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE category = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, kpi_name, value FROM financial_kpis WHERE value < 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, kpi_name, value FROM financial_kpis ORDER BY value DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, kpi_name, value FROM financial_kpis ORDER BY date ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_value FROM performance_metrics WHERE metric_value > 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_value FROM performance_metrics ORDER BY metric_value DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_value FROM performance_metrics WHERE category = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT kpi_name, AVG(value) AS average_value FROM financial_kpis GROUP BY kpi_name",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_count FROM performance_metrics WHERE metric_value > 100",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT id, metric_name, metric_value FROM performance_metrics WHERE category = 'Sales'",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT kpi_name, MAX(value) AS max_value FROM financial_kpis WHERE date > '2022-01-01' GROUP BY kpi_name",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, category FROM performance_metrics ORDER BY metric_value DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT kpi_name, SUM(value) AS total_value FROM financial_kpis WHERE date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY kpi_name",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis JOIN performance_metrics ON financial_kpis.id = performance_metrics.id",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT kpi_name, AVG(value) AS average_value FROM financial_kpis WHERE date > '2022-01-01' GROUP BY kpi_name",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_value FROM performance_metrics WHERE category = 'Marketing' AND metric_value < 50",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE kpi_name LIKE '%profit%'",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT MIN(value) AS min_value, MAX(value) AS max_value FROM financial_kpis",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT kpi_name, AVG(value) AS average_value FROM financial_kpis WHERE date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY kpi_name",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, category FROM performance_metrics WHERE metric_name IN ('Revenue', 'Expenses')",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM performance_metrics",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis WHERE date = (SELECT MAX(date) FROM financial_kpis)",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_value = (SELECT MAX(metric_value) FROM performance_metrics)",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT kpi_name, SUM(value) AS total_value FROM financial_kpis GROUP BY kpi_name HAVING total_value > 1000",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_value FROM performance_metrics WHERE category = 'Finance' ORDER BY metric_value ASC",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT * FROM financial_kpis JOIN performance_metrics USING (id)",
  "### TABLEDATA\n\nCREATE TABLE financial_kpis (\n    id INT PRIMARY KEY,\n    kpi_name STRING,\n    value FLOAT,\n    date TIMESTAMP\n);\n\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name STRING,\n    metric_value FLOAT,\n    category STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT kpi_name, MAX(value) AS max_value FROM financial_kpis GROUP BY kpi_name HAVING max_value > 500",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, value FROM financial_metrics WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, value FROM financial_metrics WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(value) AS total_value FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM kpi_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT kpi_name, target, actual, variance FROM kpi_metrics WHERE variance > 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(actual) AS avg_actual FROM kpi_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT employee_id, metric_name, score FROM performance_metrics WHERE employee_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT metric_name FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(score) AS max_score FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM kpi_metrics WHERE date <= '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE date >= '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, value FROM financial_metrics WHERE value > 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT metric_name, score FROM performance_metrics WHERE score < 3.0;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT kpi_name, variance FROM kpi_metrics WHERE variance IN (2.5, 5.0, 7.5);",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(target) AS max_target FROM kpi_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(score) AS min_score FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, value FROM financial_metrics WHERE value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, value FROM financial_metrics WHERE date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT kpi_name, target, actual FROM kpi_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM kpi_metrics WHERE variance < 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM kpi_metrics WHERE actual > target;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE score > 4.0;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT metric_name, score FROM performance_metrics WHERE employee_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics JOIN kpi_metrics ON financial_metrics.id = kpi_metrics.id;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics JOIN performance_metrics ON financial_metrics.date = performance_metrics.date;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, value, target, variance FROM financial_metrics JOIN kpi_metrics ON financial_metrics.id = kpi_metrics.id;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT employee_id, metric_name, score, date FROM performance_metrics WHERE score < 3.0;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, name, value FROM financial_metrics WHERE name LIKE 'P%';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT kpi_name, actual FROM kpi_metrics WHERE date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_name = 'Productivity';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, value, date FROM financial_metrics ORDER BY date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, kpi_name, target FROM kpi_metrics ORDER BY target DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT employee_id, MAX(score) AS max_score FROM performance_metrics GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(value) AS avg_value, MAX(value) AS max_value FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  value DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE kpi_metrics (\n  id INT PRIMARY KEY,\n  kpi_name VARCHAR(50) NOT NULL,\n  target DECIMAL(10,2) NOT NULL,\n  actual DECIMAL(10,2) NOT NULL,\n  variance DECIMAL(10,2) NOT NULL,\n  date DATE NOT NULL\n);\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  employee_id INT NOT NULL,\n  metric_name VARCHAR(50) NOT NULL,\n  score DECIMAL(5,2) NOT NULL,\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS count_metrics FROM performance_metrics WHERE score > 4.0;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT link_id, dashboard_name FROM dashboard_links;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE metric_name LIKE 'Revenue%';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM dashboard_links WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE timestamp < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT role FROM users;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE role IN ('admin', 'manager');",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM dashboard_links WHERE link_url LIKE '%dashboard%';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics ORDER BY metric_value DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM performance_metrics ORDER BY timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_links FROM dashboard_links GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT SUM(metric_value) AS total_revenue FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT AVG(metric_value) AS avg_metric_value FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_metrics FROM performance_metrics GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE metric_value > 100",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT metric_name, timestamp FROM financial_metrics WHERE metric_name LIKE 'Revenue%' ORDER BY timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-28'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'admin' ORDER BY username",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE email LIKE '%@example.com'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM dashboard_links WHERE user_id = 123",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT dashboard_name, link_url FROM dashboard_links WHERE user_id = 456 AND dashboard_name = 'Sales'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics fm JOIN performance_metrics pm ON fm.id = pm.id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT u.username, d.dashboard_name FROM users u JOIN dashboard_links d ON u.user_id = d.user_id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM financial_metrics",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT AVG(metric_value) AS avg_value FROM performance_metrics",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT MAX(metric_value) AS max_value FROM performance_metrics WHERE metric_name = 'Profit'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT MIN(metric_value) AS min_value FROM performance_metrics WHERE metric_name = 'Loss'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS link_count FROM dashboard_links GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT metric_name FROM financial_metrics",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT SUM(metric_value) AS total_value FROM financial_metrics",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE metric_name IN ('Revenue', 'Expense')",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE role IN ('admin', 'manager')",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM dashboard_links WHERE dashboard_name != 'Sales'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE TIMESTAMPDIFF(DAY, timestamp, NOW()) < 30",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE performance_metrics (\n  id INT PRIMARY KEY,\n  metric_name VARCHAR(50),\n  metric_value DECIMAL(10, 2),\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  role VARCHAR(20)\n)\n\nCREATE TABLE dashboard_links (\n  link_id INT PRIMARY KEY,\n  user_id INT,\n  dashboard_name VARCHAR(50),\n  link_url VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE timestamp >= '2022-05-01'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, name FROM performance_metrics WHERE metric_value > 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM dashboard_metrics WHERE metric_name = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM user_metrics WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT dashboard_id, role FROM dashboard_users WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, name, value FROM financial_metrics WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_value < 50;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM dashboard_metrics WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM user_metrics WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_metrics WHERE username LIKE '%smith%';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE value > 500;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, metric_name FROM performance_metrics WHERE metric_name IN ('Sales', 'Marketing');",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM dashboard_metrics WHERE metric_id = 10 AND metric_value < 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM user_metrics WHERE user_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT dashboard_id, role FROM dashboard_users WHERE role = 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, name, value FROM financial_metrics ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_value BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM dashboard_metrics WHERE timestamp BETWEEN '2022-01-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM user_metrics WHERE email = 'jane_doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_metrics WHERE user_id > 500;",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE value > 100",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, value FROM financial_metrics WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM performance_metrics WHERE metric_value < 0",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_name LIKE '%sales%'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT metric_name, AVG(metric_value) FROM performance_metrics GROUP BY metric_name",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM dashboard_metrics WHERE timestamp >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_metrics WHERE username = 'john_doe'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM dashboard_users WHERE role = 'admin'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, dashboard_id, role FROM dashboard_users ORDER BY dashboard_id DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics JOIN performance_metrics ON financial_metrics.id = performance_metrics.id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics LEFT JOIN performance_metrics ON financial_metrics.id = performance_metrics.id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics RIGHT JOIN performance_metrics ON financial_metrics.id = performance_metrics.id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics INNER JOIN performance_metrics ON financial_metrics.id = performance_metrics.id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics JOIN dashboard_metrics ON financial_metrics.id = dashboard_metrics.metric_id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM user_metrics INNER JOIN dashboard_users ON user_metrics.user_id = dashboard_users.user_id",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE value BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_metrics WHERE email LIKE '%@example.com'",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM performance_metrics",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT metric_name, MAX(metric_value) FROM performance_metrics GROUP BY metric_name HAVING MAX(metric_value) > 100",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) FROM dashboard_users",
  "### TABLEDATA\n\nCREATE TABLE financial_metrics (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    value FLOAT\n);\n\nCREATE TABLE performance_metrics (\n    id INT PRIMARY KEY,\n    metric_name VARCHAR,\n    metric_value FLOAT\n);\n\nCREATE TABLE dashboard_metrics (\n    id INT PRIMARY KEY,\n    metric_id INT,\n    metric_name VARCHAR,\n    metric_value FLOAT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE user_metrics (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE dashboard_users (\n    user_id INT,\n    dashboard_id INT,\n    role VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(value) FROM financial_metrics"
]