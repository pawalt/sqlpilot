[
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (1, 'Alice', 'alice@example.com', '1234567890', '1234 Main St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (2, 'Bob', 'bob@example.com', '0987654321', '5678 Elm St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (3, 'Charlie', 'charlie@example.com', '9876543210', '91011 Oak St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (4, 'David', 'david@example.com', '5432167890', '1213 Maple St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (5, 'Eve', 'eve@example.com', '6789012345', '1415 Pine St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (6, 'Fiona', 'fiona@example.com', '4567890123', '1617 Cedar St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (7, 'George', 'george@example.com', '2345678901', '1819 Birch St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (8, 'Hannah', 'hannah@example.com', '8901234567', '2021 Walnut St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (9, 'Ian', 'ian@example.com', '5678901234', '2223 Ash St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (10, 'Jack', 'jack@example.com', '3456789012', '2425 Cedar St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (11, 'Kate', 'kate@example.com', '1234567890', '2627 Oak St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (12, 'Liam', 'liam@example.com', '0987654321', '2829 Elm St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (13, 'Mary', 'mary@example.com', '9876543210', '3031 Maple St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (14, 'Nick', 'nick@example.com', '5432167890', '3233 Pine St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (15, 'Olivia', 'olivia@example.com', '6789012345', '3435 Cedar St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (16, 'Peter', 'peter@example.com', '4567890123', '3637 Birch St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (17, 'Quinn', 'quinn@example.com', '2345678901', '3839 Walnut St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (18, 'Rachel', 'rachel@example.com', '8901234567', '4041 Ash St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (19, 'Sam', 'sam@example.com', '5678901234', '4243 Cedar St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nUPSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (20, 'Tom', 'tom@example.com', '3456789012', '4445 Oak St')",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890', '1234 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456-789-0123', '5678 Oak Ave');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '789-012-3456', '9012 Maple Rd');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (4, 'Bob Brown', 'bob.brown@example.com', '012-345-6789', '3456 Pine St');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (5, 'Emily Davis', 'emily.davis@example.com', '234-567-8901', '7890 Birch Ave');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (6, 'Michael Wilson', 'michael.wilson@example.com', '567-890-1234', '9012 Cedar Rd');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (7, 'Sarah Miller', 'sarah.miller@example.com', '890-123-4567', '1234 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (8, 'David Anderson', 'david.anderson@example.com', '123-456-7890', '5678 Oak Ave');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (9, 'Laura Thompson', 'laura.thompson@example.com', '456-789-0123', '9012 Maple Rd');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (10, 'Steven Carter', 'steven.carter@example.com', '789-012-3456', '3456 Pine St');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (11, 'Rachel White', 'rachel.white@example.com', '012-345-6789', '7890 Birch Ave');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (12, 'Kevin Harris', 'kevin.harris@example.com', '234-567-8901', '9012 Cedar Rd');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (13, 'Olivia Martinez', 'olivia.martinez@example.com', '567-890-1234', '1234 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (14, 'Daniel Young', 'daniel.young@example.com', '890-123-4567', '5678 Oak Ave');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (15, 'Megan Lee', 'megan.lee@example.com', '123-456-7890', '9012 Maple Rd');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (16, 'Ethan Johnson', 'ethan.johnson@example.com', '456-789-0123', '3456 Pine St');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (17, 'Sophia Brown', 'sophia.brown@example.com', '789-012-3456', '7890 Birch Ave');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (18, 'James Davis', 'james.davis@example.com', '012-345-6789', '9012 Cedar Rd');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (19, 'Ava Wilson', 'ava.wilson@example.com', '234-567-8901', '1234 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(255)\n)\n\n### STATEMENT\n\nINSERT INTO customer_information (customer_id, customer_name, customer_email, customer_phone, customer_address) VALUES (20, 'Jack Smith', 'jack.smith@example.com', '567-890-1234', '5678 Oak Ave');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '555-1234') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='555-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '555-5678') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', customer_email='jane.smith@example.com', customer_phone='555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '555-9012') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', customer_email='alice.johnson@example.com', customer_phone='555-9012';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (4, 'Bob Williams', 'bob.williams@example.com', '555-3456') ON DUPLICATE KEY UPDATE customer_name='Bob Williams', customer_email='bob.williams@example.com', customer_phone='555-3456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (5, 'Emily Brown', 'emily.brown@example.com', '555-7890') ON DUPLICATE KEY UPDATE customer_name='Emily Brown', customer_email='emily.brown@example.com', customer_phone='555-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (6, 'Michael Davis', 'michael.davis@example.com', '555-2345') ON DUPLICATE KEY UPDATE customer_name='Michael Davis', customer_email='michael.davis@example.com', customer_phone='555-2345';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (7, 'Sarah Wilson', 'sarah.wilson@example.com', '555-6789') ON DUPLICATE KEY UPDATE customer_name='Sarah Wilson', customer_email='sarah.wilson@example.com', customer_phone='555-6789';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (8, 'David Lee', 'david.lee@example.com', '555-1234') ON DUPLICATE KEY UPDATE customer_name='David Lee', customer_email='david.lee@example.com', customer_phone='555-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (9, 'Emma Anderson', 'emma.anderson@example.com', '555-5678') ON DUPLICATE KEY UPDATE customer_name='Emma Anderson', customer_email='emma.anderson@example.com', customer_phone='555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (10, 'James Moore', 'james.moore@example.com', '555-9012') ON DUPLICATE KEY UPDATE customer_name='James Moore', customer_email='james.moore@example.com', customer_phone='555-9012';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (11, 'Olivia Clark', 'olivia.clark@example.com', '555-3456') ON DUPLICATE KEY UPDATE customer_name='Olivia Clark', customer_email='olivia.clark@example.com', customer_phone='555-3456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (12, 'William Turner', 'william.turner@example.com', '555-7890') ON DUPLICATE KEY UPDATE customer_name='William Turner', customer_email='william.turner@example.com', customer_phone='555-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (13, 'Sophia Rodriguez', 'sophia.rodriguez@example.com', '555-2345') ON DUPLICATE KEY UPDATE customer_name='Sophia Rodriguez', customer_email='sophia.rodriguez@example.com', customer_phone='555-2345';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (14, 'Daniel Martinez', 'daniel.martinez@example.com', '555-6789') ON DUPLICATE KEY UPDATE customer_name='Daniel Martinez', customer_email='daniel.martinez@example.com', customer_phone='555-6789';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (15, 'Ava Hernandez', 'ava.hernandez@example.com', '555-1234') ON DUPLICATE KEY UPDATE customer_name='Ava Hernandez', customer_email='ava.hernandez@example.com', customer_phone='555-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (16, 'Benjamin Young', 'benjamin.young@example.com', '555-5678') ON DUPLICATE KEY UPDATE customer_name='Benjamin Young', customer_email='benjamin.young@example.com', customer_phone='555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (17, 'Mia King', 'mia.king@example.com', '555-9012') ON DUPLICATE KEY UPDATE customer_name='Mia King', customer_email='mia.king@example.com', customer_phone='555-9012';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (18, 'Elijah Garcia', 'elijah.garcia@example.com', '555-3456') ON DUPLICATE KEY UPDATE customer_name='Elijah Garcia', customer_email='elijah.garcia@example.com', customer_phone='555-3456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (19, 'Victoria Lopez', 'victoria.lopez@example.com', '555-7890') ON DUPLICATE KEY UPDATE customer_name='Victoria Lopez', customer_email='victoria.lopez@example.com', customer_phone='555-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (20, 'Luke Adams', 'luke.adams@example.com', '555-2345') ON DUPLICATE KEY UPDATE customer_name='Luke Adams', customer_email='luke.adams@example.com', customer_phone='555-2345';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'Alice', 'alice@example.com', '1234567890') ON DUPLICATE KEY UPDATE customer_name = 'Alice', customer_email = 'alice@example.com', customer_phone = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (2, 'Bob', 'bob@example.com', '9876543210') ON DUPLICATE KEY UPDATE customer_name = 'Bob', customer_email = 'bob@example.com', customer_phone = '9876543210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (1, 1, '2021-10-20 12:00:00', 100.50, 'purchase') ON DUPLICATE KEY UPDATE customer_id = 1, transaction_date = '2021-10-20 12:00:00', amount = 100.50, transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (2, 2, '2021-10-21 10:30:00', 75.20, 'refund') ON DUPLICATE KEY UPDATE customer_id = 2, transaction_date = '2021-10-21 10:30:00', amount = 75.20, transaction_type = 'refund';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (3, 'Charlie', 'charlie@example.com', '6789012345') ON DUPLICATE KEY UPDATE customer_name = 'Charlie', customer_email = 'charlie@example.com', customer_phone = '6789012345';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (3, 3, '2021-10-22 08:45:00', 150.75, 'purchase') ON DUPLICATE KEY UPDATE customer_id = 3, transaction_date = '2021-10-22 08:45:00', amount = 150.75, transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (4, 'David', 'david@example.com', '3456789012') ON DUPLICATE KEY UPDATE customer_name = 'David', customer_email = 'david@example.com', customer_phone = '3456789012';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (4, 4, '2021-10-23 15:20:00', 200.30, 'purchase') ON DUPLICATE KEY UPDATE customer_id = 4, transaction_date = '2021-10-23 15:20:00', amount = 200.30, transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (5, 'Eve', 'eve@example.com', '9012345678') ON DUPLICATE KEY UPDATE customer_name = 'Eve', customer_email = 'eve@example.com', customer_phone = '9012345678';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (5, 5, '2021-10-24 11:10:00', 50.60, 'refund') ON DUPLICATE KEY UPDATE customer_id = 5, transaction_date = '2021-10-24 11:10:00', amount = 50.60, transaction_type = 'refund';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (6, 'Frank', 'frank@example.com', '4567890123') ON DUPLICATE KEY UPDATE customer_name = 'Frank', customer_email = 'frank@example.com', customer_phone = '4567890123';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (6, 6, '2021-10-25 09:25:00', 300.40, 'purchase') ON DUPLICATE KEY UPDATE customer_id = 6, transaction_date = '2021-10-25 09:25:00', amount = 300.40, transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (7, 'Grace', 'grace@example.com', '0123456789') ON DUPLICATE KEY UPDATE customer_name = 'Grace', customer_email = 'grace@example.com', customer_phone = '0123456789';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (7, 7, '2021-10-26 13:35:00', 75.90, 'purchase') ON DUPLICATE KEY UPDATE customer_id = 7, transaction_date = '2021-10-26 13:35:00', amount = 75.90, transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (8, 'Helen', 'helen@example.com', '7890123456') ON DUPLICATE KEY UPDATE customer_name = 'Helen', customer_email = 'helen@example.com', customer_phone = '7890123456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (8, 8, '2021-10-27 06:40:00', 100.25, 'refund') ON DUPLICATE KEY UPDATE customer_id = 8, transaction_date = '2021-10-27 06:40:00', amount = 100.25, transaction_type = 'refund';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (9, 'Isabel', 'isabel@example.com', '6543210987') ON DUPLICATE KEY UPDATE customer_name = 'Isabel', customer_email = 'isabel@example.com', customer_phone = '6543210987';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (9, 9, '2021-10-28 14:50:00', 150.30, 'purchase') ON DUPLICATE KEY UPDATE customer_id = 9, transaction_date = '2021-10-28 14:50:00', amount = 150.30, transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (10, 'Jack', 'jack@example.com', '2345678901') ON DUPLICATE KEY UPDATE customer_name = 'Jack', customer_email = 'jack@example.com', customer_phone = '2345678901';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  customer_phone VARCHAR(20)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date TIMESTAMP,\n  amount FLOAT,\n  transaction_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, transaction_type) VALUES (10, 10, '2021-10-29 10:55:00', 50.80, 'refund') ON DUPLICATE KEY UPDATE customer_id = 10, transaction_date = '2021-10-29 10:55:00', amount = 50.80, transaction_type = 'refund';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, first_name, last_name, email, phone_number) VALUES (1, 'Alice', 'Smith', 'alice@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name='Alice', last_name='Smith', email='alice@example.com', phone_number='1234567890';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, first_name, last_name, email, phone_number) VALUES (2, 'Bob', 'Johnson', 'bob@example.com', '9876543210') ON CONFLICT (customer_id) DO UPDATE SET first_name='Bob', last_name='Johnson', email='bob@example.com', phone_number='9876543210';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, first_name, last_name, email, phone_number) VALUES (3, 'Charlie', 'Davis', 'charlie@example.com', '2468101214') ON CONFLICT (customer_id...",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com', '9876543210') ON DUPLICATE KEY UPDATE first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '9876543210';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (101, 1, 'Savings', 5000.00) ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (102, 2, 'Checking', 3000.00) ON DUPLICATE KEY UPDATE customer_id = 2, account_type = 'Checking', balance = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1001, 101, 'Deposit', 1000.00, '2022-03-15 10:30:00') ON DUPLICATE KEY UPDATE account_id = 101, transaction_type = 'Deposit', amount = 1000.00, transaction_date = '2022-03-15 10:30:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1002, 102, 'Withdrawal', 500.00, '2022-03-16 14:45:00') ON DUPLICATE KEY UPDATE account_id = 102, transaction_type = 'Withdrawal', amount = 500.00, transaction_date = '2022-03-16 14:45:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (3, 'Alice', 'Johnson', 'alice.johnson@example.com', '5551234567') ON DUPLICATE KEY UPDATE first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com', phone_number = '5551234567';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (103, 3, 'Savings', 7500.00) ON DUPLICATE KEY UPDATE customer_id = 3, account_type = 'Savings', balance = 7500.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1003, 103, 'Deposit', 2000.00, '2022-03-17 12:15:00') ON DUPLICATE KEY UPDATE account_id = 103, transaction_type = 'Deposit', amount = 2000.00, transaction_date = '2022-03-17 12:15:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (4, 'Bob', 'Brown', 'bob.brown@example.com', '9998887777') ON DUPLICATE KEY UPDATE first_name = 'Bob', last_name = 'Brown', email = 'bob.brown@example.com', phone_number = '9998887777';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (104, 4, 'Checking', 4000.00) ON DUPLICATE KEY UPDATE customer_id = 4, account_type = 'Checking', balance = 4000.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1004, 104, 'Withdrawal', 1000.00, '2022-03-18 08:45:00') ON DUPLICATE KEY UPDATE account_id = 104, transaction_type = 'Withdrawal', amount = 1000.00, transaction_date = '2022-03-18 08:45:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (5, 'Eve', 'Parker', 'eve.parker@example.com', '7776665555') ON DUPLICATE KEY UPDATE first_name = 'Eve', last_name = 'Parker', email = 'eve.parker@example.com', phone_number = '7776665555';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (105, 5, 'Savings', 6000.00) ON DUPLICATE KEY UPDATE customer_id = 5, account_type = 'Savings', balance = 6000.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1005, 105, 'Deposit', 3000.00, '2022-03-19 15:30:00') ON DUPLICATE KEY UPDATE account_id = 105, transaction_type = 'Deposit', amount = 3000.00, transaction_date = '2022-03-19 15:30:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (6, 'Grace', 'Evans', 'grace.evans@example.com', '3332221111') ON DUPLICATE KEY UPDATE first_name = 'Grace', last_name = 'Evans', email = 'grace.evans@example.com', phone_number = '3332221111';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (106, 6, 'Checking', 9000.00) ON DUPLICATE KEY UPDATE customer_id = 6, account_type = 'Checking', balance = 9000.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type VARCHAR(50),\n    balance DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n)\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)\n)\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1006, 106, 'Withdrawal', 2000.00, '2022-03-20 09:45:00') ON DUPLICATE KEY UPDATE account_id = 106, transaction_type = 'Withdrawal', amount = 2000.00, transaction_date = '2022-03-20 09:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (1, 'John', 'Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (3, 'Alice', 'Johnson', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (4, 'Bob', 'Brown', 'bob.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Bob', last_name = 'Brown', email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (5, 'Emily', 'Miller', 'emily.miller@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Emily', last_name = 'Miller', email = 'emily.miller@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (1, 'Savings', 1000.00) ON CONFLICT (customer_id) DO UPDATE SET account_type = 'Savings', balance = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (2, 'Checking', 500.50) ON CONFLICT (customer_id) DO UPDATE SET account_type = 'Checking', balance = 500.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (3, 'Investment', 2000.00) ON CONFLICT (customer_id) DO UPDATE SET account_type = 'Investment', balance = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (4, 'Savings', 1500.75) ON CONFLICT (customer_id) DO UPDATE SET account_type = 'Savings', balance = 1500.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (5, 'Checking', 750.25) ON CONFLICT (customer_id) DO UPDATE SET account_type = 'Checking', balance = 750.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (1, 100.00, '2022-01-15') ON CONFLICT (account_id) DO UPDATE SET amount = 100.00, transaction_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (2, 50.25, '2022-02-20') ON CONFLICT (account_id) DO UPDATE SET amount = 50.25, transaction_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (3, 200.50, '2022-03-25') ON CONFLICT (account_id) DO UPDATE SET amount = 200.50, transaction_date = '2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (4, 75.75, '2022-04-30') ON CONFLICT (account_id) DO UPDATE SET amount = 75.75, transaction_date = '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (5, 125.25, '2022-05-05') ON CONFLICT (account_id) DO UPDATE SET amount = 125.25, transaction_date = '2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (1, 'Stocks', 500.00) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Stocks', investment_amount = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (2, 'Bonds', 1000.50) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Bonds', investment_amount = 1000.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (3, 'Real Estate', 1500.75) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Real Estate', investment_amount = 1500.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (4, 'Mutual Funds', 2000.25) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Mutual Funds', investment_amount = 2000.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (5, 'ETFs', 2500.50) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'ETFs', investment_amount = 2500.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (1, 'John', 'Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 1, account_type = 'Savings', balance = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (1, 100.00, '2022-01-15') ON CONFLICT (account_id) DO UPDATE SET amount = 100.00, transaction_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (1, 'Stocks', 500.00) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Stocks', investment_amount = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (2, 'Alice', 'Smith', 'alice.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (2, 2, 'Checking', 500.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 2, account_type = 'Checking', balance = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (2, 50.00, '2022-01-20') ON CONFLICT (account_id) DO UPDATE SET amount = 50.00, transaction_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (2, 'Bonds', 1000.00) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Bonds', investment_amount = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (3, 'Michael', 'Johnson', 'michael.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Michael', last_name = 'Johnson', email = 'michael.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (3, 3, 'Investment', 2000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 3, account_type = 'Investment', balance = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (3, 200.00, '2022-01-25') ON CONFLICT (account_id) DO UPDATE SET amount = 200.00, transaction_date = '2022-01-25';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (3, 'Mutual Funds', 1500.00) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Mutual Funds', investment_amount = 1500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (4, 'Emily', 'Brown', 'emily.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Emily', last_name = 'Brown', email = 'emily.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (4, 4, 'Savings', 1500.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 4, account_type = 'Savings', balance = 1500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (4, 150.00, '2022-01-30') ON CONFLICT (account_id) DO UPDATE SET amount = 150.00, transaction_date = '2022-01-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (4, 'Real Estate', 2000.00) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Real Estate', investment_amount = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES (5, 'David', 'Miller', 'david.miller@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'David', last_name = 'Miller', email = 'david.miller@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (5, 5, 'Checking', 2000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 5, account_type = 'Checking', balance = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, amount, transaction_date) VALUES (5, 250.00, '2022-02-05') ON CONFLICT (account_id) DO UPDATE SET amount = 250.00, transaction_date = '2022-02-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(50) NOT NULL,\n    balance DECIMAL(15, 2) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    amount DECIMAL(15, 2) NOT NULL,\n    transaction_date DATE NOT NULL\n);\n\nCREATE TABLE investments (\n    investment_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    investment_type VARCHAR(50) NOT NULL,\n    investment_amount DECIMAL(15, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO investments (account_id, investment_type, investment_amount) VALUES (5, 'Cryptocurrency', 3000.00) ON CONFLICT (account_id) DO UPDATE SET investment_type = 'Cryptocurrency', investment_amount = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (1, 'John Doe', '123 Main St', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', address = '123 Main St', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 100.00, '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 100.00, transaction_date = '2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO investments (investment_id, customer_id, investment_type, investment_amount) VALUES (1, 1, 'Stocks', 5000.00) ON DUPLICATE KEY UPDATE customer_id = 1, investment_type = 'Stocks', investment_amount = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, position, department) VALUES (1, 'Alice Smith', 'Manager', 'Finance') ON DUPLICATE KEY UPDATE employee_name = 'Alice Smith', position = 'Manager', department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (2, 'Jane Smith', '456 Oak St', '456-789-0123') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', address = '456 Oak St', phone_number = '456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (2, 2, 'Checking', 2000.00) ON DUPLICATE KEY UPDATE customer_id = 2, account_type = 'Checking', balance = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (2, 2, 'Withdrawal', 500.00, '2022-01-02 12:00:00') ON DUPLICATE KEY UPDATE account_id = 2, transaction_type = 'Withdrawal', amount = 500.00, transaction_date = '2022-01-02 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO investments (investment_id, customer_id, investment_type, investment_amount) VALUES (2, 2, 'Bonds', 3000.00) ON DUPLICATE KEY UPDATE customer_id = 2, investment_type = 'Bonds', investment_amount = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, position, department) VALUES (2, 'Bob Johnson', 'Analyst', 'Marketing') ON DUPLICATE KEY UPDATE employee_name = 'Bob Johnson', position = 'Analyst', department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (3, 'Mary Brown', '789 Pine St', '789-012-3456') ON DUPLICATE KEY UPDATE customer_name = 'Mary Brown', address = '789 Pine St', phone_number = '789-012-3456';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (3, 3, 'Investment', 5000.00) ON DUPLICATE KEY UPDATE customer_id = 3, account_type = 'Investment', balance = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (3, 3, 'Transfer', 1000.00, '2022-01-03 15:00:00') ON DUPLICATE KEY UPDATE account_id = 3, transaction_type = 'Transfer', amount = 1000.00, transaction_date = '2022-01-03 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO investments (investment_id, customer_id, investment_type, investment_amount) VALUES (3, 3, 'Real Estate', 10000.00) ON DUPLICATE KEY UPDATE customer_id = 3, investment_type = 'Real Estate', investment_amount = 10000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, position, department) VALUES (3, 'Karen Lee', 'Consultant', 'Human Resources') ON DUPLICATE KEY UPDATE employee_name = 'Karen Lee', position = 'Consultant', department = 'Human Resources';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (4, 'Tom Wilson', '555 Elm St', '555-678-9012') ON DUPLICATE KEY UPDATE customer_name = 'Tom Wilson', address = '555 Elm St', phone_number = '555-678-9012';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (4, 4, 'Credit Card', 500.00) ON DUPLICATE KEY UPDATE customer_id = 4, account_type = 'Credit Card', balance = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (4, 4, 'Payment', 200.00, '2022-01-04 09:00:00') ON DUPLICATE KEY UPDATE account_id = 4, transaction_type = 'Payment', amount = 200.00, transaction_date = '2022-01-04 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO investments (investment_id, customer_id, investment_type, investment_amount) VALUES (4, 4, 'Mutual Funds', 2000.00) ON DUPLICATE KEY UPDATE customer_id = 4, investment_type = 'Mutual Funds', investment_amount = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, position, department) VALUES (4, 'Sam Wong', 'Developer', 'Engineering') ON DUPLICATE KEY UPDATE employee_name = 'Sam Wong', position = 'Developer', department = 'Engineering';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (1, 'Alice', '123 Main St', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice', address = '123 Main St', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 1, account_type = 'Savings', balance = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-01 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 1, transaction_type = 'Deposit', amount = 500.00, transaction_date = '2022-01-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO investments (investment_id, customer_id, investment_type, investment_amount) VALUES (1, 1, 'Stocks', 5000.00) ON CONFLICT (investment_id) DO UPDATE SET customer_id = 1, investment_type = 'Stocks', investment_amount = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, position, department) VALUES (1, 'Bob', 'Manager', 'Finance') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Bob', position = 'Manager', department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (2, 'Bob', '456 Oak St', '987-654-3210') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', address = '456 Oak St', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, balance) VALUES (2, 2, 'Checking', 2000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 2, account_type = 'Checking', balance = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (2, 2, 'Withdrawal', 1000.00, '2022-01-02 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 2, transaction_type = 'Withdrawal', amount = 1000.00, transaction_date = '2022-01-02 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO investments (investment_id, customer_id, investment_type, investment_amount) VALUES (2, 2, 'Bonds', 3000.00) ON CONFLICT (investment_id) DO UPDATE SET customer_id = 2, investment_type = 'Bonds', investment_amount = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15));\n\nCREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10,2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id));\n\nCREATE TABLE investments (investment_id INT PRIMARY KEY, customer_id INT, investment_type VARCHAR(50), investment_amount DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), position VARCHAR(50), department VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, position, department) VALUES (2, 'Alice', 'Clerk', 'Human Resources') ON CONFLICT (employee_id) DO UPDATE SET employee_name = 'Alice', position = 'Clerk', department = 'Human Resources';"
]