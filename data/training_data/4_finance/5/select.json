[
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM stock_market_data WHERE stock_symbol='AAPL';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT company_name, stock_price FROM stock_market_data WHERE stock_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(stock_price) FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(stock_price) FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(stock_price) FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(market_cap) FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT company_name, volume FROM stock_market_data WHERE trading_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM stock_market_data ORDER BY stock_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT stock_symbol, market_cap FROM stock_market_data WHERE company_name LIKE 'Apple%';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT company_name FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT company_name, trading_date FROM stock_market_data WHERE market_cap > 1000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM stock_market_data WHERE volume BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT company_name, stock_price FROM stock_market_data WHERE trading_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM stock_market_data WHERE stock_symbol IN ('AAPL', 'GOOGL', 'MSFT');",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(stock_price), MAX(market_cap) FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT company_name, trading_date FROM stock_market_data WHERE trading_date BETWEEN '2022-01-01' AND '2022-01-31' ORDER BY trading_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM stock_market_data WHERE stock_price < 50 AND volume > 5000;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT company_name, volume FROM stock_market_data WHERE volume > (SELECT AVG(volume) FROM stock_market_data);",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM stock_market_data WHERE stock_price > 100 AND volume > 1000000",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT stock_symbol, company_name, stock_price FROM stock_market_data WHERE market_cap > 1000000000",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT stock_symbol, company_name FROM stock_market_data WHERE market_cap > 500000000 AND trading_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT stock_symbol, company_name, market_cap FROM stock_market_data WHERE trading_date BETWEEN '2022-01-01' AND '2022-06-30' AND stock_price BETWEEN 50 AND 200",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM stock_market_data",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(stock_price) AS avg_price FROM stock_market_data WHERE trading_date = '2022-07-15'",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(stock_price) AS max_price, MIN(stock_price) AS min_price FROM stock_market_data WHERE trading_date = '2022-07-15'",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT company_name, SUM(volume) AS total_volume FROM stock_market_data GROUP BY company_name HAVING total_volume > 1000000",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT stock_symbol, company_name, trading_date FROM stock_market_data WHERE company_name LIKE '%Corp%'",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nSELECT stock_symbol, company_name, trading_date FROM stock_market_data ORDER BY trading_date DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_symbol FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, stock_price FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_price, market_capitalization FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_id, trend_description FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_description, trend_start_date FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_id, trend_start_date, trend_end_date FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_symbol, stock_price FROM stock_data WHERE stock_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends WHERE trend_description LIKE '%trend%';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, stock_price FROM stock_data WHERE stock_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_data WHERE market_capitalization < 1000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_data ORDER BY stock_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends ORDER BY trend_start_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(stock_price) AS average_price FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(stock_price) AS max_price FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(stock_price) AS min_price FROM stock_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, COUNT(*) AS total_trends FROM stock_data INNER JOIN market_trends ON stock_data.stock_id = market_trends.trend_id GROUP BY stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, AVG(stock_price) AS average_price FROM stock_data GROUP BY stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_data WHERE stock_price > 100",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_symbol, stock_price FROM stock_data WHERE market_capitalization > 1000000",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(stock_price) AS average_price FROM stock_data WHERE stock_symbol LIKE 'AAPL%'",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_symbol, stock_price FROM stock_data JOIN market_trends ON stock_data.stock_id = market_trends.trend_id",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, SUM(stock_price) AS total_price FROM stock_data GROUP BY stock_symbol HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_description, COUNT(*) AS total_count FROM market_trends GROUP BY trend_description ORDER BY total_count DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_data WHERE stock_symbol IN ('GOOG', 'MSFT') AND stock_price < 500",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT stock_symbol FROM stock_data",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_id AS ID, stock_symbol AS Symbol, stock_price AS Price FROM stock_data",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_data WHERE stock_price BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(stock_price) AS highest_price FROM stock_data",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, AVG(market_capitalization) AS avg_market_cap FROM stock_data GROUP BY stock_symbol",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends WHERE trend_start_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_description, trend_start_date FROM market_trends WHERE trend_end_date < '2023-01-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, SUM(market_capitalization) AS total_market_cap FROM stock_data GROUP BY stock_symbol HAVING total_market_cap > 10000000",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_data WHERE stock_price = (SELECT MAX(stock_price) FROM stock_data)",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_symbol, stock_price FROM stock_data WHERE stock_price = (SELECT MIN(stock_price) FROM stock_data)",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT stock_symbol, COUNT(*) AS stock_count FROM stock_data GROUP BY stock_symbol HAVING stock_count > 2",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(stock_price) AS avg_price FROM stock_data UNION SELECT AVG(market_capitalization) AS avg_cap FROM stock_data",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends WHERE trend_description LIKE '%uptrend%'",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, stock_name FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, market_cap FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT decision_id, stock_symbol, decision_date FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, decision_type FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM trend_analysis;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT analysis_id, stock_symbol, analysis_date FROM trend_analysis;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, trend FROM trend_analysis;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_name, stock_price FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, decision_type, decision_date FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, analysis_date, trend FROM trend_analysis;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_name, market_cap, stock_price FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, decision_type, analysis_date FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, market_cap, stock_price FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT decision_id, decision_type, decision_date FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT analysis_id, trend, analysis_date FROM trend_analysis;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, decision_type, trend FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_name, decision_type, trend FROM investment_decisions;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_price, market_cap FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM stock_market_data;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, stock_price FROM stock_market_data WHERE market_cap > 1000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, stock_name, market_cap, stock_price FROM stock_market_data WHERE stock_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT decision_id, stock_symbol, decision_date, decision_type FROM investment_decisions WHERE decision_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT decision_id, stock_symbol, decision_date, decision_type FROM investment_decisions WHERE decision_type = 'Buy';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT analysis_id, stock_symbol, analysis_date, trend FROM trend_analysis WHERE analysis_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT analysis_id, stock_symbol, analysis_date, trend FROM trend_analysis WHERE trend = 'Upward';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_market_data.stock_symbol, stock_market_data.stock_name, investment_decisions.decision_date FROM stock_market_data JOIN investment_decisions ON stock_market_data.stock_symbol = investment_decisions.stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_market_data.stock_symbol, stock_market_data.stock_name, investment_decisions.decision_date FROM stock_market_data LEFT JOIN investment_decisions ON stock_market_data.stock_symbol = investment_decisions.stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_market_data.stock_symbol, stock_market_data.stock_name, investment_decisions.decision_date FROM stock_market_data RIGHT JOIN investment_decisions ON stock_market_data.stock_symbol = investment_decisions.stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_market_data.stock_symbol, stock_market_data.stock_name, trend_analysis.analysis_date FROM stock_market_data JOIN trend_analysis ON stock_market_data.stock_symbol = trend_analysis.stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_market_data.stock_symbol, stock_market_data.stock_name, trend_analysis.analysis_date FROM stock_market_data LEFT JOIN trend_analysis ON stock_market_data.stock_symbol = trend_analysis.stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_market_data.stock_symbol, stock_market_data.stock_name, trend_analysis.analysis_date FROM stock_market_data RIGHT JOIN trend_analysis ON stock_market_data.stock_symbol = trend_analysis.stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, SUM(stock_price) AS total_stock_price FROM stock_market_data GROUP BY stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, AVG(market_cap) AS avg_market_cap FROM stock_market_data GROUP BY stock_symbol HAVING avg_market_cap > 500000;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, COUNT(*) AS num_decisions FROM investment_decisions GROUP BY stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, COUNT(*) AS num_analysis FROM trend_analysis GROUP BY stock_symbol HAVING num_analysis > 3;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, trend FROM trend_analysis WHERE trend IN ('Upward', 'Downward');",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_name, MAX(stock_price) AS max_stock_price FROM stock_market_data GROUP BY stock_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT stock_symbol, MIN(market_cap) AS min_market_cap FROM stock_market_data WHERE market_cap IS NOT NULL GROUP BY stock_symbol;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM StockData;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, stock_price FROM StockData;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_name, stock_price FROM StockData WHERE stock_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_name, stock_volume FROM StockData WHERE stock_volume < 1000;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM StockHistory;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, date, opening_price, closing_price FROM StockHistory WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT history_id, stock_id, date, high_price, low_price FROM StockHistory WHERE high_price > 100 AND low_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM MarketIndices;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT index_name, index_value, last_updated FROM MarketIndices WHERE index_value > 500;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM InvestmentDecisions;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, decision_date, decision_description FROM InvestmentDecisions WHERE decision_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, decision_date, decision_description FROM InvestmentDecisions WHERE decision_description LIKE '%buy%';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, decision_date, decision_description FROM InvestmentDecisions WHERE decision_date >= '2022-01-01' AND decision_date <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, decision_date, decision_description FROM InvestmentDecisions ORDER BY decision_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, count(*) AS decision_count FROM InvestmentDecisions GROUP BY stock_id;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, decision_date, decision_description FROM InvestmentDecisions WHERE stock_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, AVG(stock_price) AS avg_price FROM StockData GROUP BY stock_name;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT index_name, SUM(index_value) AS total_value FROM MarketIndices GROUP BY index_name;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, MAX(stock_price) AS max_price FROM StockData;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT index_name, MIN(index_value) AS min_value FROM MarketIndices;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, stock_price FROM StockData WHERE stock_price > 100",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, stock_volume FROM StockData WHERE stock_volume > 1000",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, stock_price, stock_volume FROM StockData WHERE stock_price < 50 AND stock_volume > 500",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM StockHistory WHERE date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_name, stock_price FROM StockData ORDER BY stock_price DESC",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_name, opening_price, closing_price FROM StockHistory WHERE stock_id = 1",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT index_name, index_value FROM MarketIndices WHERE index_value > 500",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT index_name, last_updated FROM MarketIndices ORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, stock_price FROM StockData WHERE stock_name LIKE '%Tech%'",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, stock_name, volume FROM StockData GROUP BY stock_id HAVING SUM(volume) > 10000",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, count(history_id) FROM StockHistory GROUP BY stock_id HAVING count(history_id) > 5",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, decision_description FROM StockData INNER JOIN InvestmentDecisions ON StockData.stock_id = InvestmentDecisions.stock_id",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, MAX(stock_price) FROM StockData GROUP BY stock_name",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_name, MAX(volume) FROM StockData GROUP BY stock_name",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, MAX(closing_price) FROM StockHistory GROUP BY stock_id",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, AVG(stock_price) FROM StockData GROUP BY stock_id",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT stock_id, MIN(volume) FROM StockData GROUP BY stock_id",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM StockHistory JOIN StockData ON StockHistory.stock_id = StockData.stock_id",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(stock_volume) FROM StockData",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(stock_price) FROM StockData",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(stock_price) FROM StockData",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM stock_prices LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, open_price, close_price FROM stock_prices WHERE date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, sector FROM company_info WHERE industry = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_news ORDER BY date_posted DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT username, email FROM user_portfolio WHERE username LIKE 'john_doe%';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT strategy_name, description FROM investment_strategy;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM stock_prices WHERE symbol = 'AAPL' AND date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, headquarters FROM company_info WHERE sector = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT title, source FROM market_news WHERE date_posted >= '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM user_portfolio WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT strategy_name, description FROM investment_strategy WHERE strategy_name = 'Long-Term Growth';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, open_price, close_price FROM stock_prices WHERE high_price > 1000;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, industry FROM company_info WHERE headquarters = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT title, content FROM market_news WHERE source = 'CNN';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM user_portfolio WHERE date_joined >= '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT strategy_name, description FROM investment_strategy WHERE description LIKE '%dividend%';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, close_price FROM stock_prices WHERE date = '2022-02-15' AND symbol IN ('AAPL', 'GOOG', 'MSFT');",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, sector, industry FROM company_info WHERE sector = 'Healthcare' AND industry = 'Biotechnology';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT title, source FROM market_news WHERE title LIKE '%stock market%';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM user_portfolio WHERE username = 'alice_smith';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, open_price, close_price FROM stock_prices WHERE date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, sector, industry FROM company_info WHERE symbol = 'AAPL';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT title, date_posted FROM market_news WHERE source = 'CNN' ORDER BY date_posted DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT username, email FROM user_portfolio WHERE user_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT strategy_name, description FROM investment_strategy WHERE strategy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, close_price FROM stock_prices WHERE open_price > 100 AND close_price < 150;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, sector FROM company_info WHERE industry = 'Technology' ORDER BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT title, content FROM market_news WHERE date_posted BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT username, date_joined FROM user_portfolio WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT strategy_name, description FROM investment_strategy WHERE description ILIKE '%long-term%';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, high_price, low_price FROM stock_prices WHERE date > '2022-01-01' ORDER BY high_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, industry FROM company_info WHERE sector = 'Healthcare' ORDER BY company_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT title, content FROM market_news WHERE content ILIKE '%market trends%';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT username, email FROM user_portfolio WHERE username IN ('john_doe', 'jane_smith');",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT strategy_name, description FROM investment_strategy WHERE description LIKE '%risk%';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, open_price FROM stock_prices WHERE symbol IN (SELECT symbol FROM company_info WHERE sector = 'Finance');",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT company_name, headquarters FROM company_info WHERE headquarters IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT title, content FROM market_news WHERE content ILIKE '%cryptocurrency%' AND content ILIKE '%Bitcoin%';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT username, email FROM user_portfolio WHERE date_joined > '2022-01-01' ORDER BY date_joined ASC;",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nSELECT strategy_name, description FROM investment_strategy WHERE strategy_name NOT LIKE '%Growth%' ORDER BY strategy_name;"
]