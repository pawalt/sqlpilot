[
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('AAPL', 'Apple Inc.', 1500.25, 2000000000000.50, 1000000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 1501.25, market_cap = 2000000000001.50, volume = 1000001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('GOOGL', 'Alphabet Inc.', 2500.75, 3000000000000.75, 500000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 2501.75, market_cap = 3000000000001.75, volume = 500001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('MSFT', 'Microsoft Corporation', 300.50, 1500000000000.25, 750000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 301.50, market_cap = 1500000000001.25, volume = 750001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('AMZN', 'Amazon.com, Inc.', 3500.00, 1700000000000.00, 900000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 3501.00, market_cap = 1700000000001.00, volume = 900001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('TSLA', 'Tesla, Inc.', 750.50, 800000000000.50, 200000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 751.50, market_cap = 800000000000.51, volume = 200001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('NFLX', 'Netflix, Inc.', 600.25, 1200000000000.75, 400000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 601.25, market_cap = 1200000000001.75, volume = 400001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('FB', 'Meta Platforms, Inc.', 350.75, 600000000000.75, 300000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 351.75, market_cap = 600000000000.76, volume = 300001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('NVDA', 'NVIDIA Corporation', 250.25, 400000000000.50, 200000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 251.25, market_cap = 400000000000.51, volume = 200001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('AMD', 'Advanced Micro Devices, Inc.', 100.50, 80000000000.25, 100000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 101.50, market_cap = 80000000000.26, volume = 100001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('INTC', 'Intel Corporation', 50.75, 50000000000.75, 50000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 51.75, market_cap = 50000000000.76, volume = 50001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('PYPL', 'PayPal Holdings, Inc.', 200.25, 250000000000.50, 150000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 201.25, market_cap = 250000000000.51, volume = 150001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('CSCO', 'Cisco Systems, Inc.', 50.50, 100000000000.25, 50000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 51.50, market_cap = 100000000000.26, volume = 50001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('IBM', 'International Business Machines Corporation', 120.75, 150000000000.75, 80000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 121.75, market_cap = 150000000000.76, volume = 80001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('ORCL', 'Oracle Corporation', 80.25, 100000000000.50, 60000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 81.25, market_cap = 100000000000.51, volume = 60001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('PEP', 'PepsiCo, Inc.', 150.50, 200000000000.25, 100000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 151.50, market_cap = 200000000000.26, volume = 100001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('JNJ', 'Johnson & Johnson', 130.25, 300000000000.75, 90000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 131.25, market_cap = 300000000000.76, volume = 90001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('WMT', 'Walmart Inc.', 140.75, 250000000000.75, 70000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 141.75, market_cap = 250000000000.76, volume = 70001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('BAC', 'Bank of America Corporation', 40.25, 50000000000.50, 30000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 41.25, market_cap = 50000000000.51, volume = 30001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('T', 'AT&T Inc.', 25.75, 60000000000.75, 20000, '2022-09-15') ON CONFLICT (stock_symbol) DO UPDATE SET stock_price = 26.75, market_cap = 60000000000.76, volume = 20001, trading_date = '2022-09-16';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('AAPL', 'Apple Inc.', 150.25, 2000000000000.00, 1000000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('GOOGL', 'Alphabet Inc.', 2750.50, 1900000000000.00, 800000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('MSFT', 'Microsoft Corporation', 350.75, 2200000000000.00, 950000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('AMZN', 'Amazon.com Inc.', 3200.60, 1800000000000.00, 700000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('FB', 'Meta Platforms Inc.', 320.00, 1000000000000.00, 500000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('TSLA', 'Tesla Inc.', 800.00, 1500000000000.00, 750000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('NVDA', 'NVIDIA Corporation', 300.85, 400000000000.00, 300000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('JPM', 'JPMorgan Chase & Co.', 150.25, 350000000000.00, 200000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('BAC', 'Bank of America Corporation', 45.75, 250000000000.00, 150000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('C', 'Citigroup Inc.', 60.30, 200000000000.00, 120000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('WFC', 'Wells Fargo & Company', 55.50, 180000000000.00, 100000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('GS', 'The Goldman Sachs Group Inc.', 375.20, 160000000000.00, 80000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('PYPL', 'PayPal Holdings Inc.', 190.40, 150000000000.00, 70000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('CSCO', 'Cisco Systems Inc.', 55.90, 120000000000.00, 60000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('IBM', 'International Business Machines Corporation', 120.75, 100000000000.00, 50000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('PFE', 'Pfizer Inc.', 45.80, 80000000000.00, 40000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('INTC', 'Intel Corporation', 50.60, 60000000000.00, 30000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('NFLX', 'Netflix Inc.', 400.30, 50000000000.00, 20000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('U', 'Unity Software Inc.', 90.50, 40000000000.00, 10000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n  stock_symbol STRING,\n  company_name STRING,\n  stock_price DECIMAL,\n  market_cap DECIMAL,\n  volume INT,\n  trading_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, company_name, stock_price, market_cap, volume, trading_date) VALUES ('ATVI', 'Activision Blizzard Inc.', 85.25, 30000000000.00, 5000, '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (1, 'AAPL', 150.25, 20000000000) ON DUPLICATE KEY UPDATE stock_price = 150.25, market_capitalization = 20000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (2, 'GOOG', 950.75, 350000000000) ON DUPLICATE KEY UPDATE stock_price = 950.75, market_capitalization = 350000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (3, 'MSFT', 300.50, 400000000000) ON DUPLICATE KEY UPDATE stock_price = 300.50, market_capitalization = 400000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (4, 'AMZN', 3200.00, 1500000000000) ON DUPLICATE KEY UPDATE stock_price = 3200.00, market_capitalization = 1500000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (5, 'TSLA', 700.00, 60000000000) ON DUPLICATE KEY UPDATE stock_price = 700.00, market_capitalization = 60000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (6, 'NFLX', 500.25, 22000000000) ON DUPLICATE KEY UPDATE stock_price = 500.25, market_capitalization = 22000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (7, 'FB', 300.75, 80000000000) ON DUPLICATE KEY UPDATE stock_price = 300.75, market_capitalization = 80000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (8, 'AMD', 95.50, 100000000000) ON DUPLICATE KEY UPDATE stock_price = 95.50, market_capitalization = 100000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (9, 'NVDA', 175.30, 35000000000) ON DUPLICATE KEY UPDATE stock_price = 175.30, market_capitalization = 35000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (10, 'INTC', 55.85, 200000000000) ON DUPLICATE KEY UPDATE stock_price = 55.85, market_capitalization = 200000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (11, 'IBM', 130.20, 120000000000) ON DUPLICATE KEY UPDATE stock_price = 130.20, market_capitalization = 120000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (12, 'AAPL', 155.30, 21000000000) ON DUPLICATE KEY UPDATE stock_price = 155.30, market_capitalization = 21000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (13, 'GOOG', 970.85, 360000000000) ON DUPLICATE KEY UPDATE stock_price = 970.85, market_capitalization = 360000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (14, 'MSFT', 305.75, 410000000000) ON DUPLICATE KEY UPDATE stock_price = 305.75, market_capitalization = 410000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (15, 'AMZN', 3250.50, 1550000000000) ON DUPLICATE KEY UPDATE stock_price = 3250.50, market_capitalization = 1550000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (16, 'TSLA', 720.50, 61000000000) ON DUPLICATE KEY UPDATE stock_price = 720.50, market_capitalization = 61000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (17, 'NFLX', 510.20, 23000000000) ON DUPLICATE KEY UPDATE stock_price = 510.20, market_capitalization = 23000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (18, 'FB', 305.30, 81000000000) ON DUPLICATE KEY UPDATE stock_price = 305.30, market_capitalization = 81000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (19, 'AMD', 96.75, 105000000000) ON DUPLICATE KEY UPDATE stock_price = 96.75, market_capitalization = 105000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (20, 'NVDA', 180.65, 36000000000) ON DUPLICATE KEY UPDATE stock_price = 180.65, market_capitalization = 36000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (1, 'AAPL', 150.20, 20000000000) ON DUPLICATE KEY UPDATE stock_price = 150.20, market_capitalization = 20000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (2, 'GOOGL', 2500.50, 150000000000) ON DUPLICATE KEY UPDATE stock_price = 2500.50, market_capitalization = 150000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (1, 'Bullish Market', '2022-01-01', '2022-06-30') ON DUPLICATE KEY UPDATE trend_description = 'Bullish Market', trend_start_date = '2022-01-01', trend_end_date = '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (2, 'Bearish Market', '2022-07-01', '2022-12-31') ON DUPLICATE KEY UPDATE trend_description = 'Bearish Market', trend_start_date = '2022-07-01', trend_end_date = '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (3, 'AMZN', 3500.75, 180000000000) ON DUPLICATE KEY UPDATE stock_price = 3500.75, market_capitalization = 180000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (4, 'TSLA', 800.00, 100000000000) ON DUPLICATE KEY UPDATE stock_price = 800.00, market_capitalization = 100000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (3, 'Stable Market', '2023-01-01', '2023-06-30') ON DUPLICATE KEY UPDATE trend_description = 'Stable Market', trend_start_date = '2023-01-01', trend_end_date = '2023-06-30';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (4, 'Volatility Increase', '2023-07-01', '2023-12-31') ON DUPLICATE KEY UPDATE trend_description = 'Volatility Increase', trend_start_date = '2023-07-01', trend_end_date = '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (5, 'MSFT', 300.00, 160000000000) ON DUPLICATE KEY UPDATE stock_price = 300.00, market_capitalization = 160000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (6, 'FB', 350.50, 140000000000) ON DUPLICATE KEY UPDATE stock_price = 350.50, market_capitalization = 140000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (5, 'Positive Growth', '2024-01-01', '2024-06-30') ON DUPLICATE KEY UPDATE trend_description = 'Positive Growth', trend_start_date = '2024-01-01', trend_end_date = '2024-06-30';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (6, 'Negative Growth', '2024-07-01', '2024-12-31') ON DUPLICATE KEY UPDATE trend_description = 'Negative Growth', trend_start_date = '2024-07-01', trend_end_date = '2024-12-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (7, 'NFLX', 400.00, 120000000000) ON DUPLICATE KEY UPDATE stock_price = 400.00, market_capitalization = 120000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (8, 'NVDA', 500.25, 130000000000) ON DUPLICATE KEY UPDATE stock_price = 500.25, market_capitalization = 130000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (7, 'Consolidation Phase', '2025-01-01', '2025-06-30') ON DUPLICATE KEY UPDATE trend_description = 'Consolidation Phase', trend_start_date = '2025-01-01', trend_end_date = '2025-06-30';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (8, 'Market Correction', '2025-07-01', '2025-12-31') ON DUPLICATE KEY UPDATE trend_description = 'Market Correction', trend_start_date = '2025-07-01', trend_end_date = '2025-12-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (9, 'AMD', 50.75, 60000000000) ON DUPLICATE KEY UPDATE stock_price = 50.75, market_capitalization = 60000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_data (stock_id, stock_symbol, stock_price, market_capitalization) VALUES (10, 'INTC', 45.60, 70000000000) ON DUPLICATE KEY UPDATE stock_price = 45.60, market_capitalization = 70000000000;",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (9, 'Recovery Phase', '2026-01-01', '2026-06-30') ON DUPLICATE KEY UPDATE trend_description = 'Recovery Phase', trend_start_date = '2026-01-01', trend_end_date = '2026-06-30';",
  "### TABLEDATA\n\nCREATE TABLE stock_data (\n    stock_id INT PRIMARY KEY,\n    stock_symbol VARCHAR(255) NOT NULL,\n    stock_price DECIMAL(10, 2),\n    market_capitalization DECIMAL(20, 2)\n);\n\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO market_trends (trend_id, trend_description, trend_start_date, trend_end_date) VALUES (10, 'Rapid Growth', '2026-07-01', '2026-12-31') ON DUPLICATE KEY UPDATE trend_description = 'Rapid Growth', trend_start_date = '2026-07-01', trend_end_date = '2026-12-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('AAPL', 'Apple Inc.', 2000000000000, 150.50) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('GOOGL', 'Alphabet Inc.', 1800000000000, 2700.75) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('MSFT', 'Microsoft Corporation', 1900000000000, 260.35) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('AMZN', 'Amazon.com Inc.', 1700000000000, 3200.00) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('NFLX', 'Netflix Inc.', 250000000000, 500.85) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('FB', 'Meta Platforms Inc.', 800000000000, 300.20) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('TSLA', 'Tesla Inc.', 900000000000, 750.10) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('NVDA', 'NVIDIA Corporation', 600000000000, 300.75) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('AMD', 'Advanced Micro Devices Inc.', 200000000000, 120.40) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('INTC', 'Intel Corporation', 150000000000, 55.80) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('IBM', 'International Business Machines Corporation', 100000000000, 120.90) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('PYPL', 'PayPal Holdings Inc.', 200000000000, 260.60) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('CRM', 'Salesforce.com Inc.', 150000000000, 250.30) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('BABA', 'Alibaba Group Holding Limited', 600000000000, 175.40) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('TSM', 'Taiwan Semiconductor Manufacturing Company Limited', 500000000000, 118.60) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('ORCL', 'Oracle Corporation', 200000000000, 80.25) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('QCOM', 'Qualcomm Incorporated', 150000000000, 125.80) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('CSCO', 'Cisco Systems Inc.', 200000000000, 55.30) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('MS', 'Morgan Stanley', 150000000000, 70.45) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('GS', 'Goldman Sachs Group Inc.', 200000000000, 350.60) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = excluded.stock_name, market_cap = excluded.market_cap, stock_price = excluded.stock_price;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('AAPL', 'Apple Inc.', 200000000000, 150.25) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Apple Inc.', market_cap = 220000000000, stock_price = 160.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('GOOGL', 'Alphabet Inc.', 150000000000, 1200.75) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Alphabet Inc.', market_cap = 170000000000, stock_price = 1300.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('MSFT', 'Microsoft Corporation', 180000000000, 220.35) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Microsoft Corporation', market_cap = 200000000000, stock_price = 230.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO investment_decisions (stock_symbol, decision_date, decision_type) VALUES ('AAPL', '2022-01-15', 'Buy') ON CONFLICT (stock_symbol, decision_date) DO UPDATE SET decision_type = 'Hold';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO investment_decisions (stock_symbol, decision_date, decision_type) VALUES ('GOOGL', '2022-01-20', 'Sell') ON CONFLICT (stock_symbol, decision_date) DO UPDATE SET decision_type = 'Buy';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO investment_decisions (stock_symbol, decision_date, decision_type) VALUES ('MSFT', '2022-02-01', 'Buy') ON CONFLICT (stock_symbol, decision_date) DO UPDATE SET decision_type = 'Sell';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO trend_analysis (stock_symbol, analysis_date, trend) VALUES ('AAPL', '2022-03-10', 'Bullish') ON CONFLICT (stock_symbol, analysis_date) DO UPDATE SET trend = 'Bearish';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO trend_analysis (stock_symbol, analysis_date, trend) VALUES ('GOOGL', '2022-03-15', 'Neutral') ON CONFLICT (stock_symbol, analysis_date) DO UPDATE SET trend = 'Bullish';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO trend_analysis (stock_symbol, analysis_date, trend) VALUES ('MSFT', '2022-04-01', 'Bearish') ON CONFLICT (stock_symbol, analysis_date) DO UPDATE SET trend = 'Neutral';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('TSLA', 'Tesla Inc.', 100000000000, 800.25) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Tesla Inc.', market_cap = 120000000000, stock_price = 900.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('AMZN', 'Amazon.com Inc.', 160000000000, 3200.75) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Amazon.com Inc.', market_cap = 180000000000, stock_price = 3300.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('NFLX', 'Netflix Inc.', 70000000000, 500.25) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Netflix Inc.', market_cap = 90000000000, stock_price = 600.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO investment_decisions (stock_symbol, decision_date, decision_type) VALUES ('TSLA', '2022-01-25', 'Sell') ON CONFLICT (stock_symbol, decision_date) DO UPDATE SET decision_type = 'Hold';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO investment_decisions (stock_symbol, decision_date, decision_type) VALUES ('AMZN', '2022-02-10', 'Buy') ON CONFLICT (stock_symbol, decision_date) DO UPDATE SET decision_type = 'Sell';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO investment_decisions (stock_symbol, decision_date, decision_type) VALUES ('NFLX', '2022-02-25', 'Buy') ON CONFLICT (stock_symbol, decision_date) DO UPDATE SET decision_type = 'Buy';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO trend_analysis (stock_symbol, analysis_date, trend) VALUES ('TSLA', '2022-03-20', 'Bullish') ON CONFLICT (stock_symbol, analysis_date) DO UPDATE SET trend = 'Bearish';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO trend_analysis (stock_symbol, analysis_date, trend) VALUES ('AMZN', '2022-04-05', 'Neutral') ON CONFLICT (stock_symbol, analysis_date) DO UPDATE SET trend = 'Bullish';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO trend_analysis (stock_symbol, analysis_date, trend) VALUES ('NFLX', '2022-04-10', 'Bearish') ON CONFLICT (stock_symbol, analysis_date) DO UPDATE SET trend = 'Neutral';",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('FB', 'Meta Platforms Inc.', 80000000000, 250.25) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Meta Platforms Inc.', market_cap = 100000000000, stock_price = 270.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('TWTR', 'Twitter Inc.', 30000000000, 75.25) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Twitter Inc.', market_cap = 35000000000, stock_price = 80.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_market_data (\n    stock_symbol VARCHAR(10) PRIMARY KEY,\n    stock_name VARCHAR(50) NOT NULL,\n    market_cap DECIMAL,\n    stock_price DECIMAL\n);\n\nCREATE TABLE investment_decisions (\n    decision_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    decision_date DATE,\n    decision_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE trend_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    stock_symbol VARCHAR(10) REFERENCES stock_market_data(stock_symbol),\n    analysis_date DATE,\n    trend VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO stock_market_data (stock_symbol, stock_name, market_cap, stock_price) VALUES ('SNAP', 'Snap Inc.', 25000000000, 50.25) ON CONFLICT (stock_symbol) DO UPDATE SET stock_name = 'Updated Snap Inc.', market_cap = 27000000000, stock_price = 55.50;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (1, 'Apple', 150.50, 1000) ON DUPLICATE KEY UPDATE stock_price = 150.50, stock_volume = 1000;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (2, 'Google', 1100.75, 500) ON DUPLICATE KEY UPDATE stock_price = 1100.75, stock_volume = 500;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (3, 'Amazon', 3300.25, 750) ON DUPLICATE KEY UPDATE stock_price = 3300.25, stock_volume = 750;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (4, 'Microsoft', 350.80, 900) ON DUPLICATE KEY UPDATE stock_price = 350.80, stock_volume = 900;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (5, 'Facebook', 250.45, 800) ON DUPLICATE KEY UPDATE stock_price = 250.45, stock_volume = 800;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (6, 'Tesla', 700.60, 600) ON DUPLICATE KEY UPDATE stock_price = 700.60, stock_volume = 600;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (7, 'Netflix', 500.30, 700) ON DUPLICATE KEY UPDATE stock_price = 500.30, stock_volume = 700;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (8, 'Intel', 61.80, 1200) ON DUPLICATE KEY UPDATE stock_price = 61.80, stock_volume = 1200;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (9, 'IBM', 143.20, 950) ON DUPLICATE KEY UPDATE stock_price = 143.20, stock_volume = 950;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (10, 'Cisco', 39.75, 1500) ON DUPLICATE KEY UPDATE stock_price = 39.75, stock_volume = 1500;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (11, 'Oracle', 78.90, 1100) ON DUPLICATE KEY UPDATE stock_price = 78.90, stock_volume = 1100;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (12, 'HP', 25.60, 2000) ON DUPLICATE KEY UPDATE stock_price = 25.60, stock_volume = 2000;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (13, 'AMD', 95.50, 850) ON DUPLICATE KEY UPDATE stock_price = 95.50, stock_volume = 850;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (14, 'Nvidia', 185.30, 700) ON DUPLICATE KEY UPDATE stock_price = 185.30, stock_volume = 700;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (15, 'Qualcomm', 123.80, 1000) ON DUPLICATE KEY UPDATE stock_price = 123.80, stock_volume = 1000;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (16, 'Alibaba', 210.65, 850) ON DUPLICATE KEY UPDATE stock_price = 210.65, stock_volume = 850;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (17, 'Tencent', 310.20, 700) ON DUPLICATE KEY UPDATE stock_price = 310.20, stock_volume = 700;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (18, 'Samsung', 52.40, 1300) ON DUPLICATE KEY UPDATE stock_price = 52.40, stock_volume = 1300;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (19, 'Sony', 95.75, 900) ON DUPLICATE KEY UPDATE stock_price = 95.75, stock_volume = 900;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (20, 'Disney', 148.90, 1100) ON DUPLICATE KEY UPDATE stock_price = 148.90, stock_volume = 1100;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (1, 'Apple', 1500.00, 100) ON DUPLICATE KEY UPDATE stock_price = 1500.00, stock_volume = 100;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (2, 'Microsoft', 2000.00, 200) ON DUPLICATE KEY UPDATE stock_price = 2000.00, stock_volume = 200;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (3, 'Amazon', 3000.00, 300) ON DUPLICATE KEY UPDATE stock_price = 3000.00, stock_volume = 300;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (4, 'Google', 2500.00, 150) ON DUPLICATE KEY UPDATE stock_price = 2500.00, stock_volume = 150;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockData (stock_id, stock_name, stock_price, stock_volume) VALUES (5, 'Tesla', 1800.00, 120) ON DUPLICATE KEY UPDATE stock_price = 1800.00, stock_volume = 120;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockHistory (history_id, stock_id, date, opening_price, closing_price, high_price, low_price, volume) VALUES (1, 1, '2022-09-01', 1400.00, 1450.00, 1475.00, 1390.00, 1000) ON DUPLICATE KEY UPDATE opening_price = 1400.00, closing_price = 1450.00, high_price = 1475.00, low_price = 1390.00, volume = 1000;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockHistory (history_id, stock_id, date, opening_price, closing_price, high_price, low_price, volume) VALUES (2, 2, '2022-09-01', 1950.00, 2005.00, 2020.00, 1940.00, 1500) ON DUPLICATE KEY UPDATE opening_price = 1950.00, closing_price = 2005.00, high_price = 2020.00, low_price = 1940.00, volume = 1500;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockHistory (history_id, stock_id, date, opening_price, closing_price, high_price, low_price, volume) VALUES (3, 3, '2022-09-01', 2900.00, 2950.00, 2980.00, 2880.00, 1200) ON DUPLICATE KEY UPDATE opening_price = 2900.00, closing_price = 2950.00, high_price = 2980.00, low_price = 2880.00, volume = 1200;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockHistory (history_id, stock_id, date, opening_price, closing_price, high_price, low_price, volume) VALUES (4, 4, '2022-09-01', 2400.00, 2450.00, 2470.00, 2385.00, 800) ON DUPLICATE KEY UPDATE opening_price = 2400.00, closing_price = 2450.00, high_price = 2470.00, low_price = 2385.00, volume = 800;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO StockHistory (history_id, stock_id, date, opening_price, closing_price, high_price, low_price, volume) VALUES (5, 5, '2022-09-01', 1750.00, 1825.00, 1840.00, 1730.00, 950) ON DUPLICATE KEY UPDATE opening_price = 1750.00, closing_price = 1825.00, high_price = 1840.00, low_price = 1730.00, volume = 950;",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO MarketIndices (index_id, index_name, index_value, last_updated) VALUES (1, 'NASDAQ', 15000.00, '2022-09-01 12:00:00') ON DUPLICATE KEY UPDATE index_value = 15000.00, last_updated = '2022-09-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO MarketIndices (index_id, index_name, index_value, last_updated) VALUES (2, 'DOW', 35000.00, '2022-09-01 12:00:00') ON DUPLICATE KEY UPDATE index_value = 35000.00, last_updated = '2022-09-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO MarketIndices (index_id, index_name, index_value, last_updated) VALUES (3, 'S&P 500', 4500.00, '2022-09-01 12:00:00') ON DUPLICATE KEY UPDATE index_value = 4500.00, last_updated = '2022-09-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO MarketIndices (index_id, index_name, index_value, last_updated) VALUES (4, 'FTSE 100', 7000.00, '2022-09-01 12:00:00') ON DUPLICATE KEY UPDATE index_value = 7000.00, last_updated = '2022-09-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO MarketIndices (index_id, index_name, index_value, last_updated) VALUES (5, 'NIKKEI', 28000.00, '2022-09-01 12:00:00') ON DUPLICATE KEY UPDATE index_value = 28000.00, last_updated = '2022-09-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO InvestmentDecisions (decision_id, stock_id, decision_date, decision_description) VALUES (1, 1, '2022-09-01', 'Buy more shares for long-term investment') ON DUPLICATE KEY UPDATE decision_date = '2022-09-01', decision_description = 'Buy more shares for long-term investment';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO InvestmentDecisions (decision_id, stock_id, decision_date, decision_description) VALUES (2, 2, '2022-09-01', 'Sell existing holdings for profit taking') ON DUPLICATE KEY UPDATE decision_date = '2022-09-01', decision_description = 'Sell existing holdings for profit taking';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO InvestmentDecisions (decision_id, stock_id, decision_date, decision_description) VALUES (3, 3, '2022-09-01', 'Hold position for now, monitor market trends') ON DUPLICATE KEY UPDATE decision_date = '2022-09-01', decision_description = 'Hold position for now, monitor market trends';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO InvestmentDecisions (decision_id, stock_id, decision_date, decision_description) VALUES (4, 4, '2022-09-01', 'Explore options for diversification') ON DUPLICATE KEY UPDATE decision_date = '2022-09-01', decision_description = 'Explore options for diversification';",
  "### TABLEDATA\n\nCREATE TABLE StockData (\n    stock_id INT PRIMARY KEY,\n    stock_name VARCHAR(255),\n    stock_price DECIMAL(10, 2),\n    stock_volume INT\n);\n\n\nCREATE TABLE StockHistory (\n    history_id INT PRIMARY KEY,\n    stock_id INT,\n    date DATE,\n    opening_price DECIMAL(10, 2),\n    closing_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2),\n    volume INT\n);\n\n\nCREATE TABLE MarketIndices (\n    index_id INT PRIMARY KEY,\n    index_name VARCHAR(255),\n    index_value DECIMAL(10, 2),\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE InvestmentDecisions (\n    decision_id INT PRIMARY KEY,\n    stock_id INT,\n    decision_date DATE,\n    decision_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO InvestmentDecisions (decision_id, stock_id, decision_date, decision_description) VALUES (5, 5, '2022-09-01', 'Review performance benchmarks and adjust strategy') ON DUPLICATE KEY UPDATE decision_date = '2022-09-01', decision_description = 'Review performance benchmarks and adjust strategy';",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-01', 'AAPL', 145.0, 148.0, 150.0, 143.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-02', 'AAPL', 149.0, 152.0, 154.0, 148.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-03', 'AAPL', 153.0, 156.0, 158.0, 152.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-04', 'AAPL', 155.0, 160.0, 162.0, 155.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-01', 'GOOGL', 2000.0, 2010.0, 2025.0, 1995.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-02', 'GOOGL', 2015.0, 2025.0, 2035.0, 2010.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-03', 'GOOGL', 2030.0, 2045.0, 2055.0, 2020.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-04', 'GOOGL', 2040.0, 2050.0, 2065.0, 2035.0) ON CONFLICT (date, symbol) DO UPDATE SET open_price = excluded.open_price, close_price = excluded.close_price, high_price = excluded.high_price, low_price = excluded.low_price",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO company_info (symbol, company_name, sector, industry, headquarters) VALUES ('AAPL', 'Apple Inc.', 'Technology', 'Consumer Electronics', 'Cupertino, CA') ON CONFLICT (symbol) DO UPDATE SET company_name = excluded.company_name, sector = excluded.sector, industry = excluded.industry, headquarters = excluded.headquarters",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO company_info (symbol, company_name, sector, industry, headquarters) VALUES ('GOOGL', 'Alphabet Inc.', 'Technology', 'Internet Services and Retailing', 'Mountain View, CA') ON CONFLICT (symbol) DO UPDATE SET company_name = excluded.company_name, sector = excluded.sector, industry = excluded.industry, headquarters = excluded.headquarters",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO market_news (news_id, title, date_posted, source, content) VALUES (1, 'Apple unveils new iPhone 13', '2022-01-01 08:00:00', 'Tech News', 'Apple announced the launch of its latest iPhone model, iPhone 13, with new features and improvements.') ON CONFLICT (news_id) DO UPDATE SET title = excluded.title, date_posted = excluded.date_posted, source = excluded.source, content = excluded.content",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO market_news (news_id, title, date_posted, source, content) VALUES (2, 'Alphabet reports record earnings', '2022-01-02 09:00:00', 'Finance News', 'Alphabet Inc. posted record-breaking earnings in the latest quarter, surpassing market expectations.') ON CONFLICT (news_id) DO UPDATE SET title = excluded.title, date_posted = excluded.date_posted, source = excluded.source, content = excluded.content",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO user_portfolio (user_id, username, email, date_joined) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, date_joined = excluded.date_joined",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO user_portfolio (user_id, username, email, date_joined) VALUES (2, 'jane_smith', 'jane.smith@example.com', '2022-01-02 14:00:00') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email, date_joined = excluded.date_joined",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO investment_strategy (strategy_id, strategy_name, description) VALUES (1, 'Dividend Growth', 'Investing in companies that have a history of increasing dividends over time.') ON CONFLICT (strategy_id) DO UPDATE SET strategy_name = excluded.strategy_name, description = excluded.description",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO investment_strategy (strategy_id, strategy_name, description) VALUES (2, 'Value Investing', 'Buying undervalued stocks based on fundamental analysis.') ON CONFLICT (strategy_id) DO UPDATE SET strategy_name = excluded.strategy_name, description = excluded.description",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO stock_prices (date, symbol, open_price, close_price, high_price, low_price) VALUES ('2022-01-01', 'AAPL', 150.25, 155.30, 158.50, 149.75) ON CONFLICT (date, symbol) DO UPDATE SET open_price = 151.50, close_price = 155.75, high_price = 160.00, low_price = 150.00",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO company_info (symbol, company_name, sector, industry, headquarters) VALUES ('AAPL', 'Apple Inc.', 'Technology', 'Consumer Electronics', 'Cupertino, CA') ON CONFLICT (symbol) DO UPDATE SET sector = 'Tech Giant', industry = 'Tech Innovations', headquarters = 'Silicon Valley'",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO market_news (title, date_posted, source, content) VALUES ('Apple unveils new iPhone lineup', '2022-01-05 10:00:00', 'Tech News Times', 'Apple revealed the latest models of iPhone with enhanced features and design.') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO user_portfolio (username, email, date_joined) VALUES ('john_doe', 'john.doe@example.com', '2022-01-01 08:00:00') ON CONFLICT (username) DO UPDATE SET email = 'john.doe@newemail.com'",
  "### TABLEDATA\n\nCREATE TABLE stock_prices (\n    date DATE PRIMARY KEY,\n    symbol VARCHAR(10) NOT NULL,\n    open_price DECIMAL(10, 2),\n    close_price DECIMAL(10, 2),\n    high_price DECIMAL(10, 2),\n    low_price DECIMAL(10, 2)\n)\n\nCREATE TABLE company_info (\n    symbol VARCHAR(10) PRIMARY KEY,\n    company_name VARCHAR(50) NOT NULL,\n    sector VARCHAR(30),\n    industry VARCHAR(30),\n    headquarters VARCHAR(50)\n)\n\nCREATE TABLE market_news (\n    news_id SERIAL PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    date_posted TIMESTAMP,\n    source VARCHAR(50),\n    content TEXT\n)\n\nCREATE TABLE user_portfolio (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(30) NOT NULL,\n    email VARCHAR(50),\n    date_joined TIMESTAMP\n)\n\nCREATE TABLE investment_strategy (\n    strategy_id SERIAL PRIMARY KEY,\n    strategy_name VARCHAR(30) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nINSERT INTO investment_strategy (strategy_name, description) VALUES ('Long-Term Growth', 'Focus on stocks with potential for sustained growth over years.') ON CONFLICT (strategy_name) DO NOTHING"
]