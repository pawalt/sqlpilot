[
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts WHERE part_category = 'Engine'",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, part_price FROM spare_parts WHERE available_quantity > 0",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name FROM spare_parts WHERE part_price < 100",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_category FROM spare_parts WHERE part_price BETWEEN 50 AND 200",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, available_quantity FROM spare_parts WHERE available_quantity < 10",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts WHERE part_name LIKE 'Bolt%'",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_parts FROM spare_parts",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(part_price) AS avg_price FROM spare_parts",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(part_price) AS max_price FROM spare_parts",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(part_price) AS min_price FROM spare_parts",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, SUM(available_quantity) AS total_quantity FROM spare_parts GROUP BY part_category",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, AVG(part_price) AS avg_price FROM spare_parts GROUP BY part_category",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, MAX(part_price) AS max_price FROM spare_parts GROUP BY part_category",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, MIN(part_price) AS min_price FROM spare_parts GROUP BY part_category",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, COUNT(*) AS total_parts FROM spare_parts GROUP BY part_category",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, AVG(part_price) AS avg_price, MAX(part_price) AS max_price, MIN(part_price) AS min_price FROM spare_parts GROUP BY part_category",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, SUM(available_quantity) AS total_quantity FROM spare_parts WHERE part_category = 'Suspension' GROUP BY part_name",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, COUNT(*) AS total_parts FROM spare_parts WHERE part_price > 500 GROUP BY part_name",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_id, part_name FROM spare_parts ORDER BY part_price DESC",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_price FROM spare_parts ORDER BY part_price ASC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts WHERE part_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_category, part_price FROM spare_parts WHERE part_name LIKE 'Engine%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_category, part_price FROM spare_parts WHERE part_price > 500;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_category, available_quantity FROM spare_parts WHERE part_category = 'Electrical';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_price FROM spare_parts WHERE part_category = 'Brakes' AND available_quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, part_price FROM spare_parts ORDER BY part_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_category, part_price FROM spare_parts WHERE part_name LIKE '%Filter';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_parts FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(part_price) AS avg_price FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, SUM(available_quantity) AS total_available FROM spare_parts GROUP BY part_category;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_price * available_quantity AS total_cost FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, part_price, available_quantity, part_price * available_quantity AS total_value FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_category, COUNT(*) AS total_parts FROM spare_parts WHERE available_quantity > 0 GROUP BY part_category;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_price, available_quantity, part_price * available_quantity AS total_value FROM spare_parts WHERE part_price BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_price, available_quantity, part_price * available_quantity AS total_value FROM spare_parts WHERE part_name IN ('Oil Filter', 'Air Filter');",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, part_price FROM spare_parts WHERE available_quantity = (SELECT MAX(available_quantity) FROM spare_parts);",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_category, part_price FROM spare_parts WHERE part_price = (SELECT MIN(part_price) FROM spare_parts WHERE part_category = 'Electrical');",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, part_price FROM spare_parts WHERE part_category IN ('Brakes', 'Suspension');",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_name, part_price, available_quantity, part_price * available_quantity AS total_value FROM spare_parts WHERE part_name LIKE '%Oil%' AND part_category = 'Engine';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255) NOT NULL,\n    part_category VARCHAR(100),\n    part_price DECIMAL(10,2) NOT NULL,\n    available_quantity INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, part_price, available_quantity FROM spare_parts WHERE part_id BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, price FROM spare_parts WHERE part_category = 'Engine';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_name, price FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name FROM accessories WHERE price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE part_category = 'Electrical';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM accessories WHERE vehicle_compatibility LIKE '%SUV%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_name, vehicle_compatibility FROM accessories WHERE price < 100.00;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, part_category FROM spare_parts WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, price FROM accessories WHERE price BETWEEN 50.00 AND 100.00;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE price > 500.00;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM accessories WHERE vehicle_compatibility LIKE '%Truck%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, part_category, quantity FROM spare_parts WHERE quantity <= 20;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_name, price FROM accessories WHERE price > 75.00;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE part_category = 'Suspension';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, vehicle_compatibility FROM accessories WHERE price < 150.00;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM accessories WHERE vehicle_compatibility LIKE '%Sedan%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, quantity FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE part_category = 'Engine';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, quantity, price FROM spare_parts WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, price FROM spare_parts ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE part_name LIKE '%brake%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(part_id) FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(price) FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, quantity FROM spare_parts WHERE quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, quantity, price FROM spare_parts WHERE quantity BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, quantity, price FROM spare_parts WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, price FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_name, price FROM accessories WHERE vehicle_compatibility = 'SUV';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, price FROM accessories WHERE price > 50;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, price FROM accessories ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_name, price FROM accessories WHERE accessory_name LIKE '%cover%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(accessory_id) FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(price) FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, price FROM accessories WHERE price < 80;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, vehicle_compatibility, price FROM accessories WHERE price BETWEEN 30 AND 60;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n  part_id UUID PRIMARY KEY,\n  part_name VARCHAR(255) NOT NULL,\n  part_category VARCHAR(100),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n  accessory_id UUID PRIMARY KEY,\n  accessory_name VARCHAR(255) NOT NULL,\n  vehicle_compatibility VARCHAR(100),\n  price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, price FROM accessories WHERE price < 40;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT * FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT accessory_name, quantity FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT accessory_name, price FROM accessories WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT * FROM repairs;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT repair_id, part_id, description FROM repairs;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT description, cost FROM repairs WHERE cost > 100;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT * FROM accessories WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT accessory_name, price FROM accessories WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT accessory_name, quantity, price FROM accessories WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, quantity, price FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT accessory_id, accessory_name, quantity, price FROM accessories;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT repair_id, part_id, accessory_id, description FROM repairs;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT part_name, price, quantity FROM spare_parts WHERE quantity > 20;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT accessory_name, price, quantity FROM accessories WHERE quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT repair_id, part_id, accessory_id, cost FROM repairs WHERE cost > 500;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE price > 100",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT accessory_name, quantity, price FROM accessories WHERE quantity < 50",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT sp.part_name, sp.quantity, ac.accessory_name FROM spare_parts sp INNER JOIN repairs r ON sp.part_id = r.part_id INNER JOIN accessories ac ON r.accessory_id = ac.accessory_id WHERE r.cost > 500",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT r.description, r.cost, sp.part_name, ac.accessory_name FROM repairs r INNER JOIN spare_parts sp ON r.part_id = sp.part_id INNER JOIN accessories ac ON r.accessory_id = ac.accessory_id WHERE sp.part_name LIKE 'Engine%' AND ac.accessory_name LIKE 'Tire%'",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT sp.part_name, ac.accessory_name, r.cost FROM repairs r INNER JOIN spare_parts sp ON r.part_id = sp.part_id INNER JOIN accessories ac ON r.accessory_id = ac.accessory_id WHERE sp.quantity >= 10 AND ac.quantity >= 5",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_repairs FROM repairs",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT SUM(cost) AS total_cost FROM repairs",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT AVG(cost) AS average_cost FROM repairs",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT sp.part_id, ac.accessory_id, COUNT(r.repair_id) AS total_repairs FROM repairs r INNER JOIN spare_parts sp ON r.part_id = sp.part_id INNER JOIN accessories ac ON r.accessory_id = ac.accessory_id GROUP BY sp.part_id, ac.accessory_id HAVING COUNT(r.repair_id) > 3 ORDER BY total_repairs DESC",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n part_id INT PRIMARY KEY,\n part_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE accessories (\n accessory_id INT PRIMARY KEY,\n accessory_name VARCHAR(50) NOT NULL,\n quantity INT,\n price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE repairs (\n repair_id INT PRIMARY KEY,\n part_id INT,\n accessory_id INT,\n description TEXT,\n cost DECIMAL(10, 2),\n CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id),\n CONSTRAINT fk_accessory_id FOREIGN KEY (accessory_id) REFERENCES accessories(accessory_id)\n);\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts UNION SELECT accessory_name, price FROM accessories",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, location FROM manufacturers;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT order_id, part_id, quantity, order_date FROM orders WHERE customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, last_updated FROM inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, location FROM manufacturers WHERE manufacturer_name LIKE '%Corp%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_id, part_name, quantity, price FROM spare_parts ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT order_id, part_id, quantity, order_date FROM orders WHERE quantity > 10 ORDER BY order_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE last_updated > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, location FROM manufacturers ORDER BY manufacturer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE price BETWEEN 50 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE price < 50 OR quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT order_id, part_id, quantity, order_date, customer_name FROM orders WHERE customer_name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE part_name LIKE '%bolt%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, price FROM spare_parts WHERE part_name = 'Screw';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT order_id, part_id, quantity, order_date FROM orders WHERE part_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE part_id = (SELECT part_id FROM spare_parts WHERE part_name = 'Nut');",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM spare_parts WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE quantity < 10 ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, manufacturer_name FROM spare_parts JOIN manufacturers ON spare_parts.part_id = manufacturers.manufacturer_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, SUM(quantity) AS total_quantity FROM manufacturers JOIN spare_parts ON manufacturers.manufacturer_id = spare_parts.part_id GROUP BY manufacturer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE part_name LIKE 'Tire%';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity * price AS total_price FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, COUNT(*) AS total_orders FROM manufacturers JOIN orders ON manufacturers.manufacturer_id = orders.part_id GROUP BY manufacturer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity FROM inventory WHERE last_updated >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, AVG(quantity) AS avg_quantity FROM manufacturers JOIN spare_parts ON manufacturers.manufacturer_id = spare_parts.part_id GROUP BY manufacturer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, price FROM spare_parts WHERE price > (SELECT AVG(price) FROM spare_parts);",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, order_date, customer_name FROM orders JOIN spare_parts ON orders.part_id = spare_parts.part_id WHERE order_date > '2022-01-01' AND order_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity FROM inventory WHERE quantity < (SELECT AVG(quantity) FROM inventory);",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, MAX(quantity) AS max_quantity FROM manufacturers JOIN spare_parts ON manufacturers.manufacturer_id = spare_parts.part_id GROUP BY manufacturer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity, location FROM manufacturers JOIN spare_parts ON manufacturers.manufacturer_id = spare_parts.part_id GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity FROM spare_parts WHERE part_name IN ('Engine', 'Brake');",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, SUM(quantity) AS total_quantity FROM manufacturers JOIN spare_parts ON manufacturers.manufacturer_id = spare_parts.part_id WHERE quantity > 0 GROUP BY manufacturer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity, order_date, customer_name FROM orders JOIN spare_parts ON orders.part_id = spare_parts.part_id WHERE customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT manufacturer_name, MIN(price) AS min_price FROM manufacturers JOIN spare_parts ON manufacturers.manufacturer_id = spare_parts.part_id GROUP BY manufacturer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE manufacturers (\n    manufacturer_id INT PRIMARY KEY,\n    manufacturer_name VARCHAR(255),\n    location VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    part_id INT,\n    quantity INT,\n    order_date DATE,\n    customer_name VARCHAR(255)\n)\n\nCREATE TABLE inventory (\n    part_id INT PRIMARY KEY,\n    quantity INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT part_name, quantity FROM inventory WHERE quantity > (SELECT MAX(quantity) FROM inventory);",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_quantity FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_description FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_id, purchase_date, total_cost FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT sale_id, part_id, sale_quantity, selling_price FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_contact FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_quantity, total_cost FROM spare_parts INNER JOIN purchases ON spare_parts.part_id = purchases.part_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, purchase_date, total_cost FROM suppliers INNER JOIN purchases ON suppliers.supplier_id = purchases.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, sale_date, selling_price FROM spare_parts INNER JOIN sales ON spare_parts.part_id = sales.part_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, sale_quantity, selling_price FROM customers INNER JOIN sales ON customers.customer_id = sales.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT spare_parts.part_name, suppliers.supplier_name, purchases.total_cost FROM spare_parts INNER JOIN purchases ON spare_parts.part_id = purchases.part_id INNER JOIN suppliers ON purchases.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, sale_quantity, selling_price FROM customers INNER JOIN sales ON customers.customer_id = sales.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, supplier_name, purchase_date, total_cost FROM customers INNER JOIN sales ON customers.customer_id = sales.sale_id INNER JOIN purchases ON sales.part_id = purchases.part_id INNER JOIN suppliers ON purchases.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, sale_quantity, selling_price FROM spare_parts INNER JOIN sales ON spare_parts.part_id = sales.part_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, purchase_date, total_cost FROM customers INNER JOIN sales ON customers.customer_id = sales.sale_id INNER JOIN purchases ON sales.part_id = purchases.part_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_description FROM spare_parts WHERE part_quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact, supplier_address FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, sale_date, selling_price FROM spare_parts INNER JOIN sales ON spare_parts.part_id = sales.part_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, purchase_date, total_cost FROM spare_parts INNER JOIN purchases ON spare_parts.part_id = purchases.part_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_contact, customer_address FROM customers WHERE customer_id IN (SELECT DISTINCT(customer_id) FROM sales);",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM spare_parts WHERE part_id IN (SELECT part_id FROM purchases WHERE total_cost > 1000);",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address, purchase_date FROM suppliers INNER JOIN purchases ON suppliers.supplier_id = purchases.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, sale_date, selling_price FROM spare_parts INNER JOIN sales ON spare_parts.part_id = sales.part_id WHERE selling_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_contact, customer_address FROM customers WHERE customer_id IN (SELECT customer_id FROM sales WHERE sale_quantity > 5);",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_description, part_quantity, purchase_date, total_cost FROM spare_parts INNER JOIN purchases ON spare_parts.part_id = purchases.part_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact, supplier_address, purchase_date, total_cost FROM suppliers INNER JOIN purchases ON suppliers.supplier_id = purchases.supplier_id WHERE total_cost > 2000;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT sale_date, SUM(sale_quantity) AS total_sales FROM sales GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(total_cost) AS avg_total_cost FROM suppliers INNER JOIN purchases ON suppliers.supplier_id = purchases.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, MAX(part_quantity) AS max_quantity FROM spare_parts;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(sale_quantity) AS min_sale_quantity FROM customers INNER JOIN sales ON customers.customer_id = sales.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, SUM(purchase_quantity) AS total_purchase_quantity FROM suppliers INNER JOIN purchases ON suppliers.supplier_id = purchases.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(sale_quantity) AS avg_sale_quantity FROM customers INNER JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(purchase_id) AS total_purchases FROM suppliers INNER JOIN purchases ON suppliers.supplier_id = purchases.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE spare_parts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(255),\n    part_description TEXT,\n    part_quantity INT\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_contact VARCHAR(20),\n    supplier_address TEXT\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    part_id INT,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_quantity INT,\n    total_cost DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    part_id INT,\n    sale_date DATE,\n    sale_quantity INT,\n    selling_price DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_contact VARCHAR(20),\n    customer_address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(sale_id) AS total_sales FROM customers INNER JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customer_name;"
]