[
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_phone FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name FROM customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_email FROM customers WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customers WHERE customer_email = 'test@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email, customer_phone FROM customers WHERE customer_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_phone IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_address FROM customers WHERE customer_phone IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email, customer_phone FROM customers ORDER BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY customer_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id IN (1, 3, 5, 7);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_address FROM customers WHERE customer_phone IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_email FROM customers WHERE customer_address LIKE '%Street';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customers WHERE customer_email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE '%son%' AND customer_address LIKE '%Ave%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_phone IS NOT NULL AND customer_address IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_email FROM customers WHERE customer_name NOT LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_phone FROM customers WHERE customer_email LIKE '%company.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name = 'John Doe' OR customer_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_phone LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_address IN ('Main Street', 'Oak Avenue', 'Sunset Blvd');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_name = 'Alice' AND customer_address <> '123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE 'M%' OR customer_address LIKE '%Park';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email FROM customers WHERE customer_address LIKE '%Ave%' AND customer_phone IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_address FROM customers WHERE customer_email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE '%r%' AND customer_address <> '456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_phone FROM customers WHERE customer_email LIKE '%@yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name FROM customers WHERE customer_id = 10 OR customer_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE,\n    customer_phone VARCHAR(15),\n    customer_address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT purchase_id, amount FROM purchases WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT purchase_date FROM purchases WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM purchases ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, c.email, p.amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE p.amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(p.purchase_id) AS total_purchases FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(p.amount) AS total_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(p.amount) AS avg_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, MAX(p.amount) AS max_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, MIN(p.amount) AS min_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(p.amount) AS avg_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE p.amount > 1000 GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(p.amount) AS total_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE c.name LIKE 'A%' GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(p.amount) AS avg_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE c.customer_id = 123 GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE c.customer_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE p.purchase_date = '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.purchase_date, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customers.name LIKE 'A%' AND purchases.amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.purchase_date, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name HAVING SUM(purchases.amount) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, COUNT(*) AS total_purchases FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name ORDER BY total_purchases DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.amount IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT customers.name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.amount BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.amount IN (200, 300, 400);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date > '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.purchase_date, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customers.email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customers.phone_number LIKE '%1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, COUNT(purchases.purchase_id) AS total_purchases FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name HAVING total_purchases >= 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, MAX(purchases.amount) AS max_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name ORDER BY max_purchase_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, AVG(purchases.amount) AS avg_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name ORDER BY avg_purchase_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.purchase_date, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.amount > (SELECT AVG(amount) FROM purchases);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, COUNT(purchases.purchase_id) AS total_purchases, SUM(purchases.amount) AS total_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name ORDER BY total_amount DESC, total_purchases DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.purchase_date, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date > (SELECT MAX(purchase_date) FROM purchases);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  purchase_date DATE,\n  vehicle_id INT,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date = CURRENT_DATE();",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM cars;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT car_brand, car_model, car_year FROM cars WHERE car_year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT car_brand, car_model FROM cars WHERE car_brand = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT purchase_date, purchase_amount FROM purchases WHERE purchase_amount > 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE c.customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, ca.car_brand, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars ca ON p.car_id = ca.car_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, ca.car_brand, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars ca ON p.car_id = ca.car_id WHERE ca.car_color = 'Red';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT MAX(purchase_amount) AS max_purchase_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(purchase_amount) AS avg_purchase_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_purchases FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(purchase_amount) AS total_spent FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, car_year, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars ca ON p.car_id = ca.car_id WHERE c.customer_name = 'Alice' AND ca.car_year > 2015;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars ca ON p.car_id = ca.car_id WHERE c.customer_name = 'Bob' AND ca.car_brand = 'Honda';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars ca ON p.car_id = ca.car_id WHERE ca.car_color = 'Blue';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars ca ON p.car_id = ca.car_id WHERE purchase_amount = (SELECT MAX(purchase_amount) FROM purchases);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT car_brand, car_model, car_year FROM cars WHERE car_color = 'Red';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, car_model, purchase_date FROM customers c, cars cr, purchases p WHERE c.customer_id = p.customer_id AND cr.car_id = p.car_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT MAX(purchase_amount) AS highest_purchase_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(purchase_amount) AS total_purchase_amount FROM customers c, purchases p WHERE c.customer_id = p.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, car_brand, car_model, purchase_date FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id INNER JOIN cars ON purchases.car_id = cars.car_id WHERE customers.customer_email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars cr ON p.car_id = cr.car_id WHERE cr.car_year > 2015 ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars cr ON p.car_id = cr.car_id WHERE cr.car_color IN ('Blue', 'Green') AND p.purchase_amount > 1000 ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars cr ON p.car_id = cr.car_id WHERE p.purchase_amount BETWEEN 5000 AND 10000 ORDER BY purchase_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(purchase_amount) AS avg_purchase_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY customer_name HAVING avg_purchase_amount > 2000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS total_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT car_brand, COUNT(*) AS total_cars FROM cars GROUP BY car_brand HAVING total_cars > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(purchase_amount) AS min_purchase_amount, MAX(purchase_amount) AS max_purchase_amount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, car_year, SUM(purchase_amount) AS total_purchase_amount FROM customers c LEFT JOIN purchases p ON c.customer_id = p.customer_id LEFT JOIN cars cr ON p.car_id = cr.car_id GROUP BY customer_name, car_brand, car_year;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, car_model, purchase_date, DATEDIFF(NOW(), purchase_date) AS days_since_purchase FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN cars cr ON p.car_id = cr.car_id ORDER BY days_since_purchase DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, car_brand, car_model, car_color FROM customers c, cars cr, purchases p WHERE c.customer_id = p.customer_id AND cr.car_id = p.car_id AND purchase_date BETWEEN '2022-01-01' AND '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email, customer_phone FROM customers WHERE customer_id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, car_brand, car_model, car_color, purchase_date FROM customers c, cars cr, purchases p WHERE c.customer_id = p.customer_id AND cr.car_id = p.car_id AND purchase_date > '2022-06-01' ORDER BY purchase_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    car_brand VARCHAR(50),\n    car_model VARCHAR(50),\n    car_year INT,\n    car_color VARCHAR(20)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    purchase_date TIMESTAMP,\n    purchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_purchases, DATE(purchase_date) AS purchase_day FROM purchases GROUP BY purchase_day ORDER BY purchase_day ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM cars",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM cars",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT car_id, make, model FROM cars WHERE year > 2010",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM rentals",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT rental_id, customer_id, car_id FROM rentals",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT rental_id, rental_date, return_date FROM rentals WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM payments",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT payment_id, rental_id, amount FROM payments",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date FROM payments WHERE amount > 100",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, rental_date, return_date FROM customers c JOIN rentals r ON c.customer_id = r.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT make, model, rental_date, return_date FROM cars c JOIN rentals r ON c.car_id = r.car_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, rental_date, return_date, amount FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN payments p ON r.rental_id = p.rental_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT make, model, rental_date, return_date, amount FROM cars c JOIN rentals r ON c.car_id = r.car_id JOIN payments p ON r.rental_id = p.rental_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, r.rental_date, r.return_date, p.amount FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN payments p ON r.rental_id = p.rental_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.make, c.model, r.rental_date, r.return_date, p.amount FROM cars c JOIN rentals r ON c.car_id = r.car_id JOIN payments p ON r.rental_id = p.rental_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.make, c.model, r.rental_date, r.return_date, p.amount FROM cars c JOIN rentals r ON c.car_id = r.car_id JOIN payments p ON r.rental_id = p.rental_id WHERE p.amount > 100",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.make, c.model, r.rental_date, r.return_date, p.amount FROM cars c JOIN rentals r ON c.car_id = r.car_id JOIN payments p ON r.rental_id = p.rental_id WHERE c.make = 'Toyota'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM cars WHERE year > 2015;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT make, model FROM cars WHERE make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM rentals WHERE rental_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, make, model FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN cars car ON r.car_id = car.car_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, r.rental_date, p.amount FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN payments p ON r.rental_id = p.rental_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, r.rental_date, r.return_date, p.amount FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN payments p ON r.rental_id = p.rental_id WHERE p.amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id WHERE r.customer_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id WHERE r.customer_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, COUNT(r.rental_id) AS rental_count FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id GROUP BY c.first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, SUM(p.amount) AS total_payments FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id LEFT JOIN payments p ON r.rental_id = p.rental_id GROUP BY c.first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT r.rental_date, COUNT(p.payment_id) AS payment_count FROM rentals r LEFT JOIN payments p ON r.rental_id = p.rental_id GROUP BY r.rental_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, AVG(p.amount) AS avg_payment FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id LEFT JOIN payments p ON r.rental_id = p.rental_id GROUP BY c.first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, MAX(p.amount) AS max_payment FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id LEFT JOIN payments p ON r.rental_id = p.rental_id GROUP BY c.first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, MIN(p.amount) AS min_payment FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id LEFT JOIN payments p ON r.rental_id = p.payment_id GROUP BY c.first_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.customer_id, COUNT(r.rental_id) AS rental_count FROM customers c LEFT JOIN rentals r ON c.customer_id = r.customer_id GROUP BY c.customer_id HAVING COUNT(r.rental_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, car.make, car.model, p.amount FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN cars car ON r.car_id = car.car_id JOIN payments p ON r.rental_id = p.rental_id ORDER BY p.amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, car.make, car.model, p.amount FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN cars car ON r.car_id = car.car_id JOIN payments p ON r.rental_id = p.rental_id ORDER BY p.amount ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE cars (\n  car_id INT PRIMARY KEY,\n  make VARCHAR(50),\n  model VARCHAR(50),\n  year INT,\n  rental_price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE rentals (\n  rental_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  car_id INT REFERENCES cars(car_id),\n  rental_date DATE,\n  return_date DATE\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  rental_id INT REFERENCES rentals(rental_id),\n  amount DECIMAL(10, 2),\n  payment_date DATE\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, car.make, car.model, p.amount FROM customers c JOIN rentals r ON c.customer_id = r.customer_id JOIN cars car ON r.car_id = car.car_id JOIN payments p ON r.rental_id = p.rental_id WHERE r.return_date >= '2022-01-01' AND r.return_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM cars;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM cars;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM rentals;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT rental_id, start_date, end_date FROM rentals;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_date FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT rating, comment FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT name, email, phone_number FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT make, model, price FROM cars;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customer_id, car_id FROM rentals;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customer_id, car_id, rating FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT rental_id, start_date, end_date, amount FROM rentals JOIN payments ON rentals.rental_id = payments.rental_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT name, email, make, model FROM customers CROSS JOIN cars;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM rentals WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM payments WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM reviews WHERE rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT * FROM cars WHERE year > 2015 AND price < 20000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, rentals.start_date, rentals.end_date, cars.make, cars.model FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, payments.amount, payments.payment_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id JOIN payments ON rentals.rental_id = payments.rental_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, payments.amount, payments.payment_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id JOIN payments ON rentals.rental_id = payments.rental_id WHERE payments.amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, reviews.rating, reviews.comment FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT cars.make, cars.model, rentals.start_date, rentals.end_date, rentals.customer_id FROM cars JOIN rentals ON cars.car_id = rentals.car_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT cars.make, cars.model, rentals.start_date, rentals.end_date, payments.amount FROM cars JOIN rentals ON cars.car_id = rentals.car_id JOIN payments ON rentals.rental_id = payments.rental_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, rentals.start_date, rentals.end_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id WHERE customers.name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, payments.amount, payments.payment_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id JOIN payments ON rentals.rental_id = payments.rental_id WHERE payments.amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT cars.make, cars.model, rentals.start_date, rentals.end_date, payments.amount FROM cars JOIN rentals ON cars.car_id = rentals.car_id JOIN payments ON rentals.rental_id = payments.rental_id WHERE payments.amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, reviews.rating, reviews.comment FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id WHERE reviews.rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, rentals.start_date, rentals.end_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id WHERE rentals.start_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, rentals.start_date, rentals.end_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id WHERE rentals.end_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT cars.make, cars.model, rentals.start_date, rentals.end_date, customers.email FROM cars JOIN rentals ON cars.car_id = rentals.car_id JOIN customers ON customers.customer_id = rentals.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, rentals.start_date, rentals.end_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id WHERE cars.make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, reviews.rating, reviews.comment, cars.make, cars.model FROM customers JOIN reviews ON customers.customer_id = reviews.customer_id JOIN cars ON reviews.car_id = cars.car_id WHERE reviews.rating < 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, rentals.start_date, rentals.end_date, cars.make, cars.model, payments.amount FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id JOIN payments ON rentals.rental_id = payments.rental_id WHERE payments.amount < 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, rentals.start_date, rentals.end_date FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id WHERE customers.phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE cars (\n    car_id INT PRIMARY KEY,\n    make STRING,\n    model STRING,\n    year INT,\n    price DECIMAL\n);\n\nCREATE TABLE rentals (\n    rental_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    rental_id INT REFERENCES rentals(rental_id),\n    amount DECIMAL,\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    car_id INT REFERENCES cars(car_id),\n    rating INT,\n    comment STRING\n);\n\n### STATEMENT\n\nSELECT customers.name, cars.make, cars.model, reviews.rating, reviews.comment FROM customers JOIN rentals ON customers.customer_id = rentals.customer_id JOIN cars ON rentals.car_id = cars.car_id JOIN reviews ON customers.customer_id = reviews.customer_id AND cars.car_id = reviews.car_id WHERE reviews.rating > 4;"
]