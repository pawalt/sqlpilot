[
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, year FROM vehicles WHERE make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year >= 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make = 'Honda' OR make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles ORDER BY year DESC;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make FROM vehicles WHERE model LIKE 'Civic%';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, make, model FROM vehicles WHERE year BETWEEN 2015 AND 2020;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make = 'Ford' AND model = 'F-150';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, make, year FROM vehicles WHERE model LIKE '%SUV%';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE year <= 2000;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make = 'Chevrolet' ORDER BY year ASC;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, make, model FROM vehicles WHERE make = 'BMW' AND year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make = 'Nissan' OR model = 'Altima';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year NOT IN (2014, 2016, 2018);",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE make = 'Tesla' AND year >= 2019;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, make, year FROM vehicles WHERE model NOT LIKE '%Truck%';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make = 'Volkswagen' AND year >= 2005;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE year = 2015 AND make != 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, make, year FROM vehicles WHERE make IN ('Ford', 'Chevrolet', 'Dodge');",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make = 'Ford' AND year >= 2015;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM vehicles WHERE make = 'Chevrolet';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE year BETWEEN 2015 AND 2020;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(year) FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, make, model, year FROM vehicles ORDER BY year DESC;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, COUNT(*) FROM vehicles GROUP BY make;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make LIKE 'H%';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, MAX(year) FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, MIN(year) FROM vehicles WHERE make LIKE 'C%';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, SUM(year) FROM vehicles GROUP BY make ORDER BY SUM(year) DESC;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE year % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT make FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, make, model FROM vehicles WHERE id > 5 AND id < 10;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE id IN (1, 3, 5, 7);",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, COUNT(*) FROM vehicles WHERE year < 2010 GROUP BY make HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make = 'Honda' UNION SELECT make, model, year FROM vehicles WHERE make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make = 'Fiat' INTERSECT SELECT make, model, year FROM vehicles WHERE make = 'Chevrolet';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50) NOT NULL,\n    model VARCHAR(50) NOT NULL,\n    year INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make = 'Toyota' EXCEPT SELECT make, model, year FROM vehicles WHERE year < 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT year FROM vehicles WHERE make='Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year>2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT vehicle_id, make FROM vehicles WHERE year=2015;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT vehicle_id, make, model FROM vehicles WHERE year BETWEEN 2010 AND 2015;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM dealers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT name, location FROM dealers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM dealers WHERE location='Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT dealer_id, name FROM dealers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles JOIN dealers ON vehicles.vehicle_id = dealers.dealer_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT d.name, v.make, v.model FROM dealers d JOIN vehicles v ON d.dealer_id = v.vehicle_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT d.name AS dealer_name, v.make AS vehicle_make FROM dealers d JOIN vehicles v ON d.dealer_id = v.vehicle_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT d.name AS dealer_name, v.make AS vehicle_make FROM dealers d JOIN vehicles v ON d.dealer_id = v.vehicle_id WHERE v.year=2015;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_vehicles FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(year) AS latest_year FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(year) AS oldest_year FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(year) AS average_year FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, COUNT(*) AS total_count FROM vehicles GROUP BY make;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS dealer_count FROM dealers GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE make='Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT name, location FROM dealers WHERE location='New York';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(year) FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, COUNT(*) FROM vehicles GROUP BY make;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles INNER JOIN dealers ON vehicles.make = dealers.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year > 2015 ORDER BY year DESC;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, model, COUNT(*) FROM vehicles WHERE year > 2015 GROUP BY make, model;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make='Ford' OR make='Chevrolet';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles INNER JOIN dealers ON vehicles.vehicle_id = dealers.dealer_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE year > 2010 AND make='Honda';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT make FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year BETWEEN 2010 AND 2020;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT name, model FROM vehicles INNER JOIN dealers ON vehicles.make = dealers.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, COUNT(*) FROM vehicles GROUP BY make HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(year) FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles WHERE year < 2010 OR year > 2015;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  make TEXT,\n  model TEXT,\n  year INT\n);\n\nCREATE TABLE dealers (\n  dealer_id INT PRIMARY KEY,\n  name TEXT,\n  location TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make IN ('Toyota', 'Nissan');",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_make;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT id, make FROM car_make;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT make FROM car_make WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_model;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT id, model FROM car_model;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT model FROM car_model WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_year;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT id, year FROM car_year;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT year FROM car_year WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_make WHERE make LIKE 'Toyota%';",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_model WHERE make_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, m.model FROM car_make c JOIN car_model m ON c.id = m.make_id WHERE c.make = 'Honda';",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id WHERE y.year = 2020;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id WHERE c.make = 'Ford' AND y.year = 2019;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, COUNT(m.id) AS models_count FROM car_make c LEFT JOIN car_model m ON c.id = m.make_id GROUP BY c.make;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, AVG (y.year) AS avg_year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id GROUP BY c.make;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, MAX(y.year) AS latest_year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id GROUP BY c.make;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, MIN(y.year) AS oldest_year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id GROUP BY c.make;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id ORDER BY y.year DESC;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT c.make, m.model, y.year FROM car_make c JOIN car_model m ON c.id = m.make_id JOIN car_year y ON m.id = y.model_id ORDER BY c.make ASC,y.year DESC;",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT make FROM car_make",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_model INNER JOIN car_make ON car_model.make_id = car_make.id",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT model FROM car_model WHERE make_id = 1",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT year FROM car_year INNER JOIN car_model ON car_year.model_id = car_model.id",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_make WHERE make = 'Toyota'",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT model FROM car_model WHERE make_id IN (SELECT id FROM car_make WHERE make = 'Honda')",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_make WHERE id IN (SELECT make_id FROM car_model)",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT year FROM car_year INNER JOIN car_model ON car_year.model_id = car_model.id WHERE car_model.make_id = (SELECT id FROM car_make WHERE make = 'Ford')",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT make, model FROM car_make INNER JOIN car_model ON car_make.id = car_model.make_id",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_model INNER JOIN car_make ON car_model.make_id = car_make.id WHERE car_make.id = (SELECT id FROM car_make WHERE make = 'Chevrolet')",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT year FROM car_year INNER JOIN car_model ON car_year.model_id = car_model.id INNER JOIN car_make ON car_model.make_id = car_make.id WHERE car_make.make = 'Ford'",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT make FROM car_make WHERE id IN (SELECT make_id FROM car_model WHERE id IN (SELECT model_id FROM car_year WHERE year = 2020))",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_model WHERE make_id IN (SELECT id FROM car_make WHERE make IN ('Toyota', 'Honda'))",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT year FROM car_year WHERE model_id IN (SELECT id FROM car_model WHERE make_id = 1)",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT make, model FROM car_make INNER JOIN car_model ON car_make.id = car_model.make_id INNER JOIN car_year ON car_model.id = car_year.model_id WHERE car_year.year = 2010",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT * FROM car_model INNER JOIN car_year ON car_model.id = car_year.model_id WHERE car_year.year > 2015",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT make FROM car_make WHERE id = (SELECT make_id FROM car_model WHERE id = (SELECT model_id FROM car_year WHERE year = 2012))",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT model FROM car_model WHERE id NOT IN (SELECT model_id FROM car_year WHERE year = 2015)",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT make, model FROM car_make INNER JOIN car_model ON car_make.id = car_model.make_id WHERE car_model.id NOT IN (SELECT model_id FROM car_year WHERE year < 2010)",
  "### TABLEDATA\n\nCREATE TABLE car_make (\n  id SERIAL PRIMARY KEY,\n  make VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE car_model (\n  id SERIAL PRIMARY KEY,\n  model VARCHAR(255) NOT NULL,\n  make_id INT REFERENCES car_make(id)\n);\n\n\nCREATE TABLE car_year (\n  id SERIAL PRIMARY KEY,\n  year INT NOT NULL,\n  model_id INT REFERENCES car_model(id)\n);\n\n### STATEMENT\n\nSELECT year FROM car_year WHERE model_id IN (SELECT id FROM car_model WHERE make_id = (SELECT id FROM car_make WHERE make = 'Ford'))",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date FROM sales WHERE sale_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT vehicle_id, customer_id FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM dealerships;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT name, location FROM dealerships;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT dealership_id FROM dealerships WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT vehicles.make, customers.name FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id JOIN customers ON sales.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, dealerships.location FROM sales JOIN customers ON sales.customer_id = customers.customer_id JOIN dealerships ON customers.name = dealerships.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT vehicles.make, COUNT(sales.vehicle_id) AS total_sales FROM sales JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY vehicles.make;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT dealerships.location, AVG(sales.sale_id) AS avg_sale_id FROM sales JOIN dealerships ON sales.customer_id = dealerships.dealership_id GROUP BY dealerships.location;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make = 'Toyota' AND year > 2018;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MAX(year) AS latest_year FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MIN(year) AS earliest_year FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, vehicles.make, vehicles.model FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, sales.sale_date, vehicles.make, vehicles.model FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id WHERE sales.sale_date BETWEEN '2020-01-01' AND '2020-12-31';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, customers.email, dealerships.name AS dealership_name FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN dealerships ON dealerships.dealership_id = sales.dealership_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT vehicles.make, COUNT(*) AS total_sales FROM sales JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY vehicles.make;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT dealerships.name, COUNT(*) AS total_sales FROM sales JOIN dealerships ON sales.dealership_id = dealerships.dealership_id GROUP BY dealerships.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, customers.email FROM customers WHERE EXISTS (SELECT * FROM sales WHERE sales.customer_id = customers.customer_id);",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, customers.email FROM customers WHERE NOT EXISTS (SELECT * FROM sales WHERE sales.customer_id = customers.customer_id);",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT dealerships.name, AVG(vehicles.year) AS avg_year FROM sales JOIN vehicles ON sales.vehicle_id = vehicles.id JOIN dealerships ON sales.dealership_id = dealerships.dealership_id GROUP BY dealerships.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, COUNT(sales.sale_id) AS total_sales FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customers.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, MAX(vehicles.year) AS max_year FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY customers.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT vehicles.make, COUNT(sales.sale_id) AS total_sales FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id GROUP BY vehicles.make;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT dealerships.name, MIN(vehicles.year) AS min_year FROM dealerships JOIN sales ON dealerships.dealership_id = sales.dealership_id JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY dealerships.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT dealerships.name, vehicles.make, vehicles.model, sales.sale_date FROM dealerships JOIN sales ON dealerships.dealership_id = sales.dealership_id JOIN vehicles ON sales.vehicle_id = vehicles.id WHERE sales.sale_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, dealerships.name, vehicles.make, vehicles.model, sales.sale_date FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id JOIN dealerships ON sales.dealership_id = dealerships.dealership_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, COUNT(*) AS total_sales FROM customers JOIN sales ON customers.customer_id = sales.customer_id GROUP BY customers.name HAVING total_sales > 1;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customers.name, SUM(vehicles.year) AS total_year FROM customers JOIN sales ON customers.customer_id = sales.customer_id JOIN vehicles ON sales.vehicle_id = vehicles.id GROUP BY customers.name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT vehicles.make, vehicles.model, SUM(sales.sale_id) AS total_sales FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id GROUP BY vehicles.make, vehicles.model;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(255),\n    model VARCHAR(255),\n    year INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    sale_date DATE,\n    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE dealerships (\n    dealership_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT vehicles.make, vehicles.model, SUM(vehicles.year) AS total_year FROM vehicles JOIN sales ON vehicles.id = sales.vehicle_id GROUP BY vehicles.make, vehicles.model;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT make, model FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT id, year FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT id, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT vehicle_id, customer_id FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT id, order_date FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT order_id, amount FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT id, payment_date FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT vehicle_id, customer_id FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT rating, review_text FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT vehicles.make, customers.first_name FROM vehicles JOIN customers ON vehicles.id = customers.id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT vehicles.make, customers.first_name, payments.amount FROM vehicles JOIN customers ON vehicles.id = customers.id JOIN orders ON vehicles.id = orders.vehicle_id JOIN payments ON orders.id = payments.order_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT vehicles.make, reviews.rating, reviews.review_text FROM vehicles JOIN reviews ON vehicles.id = reviews.vehicle_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT customers.first_name, SUM(payments.amount) AS total_payment FROM customers JOIN orders ON customers.id = orders.customer_id JOIN payments ON orders.id = payments.order_id GROUP BY customers.first_name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT vehicles.make, COUNT(reviews.id) AS num_reviews FROM vehicles JOIN reviews ON vehicles.id = reviews.vehicle_id GROUP BY vehicles.make HAVING COUNT(reviews.id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE make = 'Toyota';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customers WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, v.make, v.model FROM customers c INNER JOIN vehicles v ON c.id = v.id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, v.make, v.model, r.rating FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN reviews r ON v.id = r.vehicle_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, v.make, v.model, o.order_date FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN orders o ON v.id = o.vehicle_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, v.make, v.model, p.amount FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN orders o ON v.id = o.vehicle_id INNER JOIN payments p ON o.id = p.order_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, v.make, v.model, p.amount, r.rating FROM customers c INNER JOIN vehicles v ON c.id = v.id INNER JOIN orders o ON v.id = o.vehicle_id INNER JOIN payments p ON o.id = p.order_id INNER JOIN reviews r ON v.id = r.vehicle_id;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT make FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(rating) AS average_rating FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT v.make, COUNT(order_id) AS num_orders FROM vehicles v INNER JOIN orders o ON v.id = o.vehicle_id GROUP BY v.make;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, SUM(amount) AS total_payments FROM customers c INNER JOIN orders o ON c.id = o.customer_id INNER JOIN payments p ON o.id = p.order_id GROUP BY c.first_name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, COUNT(order_id) AS num_orders, SUM(amount) AS total_payments FROM customers c INNER JOIN orders o ON c.id = o.customer_id INNER JOIN payments p ON o.id = p.order_id GROUP BY c.first_name;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT v.make, r.rating, AVG(rating) AS avg_rating FROM vehicles v LEFT JOIN reviews r ON v.id = r.vehicle_id GROUP BY v.make, r.rating;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE year BETWEEN 2010 AND 2020;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE year IN (2015, 2016, 2017);",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles WHERE make LIKE 'Ho%';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT make, model, year FROM vehicles ORDER BY year DESC;",
  "### TABLEDATA\n\nCREATE TABLE vehicles (\n    id INT PRIMARY KEY,\n    make VARCHAR(50),\n    model VARCHAR(50),\n    year INT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    order_date DATE\n);\n\nCREATE TABLE payments (\n    id INT PRIMARY KEY,\n    order_id INT,\n    amount DECIMAL(10,2),\n    payment_date DATE\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY,\n    vehicle_id INT,\n    customer_id INT,\n    rating INT,\n    review_text TEXT\n);\n\n### STATEMENT\n\nSELECT c.first_name, v.make, v.model, r.rating FROM customers c INNER JOIN vehicles v ON c.id = v.id LEFT JOIN reviews r ON v.id = r.vehicle_id;"
]