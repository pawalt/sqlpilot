[
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE effective_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_id = 5",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_description FROM remote_work_policies WHERE last_updated > '2021-06-30'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, policy_description FROM remote_work_policies WHERE policy_id IN (2, 4, 6)",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE effective_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_id = (SELECT MAX(policy_id) FROM remote_work_policies)",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, MAX(effective_date) AS latest_effective_date FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS policy_count FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, DATE_FORMAT(effective_date, '%M %d, %Y') AS formatted_date FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, LENGTH(policy_description) AS description_length FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title, DATEDIFF(CURRENT_DATE, effective_date) AS days_since_effective FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title, TIMESTAMPDIFF(SECOND, last_updated, NOW()) AS seconds_since_last_update FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, DATE_ADD(effective_date, INTERVAL 30 DAY) AS future_date FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUBSTRING(policy_description, 1, 50) AS short_description FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, DATE_FORMAT(last_updated, '%Y-%m-%d %H:%i:%s') AS formatted_last_updated FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, DATE_ADD(effective_date, INTERVAL 1 YEAR) AS one_year_later_date FROM remote_work_policies",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title, policy_description FROM remote_work_policies ORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, policy_description FROM remote_work_policies ORDER BY LENGTH(policy_description) DESC",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE effective_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, policy_description FROM remote_work_policies WHERE last_updated BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT policy_title FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM remote_work_policies WHERE policy_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies ORDER BY effective_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_description FROM remote_work_policies WHERE policy_title LIKE '%flexible%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(policy_id) FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(policy_id), MIN(policy_id) FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, policy_id FROM remote_work_policies WHERE effective_date < '2021-01-01' AND last_updated > '2020-12-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE effective_date = (SELECT MAX(effective_date) FROM remote_work_policies);",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE policy_description LIKE '%remote%' AND policy_title LIKE '%policy%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE last_updated > '2021-06-01' AND last_updated < '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_title, policy_description FROM remote_work_policies WHERE DATE_PART('year', last_updated) = 2021;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_description FROM remote_work_policies WHERE policy_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title, policy_description FROM remote_work_policies WHERE policy_title ILIKE '%remote%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE effective_date >= '2021-01-01' AND effective_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE policy_description ILIKE '%flexible%' AND last_updated < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT policy_id, policy_title FROM remote_work_policies WHERE last_updated = (SELECT MAX(last_updated) FROM remote_work_policies);",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM Remote_Work_Policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Work_Guidelines;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT guideline_name, guideline_content FROM Work_Guidelines;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT guideline_id, guideline_name FROM Work_Guidelines WHERE guideline_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, last_updated_date FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT guideline_id, guideline_name, created_date FROM Work_Guidelines;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_description, last_updated_date FROM Remote_Work_Policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT guideline_id, guideline_name, guideline_content, created_date FROM Work_Guidelines WHERE guideline_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Remote_Work_Policies WHERE last_updated_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Work_Guidelines WHERE created_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM Remote_Work_Policies WHERE last_updated_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT guideline_id, guideline_name FROM Work_Guidelines WHERE created_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Work_Guidelines;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id) FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(guideline_id) FROM Work_Guidelines;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT policy_name FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT guideline_name FROM Work_Guidelines;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Remote_Work_Policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, last_updated_date FROM Remote_Work_Policies WHERE policy_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Remote_Work_Policies WHERE last_updated_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_policies FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id) AS avg_policy_id FROM Remote_Work_Policies;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) AS policy_count FROM Remote_Work_Policies GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT p.policy_name, g.guideline_content FROM Remote_Work_Policies p INNER JOIN Work_Guidelines g ON p.policy_id = g.guideline_id;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT p.policy_name, g.guideline_content FROM Remote_Work_Policies p LEFT JOIN Work_Guidelines g ON p.policy_id = g.guideline_id;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT p.policy_name, g.guideline_content FROM Remote_Work_Policies p RIGHT JOIN Work_Guidelines g ON p.policy_id = g.guideline_id;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT p.policy_name, g.guideline_content FROM Remote_Work_Policies p INNER JOIN Work_Guidelines g ON p.policy_id = g.guideline_id WHERE p.policy_id > 5 AND g.guideline_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, guideline_content FROM Remote_Work_Policies, Work_Guidelines WHERE Remote_Work_Policies.policy_id = Work_Guidelines.guideline_id;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Remote_Work_Policies WHERE policy_description LIKE '%policy%';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Work_Guidelines WHERE guideline_name = 'Flexible Hours' AND guideline_content LIKE '%work%';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, MAX(created_date) AS latest_created_date FROM Work_Guidelines GROUP BY policy_id;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(*) AS total_guidelines FROM Remote_Work_Policies LEFT JOIN Work_Guidelines ON Remote_Work_Policies.policy_id = Work_Guidelines.guideline_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, guideline_id, guideline_name FROM Remote_Work_Policies CROSS JOIN Work_Guidelines;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id) AS avg_policy_id, MAX(guideline_id) AS max_guideline_id FROM Remote_Work_Policies INNER JOIN Work_Guidelines ON Remote_Work_Policies.policy_id = Work_Guidelines.guideline_id;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, COUNT(g.guideline_id) AS num_guidelines FROM Remote_Work_Policies p INNER JOIN Work_Guidelines g ON p.policy_id = g.guideline_id GROUP BY policy_name;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM Remote_Work_Policies WHERE policy_id IN (SELECT guideline_id FROM Work_Guidelines WHERE created_date > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM Remote_Work_Policies WHERE policy_id NOT IN (SELECT guideline_id FROM Work_Guidelines);",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, last_updated FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, request_date FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, request_status FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, hire_date FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description, last_updated FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department, hire_date FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, last_updated FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT request_id, employee_id, request_date FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT request_id, employee_id, request_status FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name, department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, hire_date FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT request_id, request_date FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name, hire_date FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_description, last_updated FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT request_id, employee_id, request_date, request_status FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies INNER JOIN employee_requests ON remote_work_policies.policy_id = employee_requests.request_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM remote_work_policies WHERE last_updated > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees WHERE hire_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_description FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_description LIKE '%flexible%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees WHERE department = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM employee_requests WHERE request_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, request_date FROM employee_requests WHERE request_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, last_updated FROM remote_work_policies WHERE last_updated < NOW();",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_name, LENGTH(policy_description) AS description_length FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, COUNT(request_id) AS total_requests FROM employee_requests GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM employees INNER JOIN employee_requests ON employees.employee_id = employee_requests.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, request_date FROM employee_requests ORDER BY request_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, hire_date FROM employees ORDER BY hire_date;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_description FROM remote_work_policies WHERE policy_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(employee_id) AS total_employees FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(request_date) AS avg_request_date FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, request_date FROM employees LEFT JOIN employee_requests ON employees.employee_id = employee_requests.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_category FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_updates;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT update_date, update_description FROM policy_updates;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_owners;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT owner_name, owner_email FROM policy_owners;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_history;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT event_date, action_performed FROM policy_history;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_description FROM remote_work_policies WHERE policy_category = 'Remote';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT owner_name FROM policy_owners WHERE owner_email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_title, policy_description FROM remote_work_policies WHERE policy_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_updates ORDER BY update_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT history_id, policy_id, event_date, action_performed FROM policy_history WHERE event_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, update_date FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_description, update_date, update_description FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_category, action_performed FROM remote_work_policies JOIN policy_history ON remote_work_policies.policy_id = policy_history.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, owner_name FROM remote_work_policies JOIN policy_owners ON remote_work_policies.policy_id = policy_owners.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT AVG(policy_id) FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT MAX(owner_id) FROM policy_owners;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_category FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_description FROM remote_work_policies WHERE policy_category = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_updates INNER JOIN remote_work_policies ON policy_updates.policy_id = remote_work_policies.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_updates.update_date, policy_updates.update_description, remote_work_policies.policy_title FROM policy_updates INNER JOIN remote_work_policies ON policy_updates.policy_id = remote_work_policies.policy_id WHERE policy_updates.update_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_description FROM remote_work_policies WHERE policy_id IN (SELECT policy_id FROM policy_updates WHERE update_date >= '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT owner_name, owner_email FROM policy_owners WHERE owner_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT policy_category FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, action_performed FROM remote_work_policies JOIN policy_history ON remote_work_policies.policy_id = policy_history.policy_id WHERE event_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_policies FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, COUNT(*) AS total_updates FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id GROUP BY policy_title;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT owner_name, COUNT(*) AS total_policies FROM policy_owners JOIN remote_work_policies ON policy_owners.owner_id = remote_work_policies.policy_id GROUP BY owner_name;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, update_date, update_description FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id ORDER BY update_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_category, COUNT(*) AS total_updates FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id GROUP BY policy_title, policy_category;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, owner_name, update_date FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id JOIN policy_owners ON remote_work_policies.policy_id = policy_owners.owner_id ORDER BY update_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_description, policy_category FROM remote_work_policies WHERE policy_description IS NOT NULL AND policy_category IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT owner_name, COUNT(*) AS total_policies FROM policy_owners JOIN remote_work_policies ON policy_owners.owner_id = remote_work_policies.policy_id GROUP BY owner_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_description, policy_category FROM remote_work_policies WHERE policy_category = 'IT' OR policy_category = 'Security';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, update_description FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id WHERE update_description LIKE '%update%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nSELECT policy_title, policy_category, event_date FROM remote_work_policies JOIN policy_history ON remote_work_policies.policy_id = policy_history.policy_id WHERE policy_history.action_performed = 'Amended';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT policy_name FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employee_roles;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT role_name FROM employee_roles;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT role_id, role_name FROM employee_roles;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_updates;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT update_description FROM policy_updates;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, update_date FROM policy_updates;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT employee_id, request_date, request_status FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_email FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT employee_id, role_id FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT remote_work_policies.policy_name, policy_updates.update_date FROM remote_work_policies JOIN policy_updates ON remote_work_policies.policy_id = policy_updates.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT employee_name, role_name FROM employees JOIN employee_roles ON employees.role_id = employee_roles.role_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.role_name, p.policy_name FROM employees e JOIN employee_roles r ON e.role_id = r.role_id JOIN remote_work_policies p ON r.role_id = p.policy_category;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT r.role_name, COUNT(e.employee_id) AS total_employees FROM employees e JOIN employee_roles r ON e.role_id = r.role_id GROUP BY r.role_name;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, SUM(update_id) AS total_updates FROM policy_updates GROUP BY policy_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT employee_id, AVG(request_id) AS avg_requests FROM employee_requests GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, policy_name, policy_category FROM remote_work_policies;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT policy_name, policy_description FROM remote_work_policies WHERE policy_category = 'HR Policies';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employee_roles;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT role_id, role_name FROM employee_roles;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT role_name, role_description FROM employee_roles WHERE role_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM policy_updates;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT policy_id, update_description, update_date FROM policy_updates WHERE update_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employee_requests;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT request_id, request_date, request_status FROM employee_requests WHERE employee_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name, employee_email FROM employees WHERE role_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_email FROM employees WHERE employee_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, r.role_name FROM remote_work_policies p JOIN employee_roles r ON p.policy_id = r.role_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_policies WHERE policy_category = 'IT Policies' AND policy_name LIKE '%Security%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.role_name FROM employees e JOIN employee_roles r ON e.role_id = r.role_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, COUNT(u.update_id) AS total_updates FROM remote_work_policies p LEFT JOIN policy_updates u ON p.policy_id = u.policy_id GROUP BY p.policy_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(r.request_id) AS total_requests FROM employees e LEFT JOIN employee_requests r ON e.employee_id = r.employee_id GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nSELECT p.policy_name, MAX(u.update_date) AS latest_update FROM remote_work_policies p JOIN policy_updates u ON p.policy_id = u.policy_id GROUP BY p.policy_id;"
]