[
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE effective_date < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    effective_date DATE,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE last_updated < '2021-12-01'",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM Remote_Work_Policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM Work_Guidelines WHERE guideline_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM Remote_Work_Policies WHERE policy_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM Remote_Work_Policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM Work_Guidelines WHERE created_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Remote_Work_Policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated_date DATE\n);\n\nCREATE TABLE Work_Guidelines (\n    guideline_id INT PRIMARY KEY,\n    guideline_name VARCHAR(255) NOT NULL,\n    guideline_content TEXT,\n    created_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM Remote_Work_Policies WHERE last_updated_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM employee_requests WHERE request_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM employees WHERE employee_id = 500;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM employee_requests WHERE request_status = 'Approved' AND request_date < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255) NOT NULL,\n    policy_description TEXT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    request_date DATE,\n    request_status VARCHAR(50) DEFAULT 'Pending',\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    department VARCHAR(100),\n    hire_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM employees WHERE department = 'HR' AND hire_date < '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nDELETE FROM policy_updates WHERE update_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nDELETE FROM policy_owners WHERE owner_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nDELETE FROM policy_updates WHERE update_date < '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_title TEXT NOT NULL,\n    policy_description TEXT,\n    policy_category TEXT\n);\n\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    update_date DATE,\n    update_description TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n\nCREATE TABLE policy_owners (\n    owner_id INT PRIMARY KEY,\n    owner_name TEXT NOT NULL,\n    owner_email TEXT UNIQUE\n);\n\n\nCREATE TABLE policy_history (\n    history_id INT PRIMARY KEY,\n    policy_id INT NOT NULL,\n    event_date DATE,\n    action_performed TEXT,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\n### STATEMENT\n\nDELETE FROM policy_history WHERE event_date < '2020-01-01'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nDELETE FROM employee_roles WHERE role_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nDELETE FROM policy_updates WHERE update_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nDELETE FROM remote_work_policies WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nDELETE FROM policy_updates WHERE policy_id IN (SELECT policy_id FROM remote_work_policies WHERE policy_category = 'HR');",
  "### TABLEDATA\n\nCREATE TABLE remote_work_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_category VARCHAR(50)\n);\n\nCREATE TABLE employee_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(255),\n    role_description TEXT\n);\n\nCREATE TABLE policy_updates (\n    update_id INT PRIMARY KEY,\n    policy_id INT,\n    update_description TEXT,\n    update_date DATE,\n    FOREIGN KEY (policy_id) REFERENCES remote_work_policies(policy_id)\n);\n\nCREATE TABLE employee_requests (\n    request_id INT PRIMARY KEY,\n    employee_id INT,\n    request_date DATE,\n    request_status VARCHAR(50),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    employee_email VARCHAR(255),\n    role_id INT,\n    FOREIGN KEY (role_id) REFERENCES employee_roles(role_id)\n);\n\n### STATEMENT\n\nDELETE FROM employees WHERE role_id = (SELECT role_id FROM employee_roles WHERE role_name = 'Manager');"
]