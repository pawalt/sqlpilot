[
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT evaluation_id, employee_id, evaluation_date FROM remote_work_performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, performance_rating FROM remote_work_performance_evaluations WHERE performance_rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations WHERE employee_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT evaluation_id, evaluation_date FROM remote_work_performance_evaluations WHERE evaluation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(performance_rating) AS max_rating FROM remote_work_performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(performance_rating) AS avg_rating FROM remote_work_performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_evaluations FROM remote_work_performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations ORDER BY evaluation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, COUNT(evaluation_id) AS evaluations_count FROM remote_work_performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT evaluator_id, AVG(performance_rating) AS avg_rating FROM remote_work_performance_evaluations GROUP BY evaluator_id;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations WHERE feedback IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations WHERE feedback LIKE '%improvement%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations WHERE performance_rating BETWEEN 3 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations WHERE performance_rating IN (4, 5);",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT employee_id FROM remote_work_performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations WHERE employee_id IN (101, 102);",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(performance_rating) AS max_rating, MIN(performance_rating) AS min_rating FROM remote_work_performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT evaluation_id, employee_id, evaluation_date FROM remote_work_performance_evaluations WHERE employee_id = 123 AND performance_rating > 4",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, evaluator_id, performance_rating FROM remote_work_performance_evaluations WHERE performance_rating BETWEEN 3 AND 5",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM remote_work_performance_evaluations ORDER BY evaluation_date DESC",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT evaluator_id FROM remote_work_performance_evaluations WHERE performance_rating < 3",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, COUNT(evaluation_id) AS total_evaluations FROM remote_work_performance_evaluations GROUP BY employee_id HAVING total_evaluations > 5",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, AVG(performance_rating) AS avg_rating FROM remote_work_performance_evaluations GROUP BY employee_id",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date, performance_rating FROM remote_work_performance_evaluations WHERE employee_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, MAX(performance_rating) AS max_rating FROM remote_work_performance_evaluations GROUP BY employee_id",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, MIN(performance_rating) AS min_rating FROM remote_work_performance_evaluations GROUP BY employee_id",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT evaluator_id, COUNT(DISTINCT employee_id) AS total_employees FROM remote_work_performance_evaluations GROUP BY evaluator_id HAVING total_employees > 2",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, feedback FROM remote_work_performance_evaluations WHERE feedback ILIKE '%improve%'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date FROM remote_work_performance_evaluations WHERE evaluation_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, performance_rating FROM remote_work_performance_evaluations WHERE evaluation_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, performance_rating FROM remote_work_performance_evaluations WHERE evaluation_date >= '2022-01-01' AND performance_rating < 3",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, feedback FROM remote_work_performance_evaluations WHERE performance_rating IS NULL",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, SUM(performance_rating) AS total_rating FROM remote_work_performance_evaluations GROUP BY employee_id",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, COUNT(DISTINCT evaluator_id) AS total_evaluators FROM remote_work_performance_evaluations GROUP BY employee_id HAVING total_evaluators > 1",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, AVG(performance_rating) AS avg_rating FROM remote_work_performance_evaluations WHERE evaluator_id = 456",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, feedback FROM remote_work_performance_evaluations WHERE evaluation_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE remote_work_performance_evaluations (\n  evaluation_id SERIAL PRIMARY KEY,\n  employee_id INT NOT NULL,\n  evaluator_id INT NOT NULL,\n  evaluation_date DATE NOT NULL,\n  performance_rating INT,\n  feedback TEXT\n)\n\n### STATEMENT\n\nSELECT evaluator_id, AVG(performance_rating) AS avg_rating FROM remote_work_performance_evaluations GROUP BY evaluator_id HAVING AVG(performance_rating) > 3",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_id, employee_id, evaluation_date, rating FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT feedback_text FROM employee_feedback;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback_date FROM employee_feedback;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_id, rating FROM performance_evaluations WHERE evaluation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM employee_feedback WHERE feedback_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback_text FROM employee_feedback WHERE employee_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date FROM performance_evaluations WHERE rating <= 2;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT feedback_text FROM employee_feedback WHERE LENGTH(feedback_text) > 100;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations ORDER BY evaluation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_id, rating FROM performance_evaluations ORDER BY rating ASC;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(rating) AS avg_rating FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(rating) AS max_rating FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, COUNT(*) AS num_evaluations FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, MAX(rating) AS highest_rating FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, AVG(rating) AS avg_rating FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, COUNT(*) AS num_feedback FROM employee_feedback GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT feedback_id, employee_id, feedback_date FROM employee_feedback LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_id, rating FROM performance_evaluations WHERE employee_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_id, employee_id, evaluation_date FROM performance_evaluations WHERE rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE feedback LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, COUNT(*) AS num_evaluations FROM performance_evaluations GROUP BY employee_id HAVING num_evaluations > 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations ORDER BY evaluation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date FROM performance_evaluations WHERE evaluation_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, AVG(rating) AS avg_rating FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE rating IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, MAX(rating) AS max_rating FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE evaluation_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, COUNT(DISTINCT evaluation_date) AS num_unique_dates FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_id, CONCAT('Eval-', evaluation_id) AS eval_name FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, SUM(rating) AS total_rating FROM performance_evaluations GROUP BY employee_id HAVING total_rating > 20;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, MIN(rating) AS min_rating FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE evaluation_date = '2022-09-15';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, COUNT(*) AS num_evaluations FROM performance_evaluations WHERE rating < 3 GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE feedback IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(evaluation_date) AS latest_evaluation_date FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(rating) AS overall_avg_rating FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    employee_id INT,\n    evaluation_date DATE,\n    rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employee_feedback (\n    feedback_id INT PRIMARY KEY,\n    employee_id INT,\n    feedback_date DATE,\n    feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_evaluations, AVG(rating) AS avg_rating FROM performance_evaluations GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeePerformance;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, performance_score FROM EmployeePerformance;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM TeamLeaders;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT leader_name, team_name FROM TeamLeaders;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FeedbackHistory;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text, reviewed_by FROM FeedbackHistory;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback_text FROM FeedbackHistory;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT leader_name, team_name FROM TeamLeaders WHERE total_members_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, performance_score FROM EmployeePerformance WHERE performance_score > 8.0;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT feedback_id, reviewed_by FROM FeedbackHistory WHERE feedback_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM TeamLeaders WHERE team_name LIKE 'Sales%';",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback_text FROM FeedbackHistory WHERE employee_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeePerformance ORDER BY performance_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeePerformance WHERE evaluation_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, performance_score FROM EmployeePerformance ORDER BY performance_score DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback_text FROM FeedbackHistory WHERE feedback_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT leader_name, total_members_count FROM TeamLeaders WHERE total_members_count >= 10;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date FROM EmployeePerformance WHERE evaluation_date > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FeedbackHistory WHERE employee_id IN (101, 102, 103);",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM TeamLeaders WHERE leader_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeePerformance WHERE performance_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date FROM EmployeePerformance WHERE performance_score < 60;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM TeamLeaders WHERE total_members_count > 10;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT team_name, total_members_count FROM TeamLeaders WHERE leader_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FeedbackHistory WHERE feedback_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback_text FROM FeedbackHistory WHERE feedback_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeePerformance INNER JOIN FeedbackHistory ON EmployeePerformance.employee_id = FeedbackHistory.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT e.employee_id, e.evaluation_date, f.feedback_date FROM EmployeePerformance e INNER JOIN FeedbackHistory f ON e.employee_id = f.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeePerformance LEFT JOIN FeedbackHistory ON EmployeePerformance.employee_id = FeedbackHistory.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeePerformance RIGHT JOIN FeedbackHistory ON EmployeePerformance.employee_id = FeedbackHistory.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT e.employee_id, e.performance_score, f.feedback_text FROM EmployeePerformance e LEFT JOIN FeedbackHistory f ON e.employee_id = f.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT t.team_name, COUNT(f.feedback_id) AS total_feedback FROM TeamLeaders t LEFT JOIN FeedbackHistory f ON t.leader_id = f.reviewed_by GROUP BY t.team_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT leader_id, leader_name FROM TeamLeaders WHERE leader_id IN (SELECT reviewed_by FROM FeedbackHistory);",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM TeamLeaders WHERE total_members_count > (SELECT AVG(total_members_count) FROM TeamLeaders);",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT t.team_name, e.employee_id, f.reviewed_by FROM TeamLeaders t INNER JOIN FeedbackHistory f ON t.leader_id = f.reviewed_by LEFT JOIN EmployeePerformance e ON f.employee_id = e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT t.team_name, e.employee_id, f.reviewed_by FROM (TeamLeaders t JOIN FeedbackHistory f ON t.leader_id = f.reviewed_by) LEFT JOIN EmployeePerformance e ON f.employee_id = e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT leader_id, AVG(performance_score) AS avg_performance FROM TeamLeaders t JOIN EmployeePerformance e ON t.leader_id = e.employee_id GROUP BY leader_id;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT t.team_name, MAX(e.performance_score) AS max_performance FROM TeamLeaders t JOIN EmployeePerformance e ON t.leader_id = e.employee_id GROUP BY t.team_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT t.team_name, MIN(e.performance_score) AS min_performance FROM TeamLeaders t JOIN EmployeePerformance e ON t.leader_id = e.employee_id GROUP BY t.team_name;",
  "### TABLEDATA\n\nCREATE TABLE EmployeePerformance (\n  employee_id INT PRIMARY KEY,\n  evaluation_date DATE,\n  performance_score DECIMAL,\n  feedback TEXT\n);\n\n\nCREATE TABLE TeamLeaders (\n  leader_id INT PRIMARY KEY,\n  team_name VARCHAR(50),\n  total_members_count INT,\n  leader_name VARCHAR(100)\n);\n\n\nCREATE TABLE FeedbackHistory (\n  feedback_id INT PRIMARY KEY,\n  employee_id INT,\n  feedback_date DATE,\n  reviewed_by VARCHAR(100),\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nSELECT t.team_name, AVG(e.performance_score) AS avg_performance FROM TeamLeaders t JOIN EmployeePerformance e ON t.leader_id = e.employee_id GROUP BY t.team_name HAVING avg_performance > 70;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM EvaluationCriteria;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM DevelopmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT evaluation_id, employee_id, evaluator_id FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, first_name, last_name FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT criteria_id, criteria_name FROM EvaluationCriteria;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT plan_id, employee_id, start_date, end_date FROM DevelopmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT evaluation_id, performance_rating FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT employee_id, department FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT criteria_id, description FROM EvaluationCriteria;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT plan_id, action_items FROM DevelopmentPlan;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PerformanceEvaluation WHERE performance_rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Employee WHERE department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM EvaluationCriteria WHERE criteria_name = 'Communication Skills';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM DevelopmentPlan WHERE end_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(performance_rating) FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(performance_rating) FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(performance_rating) FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PerformanceEvaluation WHERE employee_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM Employee WHERE department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT PE.evaluation_id, PE.evaluation_date, EC.criteria_name FROM PerformanceEvaluation PE JOIN EvaluationCriteria EC ON PE.performance_rating = EC.criteria_id;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, COUNT(EP.evaluation_id) AS total_evaluations FROM Employee E LEFT JOIN PerformanceEvaluation EP ON E.employee_id = EP.employee_id GROUP BY E.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(performance_rating) AS highest_rating FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM DevelopmentPlan WHERE employee_id = 5 AND start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.evaluator_id, EP.performance_rating FROM Employee E INNER JOIN PerformanceEvaluation EP ON E.employee_id = EP.employee_id WHERE EP.performance_rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT EP.employee_id, EP.evaluation_date, DP.start_date, DP.end_date FROM PerformanceEvaluation EP LEFT JOIN DevelopmentPlan DP ON EP.employee_id = DP.employee_id WHERE DP.plan_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.evaluation_date, DP.start_date, DP.end_date FROM PerformanceEvaluation EP LEFT JOIN DevelopmentPlan DP ON EP.employee_id = DP.employee_id INNER JOIN Employee E ON EP.employee_id = E.employee_id WHERE DP.plan_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.evaluation_date, DP.end_date, DP.action_items FROM PerformanceEvaluation EP JOIN DevelopmentPlan DP ON EP.employee_id = DP.employee_id JOIN Employee E ON EP.employee_id = E.employee_id WHERE DP.end_date < EP.evaluation_date;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.performance_rating, EC.criteria_name FROM Employee E JOIN PerformanceEvaluation EP ON E.employee_id = EP.employee_id JOIN EvaluationCriteria EC ON EP.performance_rating = EC.criteria_id;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM PerformanceEvaluation WHERE performance_rating BETWEEN 2 AND 4;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.evaluator_id, EP.performance_rating FROM Employee E JOIN PerformanceEvaluation EP ON E.employee_id = EP.evaluator_id WHERE EP.performance_rating <= 2;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, DP.action_items FROM Employee E LEFT JOIN DevelopmentPlan DP ON E.employee_id = DP.employee_id WHERE DP.action_items LIKE '%training%';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.perfomance_rating, EC.criteria_name FROM Employee E JOIN PerformanceEvaluation EP ON E.employee_id = EP.employee_id JOIN EvaluationCriteria EC ON EP.performance_rating = EC.criteria_id WHERE EP.evaluation_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(performance_rating) AS avg_rating FROM PerformanceEvaluation;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.evaluation_date, EP.performance_rating, DP.start_date, DP.end_date FROM Employee E JOIN PerformanceEvaluation EP ON E.employee_id = EP.employee_id JOIN DevelopmentPlan DP ON E.employee_id = DP.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, DP.start_date, DP.end_date FROM Employee E JOIN DevelopmentPlan DP ON E.employee_id = DP.employee_id WHERE DP.end_date > '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.evaluation_date, EP.performance_rating FROM Employee E JOIN PerformanceEvaluation EP ON E.employee_id = EP.employee_id WHERE EP.evaluation_date < DATE('now');",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM DevelopmentPlan WHERE start_date < DATE('now') ORDER BY start_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE PerformanceEvaluation (\n  evaluation_id INT PRIMARY KEY,\n  employee_id INT,\n  evaluator_id INT,\n  evaluation_date DATE,\n  performance_rating INT,\n  feedback TEXT\n)\n\nCREATE TABLE Employee (\n  employee_id INT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  department TEXT,\n  hire_date DATE\n)\n\nCREATE TABLE EvaluationCriteria (\n  criteria_id INT PRIMARY KEY,\n  criteria_name TEXT,\n  description TEXT\n)\n\nCREATE TABLE DevelopmentPlan (\n  plan_id INT PRIMARY KEY,\n  employee_id INT,\n  start_date DATE,\n  end_date DATE,\n  action_items TEXT\n)\n\n### STATEMENT\n\nSELECT E.first_name, E.last_name, EP.performance_rating, EC.criteria_name FROM Employee E JOIN PerformanceEvaluation EP ON E.employee_id = EP.employee_id JOIN EvaluationCriteria EC ON EP.performance_rating = EC.criteria_id WHERE EP.evaluation_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date, performance_rating FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback FROM performance_evaluations WHERE performance_rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM employees WHERE department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM managers;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, department FROM managers WHERE department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM development_goals;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, goal_description, target_completion_date FROM development_goals WHERE status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM training_sessions;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT topic, session_date, duration_hours FROM training_sessions WHERE trainer = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, goal_description, target_completion_date, status FROM development_goals WHERE target_completion_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date, performance_rating FROM performance_evaluations WHERE evaluation_date LIKE '2022%';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, department FROM employees WHERE email IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, goal_description, status FROM development_goals WHERE status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM training_sessions WHERE session_date BETWEEN '2022-07-01' AND '2022-08-31';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, feedback FROM performance_evaluations WHERE performance_rating < 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, department FROM employees WHERE department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM managers WHERE department = 'Marketing';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, goal_description, target_completion_date FROM development_goals WHERE employee_id = '12345';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT topic, duration_hours, trainer FROM training_sessions WHERE duration_hours > 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE performance_rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, evaluation_date FROM performance_evaluations WHERE performance_rating < 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM employees WHERE department = 'HR';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT manager_id, employee_id, department FROM managers WHERE department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT manager_id, first_name, last_name FROM managers WHERE department = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM development_goals WHERE status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT goal_id, goal_description, status FROM development_goals WHERE status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM training_sessions WHERE session_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT topic, duration_hours, trainer FROM training_sessions WHERE duration_hours >= 2;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations JOIN employees ON performance_evaluations.employee_id = employees.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM employees JOIN managers ON employees.employee_id = managers.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM development_goals JOIN employees ON development_goals.employee_id = employees.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM training_sessions JOIN employees ON training_sessions.trainer = employees.first_name;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM development_goals JOIN employees ON development_goals.employee_id = employees.employee_id JOIN managers ON employees.employee_id = managers.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM performance_evaluations WHERE performance_rating > 4 AND feedback IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM employees WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_evaluations FROM performance_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE performance_evaluations (\n    evaluation_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    evaluation_date DATE,\n    performance_rating INT,\n    feedback TEXT\n);\n\nCREATE TABLE employees (\n    employee_id VARCHAR(50) PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100),\n    department VARCHAR(50)\n);\n\nCREATE TABLE managers (\n    manager_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE development_goals (\n    goal_id VARCHAR(50) PRIMARY KEY,\n    employee_id VARCHAR(50) NOT NULL,\n    goal_description TEXT,\n    target_completion_date DATE,\n    status VARCHAR(20)\n);\n\nCREATE TABLE training_sessions (\n    session_id VARCHAR(50) PRIMARY KEY,\n    topic VARCHAR(100) NOT NULL,\n    session_date DATE,\n    duration_hours INT,\n    trainer VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(performance_rating) AS avg_rating FROM performance_evaluations WHERE evaluation_date > '2021-01-01';"
]