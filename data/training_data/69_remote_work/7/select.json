[
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, equipment_type, quantity FROM equipment_inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE location = 'Room A';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE equipment_type = 'Laptop';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE allocated_to IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocated_to FROM equipment_inventory WHERE allocated_to = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE equipment_type = 'Printer' AND quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, equipment_type, location FROM equipment_inventory WHERE quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocated_to FROM equipment_inventory WHERE equipment_type = 'Desktop';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, equipment_type, quantity FROM equipment_inventory WHERE allocated_to IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory WHERE location <> 'Office';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE location = 'Server Room' AND allocated_to = 'Jane Doe';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_count FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_type, COUNT(*) AS type_count FROM equipment_inventory GROUP BY equipment_type;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT location FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM equipment_inventory WHERE location = 'Warehouse A'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocated_to FROM equipment_inventory WHERE equipment_type = 'Computer'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM equipment_inventory WHERE equipment_type IN ('Chair', 'Desk')",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE quantity BETWEEN 5 AND 10",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_type FROM equipment_inventory WHERE allocated_to IS NULL",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE equipment_name LIKE '%Printer%'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM equipment_inventory WHERE location = 'Storage Room'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocated_to FROM equipment_inventory WHERE quantity < 5 AND location <> 'Office'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_id, location FROM equipment_inventory ORDER BY equipment_id DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT equipment_type FROM equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, COUNT(*) FROM equipment_inventory GROUP BY equipment_name HAVING COUNT(*) > 3",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM equipment_inventory WHERE equipment_type = 'Office Supplies'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_id, location FROM equipment_inventory WHERE allocated_to LIKE '%Tom%'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE equipment_name = 'Laptop' OR (equipment_type = 'Computer' AND quantity <= 20)",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE equipment_type IN ('Printer', 'Scanner')",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_type FROM equipment_inventory WHERE location = 'Warehouse B' ORDER BY equipment_type ASC",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT MIN(quantity) FROM equipment_inventory WHERE equipment_name = 'Chair'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    equipment_type VARCHAR(100),\n    quantity INT,\n    location VARCHAR(100),\n    allocated_to VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT equipment_id, location FROM equipment_inventory WHERE allocated_to = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, status FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_allocations;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT allocation_id, equipment_id, employee_id FROM equipment_allocations;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, allocation_date, return_date FROM equipment_allocations;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE status = 'Available';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_allocations WHERE return_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, allocation_date FROM equipment_allocations WHERE employee_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, employee_id FROM equipment_allocations WHERE allocation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory ORDER BY equipment_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, status FROM equipment_inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_id, allocation_date FROM equipment_allocations WHERE return_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE status = 'In Use';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE equipment_name LIKE 'Computer%' AND quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE quantity < 10 AND status = 'Available';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location, allocation_date FROM equipment_inventory INNER JOIN equipment_allocations ON equipment_inventory.equipment_id = equipment_allocations.equipment_id WHERE allocation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location, status FROM equipment_inventory WHERE location IN ('Room A', 'Room B') AND status IN ('Available', 'Maintenance');",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_inventory FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, SUM(quantity) AS total_quantity FROM equipment_inventory GROUP BY equipment_name HAVING total_quantity > 20;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT e.equipment_name, a.employee_id, a.allocation_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE a.return_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE equipment_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE status = 'Maintenance' OR status = 'Repair';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE quantity <= 3 ORDER BY location DESC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, allocation_date, return_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE allocation_date >= '2022-03-01' AND return_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, SUM(quantity) AS total_quantity FROM equipment_inventory WHERE location = 'Warehouse' GROUP BY equipment_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, allocation_date, return_date FROM equipment_inventory e LEFT JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE allocation_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location, status FROM equipment_inventory WHERE status IN ('Available', 'Maintenance') AND location NOT LIKE '%Room%';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT e.equipment_name, a.employee_id, a.allocation_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE a.allocation_date BETWEEN '2022-04-01' AND '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, quantity, location FROM equipment_inventory WHERE quantity = (SELECT MAX(quantity) FROM equipment_inventory);",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment_inventory WHERE status = 'Available' UNION SELECT equipment_name, location FROM equipment_inventory WHERE status = 'Maintenance';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, allocation_date, return_date FROM equipment_inventory e JOIN equipment_allocations a ON e.equipment_id = a.equipment_id WHERE a.return_date < CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50),\n  quantity INT,\n  location VARCHAR(50),\n  status VARCHAR(20)\n);\n\nCREATE TABLE equipment_allocations (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT,\n  employee_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\n### STATEMENT\n\nSELECT equipment_name, location, status FROM equipment_inventory WHERE equipment_id IN (SELECT DISTINCT equipment_id FROM equipment_allocations);",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, category, purchase_date FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT id, equipment_name, quantity, location FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM employee;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT name, email, department FROM employee;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_allocation;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_id, employee_id, allocation_date FROM equipment_allocation;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, employee.name, allocation_date FROM equipment_inventory JOIN employee ON equipment_allocation.employee_id = employee.id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT category, employee.name, allocation_date FROM equipment_inventory JOIN employee ON equipment_allocation.employee_id = employee.id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE location='Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM employee WHERE department='IT Department';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE purchase_date='2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_allocation WHERE return_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM equipment_inventory WHERE category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT employee.name, department, equipment_name FROM employee JOIN equipment_allocation ON employee.id = equipment_allocation.employee_id JOIN equipment_inventory ON equipment_allocation.equipment_id = equipment_inventory.id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocation_date FROM equipment_inventory JOIN equipment_allocation ON equipment_inventory.id = equipment_allocation.equipment_id WHERE employee_id=1;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_allocation WHERE allocation_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT employee.name, equipment_name, allocation_date, return_date FROM equipment_allocation JOIN employee ON equipment_allocation.employee_id = employee.id JOIN equipment_inventory ON equipment_allocation.equipment_id = equipment_inventory.id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity, location FROM equipment_inventory WHERE category = 'Computers' AND quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_allocation JOIN employee ON equipment_allocation.employee_id = employee.id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocation_date, e.name AS employee_name FROM equipment_inventory ei JOIN equipment_allocation ea ON ei.id = ea.equipment_id JOIN employee e ON ea.employee_id = e.id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT category FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocation_date, e.name AS employee_name FROM equipment_inventory ei JOIN equipment_allocation ea ON ei.id = ea.equipment_id JOIN employee e ON ea.employee_id = e.id WHERE allocation_date BETWEEN '2021-01-01' AND '2021-06-30';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, allocation_date, e.name AS employee_name FROM equipment_inventory ei JOIN equipment_allocation ea ON ei.id = ea.equipment_id JOIN employee e ON ea.employee_id = e.id WHERE ei.quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT category, AVG(quantity) AS avg_quantity FROM equipment_inventory GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT department, COUNT(DISTINCT e.id) AS total_employees FROM employee e GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id GROUP BY e.name HAVING total_allocations > 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT category, SUM(quantity) AS total_quantity FROM equipment_inventory GROUP BY category ORDER BY total_quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT department, AVG(ea.return_date - ea.allocation_date) AS avg_allocation_duration FROM employee e JOIN equipment_allocation ea ON e.id = ea.employee_id GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT department, category, SUM(quantity) AS total_quantity FROM equipment_inventory ei JOIN employee e ON ei.id = e.id GROUP BY department, category;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE purchase_date < (SELECT MIN(allocation_date) FROM equipment_allocation);",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT equipment_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN equipment_inventory ei ON ea.equipment_id = ei.id GROUP BY equipment_name ORDER BY total_allocations DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id WHERE allocation_date >= '2022-01-01' GROUP BY e.name HAVING total_allocations > 3;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT e.name AS employee_name, COUNT(*) AS total_allocations FROM equipment_allocation ea JOIN employee e ON ea.employee_id = e.id WHERE allocation_date >= '2022-01-01' AND allocation_date <= '2022-12-31' GROUP BY e.name HAVING total_allocations > 3;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT department, AVG(quantity) AS avg_quantity FROM equipment_inventory ei JOIN employee e ON ei.id = e.id GROUP BY department HAVING avg_quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n    id INT PRIMARY KEY,\n    equipment_name VARCHAR(255),\n    quantity INT,\n    category VARCHAR(50),\n    purchase_date DATE,\n    location VARCHAR(100)\n)\n\nCREATE TABLE employee (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    department VARCHAR(100),\n    position VARCHAR(50)\n)\n\nCREATE TABLE equipment_allocation (\n    id INT PRIMARY KEY,\n    equipment_id INT,\n    employee_id INT,\n    allocation_date DATE,\n    return_date DATE,\n    FOREIGN KEY (equipment_id) REFERENCES equipment_inventory(id),\n    FOREIGN KEY (employee_id) REFERENCES employee(id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_allocations, SUM(quantity) AS total_quantity FROM equipment_allocation ea JOIN equipment_inventory ei ON ea.equipment_id = ei.id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM employee;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, role FROM employee;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM allocation;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, employee_id, allocation_date FROM allocation;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM department;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT department_name FROM department;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity, location FROM equipment_inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity, location FROM equipment_inventory WHERE location='Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity, location FROM equipment_inventory WHERE location LIKE '%Office%';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, role, department FROM employee WHERE role='Manager';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, role, department FROM employee WHERE department='HR';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, employee_id, allocation_date FROM allocation WHERE allocation_date>'2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, employee_id, allocation_date FROM allocation WHERE employee_id=101;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, employee_id, allocation_date FROM allocation WHERE equipment_id=201;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT department_name FROM department WHERE location='Headquarters';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT department_name FROM department WHERE department_name LIKE '%Sales%';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM employee ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity FROM equipment_inventory WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, e.role, d.department_name FROM employee e JOIN department d ON e.department = d.department_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, ei.equipment_name, a.allocation_date FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.department_name, COUNT(*) AS total_allocation FROM allocation a JOIN employee e ON a.employee_id = e.employee_id JOIN department d ON e.department = d.department_name GROUP BY d.department_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(*) AS total_allocations FROM employee e LEFT JOIN allocation a ON e.employee_id = a.employee_id GROUP BY e.employee_id HAVING COUNT(*) > 0;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(*) AS total_allocations FROM employee e LEFT JOIN allocation a ON e.employee_id = a.employee_id WHERE e.role = 'Manager' GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT ei.equipment_name, SUM(a.quantity) AS total_quantity_allocated FROM allocation a JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id GROUP BY ei.equipment_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, d.location AS employee_location, d.department_name FROM employee e JOIN department d ON e.department = d.department_name WHERE e.name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, e.role, a.allocation_date FROM employee e JOIN allocation a ON e.employee_id = a.employee_id WHERE YEAR(a.allocation_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, SUM(ei.quantity) AS total_quantity_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, d.location AS employee_location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN department d ON e.department = d.department_name GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, d.department_name, SUM(ei.quantity) AS total_quantity_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id JOIN department d ON e.department = d.department_name GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT e.employee_id) AS total_employees_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.department_name, AVG(ei.quantity) AS avg_quantity_allocated FROM equipment_inventory ei JOIN allocation a ON ei.equipment_id = a.equipment_id JOIN employee e ON a.employee_id = e.employee_id JOIN department d ON e.department = d.department_name GROUP BY d.department_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, d.location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN department d ON e.department = d.department_name WHERE d.location = 'Main Office' GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, d.department_name, SUM(ei.quantity) AS total_quantity_allocated FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id JOIN department d ON e.department = d.department_name WHERE a.allocation_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, d.location AS employee_location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN department d ON e.department = d.department_name WHERE d.location = 'Remote Office' GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id WHERE e.role <> 'Manager' GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT d.department_name, AVG(ei.quantity) AS avg_quantity_allocated FROM equipment_inventory ei JOIN allocation a ON ei.equipment_id = a.equipment_id JOIN employee e ON a.employee_id = e.employee_id JOIN department d ON e.department = d.department_name WHERE a.allocation_date > '2022-06-01' GROUP BY d.department_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  role VARCHAR(50) NOT NULL,\n  department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE allocation (\n  allocation_id INT PRIMARY KEY,\n  equipment_id INT NOT NULL,\n  employee_id INT NOT NULL,\n  allocation_date DATE NOT NULL\n);\n\nCREATE TABLE department (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50) NOT NULL,\n  location VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.name, ei.equipment_name, d.location AS employee_location, COUNT(*) AS total_allocations FROM employee e JOIN allocation a ON e.employee_id = a.employee_id JOIN equipment_inventory ei ON a.equipment_id = ei.equipment_id JOIN department d ON e.department = d.department_name WHERE ei.quantity > 5 GROUP BY e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM equipment;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, quantity FROM equipment;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, status FROM equipment;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT employee_id, name, email FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM allocations;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT allocation_id, employee_id, equipment_id FROM allocations;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT employee_id, allocation_date FROM allocations;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM departments;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT department_id, name FROM departments;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, location FROM departments;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM history;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT allocation_id, action FROM history;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT history_id, allocation_id FROM history;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT allocation_id, timestamp FROM history;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, quantity, status FROM equipment WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT allocation_id, employee_id, equipment_id, allocation_date FROM allocations WHERE allocation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM departments WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM equipment;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, quantity FROM equipment WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, status FROM equipment WHERE status = 'available';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department = 'IT';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM employees WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM allocations WHERE allocation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT equipment.name, departments.location FROM equipment JOIN departments ON equipment.id = departments.department_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT equipment.name, allocations.allocation_date FROM equipment JOIN allocations ON equipment.id = allocations.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, action FROM employees JOIN allocations ON employees.employee_id = allocations.employee_id JOIN history ON allocations.allocation_id = history.allocation_id WHERE action = 'returned';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, quantity FROM equipment WHERE quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT department, COUNT(employee_id) AS employee_count FROM employees GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS average_quantity, department FROM equipment JOIN employees ON equipment.id = employees.employee_id GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) AS max_quantity, department FROM equipment JOIN employees ON equipment.id = employees.employee_id GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT department.name, SUM(equipment.quantity) AS total_quantity FROM department JOIN employees ON department.id = employees.department_id JOIN equipment ON employees.employee_id = equipment.id GROUP BY department.name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM equipment ORDER BY quantity DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, timestamp FROM employees JOIN history ON employees.employee_id = history.allocation_id WHERE action = 'allocated' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM employees WHERE employee_id IN (SELECT employee_id FROM allocations WHERE equipment_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT department, AVG(quantity) AS average_quantity FROM equipment JOIN employees ON equipment.id = employees.employee_id GROUP BY department HAVING AVG(quantity) > 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  status VARCHAR(50)\n);\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  department VARCHAR(100)\n);\n\nCREATE TABLE allocations (\n  allocation_id INT PRIMARY KEY,\n  employee_id INT,\n  equipment_id INT,\n  allocation_date DATE,\n  return_date DATE\n);\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  name VARCHAR(100),\n  location VARCHAR(255)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  allocation_id INT,\n  action VARCHAR(50),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM allocations WHERE allocation_date BETWEEN '2022-01-01' AND '2022-12-31';"
]