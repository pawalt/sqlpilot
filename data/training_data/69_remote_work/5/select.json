[
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, receipt_image, approval_status, reimbursement_amount FROM remote_work_expenses;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses WHERE approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, reimbursement_amount FROM remote_work_expenses WHERE approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT approval_status, COUNT(*) FROM remote_work_expenses GROUP BY approval_status;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses ORDER BY reimbursement_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, reimbursement_amount FROM remote_work_expenses WHERE reimbursement_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, receipt_image FROM remote_work_expenses WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses WHERE id IN (1, 3, 7, 10);",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM remote_work_expenses;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(reimbursement_amount) FROM remote_work_expenses;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(reimbursement_amount) FROM remote_work_expenses;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT MIN(reimbursement_amount) FROM remote_work_expenses;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(reimbursement_amount) FROM remote_work_expenses;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE reimbursement_amount < 50;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, receipt_image FROM remote_work_expenses WHERE approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE approval_status LIKE 'Pen%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses WHERE approval_status IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, (reimbursement_amount * 0.1) AS tax_amount FROM remote_work_expenses;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses WHERE id > 15;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses WHERE approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, reimbursement_amount FROM remote_work_expenses WHERE reimbursement_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE reimbursement_amount < 500 AND approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses ORDER BY reimbursement_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, reimbursement_amount FROM remote_work_expenses WHERE reimbursement_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM remote_work_expenses WHERE approval_status = 'Rejected' OR approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE approval_status LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses WHERE approval_status != 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, reimbursement_amount FROM remote_work_expenses WHERE approval_status = 'Approved' AND reimbursement_amount >= 500;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses WHERE reimbursement_amount + 100 > 1000;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE reimbursement_amount = 750 AND approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE approval_status = 'Approved' AND reimbursement_amount < 1000;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE reimbursement_amount < 100 OR reimbursement_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses WHERE reimbursement_amount < 750 AND approval_status != 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE approval_status IN ('Approved', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses WHERE reimbursement_amount % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status FROM remote_work_expenses WHERE reimbursement_amount LIKE '5%';",
  "### TABLEDATA\n\nCREATE TABLE remote_work_expenses (\n id INT PRIMARY KEY,\n receipt_image BYTEA,\n approval_status VARCHAR(255),\n reimbursement_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, approval_status, reimbursement_amount FROM remote_work_expenses WHERE reimbursement_amount * 2 > 1500;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM expenses;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, amount FROM expenses;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT receipt_url, amount FROM expenses;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM expenses WHERE submitted_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, approver FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM approvals WHERE approval_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.amount, a.approver FROM expenses e JOIN approvals a ON e.id = a.expense_id;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.submitted_by, a.approver FROM expenses e LEFT JOIN approvals a ON e.id = a.expense_id;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.receipt_url, a.approved FROM expenses e RIGHT JOIN approvals a ON e.id = a.expense_id;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.amount, a.approver FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.receipt_url, a.approver FROM expenses e FULL OUTER JOIN approvals a ON e.id = a.expense_id;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.receipt_url, a.approver FROM expenses e CROSS JOIN approvals a;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.amount, a.approved FROM expenses e JOIN approvals a ON e.id = a.expense_id WHERE a.approved = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.amount, a.approver FROM expenses e JOIN approvals a ON e.id = a.expense_id WHERE a.approver = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.submitted_date, a.approval_date FROM expenses e JOIN approvals a ON e.id = a.expense_id WHERE e.id = 1;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.receipt_url, a.approver FROM expenses e JOIN approvals a ON e.id = a.expense_id ORDER BY e.receipt_url ASC;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.amount, a.approval_date FROM expenses e JOIN approvals a ON e.id = a.expense_id ORDER BY a.approval_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.amount, a.approver FROM expenses e JOIN approvals a ON e.id = a.expense_id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.id, e.amount, a.approver FROM expenses e JOIN approvals a ON e.id = a.expense_id OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM expenses WHERE amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT submitted_by, SUM(amount) FROM expenses GROUP BY submitted_by",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.approver FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.submitted_by, COUNT(a.approver) FROM expenses e LEFT JOIN approvals a ON e.id = a.expense_id GROUP BY e.submitted_by",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM expenses WHERE submitted_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.approved FROM expenses e LEFT JOIN approvals a ON e.id = a.expense_id WHERE a.approver = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.approver, a.approval_date FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id WHERE a.approver LIKE '%Smith%'",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT submitted_by, MAX(amount) FROM expenses GROUP BY submitted_by",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.approver FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id WHERE a.approver = 'Alice'",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.approver FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id WHERE e.amount > 500 AND a.approved = TRUE",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.* FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id ORDER BY e.submitted_date DESC",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT submitted_by, AVG(amount) FROM expenses GROUP BY submitted_by HAVING AVG(amount) > 1000",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.submitted_by, COUNT(a.approver) FROM expenses e LEFT JOIN approvals a ON e.id = a.expense_id GROUP BY e.submitted_by HAVING COUNT(a.approver) < 2",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM expenses WHERE submitted_date > '2021-06-01' AND submitted_date < '2021-09-01'",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.* FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id WHERE e.amount > 2000 OR a.approved = TRUE",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.* FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id WHERE e.id IN (SELECT expense_id FROM approvals WHERE approved = TRUE)",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.* FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id WHERE e.submitted_date = (SELECT MAX(submitted_date) FROM expenses)",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.* FROM expenses e INNER JOIN approvals a ON e.id = a.expense_id WHERE NOT EXISTS (SELECT 1 FROM approvals WHERE expense_id = e.id AND approved = FALSE)",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT submitted_by, ROUND(SUM(amount), 2) FROM expenses GROUP BY submitted_by",
  "### TABLEDATA\n\nCREATE TABLE expenses (\n  id INT PRIMARY KEY,\n  receipt_url VARCHAR(255),\n  amount DECIMAL,\n  submitted_by VARCHAR(100),\n  submitted_date DATE\n)\n\n\nCREATE TABLE approvals (\n  id INT PRIMARY KEY,\n  expense_id INT,\n  approver VARCHAR(100),\n  approval_date DATE,\n  approved BOOLEAN\n)\n\n### STATEMENT\n\nSELECT e.*, a.* FROM expenses e LEFT JOIN approvals a ON e.id = a.expense_id WHERE a.id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT id, date, amount FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT receipt_image FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT id, manager_id, status FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT manager_id, approval_date FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT employee_id, amount FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT approved_by, amount, reimbursement_date FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM receipts WHERE employee_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM approvals WHERE status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT id, approval_date FROM approvals WHERE manager_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM reimbursements WHERE employee_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT amount, reimbursement_date FROM reimbursements WHERE approved_by = 654;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM receipts ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM approvals ORDER BY approval_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM reimbursements ORDER BY amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM receipts LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM approvals LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM reimbursements LIMIT 15 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(amount) FROM reimbursements WHERE employee_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM receipts WHERE amount > 1000 AND employee_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT employee_id, SUM(amount) FROM receipts GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT r.id, r.date, r.amount, e.employee_name FROM receipts r JOIN employees e ON r.employee_id = e.id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT r.id, r.date, r.amount, a.manager_id, a.approval_date FROM receipts r JOIN approvals a ON r.id = a.receipt_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT r.id, r.date, r.amount, e.employee_name, a.status FROM receipts r JOIN employees e ON r.employee_id = e.id JOIN approvals a ON r.id = a.receipt_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT r.id, r.date, r.amount, e.employee_name, a.status, rb.amount AS reimbursement_amount FROM receipts r JOIN employees e ON r.employee_id = e.id JOIN approvals a ON r.id = a.receipt_id JOIN reimbursements rb ON r.employee_id = rb.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_amount FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(amount) AS min_amount, MAX(amount) AS max_amount FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, SUM(rb.amount) AS total_reimbursement FROM employees e JOIN reimbursements rb ON e.id = rb.employee_id GROUP BY e.employee_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT r.date, COUNT(*) AS total_receipts FROM receipts r GROUP BY r.date;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(rb.id) AS total_reimbursements FROM employees e JOIN reimbursements rb ON e.id = rb.employee_id GROUP BY e.employee_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT r.id, r.amount, a.status FROM receipts r LEFT JOIN approvals a ON r.id = a.receipt_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, rb.reimbursement_date FROM employees e LEFT JOIN reimbursements rb ON e.id = rb.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT r.id, r.amount, e.employee_name FROM receipts r LEFT JOIN employees e ON r.employee_id = e.id WHERE e.employee_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(*) AS total_receipts FROM employees e JOIN receipts r ON e.id = r.employee_id GROUP BY e.employee_name HAVING COUNT(*) > 10;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, SUM(r.amount) AS total_amount FROM employees e JOIN receipts r ON e.id = r.employee_id WHERE r.date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY e.employee_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, a.manager_id, COUNT(*) AS total_approvals FROM employees e JOIN receipts r ON e.id = r.employee_id JOIN approvals a ON r.id = a.receipt_id GROUP BY e.employee_name, a.manager_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, SUM(r.amount) AS total_amount, COUNT(a.id) AS total_approvals FROM employees e JOIN receipts r ON e.id = r.employee_id JOIN approvals a ON r.id = a.receipt_id GROUP BY e.employee_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, MIN(r.amount) AS min_amount, MAX(r.amount) AS max_amount FROM employees e JOIN receipts r ON e.id = r.employee_id GROUP BY e.employee_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n id INT PRIMARY KEY,\n date DATE,\n amount DECIMAL,\n employee_id INT,\n receipt_image BYTEA\n)\n\nCREATE TABLE approvals (\n id INT PRIMARY KEY,\n receipt_id INT,\n manager_id INT,\n approval_date DATE,\n status VARCHAR(50)\n)\n\nCREATE TABLE reimbursements (\n id INT PRIMARY KEY,\n employee_id INT,\n approved_by INT,\n amount DECIMAL,\n reimbursement_date DATE\n)\n\n### STATEMENT\n\nSELECT e.employee_name, AVG(r.amount) AS avg_amount FROM employees e JOIN receipts r ON e.id = r.employee_id GROUP BY e.employee_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT receipt_id, employee_id, amount FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT approval_id, manager_id, status FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT reimbursement_id, amount, payment_date FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name, department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT receipt_id, employee_name, item_name, amount FROM receipts JOIN employees ON receipts.employee_id = employees.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT approval_id, receipt_id, manager_id, status FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT reimbursement_id, approval_id, amount FROM reimbursements JOIN approvals ON reimbursements.approval_id = approvals.approval_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT receipt_id, employee_name, amount, payment_date FROM receipts JOIN reimbursements ON receipts.receipt_id = reimbursements.receipt_id JOIN employees ON receipts.employee_id = employees.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name, department, email FROM employees WHERE department='Sales';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name, department, email FROM employees WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT receipt_id, employee_id, date, item_name, amount FROM receipts WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT approval_id, manager_id, approved_date, status FROM approvals WHERE status='Approved';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT reimbursement_id, approval_id, amount, payment_date FROM reimbursements WHERE amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT receipt_id, employee_name, department, payment_date FROM receipts JOIN reimbursements ON receipts.receipt_id = reimbursements.receipt_id JOIN employees ON receipts.employee_id = employees.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM receipts ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE department='Finance' ORDER BY employee_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM receipts WHERE date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees WHERE department = 'Finance' ORDER BY employee_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, amount FROM receipts WHERE employee_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.item_name, r.amount FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id WHERE e.department = 'Sales';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT r.item_name, a.status FROM receipts r INNER JOIN approvals a ON r.receipt_id = a.receipt_id WHERE a.approved_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.amount, a.status FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id INNER JOIN approvals a ON r.receipt_id = a.receipt_id WHERE a.status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, SUM(r.amount) AS total_amount_spent FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id GROUP BY e.employee_name ORDER BY total_amount_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(r.receipt_id) AS num_receipts FROM employees e LEFT JOIN receipts r ON e.employee_id = r.employee_id GROUP BY e.employee_name ORDER BY num_receipts DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, MAX(r.amount) AS largest_amount FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id GROUP BY e.employee_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT DISTINCT e.department FROM employees e;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.department, AVG(r.amount) AS avg_amount FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id GROUP BY e.department ORDER BY avg_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT r.item_name, AVG(r.amount) AS avg_amount FROM receipts r GROUP BY r.item_name HAVING AVG(r.amount) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(DISTINCT r.item_name) AS num_unique_items FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id GROUP BY e.employee_name ORDER BY num_unique_items DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(r.receipt_id) AS num_approvals, MAX(a.approved_date) AS last_approval_date FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id INNER JOIN approvals a ON r.receipt_id = a.receipt_id GROUP BY e.employee_name ORDER BY last_approval_date DESC, num_approvals DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, SUM(r.amount) AS total_amount, e.department FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id GROUP BY e.employee_name, e.department;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.item_name, a.status FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id INNER JOIN approvals a ON r.receipt_id = a.receipt_id WHERE r.amount > 500 AND a.status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(DISTINCT r.item_name) AS num_unique_items FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id WHERE r.date >= '2022-01-01' AND r.date <= '2022-06-30' GROUP BY e.employee_name ORDER BY num_unique_items DESC;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, AVG(r.amount) AS avg_amount FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id WHERE r.date <= '2022-03-31' GROUP BY e.employee_name HAVING AVG(r.amount) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.item_name, r.amount FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id INNER JOIN approvals a ON r.receipt_id = a.receipt_id WHERE a.status = 'Pending' ORDER BY r.amount DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    item_name VARCHAR(255),\n    amount DECIMAL(10, 2)\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    receipt_id INT,\n    manager_id INT,\n    approved_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id INT PRIMARY KEY,\n    approval_id INT,\n    amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255),\n    department VARCHAR(100),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.item_name, r.amount FROM employees e INNER JOIN receipts r ON e.employee_id = r.employee_id INNER JOIN approvals a ON r.receipt_id = a.receipt_id WHERE a.status = 'Rejected' ORDER BY r.amount ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT receipt_id, amount, date FROM receipts;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, amount FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, amount, payment_date FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM managers;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, department FROM managers;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT approval_id, manager_id, status FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT receipt_id, approval_date, status FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT reimbursement_id, amount, request_date FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT reimbursement_id, payment_date, approval_id FROM reimbursements;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM receipts WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reimbursements WHERE amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE role = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM managers WHERE department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM approvals WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reimbursements WHERE payment_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM receipts WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM receipts WHERE amount > 1000 AND DATE(date) > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT employee_id, expense_type, sum(amount) FROM receipts GROUP BY employee_id, expense_type;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name, e.last_name, r.amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT m.first_name AS manager_first_name, r.amount AS receipt_amount FROM managers m JOIN approvals a ON m.manager_id = a.manager_id JOIN receipts r ON a.receipt_id = r.receipt_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_first_name, sum(amount) AS total_amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id GROUP BY e.first_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT r.*, a.approval_date FROM receipts r JOIN approvals a ON r.receipt_id = a.receipt_id WHERE a.status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_name, r.amount AS receipt_amount, a.approval_date FROM employees e JOIN receipts r ON e.employee_id = r.employee_id JOIN approvals a ON r.receipt_id = a.receipt_id WHERE DATE(a.approval_date) > '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_name, sum(r.amount) AS total_amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id WHERE DATE(r.date) < '2020-12-31' GROUP BY e.first_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT m.first_name AS manager_name, e.first_name AS employee_name, r.amount AS receipt_amount FROM managers m JOIN approvals a ON m.manager_id = a.manager_id JOIN receipts r ON a.receipt_id = r.receipt_id JOIN employees e ON r.employee_id = e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT m.department AS manager_department, e.department AS employee_department, r.amount AS receipt_amount FROM managers m JOIN approvals a ON m.manager_id = a.manager_id JOIN receipts r ON a.receipt_id = r.receipt_id JOIN employees e ON r.employee_id = e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_name, r.amount AS receipt_amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id WHERE r.amount > (SELECT avg(amount) FROM receipts);",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_name, r.amount AS receipt_amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id WHERE r.amount > ALL (SELECT amount FROM receipts WHERE expense_type = 'Travel');",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_name, r.amount AS receipt_amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id WHERE r.amount = ANY (SELECT amount FROM receipts WHERE expense_type = 'Food');",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_name, r.amount AS receipt_amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id WHERE r.date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT e.first_name AS employee_name, r.amount AS receipt_amount FROM employees e JOIN receipts r ON e.employee_id = r.employee_id WHERE r.date < (SELECT MAX(payment_date) FROM reimbursements WHERE employee_id = e.employee_id);",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT m.first_name AS manager_name, COUNT(*) AS total_approvals FROM managers m JOIN approvals a ON m.manager_id = a.manager_id GROUP BY m.first_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT m.first_name AS manager_name, COUNT(*) AS pending_approvals FROM managers m JOIN approvals a ON m.manager_id = a.manager_id WHERE a.status = 'pending' GROUP BY m.first_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT r.amount, COUNT(a.approval_id) AS total_approvals FROM receipts r LEFT JOIN approvals a ON r.receipt_id = a.receipt_id GROUP BY r.amount;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT m.first_name AS manager_name, SUM(r.amount) AS total_reimbursement FROM managers m JOIN approvals a ON m.manager_id = a.manager_id JOIN reimbursements re ON a.approval_id = re.approval_id JOIN receipts r ON re.employee_id = r.employee_id GROUP BY m.first_name;",
  "### TABLEDATA\n\nCREATE TABLE receipts (\n    receipt_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    expense_type TEXT,\n    amount DECIMAL,\n    date DATE\n);\n\nCREATE TABLE approvals (\n    approval_id SERIAL PRIMARY KEY,\n    manager_id INT,\n    receipt_id INT,\n    approval_date DATE,\n    status TEXT\n);\n\nCREATE TABLE reimbursements (\n    reimbursement_id SERIAL PRIMARY KEY,\n    employee_id INT,\n    amount DECIMAL,\n    request_date DATE,\n    approval_id INT,\n    payment_date DATE\n);\n\nCREATE TABLE employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\nCREATE TABLE managers (\n    manager_id SERIAL PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    role TEXT,\n    department TEXT\n);\n\n### STATEMENT\n\nSELECT m.first_name AS manager_name, COUNT(DISTINCT e.employee_id) AS total_employees FROM managers m JOIN approvals a ON m.manager_id = a.manager_id JOIN reimbursements re ON a.approval_id = re.approval_id JOIN receipts r ON re.employee_id = r.employee_id JOIN employees e ON e.employee_id = r.employee_id GROUP BY m.first_name;"
]