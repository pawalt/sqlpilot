<t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>REVOKE INSERT ON remote_work_schedule FROM hr_role</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>revoke insert on remote_work_schedule from hr_role</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>REVOKE UPDATE ON remote_work_schedule FROM manager_role</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>revoke update on remote_work_schedule from manager_role</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>REVOKE DELETE ON remote_work_schedule FROM admin_role</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>revoke delete on remote_work_schedule from admin_role</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>REVOKE SELECT ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>revoke select on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>REVOKE SELECT ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>revoke select on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>REVOKE INSERT, UPDATE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>revoke insert, update on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>REVOKE INSERT, UPDATE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>revoke insert, update on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>REVOKE DELETE ON remote_teams FROM user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>revoke delete on remote_teams from user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>REVOKE DELETE ON remote_teams FROM user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>revoke delete on remote_teams from user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>revoke select, insert, update, delete on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>revoke select, insert, update, delete on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_teams FROM user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_teams from user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>revoke select, insert, update, delete on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>revoke select, insert, update, delete on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_employees FROM user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_employees from user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_tasks FROM user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>revoke select, insert, update, delete on remote_tasks from user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_tasks FROM user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_tasks from user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_tasks FROM user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>revoke select, insert, update, delete on remote_tasks from user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_tasks FROM user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_tasks from user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_tasks FROM user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_tasks from user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON remote_tasks FROM user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>revoke select, insert, update, delete on remote_tasks from user3;</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE INSERT ON employees FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke insert on employees from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE SELECT ON teams FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke select on teams from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>REVOKE UPDATE ON projects FROM public</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>revoke update on projects from public</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE ON users FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update on users from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON teams FROM team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on teams from team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON projects FROM project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>revoke select, insert, update, delete on projects from project_manager</stat>